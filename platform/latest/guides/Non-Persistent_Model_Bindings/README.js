Ext.data.JsonP['Non-Persistent_Model_Bindings']({"guide":" <!doctype html> <html> <head> <title>Non-Persistent Model Bindings</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-41845708\" class=\"content\"> <h1>Non-Persistent Model Bindings</h1> <p>Demonstrates using a static, non-persistent data collection. </p> <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro has-no-icon\"> <div class=\"title\">App Folder Location</div> <p>alloy/test/apps/<strong>models/binding_no_persistence</strong> </p> </div> <p>In the sample application, clicking the <tt class=\"\">&lt;Label&gt;</tt> or <tt class=\"\">&lt;TableView&gt;</tt> UI element causes the application to make trivial changes to the underlying model or collection data. To update the UI with the new model or collections data, it then calls the <tt class=\"\">trigger() </tt>method on both model and collection objects. One difference between using a persistent and non-persistent model or collection is that you can&apos;t call the <a class=\"external-link external-link\" href=\"http://docs.appcelerator.com/backbone/0.9.2/#Model-fetch\" target=\"_blank\">model</a> or <a class=\"external-link external-link\" href=\"http://docs.appcelerator.com/backbone/0.9.2/#Collection-fetch\" target=\"_blank\">collection</a>&apos;s <tt class=\"\">fetch()</tt> method on a non-persistent collection, as this generates a runtime error. Instead, call the <tt>trigger()</tt> method on the model or collection, as demonstrated. </p> <p> <img src=\"images/download/attachments/41845708/no_persist.png\" alt=\"images/download/attachments/41845708/no_persist.png\" class=\"confluence-embedded-image\" width=\"400\"> </img></p> <p>The <strong class=\"\">appState</strong> model models the application state with a counter and hexadecimal color value, and the <strong>heroes</strong> collection contains a list of super heroes. The sample uses the <a class=\"external-link external-link\" href=\"http://docs.appcelerator.com/backbone/0.9.2/#Model\" target=\"_blank\">Backbone.Model()</a> and <a class=\"external-link external-link\" href=\"http://docs.appcelerator.com/backbone/0.9.2/#Collection\" target=\"_blank\">Backbone.Collection()</a> methods to create the model and collection directly, instead of the <a class=\"external-link external-link\" href=\"#!/api/Alloy-method-createModel\">Alloy.createModel(</a>) and <a class=\"external-link external-link\" href=\"#!/api/Alloy-method-createCollection\">Alloy.createCollection()</a> methods. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/alloy.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/alloy.js\"> <div class=\"line\"><code class=\"plain\">Alloy.Models.appState = </code><code class=\"keyword\">new</code><code class=\"plain\"> Backbone.Model({</code></div> <div class=\"line\"><code class=\"plain\">\tcounter: 1,</code></div> <div class=\"line\"><code class=\"plain\">\tcolor: </code><code class=\"string\">&apos;#00f&apos;</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"plain\">Alloy.Collections.heroes = </code><code class=\"keyword\">new</code><code class=\"plain\"> Backbone.Collection();</code></div> <div class=\"line\"><code class=\"plain\">Alloy.Collections.heroes.reset([</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Ironman&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Superman&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Thor&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Captain America&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Hulk&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Green Lantern&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Punisher&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Spiderman&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Wolverine&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">&apos;Cyclops&apos;</code><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">]);</code></div> </div> </div> <p>The model data is updated by the <tt class=\"\">modifyHero()</tt> and <tt>updateState()</tt> functions, called when the user clicks the Label or TableView elements on their respective tabs. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/index.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/index.js\"> <div class=\"line\"><code class=\"comments\">// Contrived update function to modify the model</code></div> <div class=\"line\"><code class=\"comments\">// associated with the clicked row</code></div> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> modifyHero(e) {</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"keyword\">var</code><code class=\"plain\"> model = heroes.at(e.index);</code></div> <div class=\"line\"><code class=\"plain\">\tmodel.set(</code><code class=\"string\">&apos;name&apos;</code><code class=\"plain\">, model.get(</code><code class=\"string\">&apos;name&apos;</code><code class=\"plain\">) + </code><code class=\"string\">&apos;+&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"comments\">// Update the model&apos;s counter and color, which in turn</code></div> <div class=\"line\"><code class=\"comments\">// updates the UI via model binding</code></div> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> updateState() {</code></div> <div class=\"line\"><code class=\"plain\">\tappState.set({</code></div> <div class=\"line\"><code class=\"plain\"> counter: appState.get(</code><code class=\"string\">&apos;counter&apos;</code><code class=\"plain\">)+1,</code></div> <div class=\"line\"><code class=\"plain\"> color: generateRandomColor()</code></div> <div class=\"line\"><code class=\"plain\">\t});</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"comments\">// Simulate a change in our model to trigger UI binding.</code></div> <div class=\"line\"><code class=\"comments\">// Remember, don&apos;t use fetch() when using a model with</code></div> <div class=\"line\"><code class=\"comments\">// no persistence, it will generate an error.</code></div> <div class=\"line\"><code class=\"plain\">appState.trigger(</code><code class=\"string\">&apos;change&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">heroes.trigger(</code><code class=\"string\">&apos;change&apos;</code><code class=\"plain\">);</code></div> </div> </div> <div class=\"section section-2\" id=\"src-41845708_Non-PersistentModelBindings-Seealso\"> <h2 class=\"heading\"><span>See also</span></h2> <ul class=\"\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Backbone_Objects_without_Alloy\">Backbone Objects without Alloy</a> </p> </li></ul> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=41845708\"><span>Edit</span></a> </div> </body> </html> ","title":"Non-Persistent Model Bindings"});