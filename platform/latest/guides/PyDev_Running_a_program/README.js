Ext.data.JsonP['PyDev_Running_a_program']({"guide":" <!doctype html> <html> <head> <title>PyDev Running a program</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-30083051\" class=\"content\"> <h1>PyDev Running a program</h1> <p>Ok, now that you&apos;re already up and running, let&apos;s <strong>run a program from within Eclipse</strong> with PyDev. </p> <p>For that, we will extend the module we created in the previous chapter with the following program: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> __name__ </code><code class=\"keyword\">=</code><code class=\"keyword\">=</code><code class=\"plain\"> </code><code class=\"string\">&apos;__main__&apos;</code><code class=\"plain\">:</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">print</code><code class=\"plain\"> </code><code class=\"string\">&apos;Hello World&apos;</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> </div> </div> <p>Then, to run the file you can: </p> <ul class=\"alternate\"><li class=\"\"> <p>Use a shortcut: <strong>F9</strong> to run based on the project configuration where the module is contained. </p> </li><li> <p>Go to the menu: Alt + R + S + The number of the Run you wish (It can be Python, Jython, unit-test, etc). </p> </li><li class=\"\"> <p>Note: if you were using <strong class=\"\">unit-tests</strong>, you could use: <strong>Ctrl+F9</strong> to run the unit-tests from the module (and even selecting which tests should be run). </p> </li></ul> <p><strong>NOTE</strong>: </p> <blockquote> <p>External files may be launched, but an associated project must be available. So, a file may be dragged from the filesystem into Eclipse and later, with the editor open F9 may be pressed to run the file... </p> <p>It&apos;ll still ask for a project to resolve the PYTHONPATH and interpreter to be used (you can probably just use any project you have that has the interpreter you want to use for the run or create a PyDev project as &apos;external_projects&apos; and bind those runs to it). </p> <p>&#x2013; The configuration created may be changed later on in the menu: Run &gt; Run configurations. </p> </blockquote> <p> <img src=\"images/pydev.org/images/menu_run.png\" alt=\"images/pydev.org/images/menu_run.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>Doing so, the console should be brough forward with the output of the code (if you had some exception raised, clicking on it would bring you to the code in the stack-trace). </br></img></p> <p>After the first run, if you type <strong class=\"\">Ctrl+F11</strong>, the last file ran is re-run. Or, if you type just <strong>F11</strong>, a debug session is started with your last run. Let&apos;s test this... </p> <p><strong class=\"\">Note</strong>: This behavior changed in Eclipse 3.3 &#x2013; but it&apos;s generally recommended to restore it in the preferences at: <strong class=\"\">window &gt; preferences &gt; Run/Debug &gt; Launching</strong> and set the Launch Operation to <strong>Always launch the previously launched application</strong>. This tutorial will always consider this as the default option. </p> <p>First, you&apos;ll need to add a breakpoint in the &quot;print &apos;Hello World&apos;&quot; line. To do so, go to the line and type <strong class=\"\">Ctrl+F10</strong> and select &apos;Add breakpoint&apos;, then type <strong class=\"\">F11</strong>. Doing so, will trigger you to go to the &apos;debug perspective&apos;. You should say <strong>&apos;yes&apos;</strong> to this dialog. </p> <p> <img src=\"images/pydev.org/images/perspective_to_debug.png\" alt=\"images/pydev.org/images/perspective_to_debug.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>After saying yes, you should be brought to the perspective below. </br></img></p> <p> <img src=\"images/pydev.org/images/debug_perspective.png\" alt=\"images/pydev.org/images/debug_perspective.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>In this perspective, the debug actions are activated and presented to<br>you, so, you can use: </br></br></img></p> <p><strong>F5</strong>: Step into </p> <p><strong>F6</strong>: Step over </p> <p><strong>F7</strong>: Step return </p> <p><strong>F8</strong>: Resume execution </p> <p>After the debug session, you can return to the previous perspective by typing <strong class=\"\">&apos;Ctrl+F8&apos;</strong> (this keybinding iterates through the open perspectives)... And while we are at it, <strong class=\"\">&apos;Ctrl+F7&apos;</strong> iterates through the views and <strong>&apos;Ctrl+F6&apos;</strong> iterates through the editors. </p> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=30083051\"><span>Edit</span></a> </div> </body> </html> ","title":"PyDev Running a program"});