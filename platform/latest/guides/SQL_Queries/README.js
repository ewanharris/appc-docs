Ext.data.JsonP['SQL_Queries']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>SQL Queries</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\"/>\n\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\"/>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"41845731\" class=\"content\">\n            <h1>SQL Queries</h1>\n    <p>\nDemonstrates how to use a SQL query with a database fetch operation.    </p>\n    <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro\">\n            <div class=\"title\">App Folder Location</div>\n        \n    <p>\nalloy/test/apps/<strong class=\" \">models/sql_queries</strong>    </p>\n    </div>\n    \n        <img src=\"images/download/attachments/41845731/sql_query.png\" alt=\"images/download/attachments/41845731/sql_query.png\" class=\"confluence-embedded-image\" width=\"400\"/>\n            <p>\nWhen using the SQLite sync adaptor included with Alloy, the <tt class=\" \">fetch()</tt> method accepts a <a class=\"external-link external-link\" href=\"#!/guide/Alloy_Sync_Adapters_and_Migrations-section-36739597_AlloySyncAdaptersandMigrations-SQLiteSyncAdapter\">SQL query as a parameter</a>. You pass a dictionary to the <tt class=\" \">fetch()</tt> method that contains a     <span style=\"color: #484848;\">\nkey named <tt class=\" \">query</tt>. This value assigned to this key can either be a SQL query string, or a     </span>\n    <span style=\"color: #484848;\">\nprepared SQL statement. For a prepared statement, set     </span>\n<tt class=\" \">query.statement</tt>    <span style=\"color: #484848;\">\n to your SQL statement template, and     </span>\n<tt class=\" \">query.params</tt>    <span style=\"color: #484848;\">\n to the parameter values to pass to the statement, as shown below.    </span>\n    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">Using a SQL query with a fetch() call</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">var library = Alloy.createCollection(</code><code class=\"string\">'book'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"comments\">// Simple query</code></div>\n<div class=\"line\"><code class=\"plain\">library.fetch({</code></div>\n<div class=\"line\"><code class=\"plain\">\tquery:</code><code class=\"string\">'SELECT * from books where author=\"'</code><code class=\"plain\"> + searchAuthor + </code><code class=\"string\">'\"'</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\"><code class=\"comments\">// or a prepared statement</code></div>\n<div class=\"line\"><code class=\"plain\">library.fetch({</code></div>\n<div class=\"line\"><code class=\"plain\">\tquery: { </code></div>\n<div class=\"line\"><code class=\"plain\">\t\tstatement: </code><code class=\"string\">'SELECT * from '</code><code class=\"plain\"> + table + </code><code class=\"string\">' where author = ?'</code><code class=\"plain\">, </code></div>\n<div class=\"line\"><code class=\"plain\">\t\tparams: [searchAuthor] </code></div>\n<div class=\"line\"><code class=\"plain\">\t}</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n</div>\n</div>    <p>\nIn the example, the main.xml view displays a TableView that's bound to the <strong class=\" \">user</strong> data collection. Each user model in the collection has an associated color.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">views/<platform>/main.xml</platform></div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;Alloy&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">\t&lt;Label </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">\"header\"</code><code class=\"plain\"> platform=</code><code class=\"string\">\"android\"</code><code class=\"plain\">&gt;Users&lt;/Label&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">\t&lt;TableView id=</code><code class=\"string\">\"table\"</code><code class=\"plain\"> dataCollection=</code><code class=\"string\">\"user\"</code><code class=\"plain\"> onClick=</code><code class=\"string\">\"showColorInfo\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t&lt;Require src=</code><code class=\"string\">\"row\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">\t&lt;/TableView&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/Alloy&gt;</code></div>\n</div>\n</div>    <p>\nWhen the user clicks a TableView row, the <tt class=\" \">showColorInfo()</tt> method is called. This method creates a prepared statement to query the colors data collection for items that match the user's color.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/controllers/main.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">function showColorInfo(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">\tvar color = e.row.model.color;</code></div>\n<div class=\"line\"><code class=\"plain\">\tvar collection = Alloy.createCollection(</code><code class=\"string\">'color'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">\tcollection.fetch({</code></div>\n<div class=\"line\"><code class=\"plain\">\t\tquery: {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t\tstatement: </code><code class=\"string\">'SELECT * FROM colors WHERE color = ?'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t\tparams: [color]</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t}</code></div>\n<div class=\"line\"><code class=\"plain\">\t});</code></div>\n<div class=\"line\"><code class=\"plain\">\tvar colorModel = collection.at(</code><code class=\"value\">0</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">\t</code><code class=\"comments\">// open the color info window</code></div>\n<div class=\"line\"><code class=\"plain\">\t</code><code class=\"keyword\">if</code><code class=\"plain\"> (colorModel) {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\tvar win = Alloy.createController(</code><code class=\"string\">'color'</code><code class=\"plain\">, colorModel).getView();</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t</code><code class=\"keyword\">if</code><code class=\"plain\"> (OS_IOS) {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t\tAlloy.Globals.navgroup.openWindow(win);</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t} </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t\twin.open();</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t}</code></div>\n<div class=\"line\"><code class=\"plain\">\t} </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\talert(</code><code class=\"string\">'No color info found!'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">\t}</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div>    <p>\nLastly, a new controller is created and is passed the model data returned by the SQL query. This data is used to populate the view with the proper values:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/controllers/color.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">var model = arguments[</code><code class=\"value\">0</code><code class=\"plain\">];</code></div>\n<div class=\"line\"><code class=\"plain\">$.theColor.backgroundColor = model.get(</code><code class=\"string\">'color'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">$.name.text = </code><code class=\"string\">'Name: '</code><code class=\"plain\"> + model.get(</code><code class=\"string\">'color'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">$.hexCode.text = </code><code class=\"string\">'Hex: '</code><code class=\"plain\"> + model.get(</code><code class=\"string\">'hexCode'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">$.wavelength.text = </code><code class=\"string\">'Wavelength: '</code><code class=\"plain\"> + model.get(</code><code class=\"string\">'wavelength'</code><code class=\"plain\">);</code></div>\n</div>\n</div>    <div class=\"section section-2 \" id=\"41845731_SQLQueries-SeeAlso\">\n        <h2 class=\"heading \"><span>See Also</span></h2>\n<ul class=\" \"><li class=\" \">    <p>\n<a class=\"document-link unresolved\" href=\"#!/guide/SQL_Queries\">Fetch method accepts SQL Query</a>    </p>\n</li></ul>    <p>\n    </p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=41845731\"><span>Edit</span></a>\n    \n        <div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n    </div>\n</body>\n</html>\n","title":"SQL Queries"});