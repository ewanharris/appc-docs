Ext.data.JsonP['SQL_Queries']({"guide":" <!doctype html> <html> <head> <title>SQL Queries</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-41845731\" class=\"content\"> <h1>SQL Queries</h1> <p>Demonstrates how to use a SQL query with a database fetch operation. </p> <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro\"> <div class=\"title\">App Folder Location</div> <p>alloy/test/apps/<strong>models/sql_queries</strong> </p> </div> <img src=\"images/download/attachments/41845731/sql_query.png\" alt=\"images/download/attachments/41845731/sql_query.png\" class=\"confluence-embedded-image\" width=\"400\"> <p>When using the SQLite sync adaptor included with Alloy, the <tt class=\"\">fetch()</tt> method accepts a <a class=\"external-link external-link\" href=\"https://docs.appcelerator.com/platform/latest/#!/guide/Alloy_Sync_Adapters_and_Migrations-section-src-36739597_AlloySyncAdaptersandMigrations-SQLiteSyncAdapter\" target=\"_blank\">SQL query as a parameter</a>. You pass a dictionary to the <tt>fetch()</tt> method that contains a <span style=\"color: #484848;\"> key named <tt>query</tt>. This value assigned to this key can either be a SQL query string, or a </span> <span style=\"color: #484848;\"> prepared SQL statement. For a prepared statement, set </span> <tt>query.statement</tt> <span style=\"color: #484848;\"> to your SQL statement template, and </span> <tt>query.params</tt> <span style=\"color: #484848;\"> to the parameter values to pass to the statement, as shown below. </span> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">Using a SQL query with a fetch() call</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"Using a SQL query with a fetch() call\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> library = Alloy.createCollection(</code><code class=\"string\">&apos;book&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"comments\">// Simple query</code></div> <div class=\"line\"><code class=\"plain\">library.fetch({</code></div> <div class=\"line\"><code class=\"plain\">\tquery:</code><code class=\"string\">&apos;SELECT * from books where author=&quot;&apos;</code><code class=\"plain\"> + searchAuthor + </code><code class=\"string\">&apos;&quot;&apos;</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"comments\">// or a prepared statement</code></div> <div class=\"line\"><code class=\"plain\">library.fetch({</code></div> <div class=\"line\"><code class=\"plain\">\tquery: {&#xA0;</code></div> <div class=\"line\"><code class=\"plain\"> statement: </code><code class=\"string\">&apos;SELECT * from &apos;</code><code class=\"plain\"> + table + </code><code class=\"string\">&apos; where author = ?&apos;</code><code class=\"plain\">,&#xA0;</code></div> <div class=\"line\"><code class=\"plain\"> params: [searchAuthor]&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">\t}</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> <p>In the example, the <tt class=\"\">main.xml</tt> view displays a TableView that&apos;s bound to the <strong>user</strong> data collection. Each user model in the collection has an associated color. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">views/&lt;platform&gt;/main.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"views/&lt;platform&gt;/main.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">\t&lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;header&quot;</code><code class=\"plain\"> </code><code class=\"color1\">platform</code><code class=\"plain\">=</code><code class=\"string\">&quot;android&quot;</code><code class=\"plain\">&gt;Users&lt;/</code><code class=\"keyword\">Label</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">\t&lt;</code><code class=\"keyword\">TableView</code><code class=\"plain\"> </code><code class=\"color1\">id</code><code class=\"plain\">=</code><code class=\"string\">&quot;table&quot;</code><code class=\"plain\"> </code><code class=\"color1\">dataCollection</code><code class=\"plain\">=</code><code class=\"string\">&quot;user&quot;</code><code class=\"plain\"> </code><code class=\"color1\">onClick</code><code class=\"plain\">=</code><code class=\"string\">&quot;showColorInfo&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Require</code><code class=\"plain\"> </code><code class=\"color1\">src</code><code class=\"plain\">=</code><code class=\"string\">&quot;row&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\">\t&lt;/</code><code class=\"keyword\">TableView</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>When the user clicks a TableView row, the <tt>showColorInfo()</tt> method is called. This method creates a prepared statement to query the colors data collection for items that match the user&apos;s color. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/main.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/main.js\"> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> showColorInfo(e) {</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"keyword\">var</code><code class=\"plain\"> color = e.row.model.color;</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"keyword\">var</code><code class=\"plain\"> collection = Alloy.createCollection(</code><code class=\"string\">&apos;color&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">\tcollection.fetch({</code></div> <div class=\"line\"><code class=\"plain\"> query: {</code></div> <div class=\"line\"><code class=\"plain\"> statement: </code><code class=\"string\">&apos;SELECT * FROM colors WHERE color = ?&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> params: [color]</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">\t});</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"keyword\">var</code><code class=\"plain\"> colorModel = collection.at(0);</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"comments\">// open the color info window</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"keyword\">if</code><code class=\"plain\"> (colorModel) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">var</code><code class=\"plain\"> win = Alloy.createController(</code><code class=\"string\">&apos;color&apos;</code><code class=\"plain\">, colorModel).getView();</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (OS_IOS) {</code></div> <div class=\"line\"><code class=\"plain\"> Alloy.Globals.navgroup.openWindow(win);</code></div> <div class=\"line\"><code class=\"plain\"> } </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> win.open();</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">\t} </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> alert(</code><code class=\"string\">&apos;No color info found!&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">\t}</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>Lastly, a new controller is created and is passed the model data returned by the SQL query. This data is used to populate the view with the proper values: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/color.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/color.js\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> model = arguments[0];</code></div> <div class=\"line\"><code class=\"plain\">$.theColor.backgroundColor = model.get(</code><code class=\"string\">&apos;color&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">$.name.text = </code><code class=\"string\">&apos;Name: &apos;</code><code class=\"plain\"> + model.get(</code><code class=\"string\">&apos;color&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">$.hexCode.text = </code><code class=\"string\">&apos;Hex: &apos;</code><code class=\"plain\"> + model.get(</code><code class=\"string\">&apos;hexCode&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">$.wavelength.text = </code><code class=\"string\">&apos;Wavelength: &apos;</code><code class=\"plain\"> + model.get(</code><code class=\"string\">&apos;wavelength&apos;</code><code class=\"plain\">);</code></div> </div> </div> </img></div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=41845731\"><span>Edit</span></a> </div> </body> </html> ","title":"SQL Queries"});