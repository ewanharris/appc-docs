Ext.data.JsonP['Alloy_Backbone_Migration']({"guide":" <!doctype html> <html> <head> <title>Alloy Backbone Migration</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-43290758\" class=\"content\"> <h1>Alloy Backbone Migration</h1> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-Overview\">Overview</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-Setup\">Setup</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-SummaryofChanges\">Summary of Changes</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-CollectionAPIs\">Collection APIs</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-FetchMethodBehaviorChange\">Fetch Method Behavior Change</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-NewSetMethod\">New Set Method</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-ReturnValueforMethods\">Return Value for Methods</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-AddMethod\">Add Method</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-EventAPIs\">Event APIs</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-ModelAPIs\">Model APIs</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-Validation\">Validation</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-OtherChanges\">Other Changes</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-ParseMethod\">Parse Method</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-SilentOption\">Silent Option</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-APIChanges\">API Changes</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-NewAPIs\">New APIs</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Backbone_Migration-section-src-43290758_AlloyBackboneMigration-RemovedAPIs\">Removed APIs</a> </p> </li></ul></li></ul> <div class=\"section section-2\" id=\"src-43290758_AlloyBackboneMigration-Overview\"> <h2 class=\"heading\"><span>Overview</span></h2> <p>Alloy 1.6.0 introduces support for Backbone 1.1.2. Currently, Alloy uses Backbone 0.9.2 to support its Model and Collection objects. This guide covers the changes from Backbone 0.9.2 to 1.1.2 and the modifications you may need to update your application. Note that only changes to the Backbone Collection, Event and Model APIs are discussed in this document. The other APIs (Routers, History and View) are not discussed since Alloy does not make direct use of them. </p> <p>Due to breaking changes from Backbone 0.9.2 to 1.1.2, Alloy still uses Backbone 0.9.2 as its default Model and Collection implementation. You will need to update the configuration file to use the newer Backbone library, then update your application to fix the breaking behavior changes and take advantage of the new Backbone features. </p> <p>In the future, Backbone 1.1.2 will become the default and 0.9.2 support will be deprecated and eventually removed. </p> </div> <div class=\"section section-2\" id=\"src-43290758_AlloyBackboneMigration-Setup\"> <h2 class=\"heading\"><span>Setup</span></h2> <p>To use Backbone 1.1.2 to support Alloy Model and Collections objects, open the project&apos;s <tt class=\"\">./app/config.json</tt> file and add the <tt class=\"\">backbone</tt> key to the to the file with the value set to <tt class=\"\">1.1.2</tt>. You may also set this value to <tt>0.9.2</tt> to force support of Backbone 0.9.2. In the example below, the boiler plate configuration file is modified to use Backbone 1.1.2. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/config.json</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/config.json\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;global&quot;</code><code class=\"plain\">: {}, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;env:development&quot;</code><code class=\"plain\">: {}, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;env:test&quot;</code><code class=\"plain\">: {}, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;env:production&quot;</code><code class=\"plain\">: {}, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:android&quot;</code><code class=\"plain\">: {},</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:blackberry&quot;</code><code class=\"plain\">: {},</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:ios&quot;</code><code class=\"plain\">: {},</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:mobileweb&quot;</code><code class=\"plain\">: {},</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;dependencies&quot;</code><code class=\"plain\">: {},</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;backbone&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;1.1.2&quot;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-43290758_AlloyBackboneMigration-SummaryofChanges\"> <h2 class=\"heading\"><span>Summary of Changes</span></h2> <p>The following sections summarize most of the changes that affect the behavior of an application. For a full list of Backbone changes, see the <a class=\"external-link external-link\" href=\"http://backbonejs.org/#changelog\" target=\"_blank\">Backbone Changelog</a>. </p> <div class=\"section section-3\" id=\"src-43290758_AlloyBackboneMigration-CollectionAPIs\"> <h3 class=\"heading\"><span>Collection APIs</span></h3> <div class=\"section section-4\" id=\"src-43290758_AlloyBackboneMigration-FetchMethodBehaviorChange\"> <h4 class=\"heading\"><span>Fetch Method Behavior Change</span></h4> <p>Backbone Collection objects no longer emit the <tt class=\"\">reset</tt> event after a <tt class=\"\">fetch()</tt> call, which means data-bound views may not update automatically. <strong class=\"\">This could break existing apps.</strong> To use old functionality, pass <tt class=\"\">{reset: true}</tt> when calling <tt>fetch()</tt> or extend the Collection class. The following sample code extends the Collection and has been added to the new model template. Note that you will need to comment out the code in the new model template. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">exports.definition = {</code></div> <div class=\"line\"><code class=\"plain\"> config: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Model configuration</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> extendModel: function(Model) {</code></div> <div class=\"line\"><code class=\"plain\"> _.extend(Model.prototype, {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// extended functions and properties go here</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> Model;</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> extendCollection: function(Collection) {</code></div> <div class=\"line\"><code class=\"plain\"> _.extend(Collection.prototype, {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// For Backbone v1.1.2, uncomment the following to override the</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// fetch method to account for a breaking change in Backbone.</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">/*</code></div> <div class=\"line\"><code class=\"comments\"> fetch: function(options) {</code></div> <div class=\"line\"><code class=\"comments\"> options = options ? _.clone(options) : {};</code></div> <div class=\"line\"><code class=\"comments\"> options.reset = true;</code></div> <div class=\"line\"><code class=\"comments\"> return Backbone.Collection.prototype.fetch.call(this, options);</code></div> <div class=\"line\"><code class=\"comments\"> }</code></div> <div class=\"line\"><code class=\"comments\"> */</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> Collection;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">};</code></div> </div> </div> <p> </p> </div> <div class=\"section section-4\" id=\"src-43290758_AlloyBackboneMigration-NewSetMethod\"> <h4 class=\"heading\"><span>New Set Method</span></h4> <p>If you want to smartly update the contents of a Collection (adding new models, removing missing ones, and merging those already present), you now call <tt class=\"\">set()</tt> a similar operation to calling <tt class=\"\">set()</tt> on a Model. This is now the default when you call <tt class=\"\">fetch()</tt> on a collection. To get the old behavior, pass <tt class=\"\">{reset: true}</tt> to the <tt>fetch()</tt> method. </p> </div> <div class=\"section section-4\" id=\"src-43290758_AlloyBackboneMigration-ReturnValueforMethods\"> <h4 class=\"heading\"><span>Return Value for Methods</span></h4> <p>The return values of Collection&apos;s <tt class=\"\">add()</tt>, <tt class=\"\">push()</tt>, <tt class=\"\">remove()</tt>, <tt class=\"\">reset()</tt> and <tt class=\"\">shift()</tt> methods return the changed (added, removed or updated) model or list of models, instead of <tt>this</tt>. </p> </div> <div class=\"section section-4\" id=\"src-43290758_AlloyBackboneMigration-AddMethod\"> <h4 class=\"heading\"><span>Add Method</span></h4> <p>When invoking <tt class=\"\">add()</tt> on a collection, passing <tt>{merge: true}</tt> will now cause duplicate models to have their attributes merged in to the existing models, instead of being ignored. </p> <p>To improve the performance of <tt class=\"\">add()</tt>, <tt class=\"\">options.index</tt> will no longer be set in the <tt class=\"\">add</tt> event callback. Use <tt>collection.indexOf(model)</tt> to retrieve the index of a model. </p> </div> </div> <div class=\"section section-3\" id=\"src-43290758_AlloyBackboneMigration-EventAPIs\"> <h3 class=\"heading\"><span>Event APIs</span></h3> <ul class=\"\"><li class=\"\"> <p>All <tt class=\"\">i</tt><tt class=\"\">nvalid</tt> events now pass consistent arguments. First the model in question, then the <tt class=\"\">error</tt> object, then <tt>options</tt>. </p> </li><li class=\"\"> <p><tt class=\"\">Collection.sort()</tt> now triggers a <tt class=\"\">sort</tt> event, instead of a <tt>reset</tt> event. </p> </li><li class=\"\"> <p>Both <tt class=\"\">sync</tt> and <tt class=\"\">error</tt> events within <tt>Backbone.sync()</tt> are now triggered regardless of the existence of success or error callbacks. </p> </li><li class=\"\"> <p>While listening to a <tt class=\"\">reset</tt> event, the list of previous models is now available in <tt>options.previousModels</tt>. </p> </li></ul> <p> </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>The new Event methods <tt class=\"\">listenTo</tt> and <tt>stopListening</tt> is meant for Backbone View objects to listen to Model and Collection events. These APIs will not work with an Alloy application. </p> </div> <p> </p> </div> <div class=\"section section-3\" id=\"src-43290758_AlloyBackboneMigration-ModelAPIs\"> <h3 class=\"heading\"><span>Model APIs</span></h3> <div class=\"section section-4\" id=\"src-43290758_AlloyBackboneMigration-Validation\"> <h4 class=\"heading\"><span>Validation</span></h4> <p>Model validation is now only enforced with the <tt class=\"\">save()</tt> method. Previously, models were also validated with the <tt class=\"\">set()</tt> method. To force validation when the <tt class=\"\">set()</tt> method is called, pass <tt>{validate: true}</tt> to the method or extend the Model class. </p> <p>Validation occurs even during &quot;silent&quot; changes (passing <tt>{silent: true}</tt> to methods). Previously, it would not. </p> <p>Failed validations return the <tt class=\"\">invalid</tt> event. Previously, a failed model validation would return the <tt>error</tt> event. </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>To validate Model objects, implement the <tt class=\"\">validate()</tt> method in the <tt>extendModel</tt> key of the model configuration file. </p> </div> </div> <div class=\"section section-4\" id=\"src-43290758_AlloyBackboneMigration-OtherChanges\"> <h4 class=\"heading\"><span>Other Changes</span></h4> <ul class=\"\"><li class=\"\"> <p>Calling <tt class=\"\">destroy()</tt> on a Model will now return <tt class=\"\">false</tt> if the model&apos;s <tt class=\"\">isNew</tt> is set to <tt>true</tt> (model has not been saved to persistent storage). </p> </li><li class=\"\"> <p><tt class=\"\">Model.set()</tt> no longer accepts another model as an argument. Only pass the method the attributes to set, <tt>Model.set(attributes)</tt>. </p> </li><li class=\"\"> <p><tt class=\"\">url</tt> and <tt>urlRoot</tt> properties may now be passed as options when instantiating a new Model. </p> </li></ul> </div> </div> <div class=\"section section-3\" id=\"src-43290758_AlloyBackboneMigration-ParseMethod\"> <h3 class=\"heading\"><span>Parse Method</span></h3> <p>After fetching a model or a collection, <i>all</i> defined parse methods will now be run. So fetching a collection and getting back new models could cause both the collection to parse the list, and then each model to be parsed in turn, if you have both methods defined. By default, the parse method is a no-op function that directly passes the JSON response object. </p> <p>You are no longer permitted to change the <tt class=\"\">id</tt> of your model during parse(). Use <tt>idAttribute</tt> instead. </p> <p>The parse function now receives the <tt class=\"\">options</tt> dictionary as its second parameter. Previously, it would only be passed a raw <tt>response</tt> object. </p> </div> <div class=\"section section-3\" id=\"src-43290758_AlloyBackboneMigration-SilentOption\"> <h3 class=\"heading\"><span>Silent Option</span></h3> <p>Passing <tt class=\"\">{silent:true}</tt> to methods now suppresses the <tt>change:attr</tt> events, thus a data-bound view will not be updated to reflect the changes. The sql sync adapter passed this option by default. It has been updated to no longer pass that option when Backbone 1.1.2 is used (still passed with 0.9.2). </p> <p>If you want the new behavior, where the <tt class=\"\">change</tt> events are suppressed, you will need to pass this option or extend the Model or Collection class. The following sample code extends the Model <tt>set()</tt> method by forcing the silent option to true. This method is where the silent option is used to fire or not fire change events. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">exports.definition = {</code></div> <div class=\"line\"><code class=\"plain\"> config: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Model configuration</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> extendModel: function(Model) {</code></div> <div class=\"line\"><code class=\"plain\"> _.extend(Model.prototype, {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Forces silent true option when the model is updated</code></div> <div class=\"line\"><code class=\"plain\"> set: function(attributes, options) {</code></div> <div class=\"line\"><code class=\"plain\"> options = options ? _.clone(options) : {};</code></div> <div class=\"line\"><code class=\"plain\"> options.silent = </code><code class=\"keyword\">true</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> Backbone.Model.prototype.set.call(</code><code class=\"keyword\">this</code><code class=\"plain\">, attributes, options); </code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> Model;</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> extendCollection: function(Collection) {</code></div> <div class=\"line\"><code class=\"plain\"> _.extend(Collection.prototype, {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// extended functions and properties go here</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> Collection;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">};</code></div> </div> </div> </div> </div> <div class=\"section section-2\" id=\"src-43290758_AlloyBackboneMigration-APIChanges\"> <h2 class=\"heading\"><span>API Changes</span></h2> <div class=\"section section-3\" id=\"src-43290758_AlloyBackboneMigration-NewAPIs\"> <h3 class=\"heading\"><span>New APIs</span></h3> <p>The following APIs have been added between Backbone 1.1.2 and 0.9.2. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Type </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Notes </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.request </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>event </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Fired whenever a request begins to be made to the server during a Backbone.sync operation. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Collection.findWhere </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Same as the <tt>Backbone.Collection.where()</tt> method but only returns the first result. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Collection.set </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Performs a &quot;smart&quot; update of the collection with the passed list of models. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Event.once </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Same as the <tt>Backbone.Event.on()</tt> method except after the event is fired, the callback is removed. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Model.invert </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Returns a copy of the object where the object&apos;s keys and values are switched. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Model.keys </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Returns an array of the object&apos;s keys. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Model.omit </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Returns a copy of an object without the specified keys. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Model.pairs </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Returns an array of <tt>[key, value]</tt> pairs. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Model.pick </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Returns a copy of an object with the specified keys. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Model.values </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Returns an array of the object&apos;s property values. </p> </td> </tr> </tbody> </table> </div> </div> <div class=\"section section-3\" id=\"src-43290758_AlloyBackboneMigration-RemovedAPIs\"> <h3 class=\"heading\"><span>Removed APIs</span></h3> <p>The following APIs have been removed between Backbone 1.1.2 and 0.9.2. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Type </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Notes </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Collection.getByCid </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Pass the CID to the Backbone.Collection.get() method to retrieve the Collection by its Backbone client ID. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Backbone.Model.change </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>&#xA0; </p> </td> </tr> </tbody> </table> </div> <p> </p> <p> </p> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=43290758\"><span>Edit</span></a> </div> </body> </html> ","title":"Alloy Backbone Migration"});