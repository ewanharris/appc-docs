Ext.data.JsonP['Alloy_Styles_and_Themes']({"guide":" <!doctype html> <html> <head> <title>Alloy Styles and Themes</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-35621526\" class=\"content\"> <h1>Alloy Styles and Themes</h1> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-TitaniumStyleSheets\">Titanium Style Sheets</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-Globalstyles\">Global styles</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-Platform-specificstyles\">Platform-specific styles</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-Customquerystyles\">Custom query styles</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-Exampleusingcustomproperties\">Example using custom properties</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-Exampleusingconditionalstatements\">Example using conditional statements</a> </p> </li></ul></li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-Themes\">Themes</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-Stylepriorities\">Style priorities</a> </p> </li></ul> <div class=\"section section-2\" id=\"src-35621526_AlloyStylesandThemes-TitaniumStyleSheets\"> <h2 class=\"heading\"><span>Titanium Style Sheets</span></h2> <p>The Titanium Style Sheets (TSS) file uses a JSON-like syntax to define the attributes of elements in the XML files. All TSS attributes are the properties of the Titanium object. For examples, when defining the style for a <a class=\"external-link external-link\" href=\"https://docs.appcelerator.com/platform/latest/#!/api/Titanium.UI.Button\" target=\"_blank\">Button object</a>, each property, such as <tt class=\"\">backgroundDisabledColor</tt>, <tt class=\"\">backgroundFocusedColor</tt>, <tt>backgroundSelectedColor</tt>, etc., can be specified as an attribute in the TSS file. </p> <p>Styles are defined at three different levels: markup element, class attribute and the id attribute. When mixed together, the id attribute overrides both the class attribute and markup element, and the class attribute overrides the markup element. </p> <p>In the TSS file, define attributes as key-value pairs, where the key is the name of the markup element, the class name prefixed with a period (<tt class=\"\">.</tt>), or the id name prefixed with a hash tag (#) and the value is a dictionary of attributes (or Titanium class properties) to set. You can optionally place a conditional block with the key name to apply styles under certain conditions as explained in the <a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-Platform-specificstyles\">Platform-specific styles</a> and <a class=\"document-link\" href=\"#!/guide/Alloy_Styles_and_Themes-section-src-35621526_AlloyStylesandThemes-Customquerystyles\">Custom query styles</a> sections below. </p> <p>You can use the following values and operators in your TSS file: </p> <ul class=\"\"><li> <p>JSON values, that is, Strings, Numbers, Objects, Array, Booleans and null </p> </li><li class=\"\"> <p><tt>undefined</tt> to unset a property (do not place undefined in quotes) (since Alloy 1.4.0) </p> </li><li class=\"\"> <p>Titanium SDK constants, for example, <tt>Ti.UI.SIZE</tt> </p> </li><li class=\"\"> <p>Localization functions, either <tt class=\"\">Ti.Locale.getString()</tt> and its shorthand <tt>L()</tt> </p> </li><li class=\"\"> <p>Variables from the <tt class=\"\">Alloy.CFG</tt> or <tt>Alloy.Globals </tt>namespaces </p> </li><li> <p>Bitwise operators, which includes bit shifting (&apos;&gt;&gt;&apos;, &apos;&lt;&lt;&apos;, and &apos;&gt;&gt;&gt;&apos;), bitwise AND (&apos;&amp;&apos;), bitwise OR (&apos;|&apos;) and bitwise XOR (&apos;^&apos;) (since Alloy 1.3.0) </p> </li></ul> <p>You may also place single (<tt class=\"\">//comment</tt>) and multiline comments (<tt>/* comment */</tt>) in your TSS files unlike regular JSON files. </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>Alloy does not support the CSS concept of child or descendent selectors, that is, specifying and applying styles based on the tag hierarchy. </p> </div> <p>The following code defines a style sheet (<tt>index.tss</tt>): </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/styles/index.tss</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/styles/index.tss\"> <div class=\"line\"><code class=\"plain\">// This is applied to any element with the class attribute assigned to </code><code class=\"string\">&quot;container&quot;</code><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"string\">&quot;.container&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\">\tbackgroundColor:</code><code class=\"string\">&quot;white&quot;</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">// This is applied to </code><code class=\"value\">all</code><code class=\"plain\"> Labels in the view</code></div> <div class=\"line\"><code class=\"string\">&quot;Label&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">width</code><code class=\"plain\">: Ti.UI.SIZE,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">height</code><code class=\"plain\">: Ti.UI.SIZE,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">color</code><code class=\"plain\">: </code><code class=\"string\">&quot;#000&quot;</code><code class=\"plain\">, // </code><code class=\"value\">black</code></div> <div class=\"line\"><code class=\"plain\"> transform: Alloy.Globals.rotateLeft // value is defined in the alloy.js file </code></div> <div class=\"line\"><code class=\"plain\">},&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">// This is only applied to an element with the id attribute assigned to </code><code class=\"string\">&quot;label&quot;</code></div> <div class=\"line\"><code class=\"string\">&quot;#label&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">color</code><code class=\"plain\">: </code><code class=\"string\">&quot;#999&quot;</code><code class=\"plain\"> </code><code class=\"comments\">/* gray */</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>which pairs to this view markup (<tt>index.xml</tt>): </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/views/index.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/views/index.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Window</code><code class=\"plain\"> </code><code class=\"color1\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;container&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">id</code><code class=\"plain\">=</code><code class=\"string\">&quot;label&quot;</code><code class=\"plain\"> </code><code class=\"color1\">onClick</code><code class=\"plain\">=</code><code class=\"string\">&quot;doClick&quot;</code><code class=\"plain\">&gt;Hello, World&lt;/</code><code class=\"keyword\">Label</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">Window</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>In the example code above, the Label object in the view inherits styles from both &apos;Label&apos; and &apos;#label&apos;. Since &apos;#label&apos; is defined at the id level, the color of the label will be gray (&apos;#999&apos;) instead of black (&apos;#000&apos;). For the Label&apos;s <tt class=\"\">transform</tt> property, the TSS file is using a function assigned to the <tt>Alloy.Globals</tt> namespace defined in the initializer file: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/alloy.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/alloy.js\"> <div class=\"line\"><code class=\"plain\">Alloy.Globals.rotateLeft = Ti.UI.create2DMatrix().rotate(-</code><code class=\"value\">90</code><code class=\"plain\">);</code></div> </div> </div> <div class=\"section section-3\" id=\"src-35621526_AlloyStylesandThemes-Globalstyles\"> <h3 class=\"heading\"><span>Global styles</span></h3> <p>You can create a global style file, called <tt>app.tss</tt>, which applies all styles defined inside it to all views, but does not override the non-global styles or property attributes in the markup. For example, suppose you have the following three files in your project: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">styles/app.tss</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"styles/app.tss\"> <div class=\"line\"><code class=\"string\">&quot;Window&quot;</code><code class=\"plain\">:{</code></div> <div class=\"line\"><code class=\"plain\"> backgroundColor: </code><code class=\"string\">&apos;white&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> layout: </code><code class=\"string\">&apos;vertical&apos;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"string\">&quot;Label&quot;</code><code class=\"plain\">:{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">color</code><code class=\"plain\">: </code><code class=\"string\">&apos;gray&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT,</code></div> <div class=\"line\"><code class=\"plain\"> backgroundColor: </code><code class=\"string\">&apos;transparent&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">font</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> fontFamily:</code><code class=\"string\">&apos;Helvetica&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> fontSize: </code><code class=\"string\">&apos;12dp&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> fontStyle: </code><code class=\"string\">&apos;normal&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> fontWeight: </code><code class=\"string\">&apos;normal&apos;</code></div> <div class=\"line\"><code class=\"plain\"> }\t</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">styles/index.tss</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"styles/index.tss\"> <div class=\"line\"><code class=\"string\">&quot;Window&quot;</code><code class=\"plain\">:{</code></div> <div class=\"line\"><code class=\"plain\"> backgroundColor: </code><code class=\"string\">&apos;blue&apos;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"string\">&quot;Label&quot;</code><code class=\"plain\">:{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">top</code><code class=\"plain\">: </code><code class=\"value\">20</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">left</code><code class=\"plain\">: </code><code class=\"string\">&apos;25dp&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">right</code><code class=\"plain\">: </code><code class=\"string\">&apos;25dp&apos;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"string\">&quot;#subtitle&quot;</code><code class=\"plain\">:{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">width</code><code class=\"plain\">: Ti.UI.FILL,</code></div> <div class=\"line\"><code class=\"plain\"> textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">font</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> fontSize: </code><code class=\"string\">&apos;16dp&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> fontWeight: </code><code class=\"string\">&apos;bold&apos;</code></div> <div class=\"line\"><code class=\"plain\"> } </code></div> <div class=\"line\"><code class=\"plain\">}&#xA0;</code></div> </div> </div> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">views/index.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"views/index.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Window</code><code class=\"plain\"> </code><code class=\"color1\">titleid</code><code class=\"plain\">=</code><code class=\"string\">&quot;story_title&quot;</code><code class=\"plain\"> </code><code class=\"color1\">modal</code><code class=\"plain\">=</code><code class=\"string\">&quot;true&quot;</code><code class=\"plain\"> </code><code class=\"color1\">exitOnClose</code><code class=\"plain\">=</code><code class=\"string\">&quot;true&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">id</code><code class=\"plain\">=</code><code class=\"string\">&quot;subtitle&quot;</code><code class=\"plain\"> </code><code class=\"color1\">color</code><code class=\"plain\">=</code><code class=\"string\">&quot;orange&quot;</code><code class=\"plain\"> </code><code class=\"color1\">textid</code><code class=\"plain\">=</code><code class=\"string\">&quot;story_subtitle&quot;</code><code class=\"plain\"> /&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">top</code><code class=\"plain\">=</code><code class=\"string\">&quot;25&quot;</code><code class=\"plain\"> </code><code class=\"color1\">color</code><code class=\"plain\">=</code><code class=\"string\">&quot;white&quot;</code><code class=\"plain\"> </code><code class=\"color1\">textid</code><code class=\"plain\">=</code><code class=\"string\">&quot;story_content&quot;</code><code class=\"plain\"> /&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">Window</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;&#xA0;</code></div> </div> </div> <p>By default, every view in the project will have white windows with a vertical layout and gray, left-justified, 12-dp Helvetica labels with a transparent background, as defined by the <tt>app.tss</tt> file. </p> <p>However, in the styles defined in the index style file (<tt class=\"\">index.tss</tt>) take precedence over the global style file, making the window blue and specifying margin and offset values for all labels in the index view-controller. Additionally, the subtitle ID styles override the styles in the Label element in both <tt class=\"\">index.tss</tt> and <tt>app.tss</tt>. </p> <p>Finally, any style attribute set in the view XML takes precedence over both the global style and view-specific style files. The orange and white color will be used instead of the gray color specified in global style file, and the larger top offset is used instead of the one set in <tt>index.tss</tt>. </p> </div> <div class=\"section section-3\" id=\"src-35621526_AlloyStylesandThemes-Platform-specificstyles\"> <h3 class=\"heading\"><span>Platform-specific styles</span></h3> <p>As with views, separate styles may be defined based on the platform and device size in the Titanium style sheets. </p> <p><strong>To specify platform or device size conditionals:</strong> </p> <ol class=\"\"><li class=\"\"> <p>Place a set of square brackets (<tt class=\"\">[]</tt>) directly after the name of the markup element, class name or id name in the TSS file. Do <strong>NOT</strong> place a space in between the name and brackets. The condition statements will be ignored. </p> </li><li> <p>Inside the brackets: </p> <ol class=\"\"><li class=\"\"> <p>To specify a platform-specific style, use the <tt class=\"\">platform</tt> attribute and assign it a platform, such as, <tt class=\"\">android</tt>, <tt class=\"\">ios</tt>, <tt class=\"\">mobileweb</tt>, or <tt class=\"\">windows</tt>.<br>Comma separate the values to logically OR the values together, for example, <tt class=\"\">[platform=ios,android]</tt> indicates both Android and iOS.<br>Prepend the value with an exclamation point (<tt class=\"\">!</tt>) to negate the value, for example, <tt>[platform=!ios]</tt> indicates all platforms except iOS. </br></br></p> </li><li class=\"\"> <p>To specify a device-size-specific style, use the <tt class=\"\">formFactor</tt> attribute and assign it a device size&#x2013;either <tt class=\"\">handheld</tt> or <tt>tablet</tt>. </p> </li></ol></li></ol> <p>You can use both attributes together. </p> <p>Alternatively, you can create subfolders, named as the platform, in the <tt class=\"\">styles</tt> directory as another way to create platform-specific styles. Refer to <a class=\"document-link\" href=\"#!/guide/Alloy_Concepts-section-src-34636240_AlloyConcepts-Platform-specificresources\">Alloy Concepts: Platform-Specific Resources</a>. </p> <p>The sample style sheet below defines styles for iPhone, iPad, Android and mobile web devices. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">// Default label</code></div> <div class=\"line\"><code class=\"string\">&quot;Label&quot;</code><code class=\"plain\">: { </code></div> <div class=\"line\"><code class=\"plain\"> backgroundColor: </code><code class=\"string\">&quot;#000&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> text: </code><code class=\"string\">&apos;Another platform&apos;</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">// iPhone</code></div> <div class=\"line\"><code class=\"string\">&quot;Label[platform=ios formFactor=handheld]&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> backgroundColor: </code><code class=\"string\">&quot;#f00&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> text: </code><code class=\"string\">&apos;iPhone&apos;</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">// iPad and iPad mini</code></div> <div class=\"line\"><code class=\"string\">&quot;Label[platform=ios formFactor=tablet]&quot;</code><code class=\"plain\">: { </code></div> <div class=\"line\"><code class=\"plain\"> backgroundColor: </code><code class=\"string\">&quot;#0f0&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> text: </code><code class=\"string\">&apos;iPad&apos;</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">// Android </code><code class=\"value\">handheld</code><code class=\"plain\"> and tablet devices</code></div> <div class=\"line\"><code class=\"string\">&quot;Label[platform=android]&quot;</code><code class=\"plain\">: { </code></div> <div class=\"line\"><code class=\"plain\"> backgroundColor: </code><code class=\"string\">&quot;#00f&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> text: </code><code class=\"string\">&apos;Android&apos;</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">// Any Mobile Web platform</code></div> <div class=\"line\"><code class=\"string\">&quot;Label[platform=mobileweb]&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> backgroundColor: </code><code class=\"string\">&quot;#f0f&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> text: </code><code class=\"string\">&apos;Mobile Web&apos;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-35621526_AlloyStylesandThemes-Customquerystyles\"> <h3 class=\"heading\"><span>Custom query styles</span></h3> <p><u>Y</u>ou can create custom queries to select which styles to apply in both the TSS and XML files. These query statements must return a boolean value. Custom query styles override all styles, that is, class, id, and markup element styles, except the ones defined as attributes in the XML file. </p> <p><strong> To use a custom query: </strong> </p> <ol class=\"\"><li class=\"\"> <p>Define a conditional statement, which returns a boolean value, and assign it to a property in the <tt class=\"\">Alloy.Globals</tt> namespace or a local function in the controller. Since <u class=\"\">Alloy 1.7.6</u>, the application can also pass custom Boolean properties to the <tt>Alloy.createController()</tt> method, which can be accessed in the XML and TSS files. </p> </li><li class=\"\"> <p>Assign the <tt class=\"\">if</tt> attribute to an element in the XML file or in the conditional block of the TSS file to the defined query with the <tt class=\"\">Alloy.Globals</tt> namespace, a local function in the controller or a custom property passed in from the <tt class=\"\">createController()</tt> method prefixed with <tt class=\"\">$.args</tt> namespace, for example, <tt>$.args.someProperty</tt>. </p> </li></ol> <p>You may use the <tt class=\"\">if</tt> attribute in combination with the <tt class=\"\">platform</tt> and <tt class=\"\">formFactor</tt> attributes. You can only add one custom query to the <tt class=\"\">if</tt> attribute. The <tt class=\"\">if</tt> attribute does not support multiple queries or the not operator (<tt>!</tt>). </p> <div class=\"section section-4\" id=\"src-35621526_AlloyStylesandThemes-Exampleusingcustomproperties\"> <h4 class=\"heading\"><span>Example using custom properties</span></h4> <p>The application can pass custom Boolean properties to the<tt class=\"\"> Alloy.createController()</tt> method. These properties can be accessed by both the XML and TSS files. When calling the <tt>createController</tt>() method, pass the custom Boolean properties in the second argument of the method. </p> <p>The controller below defines two functions that create and open an instance of the <tt>win2</tt> controller, but each function passes a different property to the controller. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">apps/controllers/index.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"apps/controllers/index.js\"> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> openBar (e) {</code></div> <div class=\"line\"><code class=\"plain\">\tAlloy.createController(</code><code class=\"string\">&apos;win2&apos;</code><code class=\"plain\">, {</code><code class=\"string\">&apos;fooBar&apos;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">}).getView().open();</code></div> <div class=\"line\"><code class=\"plain\">};</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> openBaz (e) {</code></div> <div class=\"line\"><code class=\"plain\"> Alloy.createController(</code><code class=\"string\">&apos;win2&apos;</code><code class=\"plain\">, {</code><code class=\"string\">&apos;fooBaz&apos;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">}).getView().open();</code></div> <div class=\"line\"><code class=\"plain\">};</code></div> </div> </div> <p>In the TSS file, add the conditional block and assign the <tt class=\"\">if</tt> attribute to the property passed to the <tt class=\"\">createController()</tt> method. Prefix the property name with the <tt>$.args</tt> namespace. Based on the property passed to the method, the application displays a different styled label. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/styles/win2.tss</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/styles/win2.tss\"> <div class=\"line\"><code class=\"string\">&quot;#label[if=$.args.fooBar]&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"string\">&apos;text&apos;</code><code class=\"plain\"> : </code><code class=\"string\">&apos;Foobar&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"string\">&apos;color&apos;</code><code class=\"plain\"> : </code><code class=\"string\">&apos;blue&apos;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"string\">&quot;#label[if=$.args.fooBaz]&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&apos;text&apos;</code><code class=\"plain\"> : </code><code class=\"string\">&apos;Foobaz&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&apos;color&apos;</code><code class=\"plain\"> : </code><code class=\"string\">&apos;red&apos;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>In the XML markup, add the <tt class=\"\">if</tt> attribute to an element and assign it to the property passed to the <tt class=\"\">createController()</tt> method. Prefix the property name with the <tt>$.args</tt> namespace. Based on the property passed to the method, the application displays a different label. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/views/win2.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/views/win2.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Window</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">if</code><code class=\"plain\">=</code><code class=\"string\">&quot;$.args.fooBar&quot;</code><code class=\"plain\"> </code><code class=\"color1\">color</code><code class=\"plain\">=</code><code class=\"string\">&quot;blue&quot;</code><code class=\"plain\">&gt;Foobar&lt;/</code><code class=\"keyword\">Label</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">if</code><code class=\"plain\">=</code><code class=\"string\">&quot;$.args.fooBaz&quot;</code><code class=\"plain\"> </code><code class=\"color1\">color</code><code class=\"plain\">=</code><code class=\"string\">&quot;red&quot;</code><code class=\"plain\">&gt;Foobaz&lt;/</code><code class=\"keyword\">Label</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">Window</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> </div> </div> </div> <div class=\"section section-4\" id=\"src-35621526_AlloyStylesandThemes-Exampleusingconditionalstatements\"> <h4 class=\"heading\"><span>Example using conditional statements</span></h4> <p>In this example, the application defines conditional statements to determine the iPhone device the application is running on. This iPhone application displays a scrolling block of text with a title above it and a caption below it, as illustrated by this XML file: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/views/index.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/views/index.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Window</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">id</code><code class=\"plain\">=</code><code class=\"string\">&quot;title&quot;</code><code class=\"plain\"> </code><code class=\"color1\">textid</code><code class=\"plain\">=</code><code class=\"string\">&quot;title&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">ScrollView</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">id</code><code class=\"plain\">=</code><code class=\"string\">&quot;content&quot;</code><code class=\"plain\"> </code><code class=\"color1\">textid</code><code class=\"plain\">=</code><code class=\"string\">&quot;content&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">ScrollView</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">id</code><code class=\"plain\">=</code><code class=\"string\">&quot;info&quot;</code><code class=\"plain\">&gt;TextViewer by BluthCo&lt;/</code><code class=\"keyword\">Label</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">Window</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>To take advantage of the various iPhone devices, we need to see if the device is running iOS 7 and above, and whether the iPhone is using the old regular or the latest tall form factor. We can define both of these query statements in the initializer file: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/alloy.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/alloy.js\"> <div class=\"line\"><code class=\"plain\">Alloy.Globals.isIos7Plus = (OS_IOS &amp;&amp; parseInt(Ti.Platform.version.split(</code><code class=\"string\">&quot;.&quot;</code><code class=\"plain\">)[</code><code class=\"value\">0</code><code class=\"plain\">]) &gt;= </code><code class=\"value\">7</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">Alloy.Globals.iPhoneTall = (OS_IOS &amp;&amp; Ti.Platform.osname == </code><code class=\"string\">&quot;iphone&quot;</code><code class=\"plain\"> &amp;&amp; Ti.Platform.displayCaps.platformHeight == </code><code class=\"value\">568</code><code class=\"plain\">);&#xA0;</code></div> </div> </div> <p>In the style file, use these conditional statements to create styles for specific devices. For example, since iOS 7, you can take advantage of the built-in text styles instead of defining all the attribute for a Font object, and since the iPhone 5 (and later) is taller, you need to make the ScrollView longer. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/styles/index.tss</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/styles/index.tss\"> <div class=\"line\"><code class=\"plain\">// Default Styles</code></div> <div class=\"line\"><code class=\"string\">&quot;#content&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">color</code><code class=\"plain\">: </code><code class=\"string\">&apos;gray&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">top</code><code class=\"plain\">: </code><code class=\"string\">&apos;25dp&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">left</code><code class=\"plain\">: </code><code class=\"string\">&apos;10dp&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">font</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> fontSize: </code><code class=\"string\">&apos;12dp&apos;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"string\">&quot;#info&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">color</code><code class=\"plain\">: </code><code class=\"string\">&apos;gray&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">bottom</code><code class=\"plain\">: </code><code class=\"string\">&apos;20dp&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">font</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> fontSize: </code><code class=\"string\">&apos;9dp&apos;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"string\">&quot;#title&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">color</code><code class=\"plain\">: </code><code class=\"string\">&apos;black&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">top</code><code class=\"plain\">: </code><code class=\"string\">&apos;15dp&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">font</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> fontSize: </code><code class=\"string\">&apos;14dp&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> fontWeight: </code><code class=\"string\">&apos;bold&apos;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"string\">&quot;Window&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> layout: </code><code class=\"string\">&apos;vertical&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> backgroundColor: </code><code class=\"string\">&apos;white&apos;</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"string\">&quot;ScrollView&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">height</code><code class=\"plain\">: </code><code class=\"string\">&apos;415dp&apos;</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">// Query styles</code></div> <div class=\"line\"><code class=\"string\">&quot;#info[if=Alloy.Globals.isIos7Plus]&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">font</code><code class=\"plain\">: { textStyle : Ti.UI.TEXT_STYLE_FOOTNOTE }</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"string\">&quot;#title[if=Alloy.Globals.isIos7Plus]&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">top</code><code class=\"plain\">: </code><code class=\"string\">&apos;25dp&apos;</code><code class=\"plain\">, // compensate for the status bar on iOS </code><code class=\"value\">7</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">font</code><code class=\"plain\">: { textStyle : Ti.UI.TEXT_STYLE_HEADLINE }</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"string\">&quot;#content[if=Alloy.Globals.isIos7Plus]&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">font</code><code class=\"plain\">: { textStyle : Ti.UI.TEXT_STYLE_CAPTION</code><code class=\"value\">1</code><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"string\">&quot;ScrollView[if=Alloy.Globals.iPhoneTall]&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">height</code><code class=\"plain\">: </code><code class=\"string\">&apos;500dp&apos;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> </div> </div> <div class=\"section section-2\" id=\"src-35621526_AlloyStylesandThemes-Themes\"> <h2 class=\"heading\"><span>Themes</span></h2> <p>Themes provide a way to overwrite or modify files for a specific <i>brand</i> of your app. </p> <p>To create a theme, create a folder called <tt class=\"\">themes</tt> in your Alloy <tt class=\"\">app</tt> directory. In the <tt class=\"\">themes</tt> folder, create a folder for your theme. The name of this folder references the name of the theme for configuration and compilation. In your theme folder you can include many of the files and folders found under the <tt>app</tt> folder to override or merge with them. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Folder or Filename </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Supported since </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Overwrites or Merges </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>config.json </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Alloy 1.4.0 </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>merges </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>i18n </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Alloy 1.7.6 / CLI 5.0.0 </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>merges folders and files </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>assets </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>&#xA0; </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>merges folders, overwrites files </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>lib </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Alloy 1.7.6 / CLI 5.0.0 </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>merges folders, overwrites files </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>platform </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Alloy 1.7.6 / CLI 5.0.0 </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>merges folders, overwrites files </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>styles </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>&#xA0; </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>merges folders and files </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>widgets/*/assets </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Alloy 1.4.0 </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>merges folders, overwrites files </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>widgets/*/styles </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Alloy 1.4.0 </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>merges folders, overwrites files </p> </td> </tr> </tbody> </table> </div> <p>To use a theme, add it to your <tt>config.json</tt> configuration file with &quot;theme&quot; as the key and the name of the theme folder as the value. For example: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;global&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;theme&quot;</code><code class=\"plain\">:</code><code class=\"string\">&quot;mytheme&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;env:development&quot;</code><code class=\"plain\">: {}, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;env:test&quot;</code><code class=\"plain\">: {}, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;env:production&quot;</code><code class=\"plain\">: {}, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:ios&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;theme&quot;</code><code class=\"plain\">:</code><code class=\"string\">&quot;green&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:android&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;theme&quot;</code><code class=\"plain\">:</code><code class=\"string\">&quot;blue&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }, </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;dependencies&quot;</code><code class=\"plain\">: {}</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>The theme changes based on the platform. Android uses the &apos;blue&apos; theme, iOS uses the &apos;green&apos; theme, and Mobile Web uses the &apos;mytheme&apos; theme. </p> </div> <div class=\"section section-2\" id=\"src-35621526_AlloyStylesandThemes-Stylepriorities\"> <h2 class=\"heading\"><span>Style priorities</span></h2> <p>When mixing themes, the global style file, view style files and defining styles inline in the XML markup, Alloy applies the styles in the following order from lowest to highest priority: </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Style Defined in the... </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Example </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Global Style File </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>styles/app.tss</tt> </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Global Style File i<u>n a Theme</u> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>themes/&lt;theme_name&gt;/styles/app.tss</tt> </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Global Style File with Platform-Specific Styles </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>styles/&lt;platform&gt;/app.tss</tt> </p> <p><strong>OR</strong> </p> <p><tt class=\"\">styles/app.tss</tt> with the <tt>[platform=&lt;platform&gt;]</tt> syntax </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Global Style File <u>in a Theme</u> with Platform-Specific Styles </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>themes/&lt;theme_name&gt;/styles/&lt;platform&gt;/app.tss</tt> </p> <p><strong>OR</strong> </p> <p> <tt class=\"\">themes/&lt;theme_name&gt;/styles/app.tss</tt> with the <tt> [platform=&lt;platform&gt;]</tt> syntax </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>View-Controller Style File </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>styles/&lt;view_controller&gt;.tss</tt> </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>View-Controller Style File <u>in a Theme</u> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>themes/&lt;theme_name&gt;/styles/&lt;view_controller&gt;.tss</tt> </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>View-Controller Style File with Platform-Specific Styles </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>styles/&lt;platform&gt;/&lt;view_controller&gt;.tss</tt> </p> <p><strong>OR</strong> </p> <p><tt class=\"\">styles/&lt;view_controller&gt;.tss</tt> with the <tt>[platform=&lt;platform&gt;]</tt> syntax </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>View-Controller Style File <u>in a Theme</u> with Platform-Specific Styles </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>themes/&lt;theme_name&gt;/styles/&lt;platform&gt;/&lt;view_controller&gt;.tss</tt> </p> <p><strong>OR</strong> </p> <p><tt class=\"\">themes/&lt;theme_name&gt;/styles/&lt;view_controller&gt;.tss</tt> with the <tt> platform </tt> attribute </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>XML Markup </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>views/&lt;view_controller&gt;.xml</tt> </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>XML Markup with Platform-Specific Styles </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>views/&lt;platform&gt;/&lt;view_controller&gt;.xml</tt> </p> <p><strong>OR</strong> </p> <p><tt class=\"\">views/&lt;view_controller&gt;.xml</tt> with the <tt>platform</tt> attribute </p> </td> </tr> </tbody> </table> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=35621526\"><span>Edit</span></a> </div> </body> </html> ","title":"Alloy Styles and Themes"});