Ext.data.JsonP['Browser']({"guide":" <!doctype html> <html> <head> <title>Browser</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-30083155\" class=\"content\"> <h1>Browser</h1> <div class=\"section section-2\" id=\"src-30083155_Browser-Actions\"> <h2 class=\"heading\"><span>Actions</span></h2> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Browser-section-src-30083155_Browser-Requirements\">Requirements</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Browser-section-src-30083155_Browser-Invocation\">Invocation</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Browser-section-src-30083155_Browser-Openapageinternally\">Open a page internally</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Browser-section-src-30083155_Browser-Openapageexternally\">Open a page externally</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Browser-section-src-30083155_Browser-ConfigureBrowsers.\">Configure Browsers.</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Browser-section-src-30083155_Browser-Getthecurrentlyconfiguredbrowsers.\">Get the currently configured browsers.</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Browser-section-src-30083155_Browser-Example\">Example</a> </p> </li></ul> </div> <div class=\"section section-2\" id=\"src-30083155_Browser-Requirements\"> <h2 class=\"heading\"><span>Requirements</span></h2> <p>The examples in this page use the <i class=\"\"><strong>Prototype</strong></i> library, which is included by default inside a portal. However, the same concepts may be applied using other implementations. </p> </div> <div class=\"section section-2\" id=\"src-30083155_Browser-Invocation\"> <h2 class=\"heading\"><span>Invocation</span></h2> <p>This command is executed immediately in a synchronous way. </p> </div> <div class=\"section section-2\" id=\"src-30083155_Browser-Openapageinternally\"> <h2 class=\"heading\"><span>Open a page internally</span></h2> <p>When a page needs to be opened internally within Studio, use this JavaScript code to dispatch the appropriate action: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">dispatch($H({</code></div> <div class=\"line\"><code class=\"plain\"> controller: </code><code class=\"string\">&apos;portal.browser&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> action: </code><code class=\"string\">&quot;internalOpen&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> args: [</code><code class=\"string\">&quot;http://www.appcelerator.com&quot;</code><code class=\"plain\">].toJSON()</code></div> <div class=\"line\"><code class=\"plain\">}).toJSON());</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-30083155_Browser-Openapageexternally\"> <h2 class=\"heading\"><span>Open a page externally</span></h2> <p>When a page needs to be opened externally in the OS default browser, use this JavaScript code to dispatch the appropriate action: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">dispatch($H({</code></div> <div class=\"line\"><code class=\"plain\"> controller: </code><code class=\"string\">&apos;portal.browser&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> action: </code><code class=\"string\">&quot;externalOpen&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> args: [</code><code class=\"string\">&quot;http://www.appcelerator.com&quot;</code><code class=\"plain\">].toJSON()</code></div> <div class=\"line\"><code class=\"plain\">}).toJSON());</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-30083155_Browser-ConfigureBrowsers.\"> <h2 class=\"heading\"><span>Configure Browsers.</span></h2> <p>Configure the Studio&apos;s browsers by detecting the installed browsers and adding them to the Eclipse Browsers preference page.<br>The call returns a Map for the newly added browsers. The map contains mapping from a browser location to a browser name.<br>In case no browser was added, an empty map is returned. </br></br></p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">var addedBrowsers = dispatch($H({</code></div> <div class=\"line\"><code class=\"plain\"> controller: </code><code class=\"string\">&apos;portal.browser&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> action: </code><code class=\"string\">&quot;configureBrowsers&quot;</code></div> <div class=\"line\"><code class=\"plain\">}).toJSON());</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-30083155_Browser-Getthecurrentlyconfiguredbrowsers.\"> <h2 class=\"heading\"><span>Get the currently configured browsers.</span></h2> <p>Returns the currently configured browsers in the Eclipse Browsers preference page.<br>The call returns a Map for the detected browsers. The map contains mapping from a browser location to a browser name.<br>&quot;null&quot; location in the result indicate the Eclipse default browser. </br></br></p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">var browsers = dispatch($H({</code></div> <div class=\"line\"><code class=\"plain\"> controller: </code><code class=\"string\">&apos;portal.browser&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> action: </code><code class=\"string\">&quot;getConfiguredBrowsers&quot;</code></div> <div class=\"line\"><code class=\"plain\">}).toJSON());</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-30083155_Browser-Example\"> <h2 class=\"heading\"><span>Example</span></h2> <p>You may place that dispatch code above inside a link listener, just like that: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">myLink = $(</code><code class=\"string\">&apos;my-link&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">myLink.observe(</code><code class=\"string\">&apos;click&apos;</code><code class=\"plain\">, function(e) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (typeof(dispatch) !== </code><code class=\"string\">&apos;undefined&apos;</code><code class=\"plain\">) {</code></div> <div class=\"line\"><code class=\"plain\"> dispatch($H({</code></div> <div class=\"line\"><code class=\"plain\"> controller: </code><code class=\"string\">&apos;portal.browser&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> action: </code><code class=\"string\">&quot;externalOpen&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> args: [</code><code class=\"string\">&quot;http://www.appcelerator.com&quot;</code><code class=\"plain\">].toJSON()</code></div> <div class=\"line\"><code class=\"plain\"> }).toJSON());</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> </code><code class=\"keyword\">false</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=30083155\"><span>Edit</span></a> </div> </body> </html> ","title":"Browser"});