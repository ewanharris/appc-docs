Ext.data.JsonP['Internationalization']({"guide":" <!doctype html> <html> <head> <title>Internationalization</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-29004892\" class=\"content\"> <h1>Internationalization</h1> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Objective\">Objective</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Contents\">Contents</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Languagestrings\">Language strings</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Resourcefilestructure\">Resource file structure</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Gettingalocalizedstring\">Getting a localized string</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Replacingvaluesinalocalizedstring\">Replacing values in a localized string</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-iOS-specificlocalizations\">iOS-specific localizations</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-LocalizesystembuttonsandsubmittointernationalAppStores\">Localize system buttons and submit to international App Stores</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Localizepropertylistkeys\">Localize property list keys</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Setdefaultlanguage\">Set default language</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_safe-id-SW50ZXJuYXRpb25hbGl6YXRpb24tSW50ZXJuYXRpb25hbGl6aW5ndGhlYXBwJ3NuYW1l\">Internationalizing the app&apos;s name</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Changinglocalefortesting\">Changing locale for testing</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Appnamelocalization\">App name localization</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-AndroidappnamelocalizationwithTitaniumSDK3.1.xandolder\">Android app name localization with Titanium SDK 3.1.x and older</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Reference\">Reference</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Links\">Links</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Internationalizingimageandfileresources\">Internationalizing image and file resources</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Dateandtimeformatting\">Date and time formatting</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Otherformattingandlocalefunctions\">Other formatting and locale functions</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Testinglanguages\">Testing languages</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Hands-onpractice\">Hands-on practice</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Goal\">Goal</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Steps\">Steps</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Summary\">Summary</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-Referencesandfurtherreading\">References and further reading</a> </p> </li></ul> <div class=\"section section-2\" id=\"src-29004892_Internationalization-Objective\"> <h2 class=\"heading\"><span>Objective</span></h2> <p>In this section, you will learn how you can seamlessly internationalize your Titanium apps. We&apos;ll look specifically how you can use external language files to display text in the user&apos;s preferred language. </p> </div> <div class=\"section section-2\" id=\"src-29004892_Internationalization-Contents\"> <h2 class=\"heading\"><span>Contents</span></h2> <p>Titanium provides a number of JavaScript functions in the <tt class=\"\">Titanium.Locale</tt> namespace for use in localization. It also provides <tt>String</tt> formatting functions to handle dates, times, currencies, and more. You can even internationalize the name of your app itself. We&apos;ll look at those features, as well as how to test your language settings in this section. </p> <div class=\"section section-3\" id=\"src-29004892_Internationalization-Languagestrings\"> <h3 class=\"heading\"><span>Language strings</span></h3> <p>Rather than hard-coding strings into your project, you can use localized strings. Localized strings are replaced at runtime with values appropriate to the user&apos;s language. Titanium relies on resources files and string placeholders to accomplish this task. </p> <p>At the top level of your Titanium project (the same level as <tt class=\"\">tiapp.xml</tt> file, and the <tt class=\"\">app</tt> and <tt class=\"\">Resources</tt> directory), you will create a folder called <tt class=\"\">i18n</tt>. Inside the <tt class=\"\">i18n</tt> folder, create folders for each language your application will support. Name the folder according to the <a class=\"external-link external-link\" href=\"http://en.wikipedia.org/wiki/ISO_639-1\" target=\"_blank\">ISO 639-1</a> standard. For example, use <tt class=\"\">en</tt> for English, <tt class=\"\">es</tt> for Spanish, <tt>fr</tt> for French, etc. </p> <p>Starting with Release 4.1.0, you may also add a region suffix to the folder name to specify a set of resources for a specific country. Suffix the folder name with a dash followed by the country&apos;s <a class=\"external-link external-link\" href=\"https://en.wikipedia.org/?title=ISO_3166-1\" target=\"_blank\">ISO 3166-1</a> Alpha-2 code. For example, use <tt class=\"\">en-US</tt> for American English, <tt class=\"\">en-CA</tt> for Canadian English, <tt>en-GB</tt> for British English, etc. Note that the OS may not support all regional languages. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">ProjectFolder</code></div> <div class=\"line\"><code class=\"plain\">&#x251C;&#x2500;&#x2500; app</code></div> <div class=\"line\"><code class=\"plain\">&#x251C;&#x2500;&#x2500; i18n</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x251C;&#x2500;&#x2500; en-AU</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x2502; &#x2514;&#x2500;&#x2500; strings.xml</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x251C;&#x2500;&#x2500; en-CA</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x2502; &#x2514;&#x2500;&#x2500; strings.xml</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x251C;&#x2500;&#x2500; en-GB</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x2502; &#x2514;&#x2500;&#x2500; strings.xml</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x251C;&#x2500;&#x2500; en-US</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x2502; &#x2514;&#x2500;&#x2500; strings.xml</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x2514;&#x2500;&#x2500; fr</code></div> <div class=\"line\"><code class=\"plain\">&#x2502; &#x2514;&#x2500;&#x2500; strings.xml</code></div> <div class=\"line\"><code class=\"plain\">&#x251C;&#x2500;&#x2500; Resources</code></div> <div class=\"line\"><code class=\"plain\">&#x2514;&#x2500;&#x2500; tiapp.xml</code></div> </div> </div> <div class=\"section section-4\" id=\"src-29004892_Internationalization-Resourcefilestructure\"> <h4 class=\"heading\"><span>Resource file structure</span></h4> <p>The string resource file closely mirrors the format of Android localization files, which have an XML-based format. The <tt class=\"\">name</tt> attribute represents the key for the string, and the text inside the XML node represents the value. A typical <tt>strings.xml</tt> file would look like the following: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">strings.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"strings.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;welcome_message&quot;</code><code class=\"plain\">&gt;Welcome to Kitchen Sink for Titanium&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;user_agent_message&quot;</code><code class=\"plain\">&gt;user agent set to&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;format_test&quot;</code><code class=\"plain\">&gt;Your name is %s&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;base_ui_title&quot;</code><code class=\"plain\">&gt;Base UI&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;controls_win_title&quot;</code><code class=\"plain\">&gt;Controls&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;phone_win_title&quot;</code><code class=\"plain\">&gt;Phone&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;platform_win_title&quot;</code><code class=\"plain\">&gt;Platform&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;mashups_win_title&quot;</code><code class=\"plain\">&gt;Mashups&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;ordered&quot;</code><code class=\"plain\">&gt;Hi %1$s, my name is %2$s&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>Resource files are processed and included with your application at build time by our Titanium build scripts. This means that these strings won&apos;t be processed if you use Xcode or Eclipse to build your project natively. </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p><strong>Android Platform Notes</strong> </p> <ol class=\"\"><li class=\"\"> <p>If you have XML files in both the <tt class=\"\">i18n</tt> and <tt class=\"\">platform/android</tt> folders, the Titanium build scripts will try to merge the files together in the <tt class=\"\">build</tt> folder. If there are any conflicts, the build fails. Currently, if modules contain any files in the <tt>platform/android</tt> folder, these files overwrite the build files. </p> </li><li class=\"\"> <p>If you have strings using multiple substitutions, as demonstrated in the &quot;ordered&quot; string in the previous example, you may need to add the <tt>formatted=&quot;false&quot;</tt> attribute to these string elements if the localized string is not created correctly when running the application. </p> </li><li> <p>When editing the strings.xml file, be sure to clean your project before building again. </p> </li></ol> </div> <p>String resource names (the &quot;keys&quot;) must begin with a letter, and can contain digits, English characters, and the underscore. The contents (values) of each string resource must be <a class=\"external-link external-link\" href=\"http://en.wikipedia.org/wiki/UTF-8\" target=\"_blank\">UTF-8</a> compatible strings. While a given platform may not crash or throw an exception if you don&apos;t follow these rules, there&apos;s a good chance you will encounter some unexpected behavior. </p> </div> <div class=\"section section-4\" id=\"src-29004892_Internationalization-Gettingalocalizedstring\"> <h4 class=\"heading\"><span>Getting a localized string</span></h4> <p>Titanium provides two functions for obtaining a localized string from your resource files. Both take the key of the string requested as their first parameter. The <tt>L()</tt> macro is a short form for <a class=\"external-link external-link\" href=\"#!/api/Titanium.Locale-method-getString\">Ti.Locale.getString()</a>: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> str1 = L(</code><code class=\"string\">&apos;welcome_message&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> str2 = Ti.Locale.getString(</code><code class=\"string\">&apos;welcome_message&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"comments\">// str1 === str2</code></div> </div> </div> <p>To handle situations where no key exists in the <tt class=\"\">strings.xml</tt> file, the <a class=\"external-link external-link\" href=\"#!/api/Titanium.Locale-method-getString\">L() macro</a> accepts a second argument to provide default <tt>hint</tt> text: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> str1 = L(</code><code class=\"string\">&apos;missingKey&apos;</code><code class=\"plain\">, </code><code class=\"string\">&apos;No translation available&apos;</code><code class=\"plain\">);</code></div> </div> </div> <p>Additionally, you can use the <tt class=\"\">titleid</tt> property of Titanium UI objects, such as labels or buttons, to directly reference a string resource without using the <tt>L()</tt> macro. For example: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> label = Ti.UI.createLabel({</code></div> <div class=\"line\"><code class=\"plain\">\ttitleid: </code><code class=\"string\">&apos;welcome_message&apos;</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"comments\">/*</code></div> <div class=\"line\"><code class=\"comments\">* is equivalent to</code></div> <div class=\"line\"><code class=\"comments\">* var label = Ti.UI.createLabel({</code></div> <div class=\"line\"><code class=\"comments\">* text: L(&apos;welcome_message&apos;)</code></div> <div class=\"line\"><code class=\"comments\">* });</code></div> <div class=\"line\"><code class=\"comments\">*/</code></div> </div> </div> </div> <div class=\"section section-4\" id=\"src-29004892_Internationalization-Replacingvaluesinalocalizedstring\"> <h4 class=\"heading\"><span>Replacing values in a localized string</span></h4> <p>You probably noticed the %1 and %2 placeholders in the sample <tt class=\"\">strings.xml</tt> file above. The <tt class=\"\">String</tt> object in Titanium contains a <tt class=\"\">format</tt> function which formats strings according to the <a class=\"external-link external-link\" href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\" target=\"_blank\">IEEE printf specification</a>. If your localization string contains replacement keys, as <tt>format_test</tt> does in our example file above, you can replace values into your localized string like so: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> formatted = String.format(L(</code><code class=\"string\">&apos;format_test&apos;</code><code class=\"plain\">),</code><code class=\"string\">&apos;Kevin&apos;</code><code class=\"plain\">); </code><code class=\"comments\">// contains &apos;Your name is Kevin&apos;</code></div> </div> </div> <p>Using the other replacement values from the printf spec, you can also do ordered values: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> formatted = String.format(L(</code><code class=\"string\">&apos;ordered&apos;</code><code class=\"plain\">), </code><code class=\"string\">&apos;Jeff&apos;</code><code class=\"plain\">, </code><code class=\"string\">&apos;Kevin&apos;</code><code class=\"plain\">); </code><code class=\"comments\">// contains &apos;Hi Jeff, my name is Kevin&apos;</code></div> </div> </div> </div> <div class=\"section section-4\" id=\"src-29004892_Internationalization-iOS-specificlocalizations\"> <h4 class=\"heading\"><span>iOS-specific localizations</span></h4> <p>On iOS applications, you can localize the names of system buttons, such as &quot;Save&quot; and &quot;Cancel&quot;, and the values of pList keys. You also need to modify the plist section of the <tt>tiapp.xml</tt> file in order to submit your application to international App Stores. </p> <div class=\"section section-5\" id=\"src-29004892_Internationalization-LocalizesystembuttonsandsubmittointernationalAppStores\"> <h5 class=\"heading\"><span>Localize system buttons and submit to international App Stores</span></h5> <p>To localize system buttons or submit your application to international iTunes App Stores, add the <tt class=\"\">CFBundleLocalizations</tt> key to the iOS plist section of the project&apos;s <tt class=\"\">tiapp.xml</tt> file. Assign the <tt class=\"\">CFBundleLocalizations</tt> key an array of strings. Each string is the ISO 639-1 standard name of the language you want the application to support. For example, to support English, Spanish and French, add the following to the application&apos;s <tt>tiapp.xml</tt> file: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">tiapp.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"tiapp.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">ti</code><code class=\"plain\">:app&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">ios</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">plist</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">dict</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">key</code><code class=\"plain\">&gt;CFBundleLocalizations&lt;/</code><code class=\"keyword\">key</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">array</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;en&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;fr&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;es&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">array</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">dict</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">plist</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">ios</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">ti</code><code class=\"plain\">:app&gt;</code></div> </div> </div> </div> <div class=\"section section-5\" id=\"src-29004892_Internationalization-Localizepropertylistkeys\"> <h5 class=\"heading\"><span>Localize property list keys</span></h5> <p>To localize property list key values (Info.plist keys), add <tt class=\"\">string</tt> elements to the <tt>app.xml</tt> file with the name attribute set to the property list key and the node text to the localized string to display. For example, the following file provides French versions of several dialog messages displayed to the user when asking for permission to use their location, contacts or calendar. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">i18n/fr/app.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"i18n/fr/app.xml\"> <div class=\"line\"><code class=\"plain\">&lt;?</code><code class=\"keyword\">xml</code><code class=\"plain\"> </code><code class=\"color1\">version</code><code class=\"plain\">=</code><code class=\"string\">&quot;1.0&quot;</code><code class=\"plain\"> </code><code class=\"color1\">encoding</code><code class=\"plain\">=</code><code class=\"string\">&quot;UTF-8&quot;</code><code class=\"plain\">?&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;NSLocationAlwaysUsageDescription&quot;</code><code class=\"plain\">&gt;O&#xF9; allez-vous?&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;NSContactsUsageDescription&quot;</code><code class=\"plain\">&gt;Avez-vous des amis?&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;NSCalendarsUsageDescription&quot;</code><code class=\"plain\">&gt;Bon voyage.&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> </div> </div> </div> <div class=\"section section-5\" id=\"src-29004892_Internationalization-Setdefaultlanguage\"> <h5 class=\"heading\"><span>Set default language</span></h5> <p>The following key allows you to set the default language and region of your app which is very useful for the management of localization: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">CFBundleDevelopmentRegion</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"CFBundleDevelopmentRegion\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">ios</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">plist</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">dict</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">key</code><code class=\"plain\">&gt;CFBundleDevelopmentRegion&lt;/</code><code class=\"keyword\">key</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;it_IT&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">dict</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">plist</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">ios</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>For more information about CFBundleDevelopmentRegion, please review <a class=\"external-link external-link\" href=\"https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\" target=\"_blank\">iOS Developer Library - Core Foundation Keys</a> and <a class=\"external-link external-link\" href=\"https://developer.apple.com/library/ios/documentation/MacOSX/Conceptual/BPInternational/LanguageandLocaleIDs/LanguageandLocaleIDs.html#//apple_ref/doc/uid/10000171i-CH15-SW6\" target=\"_blank\">iOS Developer Library - Language IDs</a>. </p> </div> </div> <div class=\"section section-4\" id=\"src-29004892_safe-id-SW50ZXJuYXRpb25hbGl6YXRpb24tSW50ZXJuYXRpb25hbGl6aW5ndGhlYXBwJ3NuYW1l\"> <h4 class=\"heading\"><span>Internationalizing the app&apos;s name</span></h4> <p>One thing that has been a little tricky for some developers, is changing the application name based on locale. </p> <p>For example, say you had an application named <strong class=\"\">&quot;Cat&quot;</strong>, but you wanted it to be <strong class=\"\">&quot;Gato&quot;</strong> in Spanish locales, <strong>&quot;&#x732B;&quot;</strong> in Japanese, and so on. Let &apos;s see how you would prepare your application to display its name appropriately for both iOS and Android distributions. </p> <div class=\"section section-5\" id=\"src-29004892_Internationalization-Changinglocalefortesting\"> <h5 class=\"heading\"><span>Changing locale for testing</span></h5> <p>Before learning to configure your apps to use localized strings for application names, let&apos;s first see how we can change locales manually for testing. Below you can find short videos for both iOS and Android that show you exactly how to do that. </p> <p> </p> <p><a class=\"external-link\" href=\"http://vimeo.com/36991188\" target=\"_blank\">Change Locale on iPhone</a> from <a class=\"external-link\" href=\"http://vimeo.com/appcelerator\" target=\"_blank\">Appcelerator Video Channel</a> on <a class=\"external-link\" href=\"https://vimeo.com\" target=\"_blank\">Vimeo</a>. </p> </div> <div class=\"section section-5\" id=\"src-29004892_Internationalization-Appnamelocalization\"> <h5 class=\"heading\"><span>App name localization</span></h5> <p>For iOS applications and if you are using Titanium SDK 3.2.0 and greater to build your Android applications, it&apos;s pretty simple. Use the standard method for creating localization paths, which means creating and using the <tt>i18n</tt> directory like this: </p> <p> <img src=\"images/download/attachments/29004892/Screen_Shot_2012_02_17_at_6_36_41_PM.png\" alt=\"images/download/attachments/29004892/Screen_Shot_2012_02_17_at_6_36_41_PM.png\" class=\"confluence-embedded-image confluence-content-image-border\"> </img></p> <p>In each of your language directories under <tt class=\"\">i18n</tt>, you&apos;ll include an <tt>app.xml</tt> file that includes the necessary XML structure for defining the localized name of your app. That structure will look like this for each file: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">i18n/en/app.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"i18n/en/app.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;appname&quot;</code><code class=\"plain\">&gt;Cat&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> </div> </div> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">i18n/es/app.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"i18n/es/app.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;appname&quot;</code><code class=\"plain\">&gt;Gato&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> </div> </div> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">i18n/ja/app.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"i18n/ja/app.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;appname&quot;</code><code class=\"plain\">&gt;&#x732B;&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>And that&apos;s it. The next time you build your application, these localized strings will be used for your application name. If everything was configured correctly, you&apos;ll see the app name has changed based on the selected locale. </p> </div> <div class=\"section section-5\" id=\"src-29004892_Internationalization-AndroidappnamelocalizationwithTitaniumSDK3.1.xandolder\"> <h5 class=\"heading\"><span>Android app name localization with Titanium SDK 3.1.x and older</span></h5> <p>If you are using Titanium SDK 3.1.x and older to build your Android apps, the name localization is a little more involved. First, we need to create language-specific resource folders explicitly for Android. To do so, we will create the <tt>platform/android/res/values-(language code)</tt> directory structure, like this: </p> <p> <img src=\"images/download/attachments/29004892/Screen_Shot_2012_02_17_at_6_52_44_PM.png\" alt=\"images/download/attachments/29004892/Screen_Shot_2012_02_17_at_6_52_44_PM.png\" class=\"confluence-embedded-image confluence-content-image-border\"> </img></p> <p>You&apos;ll notice in this case we are creating the Android native <tt class=\"\">strings.xml</tt> files, rather than the <tt class=\"\">app.xml</tt> files used by iOS. While the file names are different, the contents will be identical to those in the iOS files <a class=\"document-link\" href=\"#!/guide/Internationalization-section-src-29004892_Internationalization-appxml\">seen above</a>. </p> <p>Aside from the <tt class=\"\">strings.xml</tt> files, there&apos;s one more thing we need to add. To make your app use these localized strings, you need to modify the existing <tt class=\"\">AndroidManifest.xml</tt>. In order to do that, we need to add that custom manifest file, seen in the picture above at <tt class=\"\">platform/android/AndroidManifest.xml</tt>. The <tt class=\"\">AndroidManifest.xml</tt> file placed here should be a copy of the generated <tt class=\"\">AndroidManifest.xml</tt> file found in your project&apos;s <tt class=\"\">build/android</tt> directory. For more details on custom <tt class=\"\">AndroidManifest.xml</tt> files, check out <a class=\"document-link\" href=\"#!/guide/Maintaining_a_Custom_AndroidManifest.xml\">this wiki entry</a> on the topic. </p> <p>Now open up <tt class=\"\">platform/android/AndroidManifest.xml</tt> and change the <tt class=\"\">android:label</tt> attributes of the <tt class=\"\">&lt;application&gt;</tt> and <tt class=\"\">&lt;activity&gt;</tt> elements from the defined value of your app name to the value <tt>@string/app_name</tt>. Yeah, that was a lot of instructions all in one sentence, so here&apos;s an example to show you what I mean: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">AndroidManifest.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"AndroidManifest.xml\"> <div class=\"line\"><code class=\"plain\">&lt;!-- ... --&gt;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">&lt;!-- TI_MANIFEST --&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">application</code><code class=\"plain\"> </code><code class=\"color1\">android:icon</code><code class=\"plain\">=</code><code class=\"string\">&quot;@drawable/appicon&quot;</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"color1\">android:label</code><code class=\"plain\">=</code><code class=\"string\">&quot;@string/app_name&quot;</code><code class=\"plain\"> </code><code class=\"color1\">android:name</code><code class=\"plain\">=</code><code class=\"string\">&quot;TestlocApplication&quot;</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"color1\">android:debuggable</code><code class=\"plain\">=</code><code class=\"string\">&quot;false&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">\t&lt;!-- TI_APPLICATION --&gt;</code></div> <div class=\"line\"><code class=\"plain\">\t&lt;</code><code class=\"keyword\">activity</code><code class=\"plain\"> </code><code class=\"color1\">android:name</code><code class=\"plain\">=</code><code class=\"string\">&quot;.TestlocActivity&quot;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"color1\">android:label</code><code class=\"plain\">=</code><code class=\"string\">&quot;@string/app_name&quot;</code><code class=\"plain\"> </code><code class=\"color1\">android:theme</code><code class=\"plain\">=</code><code class=\"string\">&quot;@style/Theme.Titanium&quot;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"color1\">android:configChanges</code><code class=\"plain\">=</code><code class=\"string\">&quot;keyboardHidden|orientation&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">intent</code><code class=\"plain\">-filter&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">action</code><code class=\"plain\"> </code><code class=\"color1\">android:name</code><code class=\"plain\">=</code><code class=\"string\">&quot;android.intent.action.MAIN&quot;</code><code class=\"plain\"> /&gt;</code></div> <div class=\"line\"><code class=\"plain\"> category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">intent</code><code class=\"plain\">-filter&gt;</code></div> <div class=\"line\"><code class=\"plain\">\t&lt;/</code><code class=\"keyword\">activity</code><code class=\"plain\">&gt;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">&lt;!-- The rest of your AndroidManifest.xml --&gt;</code></div> </div> </div> <p>With these changes in place, you can now rebuild your app (probably best to give it a clean first) and you&apos;ll have a successfully localized application name. </p> </div> <div class=\"section section-5\" id=\"src-29004892_Internationalization-Reference\"> <h5 class=\"heading\"><span>Reference</span></h5> <p>This is how your home screens might look on Android and iOS when Japanese is the selected language. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead class=\"\"/><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p> <img src=\"images/download/attachments/29004892/Screen_Shot_2012_02_17_at_8_52_33_PM.png\" alt=\"images/download/attachments/29004892/Screen_Shot_2012_02_17_at_8_52_33_PM.png\" class=\"confluence-embedded-image confluence-content-image-border\"> </img></p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p> <img src=\"images/download/attachments/29004892/image.png\" alt=\"images/download/attachments/29004892/image.png\" class=\"confluence-embedded-image confluence-content-image-border\"> </img></p> </td> </tr> </tbody> </table> </div> <p>And just in case my description was clear as mud, check out a Titanium project with these localizations set up first hand. Just go to the <a class=\"external-link external-link\" href=\"https://github.com/appcelerator-developer-relations/AppNameLocalization\" target=\"_blank\">AppNameLocalization project repository</a> on Github. It contains the <i>very</i> basic project discussed here. With all this, you should be well-equipped to distribute your apps in as many languages as you wish to support. </p> </div> <div class=\"section section-5\" id=\"src-29004892_Internationalization-Links\"> <h5 class=\"heading\"><span>Links</span></h5> <ul class=\"\"><li> <p><a class=\"external-link external-link\" href=\"https://github.com/appcelerator-developer-relations/AppNameLocalization\" target=\"_blank\">AppNameLocalization project</a> on Github </p> </li><li class=\"\"> <p>Appcelerator Wiki: <a class=\"document-link\" href=\"#!/guide/Maintaining_a_Custom_AndroidManifest.xml\">Maintaining a Custom AndroidManifest.xml</a> </p> </li></ul> </div> </div> <div class=\"section section-4\" id=\"src-29004892_Internationalization-Internationalizingimageandfileresources\"> <h4 class=\"heading\"><span>Internationalizing image and file resources</span></h4> <p>Titanium does not provide built-in functions for internationalizing image and file resources. But you can easily accomplish this yourself. There are a couple of techniques you can employ: </p> <ul class=\"\"><li class=\"\"> <p>Put the path and file name of each resource in the <tt class=\"\">strings.xml</tt> file, then use that string in the <tt>image</tt>property, like this: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> img = Ti.UI.createImageView({</code></div> <div class=\"line\"><code class=\"plain\"> image: L(</code><code class=\"string\">&apos;my_image&apos;</code><code class=\"plain\">)</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </li><li class=\"\"> <p>Put your images into a set of folders that match the 2-letter ISO codes, and include that directory in the path with <tt>Ti.Locale.currentCountry</tt>, like this: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> img = Ti.UI.createImageView({</code></div> <div class=\"line\"><code class=\"plain\"> image: </code><code class=\"string\">&apos;images/&apos;</code><code class=\"plain\">+Ti.Locale.currentCountry+</code><code class=\"string\">&apos;/my_image.png&apos;</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </li></ul> <p> </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>This technique won&apos;t work for the splash screen graphics. You should ideally avoid text that would need translation in your splash screen. </p> <p>See <a class=\"document-link\" href=\"#!/guide/Icons_and_Splash_Screens-section-src-29004897_IconsandSplashScreens-Localizedsplashscreens\">Localized splash screens</a><a class=\"document-link\" href=\"#!/guide/Icons_and_Splash_Screens-section-src-29004897_IconsandSplashScreens-LocalizedSplashScreens\"> </a> for more information. </p> </div> </div> </div> <div class=\"section section-3\" id=\"src-29004892_Internationalization-Dateandtimeformatting\"> <h3 class=\"heading\"><span>Date and time formatting</span></h3> <p>Titanium provides <a class=\"external-link external-link\" href=\"#!/api/Titanium\">string formatting functions</a> that you can use to create formatted dates and times. These include <tt class=\"\">String.formatDate()</tt> and <tt>String.formatTime()</tt>. You can use these methods to format a JavaScript Date object to locale-specific strings. </p> <p>At the time of this writing, natively, Android does not format dates in accordance with the official <a class=\"external-link external-link\" href=\"http://developer.android.com/reference/java/text/DateFormat.html\" target=\"_blank\">DateFormat</a> documentation. Consequently, this will affect the corresponding <tt class=\"\">short</tt>, <tt class=\"\">medium</tt> and <tt>long</tt> formats of Titanium String Formatting. Furthermore, when the device settings are set to certain languages, the translations can be wrong or fields in the incorrect order. For example, the following code is run on a device to demonstrate the issue: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app.js\"> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;Ti.Locale.currentLanguage = &quot;</code><code class=\"plain\"> + Ti.Locale.currentLanguage);</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;Ti.Locale.currentLocale = &quot;</code><code class=\"plain\"> + Ti.Locale.currentLocale);</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;thisDate = &quot;</code><code class=\"plain\"> + thisDate);</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;thisDate short = &quot;</code><code class=\"plain\"> + String.formatDate(thisDate,</code><code class=\"string\">&quot;short&quot;</code><code class=\"plain\">));</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;thisDate medium = &quot;</code><code class=\"plain\"> + String.formatDate(thisDate,</code><code class=\"string\">&quot;medium&quot;</code><code class=\"plain\">));</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;thisDate long = &quot;</code><code class=\"plain\"> + String.formatDate(thisDate,</code><code class=\"string\">&quot;long&quot;</code><code class=\"plain\">));</code></div> </div> </div> <p>This results in the following when the device is set to display in Polish: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">Log output (info)</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"Log output (info)\"> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [4,603] Ti.Locale.currentLanguage = pl</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [3,606] Ti.Locale.currentLocale = pl-PL</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [7,613] thisDate = Mon May 23 2011 13:38:33 GMT-0000 (GMT+00:00)</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [6,619] thisDate short = 23-05-2011</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [6,625] thisDate medium = 23-05-2011</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [4,629] thisDate long = 23 maja 2011</code></div> </div> </div> <p>Here, <tt class=\"\">maja</tt> is output for the month of May, whereas the Polish for May is actually <i>Maj</i>. </p> <p>Similarly, when the device is set to <i>English (United Kingdom)</i>, the month fields are incorrectly displayed before the dates: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">Log output (info)</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"Log output (info)\"> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [2,1056] Ti.Locale.currentLanguage = en</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [1,1057] Ti.Locale.currentLocale = en-GB</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [9,1066] thisDate = Mon May 23 2011 14:09:28 GMT-0000 (GMT+00:00)</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [258,1324] thisDate short = 5/23/11</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [4,1328] thisDate medium = May 23, 2011</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [13,1341] thisDate long = May 23, 2011</code></div> </div> </div> <p>This issue may well be fixed by the time you read this but, nevertheless, it gives us an opportunity to employ some of Titanium&apos;s tools to provide a workaround that gives you full control over the date format and translations. </p> <p>We can use JavaScipt&apos;s <a class=\"external-link external-link\" href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\">Date</a> object to return the date, which provides methods such as <tt class=\"\">getDate()</tt> and <tt class=\"\">getFullYear()</tt> to individually retrieve some of the information that we need. Although it does not specifically provide a method for returning the name of the month, we can derive it, in English, from the space-separated string output from <tt class=\"\">Date.</tt> To do so, we&apos;ll use the JavaScipt <a class=\"external-link external-link\" href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split\" target=\"_blank\">String.split()</a> function. This will give us a key to lookup in the <tt>string.xml</tt> files. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app.js\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> thisDate = </code><code class=\"keyword\">new</code><code class=\"plain\"> Date(); </code><code class=\"comments\">// will always return date in English</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;Ti.Locale.currentLanguage = &quot;</code><code class=\"plain\"> + Ti.Locale.currentLanguage);</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;Ti.Locale.currentLocale = &quot;</code><code class=\"plain\"> + Ti.Locale.currentLocale);</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;thisDate = &quot;</code><code class=\"plain\"> + thisDate);</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> thisMonth = thisDate.toString().split(</code><code class=\"string\">&apos; &apos;</code><code class=\"plain\">,2)[1];</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;The month contained in thisDate is: &quot;</code><code class=\"plain\"> + thisMonth);</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;Note: as thisMonth is always in the default language, English, it can be used to look up the localized string.&quot;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(</code><code class=\"string\">&quot;Hence, the localized string, headingDate, in the language of &quot;</code><code class=\"plain\"> + Ti.Locale.currentLanguage + </code><code class=\"string\">&quot; is:&quot;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">Ti.API.info(String.format(L(</code><code class=\"string\">&apos;headingDate&apos;</code><code class=\"plain\">),thisDate.getDate(),L(thisMonth),thisDate.getFullYear()));</code></div> </div> </div> <p>Using string substitution placeholders, dynamic values can be passed to the <tt class=\"\">headingDate</tt> string. This enables each locale to display the fields in a different order. In the following <tt>string.xml</tt> files, Polish and English translations will return the date in the default order, whereas Spanish will result in a modified order. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">i18n/pl/strings.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"i18n/pl/strings.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;headingDate&quot;</code><code class=\"plain\">&gt;%d %s %d&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;January&quot;</code><code class=\"plain\">&gt;Stycze?&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;February&quot;</code><code class=\"plain\">&gt;Luty&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;March&quot;</code><code class=\"plain\">&gt;Marzec&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;April&quot;</code><code class=\"plain\">&gt;Kwiecie?&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;May&quot;</code><code class=\"plain\">&gt;Maj&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;June&quot;</code><code class=\"plain\">&gt;Czerwiec&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;July&quot;</code><code class=\"plain\">&gt;Lipiec&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;August&quot;</code><code class=\"plain\">&gt;Sierpie?&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;September&quot;</code><code class=\"plain\">&gt;Wrzesie?&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;October&quot;</code><code class=\"plain\">&gt;Pa?dziernik&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;November&quot;</code><code class=\"plain\">&gt;Listopad&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;December&quot;</code><code class=\"plain\">&gt;Grudzie?&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> </div> </div> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">i18n/en/strings.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"i18n/en/strings.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;headingDate&quot;</code><code class=\"plain\">&gt;%d %s %d&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt; // Note: reordered keys not working on Android. Issue under investigation</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;January&quot;</code><code class=\"plain\">&gt;January&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;February&quot;</code><code class=\"plain\">&gt;February&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;March&quot;</code><code class=\"plain\">&gt;March&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;April&quot;</code><code class=\"plain\">&gt;April&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;May&quot;</code><code class=\"plain\">&gt;May&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;June&quot;</code><code class=\"plain\">&gt;June&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;July&quot;</code><code class=\"plain\">&gt;July&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;August&quot;</code><code class=\"plain\">&gt;August&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;September&quot;</code><code class=\"plain\">&gt;September&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;October&quot;</code><code class=\"plain\">&gt;October&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;November&quot;</code><code class=\"plain\">&gt;November&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;December&quot;</code><code class=\"plain\">&gt;December&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> </div> </div> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">i18n/es/strings.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"i18n/es/strings.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;headingDate&quot;</code><code class=\"plain\">&gt;%2$s %1$d, %3$d&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;January&quot;</code><code class=\"plain\">&gt;enero&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;February&quot;</code><code class=\"plain\">&gt;febrero&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;March&quot;</code><code class=\"plain\">&gt;marzo&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;April&quot;</code><code class=\"plain\">&gt;abril&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;May&quot;</code><code class=\"plain\">&gt;mayo&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;June&quot;</code><code class=\"plain\">&gt;junio&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;July&quot;</code><code class=\"plain\">&gt;julio&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;August&quot;</code><code class=\"plain\">&gt;agosto&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;September&quot;</code><code class=\"plain\">&gt;septiembre&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;October&quot;</code><code class=\"plain\">&gt;octubre&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;November&quot;</code><code class=\"plain\">&gt;noviembre&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">string</code><code class=\"plain\"> </code><code class=\"color1\">name</code><code class=\"plain\">=</code><code class=\"string\">&quot;December&quot;</code><code class=\"plain\">&gt;diciembre&lt;/</code><code class=\"keyword\">string</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">resources</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>Using this code, the date in Polish is translated correctly: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">Log output (info)</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"Log output (info)\"> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [1,1366] Ti.Locale.currentLanguage = pl</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [1,1367] Ti.Locale.currentLocale = pl-PL</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [33,1400] thisDate = Mon May 23 2011 15:05:21 GMT-0000 (GMT+00:00)</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [38,1479] The month contained in thisDate is: May</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [1,1480] Note: as thisMonth is always in the default language, English, it can be used to look up the localized string.</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [12,1492] Hence, the localized string, headingDate, in the language of pl is:</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">3</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [18,1510] 23 Maj 2011</code></div> </div> </div> <p>In addition, the recognized date format for the UK is produced: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">Log output (info)</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"Log output (info)\"> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [2,577] Ti.Locale.currentLanguage = en</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [2,579] Ti.Locale.currentLocale = en-GB</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [2094,2673] thisDate = Mon May 23 2011 14:56:42 GMT-0000 (GMT+00:00)</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [20,2707] The month contained in thisDate is: May</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [1,2708] Note: as thisMonth is always in the default language, English, it can be used to look up the localized string.</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [1,2709] Hence, the localized string, headingDate, in the language of en is:</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">1</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [13,2722] 23 May 2011</code></div> </div> </div> <p>Lastly, the date in Spanish has been reordered: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">Log output (info)</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"Log output (info)\"> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">5</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [2,1066] Ti.Locale.currentLanguage = es</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">5</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [6,1072] Ti.Locale.currentLocale = es-US</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">5</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [169,1241] thisDate = Mon May 23 2011 16:23:17 GMT-0000 (GMT+00:00)</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">5</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [32,1440] The month contained in thisDate is: May</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">5</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [2,1442] Note: as thisMonth is always in the default language, English, it can be used to look up the localized string.</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">5</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [14,1456] Hence, the localized string, headingDate, in the language of es is:</code></div> <div class=\"line\"><code class=\"plain\">TiAPI I (kroll$</code><code class=\"value\">5</code><code class=\"plain\">: app:</code><code class=\"comments\">//app.js) [14,1470] mayo 23, 2011</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-29004892_Internationalization-Otherformattingandlocalefunctions\"> <h3 class=\"heading\"><span>Other formatting and locale functions</span></h3> <p>Titanium also provides string formatting functions that you can use to create formatted currency and decimal numbers. These functions are <tt class=\"\">String.formatCurrency()</tt> and <tt class=\"\">String.formatDecimal()</tt>, respectively. The <a class=\"external-link external-link\" href=\"#!/api/Titanium.Locale\">Ti.Locale module</a> provides the <tt>Ti.Locale.formatTelephoneNumber()</tt> method for getting a locale-formatted phone number. That module also includes functions for retrieving the correct currency symbol and currency code for the user&apos;s locale. </p> </div> <div class=\"section section-3\" id=\"src-29004892_Internationalization-Testinglanguages\"> <h3 class=\"heading\"><span>Testing languages</span></h3> <p>When building internationalized apps, you&apos;ll need to test each of the supported languages. You can do so either on-device or in the simulator/emulator. In each case, you configure the device&apos;s language settings to change locales. </p> <p>To set the language on iOS:, </p> <ol class=\"\"><li class=\"\"> <p>Open <strong>Settings</strong>. </p> </li><li class=\"\"> <p>Tap <strong class=\"\">General</strong>, then<strong> Language &amp; Region</strong>. </p> </li><li class=\"\"> <p>Under <strong class=\"\">iPhone Language</strong>, select the language to use, then tap <strong>Done</strong>. </p> </li><li class=\"\"> <p>iOS will ask you to confirm your changes. Tap <strong>Change to...</strong>. </p> </li></ol> <p>Optionally, in Settings, tap General, Language &amp; Region, Region Format to specify your locale format for dates and times. </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>Localization is broken on the iOS 8.1 simulator. </p> </div> <p>To set the language on Android: </p> <ol class=\"\"><li class=\"\"> <p>Open <strong>Settings</strong>. </p> </li><li class=\"\"> <p>Tap <strong>Language &amp; input</strong>. </p> </li><li class=\"\"> <p>Tap <strong>Language</strong> and select the language to use. </p> </li></ol> </div> </div> <div class=\"section section-2\" id=\"src-29004892_Internationalization-Hands-onpractice\"> <h2 class=\"heading\"><span>Hands-on practice</span></h2> <div class=\"section section-3\" id=\"src-29004892_Internationalization-Goal\"> <h3 class=\"heading\"><span>Goal</span></h3> <p>In this activity, you will create an internationalized app that outputs language-specific strings and test that in the simulator/emulator. </p> </div> <div class=\"section section-3\" id=\"src-29004892_Internationalization-Steps\"> <h3 class=\"heading\"><span>Steps</span></h3> <ol class=\"\"><li> <p>Create a new Titanium Mobile project named &quot;Language Test&quot; with an app ID of your choice. </p> </li><li class=\"\"> <p>Using your computer&apos;s file management tools, create an <tt class=\"\">i18n</tt> directory at the <tt class=\"\">/app</tt> directory of your project. In that directory, create two directories: <tt class=\"\">en</tt> and <tt>es</tt>. </p> </li><li class=\"\"> <p>Using Studio, within the <tt class=\"\">en</tt> directory, create a <tt>strings.xml</tt>file following the format shown above. Add three key/value pairs: </p> <ul class=\"\"><li> <p>language = Language </p> </li><li> <p>test = Test </p> </li><li> <p>tab = Tab </p> </li></ul></li><li class=\"\"> <p>In the <tt class=\"\">es</tt> directory, create a matching copy of <tt>strings.xml </tt>except that the values should be as follows: </p> <ul class=\"\"><li> <p>language = Lengua </p> </li><li> <p>test = Prueba </p> </li><li> <p>tab = Leng&#xFC;eta </p> </li></ul></li><li class=\"\"> <p>In the <tt class=\"\">es</tt> directory, create an <tt>app.xml</tt> file following the format shown above. Add the necessary key and value to specify &quot;Lengua Prueba&quot; as the translated version of the app&apos;s name. (This won&apos;t have any effect if you&apos;re building for Android.) </p> </li><li class=\"\"> <p>In app.js, on tab 1, add the necessary code to output the internationalized &quot;Language Test&quot; string as the text of <tt>label1</tt>. </p> </li><li class=\"\"> <p>On tab 2, change the text of <tt class=\"\">label2</tt> to output today&apos;s date using the <tt>String.formatDate()</tt> method. </p> </li><li> <p>For both tab 1 and tab 2, update the text to use the internationalized &quot;tab&quot; key plus the tab&apos;s number. </p> </li><li> <p>Build the app for the simulator/emulator. The label and tab text should output in English (unless your emulator is already set to output text in Spanish). Close the app. </p> </li><li> <p>Change the simulator/emulator&apos;s settings to display text in Spanish. Open the app. Label and tab text should now be in Spanish. On iOS, the app&apos;s icon should be labeled in Spanish as well. </p> </li></ol> </div> </div> <div class=\"section section-2\" id=\"src-29004892_Internationalization-Summary\"> <h2 class=\"heading\"><span>Summary</span></h2> <p>In this chapter, you learned how to internationalize your app, including using language strings, internationalizing the app name, and formatting strings, dates, and currency values. </p> </div> <div class=\"section section-2\" id=\"src-29004892_Internationalization-Referencesandfurtherreading\"> <h2 class=\"heading\"><span>References and further reading</span></h2> <ul class=\"\"><li> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.Locale\">Ti.Locale module</a> </p> </li></ul> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=29004892\"><span>Edit</span></a> </div> </body> </html> ","title":"Internationalization"});