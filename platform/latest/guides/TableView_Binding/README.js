Ext.data.JsonP['TableView_Binding']({"guide":" <!doctype html> <html> <head> <title>TableView Binding</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-41845715\" class=\"content\"> <h1>TableView Binding</h1> <p>Demonstrates binding a data collection to a TableView using global and local collection references. </p> <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro has-no-icon\"> <div class=\"title\">App Folder Location</div> <p>alloy/test/apps/<strong>models/binding_tableview</strong> </p> </div> <p> <span style=\"color: #222222;\"> The <tt>&lt;Collection/&gt;</tt> element can also be used to create a global, singleton instance of the collection data available to all controllers, or a an instance available to a single controller. By default, a &lt;Collection/&gt; element creates a global object. </span> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">Create a global, singleton Collection object</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"Create a global, singleton Collection object\"> <div class=\"line\"><code class=\"plain\">&lt;Collection src=</code><code class=\"string\">&quot;myModel&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;TableView id=</code><code class=\"string\">&quot;table&quot;</code><code class=\"plain\"> dataCollection=</code><code class=\"string\">&quot;myModel&quot;</code><code class=\"plain\">&gt;</code></div> </div> </div> <p> <span style=\"color: #222222;\"> The singleton Collection object is attached to the global <tt>Alloy.Collections</tt> object, and so can be referenced as follows: </span> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">var myModels = Alloy.Collections.myModel;</code></div> </div> </div> <p> <span style=\"color: #222222;\"> To create a locally-scoped instance, set </span> <span style=\"color: #222222;\"> the </span> <strong>instance</strong> <span style=\"color: #222222;\"> attribute on the &lt;Collection/&gt; element to <strong>true</strong>. You also assign the instance an ID so you can reference it from the view-controller. </span> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">&lt;Collection src=</code><code class=\"string\">&quot;myModel&quot;</code><code class=\"plain\"> id=</code><code class=\"string\">&quot;myModelId&quot;</code><code class=\"plain\"> instance=</code><code class=\"string\">&quot;true&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;TableView id=</code><code class=\"string\">&quot;table&quot;</code><code class=\"plain\"> dataCollection=</code><code class=\"string\">&quot;$.myModelId&quot;</code><code class=\"plain\">&gt;</code></div> </div> </div> <p> <span style=\"color: #222222;\"> You reference the local Collection instance as a property of the <tt>$</tt> object in the view-controller. </span> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">var myModels = $.myModelId;</code></div> </div> </div> <p> <span style=\"color: #222222;\"> The sample application contains four tabs that each contain a </span> <tt>&lt;TableView/&gt;</tt> <span style=\"color: #222222;\"> element. The first two reference the same global Collection instance, while the second two each reference their own, locally-scoped Collection objects. Consequently, any items added to the first tab appear on the second, and vice versa. In contrast, any items added to either the third or fourth tabs only appear on those tabs. </span> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/views/index.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/views/index.xml\"> <div class=\"line\"><code class=\"plain\">&lt;Alloy&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;TabGroup&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Require src=</code><code class=\"string\">&quot;tab_1&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Require src=</code><code class=\"string\">&quot;tab_2&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Require src=</code><code class=\"string\">&quot;tab_3&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Require src=</code><code class=\"string\">&quot;tab_4&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/TabGroup&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/Alloy&gt;</code></div> </div> </div> <p>The first tab, titled &quot;global/&lt;Require/&gt;&quot;, declares a &lt;Collection/&gt; element, which creates a global singleton instance of the &quot;myModel&quot; collection, or returns an existing singleton if it&apos;s already been created. The &lt;TableView/&gt; element&apos;s <tt>dataCollection</tt> references the same global singleton object. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/views/tab_1.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/views/tab_1.xml\"> <div class=\"line\"><code class=\"plain\">&lt;Alloy&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Collection src=</code><code class=\"string\">&quot;myModel&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Tab title=</code><code class=\"string\">&quot;global/&lt;Require&gt;&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Window id=</code><code class=\"string\">&quot;window&quot;</code><code class=\"plain\"> title=</code><code class=\"string\">&quot;global/&lt;Require&gt;&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;!-- use the global reference to the dataCollection --&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;TableView id=</code><code class=\"string\">&quot;table&quot;</code><code class=\"plain\"> dataCollection=</code><code class=\"string\">&quot;myModel&quot;</code><code class=\"plain\"> onClick=</code><code class=\"string\">&quot;removeItem&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;!-- use a &lt;Require&gt; </code><code class=\"keyword\">for</code><code class=\"plain\"> our repeated TableViewRow --&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Require src=</code><code class=\"string\">&quot;row&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/TableView&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;!-- let&apos;s use a simple button or android --&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Button </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;addButton&quot;</code><code class=\"plain\"> onClick=</code><code class=\"string\">&quot;addItem&quot;</code><code class=\"plain\"> platform=</code><code class=\"string\">&quot;android&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/Window&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/Tab&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/Alloy&gt;</code></div> </div> </div> <p>The view-controller for the tab_1.xml view reference the same global <tt class=\"\">myModel</tt> singleton on the <tt>Alloy.Collections</tt> object, and adds to it a new item when the user clicks the Add button. When changes occur in the global collection reference, they will be reflected in tab_2.xml, which also references the same global collection. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/tab_1.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/tab_1.js\"> <div class=\"line\"><code class=\"plain\">var myModels = Alloy.Collections.myModel;</code></div> <div class=\"line\"><code class=\"plain\">var common = require(</code><code class=\"string\">&apos;common&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">function addItem(e) {</code></div> <div class=\"line\"><code class=\"plain\"> common.addItem(myModels);</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">function removeItem(e) {</code></div> <div class=\"line\"><code class=\"plain\"> common.removeItem(myModels, e.index);</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (OS_IOS || OS_MOBILEWEB) {</code></div> <div class=\"line\"><code class=\"plain\"> common.prepNavBar($.window, addItem);</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">myModels.comparator = common.comparator;</code></div> <div class=\"line\"><code class=\"plain\">myModels.fetch();</code></div> </div> </div> <p>The XML and JavaScript for tab 2 is functionally identical to that of tab 1, except that tab 2 uses a &lt;Require/&gt; element to include each table row, rather than declaring it inline. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">&lt;Alloy&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Collection src=</code><code class=\"string\">&quot;myModel&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Tab title=</code><code class=\"string\">&quot;global/inline&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Window id=</code><code class=\"string\">&quot;window&quot;</code><code class=\"plain\"> title=</code><code class=\"string\">&quot;global/inline&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;!-- use the global reference to the dataCollection --&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;TableView id=</code><code class=\"string\">&quot;table&quot;</code><code class=\"plain\"> dataCollection=</code><code class=\"string\">&quot;myModel&quot;</code><code class=\"plain\"> onClick=</code><code class=\"string\">&quot;removeItem&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;!-- create the repeated TableViewRow inline --&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;TableViewRow </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;row&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Label </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;rowTitle&quot;</code><code class=\"plain\"> text=</code><code class=\"string\">&quot;{title}&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;ImageView </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;rowImage&quot;</code><code class=\"plain\"> image=</code><code class=\"string\">&quot;{image}&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/TableViewRow&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/TableView&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;!-- let&apos;s use a simple button or android --&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;Button </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;addButton&quot;</code><code class=\"plain\"> onClick=</code><code class=\"string\">&quot;addItem&quot;</code><code class=\"plain\"> platform=</code><code class=\"string\">&quot;android&quot;</code><code class=\"plain\">/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/Window&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/Tab&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/Alloy&gt;</code></div> </div> </div> <p>The tab_3.xml view </p> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=41845715\"><span>Edit</span></a> </div> </body> </html> ","title":"TableView Binding"});