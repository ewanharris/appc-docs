Ext.data.JsonP['NodeJS_Configuration']({"guide":" <!doctype html> <html> <head> <title>NodeJS Configuration</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-49157246\" class=\"content\"> <h1>NodeJS Configuration</h1> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-Dependencies\">Dependencies</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-Engines\">Engines</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-Healthcheck\">Health check</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-Main\">Main</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-Name\">Name</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-npmAuthentication\">npmAuthentication</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-npmRegistry\">npmRegistry</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-Scripts\">Scripts</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-Preinstallandpost-install\">Preinstall and post-install</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-Start\">Start</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration-section-src-49157246_NodeJSConfiguration-Version\">Version</a> </p> </li></ul> <p>An API Builder application contains a file called <tt class=\"\">package.json</tt> located in the root directory of the project. API Runtime Services uses the <tt>package.json</tt> file to configure settings and install dependencies for the application. </p> <p>Important fields for API Builder applications are defined below. </p> <div class=\"section section-2\" id=\"src-49157246_NodeJSConfiguration-Dependencies\"> <h2 class=\"heading\"><span>Dependencies</span></h2> <p>The application can import any third-party modules that are supported by standard Node.js applications. Before publishing the app to the cloud, make sure all dependencies are listed in the <tt class=\"\">dependencies</tt> field in the application&apos;s <tt>package.json</tt> file. For example, to add support for MongoDB 1.2.0 or greater: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;dependencies&quot;</code><code class=\"plain\">:{ </code><code class=\"string\">&quot;mongodb&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;&gt;1.2.0&quot;</code><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-49157246_NodeJSConfiguration-Engines\"> <h2 class=\"heading\"><span>Engines</span></h2> <p>You can specify which version of Node.js to run your application on. Use the <tt class=\"\">engines</tt> field in the <tt class=\"\">package.json</tt> file to specify engine versions. To specify the Node.js version, set the <tt class=\"\">node</tt> key in the <tt>engines</tt> dictionary to the specific version of Node.js to use. For example, to specify to use version 0.10.22: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;engines&quot;</code><code class=\"plain\"> : { </code><code class=\"string\">&quot;node&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;0.10.22&quot;</code><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>You may specify any version of Node.js. Node.js 0.8.26, 0.10.22 and 0.12.4 are built in, but other versions will be downloaded from <a class=\"external-link external-link\" href=\"https://nodejs.org/\" target=\"_blank\">https://nodejs.org/</a> when the application is built prior to running <tt>npm install</tt>. If you do not specify a Node.js version, the application will use 0.12.4 by default. </p> <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro\"> <div class=\"title\">Deprecated Behavior</div> <p>Prior to API Runtime Services 1.2.0, if this field is undefined when you publish your application, the application will use 0.10.22 by default. </p> <p>If this field is undefined when you republish your application and the latest supported Node.js version changed on the API Runtime Services servers, you will receive an error message when trying to publish your application. You must set the Node.js version to republish your application. </p> </div> </div> <div class=\"section section-2\" id=\"src-49157246_NodeJSConfiguration-Healthcheck\"> <h2 class=\"heading\"><span>Health check</span></h2> <p>Starting with API Runtime Services 1.2.0, you may define a health-check endpoint called <tt class=\"\">arrowPing.json</tt> that returns a 200 HTTP code. To let API Runtime Services know you defined the health-check endpoint, set the <tt class=\"\">healthCheck</tt> field to <tt class=\"\">true</tt>. For an example, see <a class=\"document-link\" href=\"#!/guide/API_Builder_Project\">API Builder Project</a>. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> healthCheck: </code><code class=\"keyword\">true</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>By default, the health check starts after a two minute wait period. If your application normally takes longer than two minutes to start up, you should set the <tt>start_period</tt> environment variable to an appropriate startup time (in minutes) to avoid having the docker swarm restart your application before it is online. </p> </div> <div class=\"section section-2\" id=\"src-49157246_NodeJSConfiguration-Main\"> <h2 class=\"heading\"><span>Main</span></h2> <p>API Runtime Services uses the <tt class=\"\">main</tt> field in the <tt>package.json</tt> file to determine the application&apos;s main entry point. Set this field to a JavaScript file. API Runtime Services loads and runs this file first. </p> <p>By default, the <tt class=\"\">main</tt> field is set to the <tt>app.js</tt> file located in the project&apos;s root folder: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;main&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;app.js&quot;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>You can load a module by leaving this field blank and specifying the <tt>scripts</tt> field. </p> </div> <div class=\"section section-2\" id=\"src-49157246_NodeJSConfiguration-Name\"> <h2 class=\"heading\"><span>Name</span></h2> <p>Use the <tt>name</tt> field to specify the name of the application. An app&apos;s name must be unique across all apps of a user or organization. It will be used to ID the app when publishing/unpublishing to the cloud or setting up the app through CLI commands. </p> <p>By default, this field is set to the name of the project when it was created. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;name&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;MyArrowApp&quot;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-49157246_NodeJSConfiguration-npmAuthentication\"> <h2 class=\"heading\"><span>npmAuthentication</span></h2> <p>To enable authenticated package installs from a private npm registry specified by <a class=\"document-link\" href=\"#!/guide/NodeJS_Configuration\">npmRegistry</a>, add the <tt class=\"\">npmAuthentication</tt> field in your application&apos;s package.json file and set it to <tt>true</tt>: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;npmAuthentication&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p> <span style=\"color: #222222;\"> When enabled, you must provide login credentials for the npm registry when calling </span> <tt>acs publish</tt> <span style=\"color: #222222;\"> . You can provide the credentials on the command line when calling the </span> <tt>publish</tt> <span style=\"color: #222222;\"> command: </span> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ appc cloud publish myuser mypwd</code></div> </div> </div> <p> <span style=\"color: #222222;\"> </span> </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>If <tt class=\"\">acs cli</tt> complains that npm is not found even though npm is in the path, ensure that the directory containing npm is in the <tt class=\"\">NODE_PATH</tt> (e.g. <tt>NODE_PATH=/usr/lib/node_modules</tt>). </p> </div> <p> </p> <p> <span style=\"color: #222222;\"> If no credentials are provided on the command line, t </span> he Appcelerator CLI will attempt to read the credentials from <tt class=\"\">~/.npmrc</tt>. If no <tt>~/.npmrc</tt> file is found, or it does not contain any credentials, you are prompted for the npm username and password: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ appc cloud publish</code></div> <div class=\"line\"><code class=\"plain\">npm username: admin</code></div> <div class=\"line\"><code class=\"plain\">npm password: ***********</code></div> <div class=\"line\"><code class=\"plain\">Preparing application </code><code class=\"keyword\">for</code><code class=\"plain\"> publish... done</code></div> </div> </div> <p><strong class=\"\">Note</strong>: If you use a private npm registry hosted by Nodejitsu, you must first synchronize your public npm user account with the private npm, otherwise you will get an &quot;unauthorized&quot; error. To do this, enter the following <tt>npm</tt> commands: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ npm config set strict-ssl </code><code class=\"keyword\">true</code></div> <div class=\"line\"><code class=\"plain\">$ npm config set ca </code><code class=\"string\">&quot;&quot;</code></div> <div class=\"line\"><code class=\"plain\">$ npm config set registry https:</code><code class=\"comments\">//&lt;your-subdomain&gt;.registry.nodejitsu.com</code></div> <div class=\"line\"><code class=\"plain\">$ npm login </code></div> </div> </div> <p>See <a class=\"external-link external-link\" href=\"https://www.nodejitsu.com/documentation/npm/cli/\" target=\"_blank\">https://www.nodejitsu.com/documentation/npm/cli/</a> for more information. </p> </div> <div class=\"section section-2\" id=\"src-49157246_NodeJSConfiguration-npmRegistry\"> <h2 class=\"heading\"><span>npmRegistry</span></h2> <p>If you want to use a different npm registry besides the official public npm registry to install dependencies, add the <tt class=\"\">npmRegistry</tt> field to the <tt>package.json</tt> file and set the value to the registry URL you want to use. For example, the entry below uses a European npm mirror: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;npmRegistry&quot;</code><code class=\"plain\"> : </code><code class=\"string\">&quot;http://registry.npmjs.eu/&quot;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>To require authentication for npm installs, add the <tt class=\"\">npmAuthentication</tt> field to your <tt>package.json</tt> file. </p> </div> <div class=\"section section-2\" id=\"src-49157246_NodeJSConfiguration-Scripts\"> <h2 class=\"heading\"><span>Scripts</span></h2> <div class=\"section section-3\" id=\"src-49157246_NodeJSConfiguration-Preinstallandpost-install\"> <h3 class=\"heading\"><span>Preinstall and post-install</span></h3> <p>Specifies a path to a script to execute before or after the application is built. You can use the script to install custom binaries in the project folder. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> scripts: {</code></div> <div class=\"line\"><code class=\"plain\"> preinstall: </code><code class=\"string\">&apos;scripts/pre.sh&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> postinstall: </code><code class=\"string\">&apos;scripts/post.sh&apos;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>Prior to API Runtime Services 1.3.0, you could also use the script to install custom binaries outside the project directory. </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>Do not name the script <tt>install.sh</tt>, located in the root folder of the project. The name is reserved to specify a script to install binaries to the container. </p> </div> </div> <div class=\"section section-3\" id=\"src-49157246_NodeJSConfiguration-Start\"> <h3 class=\"heading\"><span>Start</span></h3> <p>If your application&apos;s <tt class=\"\">package.json</tt> file does not specify a <tt class=\"\">main</tt> field, Appcelerator Cloud will now look at the <tt class=\"\">scripts.start</tt> field in the <tt class=\"\">package.json</tt> file to determine the main module to launch. Appcelerator Cloud will execute the start script using <tt>npm start</tt>. </p> <p>For example, to launch the foo module: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;scripts&quot;</code><code class=\"plain\">: { </code><code class=\"string\">&quot;start&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;foo&quot;</code><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> </div> <div class=\"section section-2\" id=\"src-49157246_NodeJSConfiguration-Version\"> <h2 class=\"heading\"><span>Version</span></h2> <p>The version of the application. Used to version the application. </p> <p>By default, this field is set to <tt>1.0.0</tt>: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;version&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;1.0.0&quot;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=49157246\"><span>Edit</span></a> </div> </body> </html> ","title":"NodeJS Configuration"});