Ext.data.JsonP['Arrow_Connector_Project']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Arrow Connector Project</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\"/>\n\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\"/>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"43300774\" class=\"content\">\n            <h1>Arrow Connector Project</h1>\n    <p>\n    </p>\n    <div class=\"confbox admonition admonition-warning aui-message problem shadowed information-macro\">\n            <div class=\"title\">Team Subscription Required!</div>\n        \n    <p>\nThis Appcelerator Platform feature requires a Team Subscription.    </p>\n    </div>\n    \n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-Introduction\">Introduction</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-ProjectStructure\">Project Structure</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-CLITasks\">CLI Tasks</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-CreateaConnector\">Create a Connector</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-TesttheConnector\">Test the Connector</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-PublishtheConnector\">Publish the Connector</a>    </p>\n</li></ul></li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-ConnectorLogic\">Connector Logic</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-Capabilities\">Capabilities</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-Initialization\">Initialization</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-ConnectionLifecycle\">Connection Lifecycle</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-CRUDMethods\">CRUD Methods</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-RequestLifecycle\">Request Lifecycle</a>    </p>\n</li></ul></li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-ConnectorConfigurationFile\">Connector Configuration File</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-ModelsandAPIEndpoints\">Models and API Endpoints</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-DeclareDependencies\">Declare Dependencies</a>    </p>\n</li></ul>    <div class=\"section section-2 \" id=\"43300774_ArrowConnectorProject-Introduction\">\n        <h2 class=\"heading \"><span>Introduction</span></h2>\n    <p>\nAn Arrow Connector project is similar in structure to an Arrow Builder project.  This guide covers how to manage your Arrow Connector project.    </p>\n    <p>\nTo add a connector to your Arrow project, see <a class=\"document-link \" href=\"#!/guide/Add_a_Connector\">Add a Connector</a>.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"43300774_ArrowConnectorProject-ProjectStructure\">\n        <h2 class=\"heading \"><span>Project Structure</span></h2>\n    <p>\nAn Arrow Connector project is made up of several components.  To simplify development, Arrow primarily uses a strict directory structure and naming convention to organize the application rather than configuration files.    </p>\n    <p>\nThe following is a list of directories and files that can be found in an Arrow Connector project:    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nFile/Folder Name    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">app.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nEntry point to the connector for testing, which launches a server instance.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">appc.json</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nProject configuration file. Do not modify this file.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">conf</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nContains configuration files in JSON format for the connector. The <tt class=\" \">default.js</tt> file is used for testing the connector. You can create an example configuration file, which is copied to the Arrow project when its installed. See <a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-ConnectorConfigurationFile\">Connector Configuration File</a> below.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">index.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nEntry point to the connector.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">lib</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nContains the logic for your connector. Requires an <tt class=\" \">index.js</tt> file. See <a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-ConnectorLogic\">Connector Logic</a> below.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">logs</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nContains generated log files when running your project locally. If you test the connector, the generated log files will get packaged with the application. You may want to disable logging by setting the <tt class=\" \">transactionLogEnabled</tt>  property to  <tt class=\" \">false</tt>  in the <tt class=\" \"> conf/default.js</tt> .    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">models</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nContains Arrow Model JavaScript files, used to declare the schema for your data and generate API endpoints for the connector. See <a class=\"document-link \" href=\"#!/guide/Arrow_Connector_Project-section-43300774_ArrowConnectorProject-ModelsandAPIEndpoints\">Models and API Endpoints</a> below.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">node_modules</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nContains project dependencies. Arrow automatically installs any project dependencies declared in the <tt class=\" \">package.json</tt> file.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">package.json</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nNPM configuration file to declare project dependencies and other build or runtime configurations.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    </div>\n    <div class=\"section section-2 \" id=\"43300774_ArrowConnectorProject-CLITasks\">\n        <h2 class=\"heading \"><span>CLI Tasks</span></h2>\n    <p>\nUse the Appcelerator CLI to create, test and deploy your Connector project.    </p>\n    <div class=\"section section-3 \" id=\"43300774_ArrowConnectorProject-CreateaConnector\">\n        <h3 class=\"heading \"><span>Create a Connector</span></h3>\n    <p>\nTo create a new connector, from your workspace directory, execute the <tt class=\" \">appc generate</tt> command.  When prompted:    </p>\n<ul class=\" \"><li class=\" \">    <p>\nSelect <strong class=\" \">Arrow Component</strong> for the type of component    </p>\n</li><li class=\" \">    <p>\nSelect<strong class=\" \"> Arrow Connector</strong> for the Arrow component    </p>\n</li><li class=\" \">    <p>\nSelect <strong class=\" \">Empty Connector Project</strong> to use a boiler plate project.    </p>\n</li><li class=\" \">    <p>\nEnter a name and directory name for your project.    </p>\n</li></ul><div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">$ appc generate</code></div>\n<div class=\"line\"><code class=\"plain\">Appcelerator Command-Line Interface, version </code><code class=\"value\">0.2</code><code class=\"plain\">.</code><code class=\"value\">230</code></div>\n<div class=\"line\"><code class=\"plain\">Copyright (c) </code><code class=\"value\">2014</code><code class=\"plain\">-</code><code class=\"value\">2015</code><code class=\"plain\">, Appcelerator, Inc.  All Rights Reserved.</code></div>\n<div class=\"line\"><code class=\"plain\"> </code></div>\n<div class=\"line\"><code class=\"plain\">? What type of component would you like to generate? Arrow Component</code></div>\n<div class=\"line\"><code class=\"plain\">? What Arrow component would you like to generate? Arrow Connector</code></div>\n<div class=\"line\"><code class=\"plain\">? Which Connector would you like to generate? Empty Connector Project</code></div>\n<div class=\"line\"><code class=\"plain\">? What is the connector name? sample.connector</code></div>\n<div class=\"line\"><code class=\"plain\">? Which directory to generate into? sample.connector</code></div>\n</div>\n</div>    </div>\n    <div class=\"section section-3 \" id=\"43300774_ArrowConnectorProject-TesttheConnector\">\n        <h3 class=\"heading \"><span>Test the Connector</span></h3>\n    <p>\nLike an Arrow Builder project, you can locally run the Arrow Connector project and make APIs calls to it.  From the project directory, execute:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">appc run</code></div>\n</div>\n</div>    <p>\nOnce the server starts, you can make cURL or other requests to the server. Open the admin console, then go to the <strong class=\" \">API Docs</strong> tab to retrieve the cURL commands for the methods.  Copy and paste a command in a terminal to test it.    </p>\n    </div>\n    <div class=\"section section-3 \" id=\"43300774_ArrowConnectorProject-PublishtheConnector\">\n        <h3 class=\"heading \"><span>Publish the Connector</span></h3>\n    <p>\nTo publish the connector, execute the following command from the project directory:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">appc publish</code></div>\n</div>\n</div>    <p>\nBy default, the access level for the connector is set to private, so only the creator can access the connector.  To share the connector with other people or publicly, specify a different access level with the <tt class=\" \">appc access</tt> command and add people or orgs to your component using the <tt class=\" \">appc user</tt> and <tt class=\" \">appc org</tt> commands.    </p>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"43300774_ArrowConnectorProject-ConnectorLogic\">\n        <h2 class=\"heading \"><span>Connector Logic</span></h2>\n    <p>\nPlace all the connector logic in the <tt class=\" \">lib</tt> folder.  There must be an <tt class=\" \">index.js</tt> file in your <tt class=\" \">lib</tt> folder, which is the first file loaded by the connector.    </p>\n    <p>\nThe boiler plate <tt class=\" \">index.js</tt> file expose a <tt class=\" \">create()</tt> method, which is passed the Arrow class.  The method must return a Connector instance, which is created using the <tt class=\" \">Arrow.Connector.extend()</tt>method.  Uncomment each Capability constant in the <tt class=\" \">capabilities</tt> field to have Arrow generate boiler plate logic for each capability you want the Arrow Connector to support.  Each method will have its own JavaScript file. You may also pass the <tt class=\" \">extend()</tt> method an object, which implements the methods of the Connector class and a few methods from the Model class.    </p>\n    <p>\nTo start developing your connector, run the project in one console window, then edit the files with the connector logic in another console or editor.  As you save your files, Arrow will automatically update your connector and restart the server instance, allowing you to work on and test the connector incrementally.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">lib/index.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"comments\">/*</code></div>\n<div class=\"line\"><code class=\"comments\"> Welcome to your new connector!</code></div>\n<div class=\"line\"><code class=\"comments\"> TODO: First things first, look at the \"capabilities\" array TODOs down below.</code></div>\n<div class=\"line\"><code class=\"comments\"> */</code></div>\n<div class=\"line\"><code class=\"plain\">var _ = require(</code><code class=\"string\">'lodash'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"preprocessor\">/**</code></div>\n<div class=\"line\"><code class=\"preprocessor\"> * Creates your connector for Arrow.</code></div>\n<div class=\"line\"><code class=\"preprocessor\"> */</code></div>\n<div class=\"line\"><code class=\"plain\">exports.create = function (Arrow) {</code></div>\n<div class=\"line\"><code class=\"plain\">        var Connector = Arrow.Connector,</code></div>\n<div class=\"line\"><code class=\"plain\">                Capabilities = Connector.Capabilities;</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"keyword\">return</code><code class=\"plain\"> Connector.extend({</code></div>\n<div class=\"line\"><code class=\"plain\">                filename: module.filename,</code></div>\n<div class=\"line\"><code class=\"plain\">                capabilities: [</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">// TODO: Get started by uncommenting the next line and running `appc run`.</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">//Capabilities.ConnectsToADataSource,</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">// TODO: Each of these capabilities is optional; add the ones you want, and delete the rest.</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">// (Hint: I've found it to be easiest to add these one at a time, running `appc run` for guidance.)</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">//Capabilities.ValidatesConfiguration,</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">//Capabilities.ContainsModels,</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">//Capabilities.GeneratesModels,</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">//Capabilities.CanCreate,</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">//Capabilities.CanRetrieve,</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">//Capabilities.CanUpdate,</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">//Capabilities.CanDelete,</code></div>\n<div class=\"line\"><code class=\"plain\">                        </code><code class=\"comments\">//Capabilities.AuthenticatesThroughConnector</code></div>\n<div class=\"line\"><code class=\"plain\">                ]</code></div>\n<div class=\"line\"><code class=\"plain\">        });</code></div>\n<div class=\"line\"><code class=\"plain\">};</code></div>\n</div>\n</div>    <div class=\"section section-3 \" id=\"43300774_ArrowConnectorProject-Capabilities\">\n        <h3 class=\"heading \"><span>Capabilities</span></h3>\n    <p>\nStarting with Arrow 1.2.48 or Appcelerator CLI 4.1.3, the connector configuration object passed to the <tt class=\" \">Connect.extend()</tt> method supports a <tt class=\" \">capabilities</tt> property.  The first time you run a project after adding a Capability constant to the <tt class=\" \">capabilities</tt> property, Arrow will generate boiler plate logic, which you can modify.  The table below explains what each capability constant exposes and creates. If a certain connector is not exposed through a capability, you can implement the method in the object passed to the <tt class=\" \">Connector.extend()</tt> method.    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCapability Constant    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nLocation    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nExposed Connector Methods    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nConnectToADataSource    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/lifecycle</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n    <ul class=\" \"><li class=\" \">    <p>\nconnect    </p>\n</li><li class=\" \">    <p>\ndisconnect    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nValidatesConfiguration    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/metadata</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n    <ul class=\" \"><li class=\" \">    <p>\nfetchMetadata    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nAddsCustomTypes    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/metadata</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n    <ul class=\" \"><li class=\" \">    <p>\ncoerceCustomType    </p>\n</li><li class=\" \">    <p>\ngetCustomType    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nGenerateModels    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/schema</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n    <ul class=\" \"><li class=\" \">    <p>\ncreateModelsFromSchema    </p>\n</li><li class=\" \">    <p>\nfetchSchema    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nContainsModels    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./models</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCreates a boiler plate model in the <tt class=\" \">models</tt> folder    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanCreate    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n    <ul class=\" \"><li class=\" \">    <p>\ncreate    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanRetrieve    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n    <ul class=\" \"><li class=\" \">    <p>\ndistinct    </p>\n</li><li class=\" \">    <p>\nfindAll    </p>\n</li><li class=\" \">    <p>\nfindOne    </p>\n</li><li class=\" \">    <p>\nquery    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanUpdate    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n    <ul class=\" \"><li class=\" \">    <p>\nfindAndModify    </p>\n</li><li class=\" \">    <p>\nsave    </p>\n</li><li class=\" \">    <p>\nupsert    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanDelete    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n    <ul class=\" \"><li class=\" \">    <p>\ndelete    </p>\n</li><li class=\" \">    <p>\ndeleteAll    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p class=\"p1\">\nAuthenticatesThroughConnector    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/lifecycle</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n    <ul class=\" \"><li class=\" \">    <p>\nlogin    </p>\n</li><li class=\" \">    <p>\nloginRequired    </p>\n</li></ul>            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <p>\n    </p>\n    </div>\n    <div class=\"section section-3 \" id=\"43300774_ArrowConnectorProject-Initialization\">\n        <h3 class=\"heading \"><span>Initialization</span></h3>\n    <p>\nIf you need to add some custom initialization logic when creating the connector, implement the following methods.  The connector instance is the value passed to <tt class=\" \">this</tt> in the functions.  The functions do not take any arguments or return any values:    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nMethod Signature    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nconstructor(void)    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nUse to execute some custom logic when the connector is created.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-postCreate\">postCreate(void)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nUse to execute some custom logic after the connector instance is created but before its returned.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <p>\n    </p>\n    </div>\n    <div class=\"section section-3 \" id=\"43300774_ArrowConnectorProject-ConnectionLifecycle\">\n        <h3 class=\"heading \"><span>Connection Lifecycle</span></h3>\n    <p>\nWhen the connector is loaded, the following methods are executed (in order and if defined).  You do not need to implement any of the methods.   Each method is passed a callback.  After completing the operation, invoke the callback function and pass it an Error object (or null if successful) as the first parameter, and the results of the operation as the second parameter.  None of the methods have a return value.    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nMethod Signature    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCapability    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nBoiler Plate File    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nResult to Pass to the Callback    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p class=\"p1\">\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-fetchMetadata\">fetchMetadata(callback)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nValidatesConfiguration    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/metadata/fetchMetadata.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nRetrieves the metadata of the data source. The metadata is used to validate the configuration object.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nMetadata object. Set the <tt class=\" \">fields</tt> key to an array of Arrow Metadata objects to verify the keys in the configuration object.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p class=\"p1\">\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-fetchConfig\">fetchConfig(callback)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n-    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n-    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nRetrieves the configuration of the data source.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nConfiguration object. Key-value pairs describing the configuration of the connector.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-connect\">connect(callback)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nConnectToADataSource    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/lifecycle/connect.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nConnects to the data source.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nNone.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p class=\"p1\">\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-fetchSchema\">fetchSchema(callback)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nGenerateModels    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/schema/fetchSchema.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nRetrieves the model schema of the data source.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nSchema object.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-disconnect\">disconnect(callback)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nConnectToADataSource    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/lifecycle/connect.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDisconnect from the data source.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nNone.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    </div>\n    <div class=\"section section-3 \" id=\"43300774_ArrowConnectorProject-CRUDMethods\">\n        <h3 class=\"heading \"><span>CRUD Methods</span></h3>\n    <p>\nTo access data from the Connector, you need to implement the following methods.  Each method is passed the Model class as it first parameter and a callback as its last parameter.  After completing the operation, invoke the callback function and pass it an Error object (or null if successful) as the first parameter, and the results of the operation as the second parameter.  None of the methods have a return value.    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nMethod Signature    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCapability    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nBoiler Plate File    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nResult to Pass to the Callback    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\ncreate(Model, values, callback)    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanCreate    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/create.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCreates a new model using the passed values.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nNew model    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\ndelete(Model, instance, callback)    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanDelete    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/delete.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDeletes the model instance.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDeleted model    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\ndeleteAll(Model, callback)    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanDelete    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/deleteAll.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDeletes all the models.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nArray of deleted models    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nfindAll(Model, callback)    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanRetrieve    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/findAll.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nRetrieves all the models.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nArray of models    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nfindOne(Model, id, callback)    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanRetrieve    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/findOne.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nRetrieves one model with the specified ID (<tt class=\" \">id</tt> parameter).    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nA model    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nquery(Model, options, callback)    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanRetrieve    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/query.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nRetrieves all models based on the query options.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nArray of found models    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\ndistinct(Model, field, options, callback)    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanRetrieve    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/ditinct.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nRetrieves a distinct set of models based on the field(s) and query options.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nArray of distinct models    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nsave(Model, instance, callback)    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanUpdate    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/save.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nUpdates the model instance.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nUpdated model    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-findAndModify\">findAndModify(Model, options, doc, args, callback)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanUpdate    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/findAndModify.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nFinds one model instance and modifies it.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nModified model    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-upsert\">upsert(Model, id, doc, callback)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCanUpdate    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/methods/upsert.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nUpdates the model instance if found or creates a new model instance.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nUpdated or new model    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    </div>\n    <div class=\"section section-3 \" id=\"43300774_ArrowConnectorProject-RequestLifecycle\">\n        <h3 class=\"heading \"><span>Request Lifecycle</span></h3>\n    <p class=\"p1\">\nIf a request requires a login or if you want to intercept the request before or after it completes, you can implement the following methods:    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nMethod Signature    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCapability    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nBoiler Plate File    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-startRequest\">startRequest(methodName, args, request, next)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n-    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n-    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p class=\"p1\">\nRequest interceptor invoked before the request is initiated and the login method is invoked. The method is passed the name of the method that started the request and the arguments passed to the method. Invoke the next function when the operation completes.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-loginRequired\">loginRequired(request, callback)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p class=\"p1\">\nAuthenticatesThroughConnector    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/lifecycle/loginRequired.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDetermines if the request required a login. Pass an error message (or null if succesful) as the first parameter to callback and a boolean value indicating if the login method needs to be execute (true) or not (false) as the second parameter.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-login\">login(request, next)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p class=\"p1\">\nAuthenticatesThroughConnector    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\" \">./lib/lifecycle/login.js</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nLogs in to the data source to make a request. Invoke the next function when the operation completes.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Arrow.Connector-method-endRequest\">endRequest(methodName, args, request, next)</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n-    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n-    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nRequest  interceptor  invoked after the request completes . The method is passed the name of the method that started the request and the arguments passed to the method.  Invoke the next function when the operation completes.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"43300774_ArrowConnectorProject-ConnectorConfigurationFile\">\n        <h2 class=\"heading \"><span>Connector Configuration File</span></h2>\n    <p>\nTo have the Appcelerator CLI create a default configuration file for your connector when it is installed, create a sample configuration file that exports a JSON object in the <tt class=\" \">conf</tt> directory, then reference the file in the connector logic with the <tt class=\" \">defaultConfig</tt> property in the implementation object passed to the <tt class=\" \">Arrow.Connector.extend()</tt> method.    </p>\n    <p>\nFor example, create a file called <tt class=\" \">example.config.js</tt> in the <tt class=\" \">conf</tt> directory and add the following content to it:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">conf/example.config.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">module.exports = {</code></div>\n<div class=\"line\"><code class=\"plain\">    connectors: {</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"string\">'connector.name'</code><code class=\"plain\">: {</code></div>\n<div class=\"line\"><code class=\"plain\">            setting1: </code><code class=\"string\">'foo'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">            setting2: </code><code class=\"string\">'bar'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">            setting3: </code><code class=\"string\">'baz'</code></div>\n<div class=\"line\"><code class=\"plain\">        }</code></div>\n<div class=\"line\"><code class=\"plain\">    }</code></div>\n<div class=\"line\"><code class=\"plain\">};</code></div>\n</div>\n</div>    <p>\nThen reference the file in the connector logic using the <tt class=\" \">defaultConfig</tt> property:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">lib/index.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">exports.create = function(Arrow) {</code></div>\n<div class=\"line\"><code class=\"plain\">    var Connector = Arrow.Connector;</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"keyword\">return</code><code class=\"plain\"> Connector.extend({</code></div>\n<div class=\"line\"><code class=\"plain\">        defaultConfig: require(</code><code class=\"string\">'fs'</code><code class=\"plain\">).readFileSync(__dirname + </code><code class=\"string\">'/../conf/example.config.js'</code><code class=\"plain\">, </code><code class=\"string\">'utf8'</code><code class=\"plain\">),</code></div>\n<div class=\"line\"><code class=\"plain\">        ...</code></div>\n<div class=\"line\"><code class=\"plain\">    });</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div>    <p>\nWhen the Appcelerator CLI installs the connector, it will copy and rename the file to the Arrow Builder project's <tt class=\" \">conf</tt>.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"43300774_ArrowConnectorProject-ModelsandAPIEndpoints\">\n        <h2 class=\"heading \"><span>Models and API Endpoints</span></h2>\n    <p>\nTo allow an Arrow application to interact with the connector, you need to create a model definition file to define the schema of the data from the connector for the Arrow project to access. For more details about creating a model, see <a class=\"document-link \" href=\"#!/guide/Arrow_Models\">Arrow Models</a>.    </p>\n    <p>\nBy default, when you install a connector, it will add its API endpoints to the Arrow application.  If you do not want to generate these API endpoints, set the <tt class=\" \">modelAutogen</tt> key to <tt class=\" \">false</tt> in the connector's configuration file in the Arrow project.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">conf/myconnector.default.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">module.exports = {</code></div>\n<div class=\"line\"><code class=\"plain\">    connectors: {</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"string\">'connector.name'</code><code class=\"plain\">: {</code></div>\n<div class=\"line\"><code class=\"plain\">            setting1: </code><code class=\"string\">'foo'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">            setting2: </code><code class=\"string\">'bar'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">            setting3: </code><code class=\"string\">'baz'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">            modelAutogen: </code><code class=\"keyword\">false</code></div>\n<div class=\"line\"><code class=\"plain\">        }</code></div>\n<div class=\"line\"><code class=\"plain\">    }</code></div>\n<div class=\"line\"><code class=\"plain\">};</code></div>\n</div>\n</div>    <p>\nSince Release 5.0.0, you may specify specific models to generate from a connector.  Set the <tt class=\" \">generateModels</tt> key to an array of model names you want to include.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">module.exports = {</code></div>\n<div class=\"line\"><code class=\"plain\">    connectors: {</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"string\">'connector.name'</code><code class=\"plain\">: {</code></div>\n<div class=\"line\"><code class=\"plain\">            generateModels: [</code></div>\n<div class=\"line\"><code class=\"plain\">                </code><code class=\"string\">'foo'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">                </code><code class=\"string\">'bar'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">                </code><code class=\"string\">'baz'</code></div>\n<div class=\"line\"><code class=\"plain\">            ]</code></div>\n<div class=\"line\"><code class=\"plain\">        }</code></div>\n<div class=\"line\"><code class=\"plain\">    }</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div>    </div>\n    <div class=\"section section-2 \" id=\"43300774_ArrowConnectorProject-DeclareDependencies\">\n        <h2 class=\"heading \"><span>Declare Dependencies</span></h2>\n    <p>\nThe application can import any third-party modules that are supported by standard Node.js applications. Before publishing the app to the cloud, make sure all dependencies are listed in the <tt class=\" \">dependencies</tt> field in the application's <tt class=\" \">package.json</tt> file. For example, to add support for MongoDB 1.2.0 or greater:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">package.json</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">{</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"string\">\"dependencies\"</code><code class=\"plain\">:{ </code><code class=\"string\">\"mongodb\"</code><code class=\"plain\">: </code><code class=\"string\">\"&gt;1.2.0\"</code><code class=\"plain\"> }</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div>    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=43300774\"><span>Edit</span></a>\n    \n        <div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n    </div>\n</body>\n</html>\n","title":"Arrow Connector Project"});