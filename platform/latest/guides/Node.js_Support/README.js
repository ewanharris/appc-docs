Ext.data.JsonP['Node.js_Support']({"guide":" <!doctype html> <html> <head> <title>Node.js Support</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-48431321\" class=\"content\"> <h1>Node.js Support</h1> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_Node.jsSupport-Minordifferences\">Minor differences</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_Node.jsSupport-Algorithmsummary\">Algorithm summary</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtUmVxdWlyZShYKWZyb21tb2R1bGVhdHBhdGhZ\">Require(X) from module at path Y</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19GSUxFKFgp\">LOAD_AS_FILE(X)</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19ESVJFQ1RPUlkoWCk\">LOAD_AS_DIRECTORY(X)</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_Node.jsSupport-Minordifferences.1\">Minor differences</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_Node.jsSupport-Algorithmsummary.1\">Algorithm summary</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtUmVxdWlyZShYKWZyb21tb2R1bGVhdHBhdGhZLjE\">Require(X) from module at path Y</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19GSUxFKFgpLjE\">LOAD_AS_FILE(X)</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19ESVJFQ1RPUlkoWCkuMQ\">LOAD_AS_DIRECTORY(X)</a> </p> </li></ul></li></ul> <p>With the release of SDK 6.0.0, we implemented full NodeJS support so users can use NPM modules for Android and iOS platforms (<a class=\"external-link external-link\" href=\"https://jira.appcelerator.org/browse/TIMOB-16078\" target=\"_blank\">TIMOB-16078</a>). </p> <div class=\"section section-2\" id=\"src-48431321_Node.jsSupport-Minordifferences\"> <h2 class=\"heading\"><span>Minor differences</span></h2> <p>This implementation includes the NodeJS require algorithm with some minor differences: </p> <ul class=\"\"><li> <p>SDK doesn&apos;t attempt to load *.node files </p> </li><li> <p>SDK doesn&apos;t have replacements for Node&apos;s core modules </p> </li><li class=\"\"> <p>If the require string doesn&apos;t have the prefix of <tt class=\"\">./</tt>, <tt class=\"\">/</tt>, or <tt class=\"\">../</tt>, and its not a native module, the SDK will fall back to legacy Titanium behavior of assuming the require is meant as &quot;absolute&quot; inside the app (as in starting at &quot;<tt>Resources/</tt>&quot;) </p> </li><li> <p>The SDK will load JSON files and directories (package.json&apos;s main property (look at it, resolve it, and try to load it), index.js, and index.json) </p> </li></ul> </div> <div class=\"section section-2\" id=\"src-48431321_Node.jsSupport-Algorithmsummary\"> <h2 class=\"heading\"><span>Algorithm summary</span></h2> <p>To summarize the algorithm the SDK uses, here are three summaries for requiring a module, loading as file, and loading as directory: </p> <div class=\"section section-3\" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtUmVxdWlyZShYKWZyb21tb2R1bGVhdHBhdGhZ\"> <h3 class=\"heading\"><span>Require(X) from module at path Y</span></h3> <ol class=\"\"><li> <p>If X is a core module, </p> <ol class=\"\"><li> <p>return the core module </p> </li><li> <p>STOP </p> </li></ol></li><li> <p>If X begins with ./, or ../, </p> <ol class=\"\"><li> <p>LOAD_AS_FILE(Y + X) </p> </li><li> <p>LOAD_AS_DIRECTORY(Y + X) </p> </li></ol></li><li> <p>If X begins with /, </p> <ol class=\"\"><li> <p>LOAD_AS_FILE(X) </p> </li><li> <p>LOAD_AS_DIRECTORY(X) </p> </li></ol></li><li class=\"\"> <p>If X <u>does not</u> contain &apos;/&apos;, assume it should try and load CommonJS module first.... </p> <ol class=\"\"><li class=\"\"> <p>LOAD_AS_FILE(X/X.js): try to load &quot;legacy&quot; CommonJS file named <tt>module.id/module.id.js</tt>. </p> </li><li> <p>LOAD_AS_DIRECTORY(X): try to load CommonJS module as a directory </p> </li></ol></li><li> <p>WARN user about possible bad require being treated as absolute THROW &quot;not found&quot; </p> <ol class=\"\"><li> <p>LOAD_AS_FILE(X) </p> </li><li> <p>LOAD_AS_DIRECTORY(X) </p> </li></ol></li></ol> </div> <div class=\"section section-3\" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19GSUxFKFgp\"> <h3 class=\"heading\"><span>LOAD_AS_FILE(X)</span></h3> <ol class=\"\"><li> <p>If X is a file, load X as JavaScript text or JavaScript Object (JSON). STOP </p> </li><li> <p>If X.js is a file, load X.js as JavaScript text. STOP </p> </li><li> <p>If X.json is a file, parse X.json to a JavaScript Object. STOP </p> </li></ol> </div> <div class=\"section section-3\" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19ESVJFQ1RPUlkoWCk\"> <h3 class=\"heading\"><span>LOAD_AS_DIRECTORY(X)</span></h3> <ol class=\"\"><li> <p>If X/package.json is a file, If X/index.js is a file, load X/index.js as JavaScript text. STOP </p> <ol class=\"\"><li> <p>Parse X/package.json and look for &quot;main&quot; field. </p> </li><li> <p>let M = X + (json main field) </p> </li><li> <p>LOAD_AS_FILE(M) </p> </li></ol></li><li> <p>If X/index.json is a file, parse X/index.json to a JavaScript object. STOP </p> </li></ol> <p> </p> <p>With the release of SDK 6.0.0, we implemented full NodeJS support so users can use NPM modules for Android and iOS platforms (<a class=\"external-link external-link\" href=\"https://jira.appcelerator.org/browse/TIMOB-16078\" target=\"_blank\">TIMOB-16078</a>). </p> </div> </div> <div class=\"section section-2\" id=\"src-48431321_Node.jsSupport-Minordifferences.1\"> <h2 class=\"heading\"><span>Minor differences</span></h2> <p>This implementation includes the NodeJS require algorithm with some minor differences: </p> <ul class=\"\"><li> <p>SDK doesn&apos;t attempt to load *.node files </p> </li><li> <p>SDK doesn&apos;t have replacements for Node&apos;s core modules </p> </li><li class=\"\"> <p>If the require string doesn&apos;t have the prefix of <tt class=\"\">./</tt>, <tt class=\"\">/</tt>, or <tt class=\"\">../</tt>, and its not a native module, the SDK will fall back to legacy Titanium behavior of assuming the require is meant as &quot;absolute&quot; inside the app (as in starting at &quot;<tt>Resources/</tt>&quot;) </p> </li><li> <p>The SDK will load JSON files and directories (package.json&apos;s main property (look at it, resolve it, and try to load it), index.js, and index.json) </p> </li></ul> </div> <div class=\"section section-2\" id=\"src-48431321_Node.jsSupport-Algorithmsummary.1\"> <h2 class=\"heading\"><span>Algorithm summary</span></h2> <p>To summarize the algorithm the SDK uses, here are three summaries for requiring a module, loading as file, and loading as directory: </p> <div class=\"section section-3\" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtUmVxdWlyZShYKWZyb21tb2R1bGVhdHBhdGhZLjE\"> <h3 class=\"heading\"><span>Require(X) from module at path Y</span></h3> <ol class=\"\"><li> <p>If X is a core module, </p> <ol class=\"\"><li> <p>return the core module </p> </li><li> <p>STOP </p> </li></ol></li><li> <p>If X begins with ./, or ../, </p> <ol class=\"\"><li> <p>LOAD_AS_FILE(Y + X) </p> </li><li> <p>LOAD_AS_DIRECTORY(Y + X) </p> </li></ol></li><li> <p>If X begins with /, </p> <ol class=\"\"><li> <p>LOAD_AS_FILE(X) </p> </li><li> <p>LOAD_AS_DIRECTORY(X) </p> </li></ol></li><li class=\"\"> <p>If X <u>does not</u> contain &apos;/&apos;, assume it should try and load CommonJS module first.... </p> <ol class=\"\"><li class=\"\"> <p>LOAD_AS_FILE(X/X.js): try to load &quot;legacy&quot; CommonJS file named <tt>module.id/module.id.js</tt>. </p> </li><li> <p>LOAD_AS_DIRECTORY(X): try to load CommonJS module as a directory </p> </li></ol></li><li> <p>WARN user about possible bad require being treated as absolute THROW &quot;not found&quot; </p> <ol class=\"\"><li> <p>LOAD_AS_FILE(X) </p> </li><li> <p>LOAD_AS_DIRECTORY(X) </p> </li></ol></li></ol> </div> <div class=\"section section-3\" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19GSUxFKFgpLjE\"> <h3 class=\"heading\"><span>LOAD_AS_FILE(X)</span></h3> <ol class=\"\"><li> <p>If X is a file, load X as JavaScript text or JavaScript Object (JSON). STOP </p> </li><li> <p>If X.js is a file, load X.js as JavaScript text. STOP </p> </li><li> <p>If X.json is a file, parse X.json to a JavaScript Object. STOP </p> </li></ol> </div> <div class=\"section section-3\" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19ESVJFQ1RPUlkoWCkuMQ\"> <h3 class=\"heading\"><span>LOAD_AS_DIRECTORY(X)</span></h3> <ol class=\"\"><li> <p>If X/package.json is a file, If X/index.js is a file, load X/index.js as JavaScript text. STOP </p> <ol class=\"\"><li> <p>Parse X/package.json and look for &quot;main&quot; field. </p> </li><li> <p>let M = X + (json main field) </p> </li><li> <p>LOAD_AS_FILE(M) </p> </li></ol></li><li> <p>If X/index.json is a file, parse X/index.json to a JavaScript object. STOP </p> </li></ol> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=48431321\"><span>Edit</span></a> </div> </body> </html> ","title":"Node.js Support"});