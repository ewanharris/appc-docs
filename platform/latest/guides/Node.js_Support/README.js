Ext.data.JsonP['Node.js_Support']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Node.js Support</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\"/>\n\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\"/>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"48431321\" class=\"content\">\n            <h1>Node.js Support</h1>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-Minordifferences\">Minor differences</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-Algorithmsummary\">Algorithm summary</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-Require(X)frommoduleatpathY\">Require(X) from module at path Y</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-LOAD_AS_FILE(X)\">LOAD_AS_FILE(X)</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-LOAD_AS_DIRECTORY(X)\">LOAD_AS_DIRECTORY(X)</a>    </p>\n</li></ul></li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-Minordifferences.1\">Minor differences</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-Algorithmsummary.1\">Algorithm summary</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-Require(X)frommoduleatpathY.1\">Require(X) from module at path Y</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-LOAD_AS_FILE(X).1\">LOAD_AS_FILE(X)</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-48431321_Node.jsSupport-LOAD_AS_DIRECTORY(X).1\">LOAD_AS_DIRECTORY(X)</a>    </p>\n</li></ul></li></ul>    <p>\nWith the release of SDK 6.0.0, we implemented full NodeJS support so users can use NPM modules for Android and iOS platforms (<a class=\"external-link external-link\" href=\"https://jira.appcelerator.org/browse/TIMOB-16078\" target=\"_blank\">TIMOB-16078</a>).    </p>\n    <div class=\"section section-2 \" id=\"48431321_Node.jsSupport-Minordifferences\">\n        <h2 class=\"heading \"><span>Minor differences</span></h2>\n    <p>\nThis implementation includes the NodeJS require algorithm with some minor differences:    </p>\n<ul class=\" \"><li class=\" \">    <p>\nSDK doesn't attempt to load *.node files    </p>\n</li><li class=\" \">    <p>\nSDK doesn't have replacements for Node's core modules    </p>\n</li><li class=\" \">    <p>\nIf the require string doesn't have the prefix of <tt class=\" \">./</tt>, <tt class=\" \">/</tt>, or <tt class=\" \">../</tt>, and its not a native module, the SDK will fall back to legacy Titanium behavior of assuming the require is meant as &quot;absolute&quot; inside the app (as in starting at &quot;<tt class=\" \">Resources/</tt>&quot;)    </p>\n</li><li class=\" \">    <p>\nThe SDK will load JSON files and directories (package.json's main property (look at it, resolve it, and try to load it), index.js, and index.json)    </p>\n</li></ul>    </div>\n    <div class=\"section section-2 \" id=\"48431321_Node.jsSupport-Algorithmsummary\">\n        <h2 class=\"heading \"><span>Algorithm summary</span></h2>\n    <p>\nTo summarize the algorithm the SDK uses, here are three summaries for requiring a module, loading as file, and loading as directory:    </p>\n    <div class=\"section section-3 \" id=\"48431321_Node.jsSupport-Require(X)frommoduleatpathY\">\n        <h3 class=\"heading \"><span>Require(X) from module at path Y</span></h3>\n<ol class=\" \"><li class=\" \">    <p>\nIf X is a core module,    </p>\n<ol class=\" \"><li class=\" \">    <p>\nreturn the core module    </p>\n</li><li class=\" \">    <p>\nSTOP    </p>\n</li></ol></li><li class=\" \">    <p>\nIf X begins with ./, or ../,    </p>\n<ol class=\" \"><li class=\" \">    <p>\nLOAD_AS_FILE(Y + X)    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_DIRECTORY(Y + X)    </p>\n</li></ol></li><li class=\" \">    <p>\nIf X begins with /,    </p>\n<ol class=\" \"><li class=\" \">    <p>\nLOAD_AS_FILE(X)    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_DIRECTORY(X)    </p>\n</li></ol></li><li class=\" \">    <p>\nIf X <u class=\" \">does not</u> contain '/', assume it should try and load CommonJS module first....    </p>\n<ol class=\" \"><li class=\" \">    <p>\nLOAD_AS_FILE(X/X.js): try to load &quot;legacy&quot; CommonJS file named <tt class=\" \">module.id/module.id.js</tt>.    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_DIRECTORY(X): try to load CommonJS module as a directory    </p>\n</li></ol></li><li class=\" \">    <p>\nWARN user about possible bad require being treated as absolute THROW &quot;not found&quot;    </p>\n<ol class=\" \"><li class=\" \">    <p>\nLOAD_AS_FILE(X)    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_DIRECTORY(X)    </p>\n</li></ol></li></ol>    </div>\n    <div class=\"section section-3 \" id=\"48431321_Node.jsSupport-LOAD_AS_FILE(X)\">\n        <h3 class=\"heading \"><span>LOAD_AS_FILE(X)</span></h3>\n<ol class=\" \"><li class=\" \">    <p>\nIf X is a file, load X as JavaScript text or JavaScript Object (JSON). STOP    </p>\n</li><li class=\" \">    <p>\nIf X.js is a file, load X.js as JavaScript text. STOP    </p>\n</li><li class=\" \">    <p>\nIf X.json is a file, parse X.json to a JavaScript Object. STOP    </p>\n</li></ol>    </div>\n    <div class=\"section section-3 \" id=\"48431321_Node.jsSupport-LOAD_AS_DIRECTORY(X)\">\n        <h3 class=\"heading \"><span>LOAD_AS_DIRECTORY(X)</span></h3>\n<ol class=\" \"><li class=\" \">    <p>\nIf X/package.json is a file, If X/index.js is a file, load X/index.js as JavaScript text. STOP    </p>\n<ol class=\" \"><li class=\" \">    <p>\nParse X/package.json and look for &quot;main&quot; field.    </p>\n</li><li class=\" \">    <p>\nlet M = X + (json main field)    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_FILE(M)    </p>\n</li></ol></li><li class=\" \">    <p>\nIf X/index.json is a file, parse X/index.json to a JavaScript object. STOP    </p>\n</li></ol>    <p>\n    </p>\n    <p>\nWith the release of SDK 6.0.0, we implemented full NodeJS support so users can use NPM modules for Android and iOS platforms (<a class=\"external-link external-link\" href=\"https://jira.appcelerator.org/browse/TIMOB-16078\" target=\"_blank\">TIMOB-16078</a>).    </p>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"48431321_Node.jsSupport-Minordifferences.1\">\n        <h2 class=\"heading \"><span>Minor differences</span></h2>\n    <p>\nThis implementation includes the NodeJS require algorithm with some minor differences:    </p>\n<ul class=\" \"><li class=\" \">    <p>\nSDK doesn't attempt to load *.node files    </p>\n</li><li class=\" \">    <p>\nSDK doesn't have replacements for Node's core modules    </p>\n</li><li class=\" \">    <p>\nIf the require string doesn't have the prefix of <tt class=\" \">./</tt>, <tt class=\" \">/</tt>, or <tt class=\" \">../</tt>, and its not a native module, the SDK will fall back to legacy Titanium behavior of assuming the require is meant as &quot;absolute&quot; inside the app (as in starting at &quot;<tt class=\" \">Resources/</tt>&quot;)    </p>\n</li><li class=\" \">    <p>\nThe SDK will load JSON files and directories (package.json's main property (look at it, resolve it, and try to load it), index.js, and index.json)    </p>\n</li></ul>    </div>\n    <div class=\"section section-2 \" id=\"48431321_Node.jsSupport-Algorithmsummary.1\">\n        <h2 class=\"heading \"><span>Algorithm summary</span></h2>\n    <p>\nTo summarize the algorithm the SDK uses, here are three summaries for requiring a module, loading as file, and loading as directory:    </p>\n    <div class=\"section section-3 \" id=\"48431321_Node.jsSupport-Require(X)frommoduleatpathY.1\">\n        <h3 class=\"heading \"><span>Require(X) from module at path Y</span></h3>\n<ol class=\" \"><li class=\" \">    <p>\nIf X is a core module,    </p>\n<ol class=\" \"><li class=\" \">    <p>\nreturn the core module    </p>\n</li><li class=\" \">    <p>\nSTOP    </p>\n</li></ol></li><li class=\" \">    <p>\nIf X begins with ./, or ../,    </p>\n<ol class=\" \"><li class=\" \">    <p>\nLOAD_AS_FILE(Y + X)    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_DIRECTORY(Y + X)    </p>\n</li></ol></li><li class=\" \">    <p>\nIf X begins with /,    </p>\n<ol class=\" \"><li class=\" \">    <p>\nLOAD_AS_FILE(X)    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_DIRECTORY(X)    </p>\n</li></ol></li><li class=\" \">    <p>\nIf X <u class=\" \">does not</u> contain '/', assume it should try and load CommonJS module first....    </p>\n<ol class=\" \"><li class=\" \">    <p>\nLOAD_AS_FILE(X/X.js): try to load &quot;legacy&quot; CommonJS file named <tt class=\" \">module.id/module.id.js</tt>.    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_DIRECTORY(X): try to load CommonJS module as a directory    </p>\n</li></ol></li><li class=\" \">    <p>\nWARN user about possible bad require being treated as absolute THROW &quot;not found&quot;    </p>\n<ol class=\" \"><li class=\" \">    <p>\nLOAD_AS_FILE(X)    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_DIRECTORY(X)    </p>\n</li></ol></li></ol>    </div>\n    <div class=\"section section-3 \" id=\"48431321_Node.jsSupport-LOAD_AS_FILE(X).1\">\n        <h3 class=\"heading \"><span>LOAD_AS_FILE(X)</span></h3>\n<ol class=\" \"><li class=\" \">    <p>\nIf X is a file, load X as JavaScript text or JavaScript Object (JSON). STOP    </p>\n</li><li class=\" \">    <p>\nIf X.js is a file, load X.js as JavaScript text. STOP    </p>\n</li><li class=\" \">    <p>\nIf X.json is a file, parse X.json to a JavaScript Object. STOP    </p>\n</li></ol>    </div>\n    <div class=\"section section-3 \" id=\"48431321_Node.jsSupport-LOAD_AS_DIRECTORY(X).1\">\n        <h3 class=\"heading \"><span>LOAD_AS_DIRECTORY(X)</span></h3>\n<ol class=\" \"><li class=\" \">    <p>\nIf X/package.json is a file, If X/index.js is a file, load X/index.js as JavaScript text. STOP    </p>\n<ol class=\" \"><li class=\" \">    <p>\nParse X/package.json and look for &quot;main&quot; field.    </p>\n</li><li class=\" \">    <p>\nlet M = X + (json main field)    </p>\n</li><li class=\" \">    <p>\nLOAD_AS_FILE(M)    </p>\n</li></ol></li><li class=\" \">    <p>\nIf X/index.json is a file, parse X/index.json to a JavaScript object. STOP    </p>\n</li></ol>    </div>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=48431321\"><span>Edit</span></a>\n    \n        <div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n    </div>\n</body>\n</html>\n","title":"Node.js Support"});