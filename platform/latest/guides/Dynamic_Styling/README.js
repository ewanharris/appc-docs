Ext.data.JsonP['Dynamic_Styling']({"guide":" <!doctype html> <html> <head> <title>Dynamic Styling</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-41845657\" class=\"content\"> <h1>Dynamic Styling</h1> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Dynamic_Styling-section-src-41845657_DynamicStyling-Rawstylemodules\">Raw style modules</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Dynamic_Styling-section-src-41845657_DynamicStyling-Creatingandusingstyleobjects\">Creating and using style objects</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Dynamic_Styling-section-src-41845657_DynamicStyling-CreatingstyledTitaniumproxies\">Creating styled Titanium proxies</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Dynamic_Styling-section-src-41845657_DynamicStyling-AddingandremovingTSSclasses\">Adding and removing TSS classes</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Dynamic_Styling-section-src-41845657_DynamicStyling-Autostyleproperty\">Autostyle property</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Dynamic_Styling-section-src-41845657_DynamicStyling-Seealso\">See also</a> </p> </li></ul> <p>Demonstrates different approaches to <a class=\"document-link\" href=\"#!/guide/Dynamic_Styles\">changing styles at runtime</a> in Alloy. The sample application displays a menu of options that discuss or demonstrate the different approaches and techniques for dynamic styling. See each section below for a discussion of each approach. </p> <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro has-no-icon\"> <div class=\"title\">App folder location</div> <p><i class=\"\">alloy</i>/test/apps/<strong>advanced/dynamic_styling</strong> </p> </div> <p> <img src=\"images/download/attachments/41845657/dynamic_styling.png\" alt=\"images/download/attachments/41845657/dynamic_styling.png\" class=\"confluence-embedded-image\"> </img></p> <div class=\"section section-2\" id=\"src-41845657_DynamicStyling-Rawstylemodules\"> <h2 class=\"heading\"><span>Raw style modules</span></h2> <p>Although not often needed, you can access the raw style data used in the Alloy project, you can <tt>require()</tt> the styles, as shown below: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/features/rawStyle.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/features/rawStyle.js\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> rawStyles = JSON.stringify(require(</code><code class=\"string\">&apos;alloy/styles/features/rawStyle&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">console.log(rawStyles);</code></div> <div class=\"line\"><code class=\"comments\">// output</code></div> <div class=\"line\"><code class=\"plain\">[</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isApi&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 1000.0001,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Window&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;backgroundColor&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;#efefef&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;fullscreen&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">false</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;navBarHidden&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isApi&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 1000.0002,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Label&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;color&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;#181818&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;height&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;SIZE&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;textAlign&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;left&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isApi&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 1000.0028,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;WebView&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;width&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;100%&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;top&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;10dp&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isClass&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 10000.0003,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;container&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;top&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;50dp&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;bottom&quot;</code><code class=\"plain\">: 0,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;right&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;10dp&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;left&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;10dp&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isClass&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 10000.0004,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;blue&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;color&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;#00f&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isClass&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 10000.0005,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;shadow&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;shadowColor&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;#88f&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;shadowOffset&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;x&quot;</code><code class=\"plain\">: 1,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;y&quot;</code><code class=\"plain\">: 3</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isClass&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 10000.0006,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;dark&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;backgroundColor&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;#888&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;color&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;#003&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isClass&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 10000.0007,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;large&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;font&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;fontSize&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;32dp&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;fontWeight&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;bold&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isClass&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 10000.0008,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;huge&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;font&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;fontSize&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;64dp&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;fontWeight&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;bold&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isClass&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 10000.0029,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;content&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;font&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;fontSize&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;16dp&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;fontWeight&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;normal&quot;</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;height&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;SIZE&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;top&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;10dp&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;isClass&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;priority&quot;</code><code class=\"plain\">: 10000.003,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;key&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;container&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;style&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;layout&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;vertical&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">]</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-41845657_DynamicStyling-Creatingandusingstyleobjects\"> <h2 class=\"heading\"><span>Creating and using style objects</span></h2> <p>This section uses an Alloy view-controller&apos;s <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller-method-createStyle\">createStyle()</a> method to create a new style object, which is then passed as a parameter to the <a class=\"external-link external-link\" href=\"#!/api/Titanium.UI-method-createLabel\">Ti.UI.createLabel()</a> method. The following code is representative of that used in the sample app. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/features/createStyle.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/features/createStyle.js\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> styleArgs = {</code></div> <div class=\"line\"><code class=\"plain\"> apiName: </code><code class=\"string\">&apos;Ti.UI.Label&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> classes: [</code><code class=\"string\">&apos;blue&apos;</code><code class=\"plain\">,</code><code class=\"string\">&apos;shadow&apos;</code><code class=\"plain\">,</code><code class=\"string\">&apos;large&apos;</code><code class=\"plain\">],</code></div> <div class=\"line\"><code class=\"plain\"> id: </code><code class=\"string\">&apos;tester&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> borderWidth: 2,</code></div> <div class=\"line\"><code class=\"plain\"> borderRadius: 16,</code></div> <div class=\"line\"><code class=\"plain\"> borderColor: </code><code class=\"string\">&apos;#000&apos;</code></div> <div class=\"line\"><code class=\"plain\">};</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> styleObject = $.createStyle(styleArgs);</code></div> <div class=\"line\"><code class=\"plain\">testLabel = Ti.UI.createLabel(styleObject);</code></div> <div class=\"line\"><code class=\"plain\">testLabel.addEventListener(</code><code class=\"string\">&apos;click&apos;</code><code class=\"plain\">, changeStyle);</code></div> <div class=\"line\"><code class=\"plain\">$.container.add(testLabel);</code></div> </div> </div> <p>The &quot;blue&quot;, &quot;shadow&quot;, and &quot;large&quot; styles are defined in the project&apos;s global TSS file. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/app.tss</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/app.tss\"> <div class=\"line\"><code class=\"string\">&apos;.blue&apos;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">color</code><code class=\"plain\">: </code><code class=\"string\">&apos;#00f&apos;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"string\">&apos;.shadow&apos;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> shadowColor: </code><code class=\"string\">&apos;#88f&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> shadowOffset: {x:</code><code class=\"value\">1</code><code class=\"plain\">,y:</code><code class=\"value\">3</code><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"string\">&apos;.large&apos;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">font</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> fontSize: </code><code class=\"string\">&apos;32dp&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> fontWeight: </code><code class=\"string\">&apos;bold&apos;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>In the sample view, click the label to cycle through a variety of styles applied in this manner. </p> <p> <img src=\"images/download/attachments/41845657/create_style.png\" alt=\"images/download/attachments/41845657/create_style.png\" class=\"confluence-embedded-image\"> </img></p> </div> <div class=\"section section-2\" id=\"src-41845657_DynamicStyling-CreatingstyledTitaniumproxies\"> <h2 class=\"heading\"><span>Creating styled Titanium proxies</span></h2> <p>This sample view is functionally identical to the previous &quot;Creating Style Objects&quot; sample (click the label to cycle it through a series of different styles). The difference is that it uses the <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller.UI-method-create\">Alloy.Controller.UI.create()</a> method to create and style the Label object in a single method call, rather than making <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller-method-createStyle\">createStyle()</a> and <a class=\"external-link external-link\" href=\"#!/api/Titanium.UI-method-createLabel\">Ti.UI.createLabel()</a> calls. The <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller.UI-method-create\">create()</a> method takes as its first parameter the API name of the object to create, which can either be the full class name (&quot;Titanium.UI.Button&quot;) or the Alloy XML element name (&quot;Button&quot;). It&apos;s second parameter is a object hash whose fields specify the styles to apply to the new object. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controller/createStyle.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controller/createStyle.js\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> styleArgs = {</code></div> <div class=\"line\"><code class=\"plain\"> classes: [</code><code class=\"string\">&apos;blue&apos;</code><code class=\"plain\">,</code><code class=\"string\">&apos;shadow&apos;</code><code class=\"plain\">,</code><code class=\"string\">&apos;large&apos;</code><code class=\"plain\">],</code></div> <div class=\"line\"><code class=\"plain\"> id: </code><code class=\"string\">&apos;tester&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> borderWidth: 2,</code></div> <div class=\"line\"><code class=\"plain\"> borderRadius: 16,</code></div> <div class=\"line\"><code class=\"plain\"> borderColor: </code><code class=\"string\">&apos;#000&apos;</code></div> <div class=\"line\"><code class=\"plain\">};</code></div> <div class=\"line\"><code class=\"plain\">testLabel = $.UI.create(</code><code class=\"string\">&apos;Label&apos;</code><code class=\"plain\">, styleArgs);</code></div> <div class=\"line\"><code class=\"plain\">testLabel.addEventListener(</code><code class=\"string\">&apos;click&apos;</code><code class=\"plain\">, changeStyle);</code></div> <div class=\"line\"><code class=\"plain\">$.container.add(testLabel);</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-41845657_DynamicStyling-AddingandremovingTSSclasses\"> <h2 class=\"heading\"><span>Adding and removing TSS classes</span></h2> <p>The &quot;Add/Remove Classes&quot; sample app section demonstrates using <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller-method-addClass\">addClass()</a>, <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller-method-removeClass\">removeClass()</a> and <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller-method-resetClass\">resetClass()</a> methods to style objects that have already been created, either from an XML view, or by calling <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller.UI-method-create\">Alloy.Controller.UI.create()</a> or one of the Ti.UI.create* methods, such as as <a class=\"external-link external-link\" href=\"#!/api/Titanium.UI-method-createLabel\">Titanium.UI.createLabel()</a>. This sample also demonstrates Alloy&apos;s &quot;auto-styling&quot; feature, which is also demonstrated in the <a class=\"document-link\" href=\"#!/guide/Dynamic_Styling-section-src-41845657_DynamicStyling-AutostyleProperty\">Autostyle Property</a> section below. </p> <p>This affects the result of adding and removing TSS classes at runtime, as shown below. The two Label elements are both styled with same classes (&quot;medium shadow&quot;) but the top Label element has <tt class=\"\">autoStyle</tt> set to <tt>true</tt>, while the bottom Label element does not. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/views/classes.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/views/classes.xml\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">id</code><code class=\"plain\">=</code><code class=\"string\">&quot;label1&quot;</code><code class=\"plain\"> </code><code class=\"color1\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;medium shadow&quot;</code><code class=\"plain\">&gt;autoStyle=&quot;true&quot;&lt;/</code><code class=\"keyword\">Label</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Label</code><code class=\"plain\"> </code><code class=\"color1\">id</code><code class=\"plain\">=</code><code class=\"string\">&quot;label2&quot;</code><code class=\"plain\"> </code><code class=\"color1\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;medium shadow&quot;</code><code class=\"plain\"> </code><code class=\"color1\">autoStyle</code><code class=\"plain\">=</code><code class=\"string\">&quot;false&quot;</code><code class=\"plain\">&gt;autoStyle=&quot;false&quot;&lt;/</code><code class=\"keyword\">Label</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>The blue button acts as a toggle that calls <tt class=\"\">addClass()</tt> and <tt>removeClass()</tt> on both Labels to add and remove the &quot;redbg bigger&quot; classes from each Label. Initially, they both look identical, and also when the &quot;Add classes&quot; toggle is pressed. However, when those styles are removed, the auto-styled Label returns to its original state (&quot;medium shadow&quot; styles applied); the Label which is not auto-styled is set to its default styled state. </p> <p> <img src=\"images/download/attachments/41845657/add-remove-1.png\" alt=\"images/download/attachments/41845657/add-remove-1.png\" class=\"confluence-embedded-image\" width=\"500\"> </img></p> </div> <div class=\"section section-2\" id=\"src-41845657_DynamicStyling-Autostyleproperty\"> <h2 class=\"heading\"><span>Autostyle property</span></h2> <p>A XML view component whose <tt class=\"\">autostyle</tt> attribute is set to <tt class=\"\">true</tt> has its assigned classes stored to it&apos;s runtime proxy object, making them available This can observed by viewing the console output when you run the Autostyle sample, in which only &quot;label2&quot; has auto-styling enabled. The sample prints the <tt class=\"\">id</tt>, <tt class=\"\">classes</tt>, and <tt>apiName</tt> of all UI components created from XML to the console. </p> <p>As shown below, only the output for <tt class=\"\">label2</tt> includes a <tt>classes</tt> field, since it&apos;s the only element with auto-styling enabled. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">Console output</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"Console output\"> <div class=\"line\"><code class=\"plain\">[INFO] ******** label1 ********</code></div> <div class=\"line\"><code class=\"plain\">[INFO] {</code></div> <div class=\"line\"><code class=\"plain\">[INFO] </code><code class=\"string\">&quot;apiName&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Ti.UI.Label&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">[INFO] </code><code class=\"string\">&quot;id&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;label1&quot;</code></div> <div class=\"line\"><code class=\"plain\">[INFO] }</code></div> <div class=\"line\"><code class=\"plain\">[INFO] </code></div> <div class=\"line\"><code class=\"plain\">[INFO] ******** label2 ********</code></div> <div class=\"line\"><code class=\"plain\">[INFO] {</code></div> <div class=\"line\"><code class=\"plain\">[INFO] </code><code class=\"string\">&quot;apiName&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Ti.UI.Label&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">[INFO] </code><code class=\"string\">&quot;classes&quot;</code><code class=\"plain\">: [</code></div> <div class=\"line\"><code class=\"plain\">[INFO] </code><code class=\"string\">&quot;blue&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">[INFO] </code><code class=\"string\">&quot;huge&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">[INFO] </code><code class=\"string\">&quot;shadow&quot;</code></div> <div class=\"line\"><code class=\"plain\">[INFO] ]</code></div> <div class=\"line\"><code class=\"plain\">[INFO] </code><code class=\"string\">&quot;id&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;label2&quot;</code></div> <div class=\"line\"><code class=\"plain\">[INFO] }</code></div> </div> </div> <p>Autostyle is necessary to take full advantage of the <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller-method-addClass\">addClass()</a>, <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller-method-removeClass\">removeClass()</a>, and <a class=\"external-link external-link\" href=\"#!/api/Alloy.Controller-method-resetClass\">resetClass()</a> methods to properly update the view as classes are removed and added. For a better demonstration of the benefits of enabling auto-styling, see the discussion above for <a class=\"document-link\" href=\"#!/guide/Dynamic_Styling-section-src-41845657_DynamicStyling-AddingandremovingTSSclasses\">Adding and Removing TSS Classes</a>. </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>There is a small performance overhead associated with enabling auto-styling on components, which is why <tt class=\"\">autoStyle</tt> is not disabled for all components by default. You should use <tt>autoStyle</tt> only on elements that will actually use the ability to add/remove classes at runtime. </p> </div> </div> <div class=\"section section-2\" id=\"src-41845657_DynamicStyling-Seealso\"> <h2 class=\"heading\"><span>See also</span></h2> <ul class=\"\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Dynamic_Styles\">Dynamic Styles</a> </p> </li></ul> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=41845657\"><span>Edit</span></a> </div> </body> </html> ","title":"Dynamic Styling"});