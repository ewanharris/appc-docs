Ext.data.JsonP['Project_Configuration_File_(config.json)']({"guide":" <!doctype html> <html> <head> <title>Project Configuration File (config.json)</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-35620077\" class=\"content\"> <h1>Project Configuration File (config.json)</h1> <p>Alloy uses the <tt class=\"\">config.json</tt> file, located in the project&apos;s <tt>app</tt> directory, to specify global values, conditional environment and platform values, and widget dependencies. The configuration file contains the following objects: </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Object </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>global </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Contains key-value pairs present for all environments and platforms. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>env:development </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Contains key-value pairs present for targets built for development, running in either the simulator or emulator. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>env:test </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Contains key-value pairs present for targets built for testing on a device. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>env:production </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Contains key-value pairs present for targets built for production, running after a package installation. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>os:android </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Contains key-value pairs present for targets built for Android. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>os:ios </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Contains key-value pairs present for targets built for iOS. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>os:windows </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Contains key-value pairs present for targets built for Windows Phone. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>dependencies </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Contains key-value pairs for widget dependencies, where the key is the widget name and the value is the version number of the widget. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>autoStyle </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Enables the autostyle feature for the entire Alloy project. See <a class=\"document-link\" href=\"#!/guide/Dynamic_Styles-section-src-37530415_DynamicStyles-Autostyle\">Dynamic Styles: Autostyle</a> for more information. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>backbone </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Select the Backbone.js library to use for Alloy Model and Collection objects. Set to either <tt class=\"\">0.9.2</tt> (default for backwards compatibility), <tt class=\"\">1.1.2</tt>. or <tt>1.3.3</tt>. </p> </td> </tr> </tbody> </table> </div> <p>When mixed together, &apos;os&apos; values override &apos;env&apos; values, which override &apos;global&apos; values. If you want to specify both a platform and environment-specific configuation, combine the &apos;os&apos; and &apos;env&apos; values together into one string with the values space separated. These values are accessible during runtime by prefixing the key with <tt>Alloy.CFG</tt>. </p> <p>Example of a configuration file: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;global&quot;</code><code class=\"plain\">: { </code><code class=\"string\">&quot;foo&quot;</code><code class=\"plain\">: </code><code class=\"value\">1</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;env:development&quot;</code><code class=\"plain\">: { </code><code class=\"string\">&quot;foo&quot;</code><code class=\"plain\">: </code><code class=\"value\">2</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;env:test&quot;</code><code class=\"plain\">: { </code><code class=\"string\">&quot;foo&quot;</code><code class=\"plain\">: </code><code class=\"value\">3</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;env:production&quot;</code><code class=\"plain\">: { </code><code class=\"string\">&quot;foo&quot;</code><code class=\"plain\">: </code><code class=\"value\">4</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:ios env:production&quot;</code><code class=\"plain\">: { </code><code class=\"string\">&quot;foo&quot;</code><code class=\"plain\">: </code><code class=\"value\">5</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:ios env:development&quot;</code><code class=\"plain\">: { </code><code class=\"string\">&quot;foo&quot;</code><code class=\"plain\">: </code><code class=\"value\">6</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:ios env:test&quot;</code><code class=\"plain\">: { </code><code class=\"string\">&quot;foo&quot;</code><code class=\"plain\">: </code><code class=\"value\">7</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;os:android&quot;</code><code class=\"plain\">: { </code><code class=\"string\">&quot;foo&quot;</code><code class=\"plain\">: </code><code class=\"value\">8</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;dependencies&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;com.foo.widget&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;1.0&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">} </code></div> </div> </div> <p>In the above example, if the application is ran on the iPhone simulator and prints out &apos;foo&apos; using <tt>Ti.API.info(Alloy.CFG.foo)</tt>, it will return &apos;6.&apos; </p> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=35620077\"><span>Edit</span></a> </div> </body> </html> ","title":"Project Configuration File (config.json)"});