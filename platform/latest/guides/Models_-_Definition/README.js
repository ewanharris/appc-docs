Ext.data.JsonP['Models_-_Definition']({"guide":" <!doctype html> <html> <head> <title>Models - Definition</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-49153281\" class=\"content\"> <h1>Models - Definition</h1> <p>Place all Model files in the <tt>models</tt> folder. You can only declare one model per file. A Model file is a JavaScript file, which: </p> <ol class=\"\"><li class=\"\"> <p>Loads the <tt>arrow</tt> module. </p> </li><li class=\"\"> <p>Calls the module&apos;s <tt class=\"\">createModel(&apos;name&apos;, schema)</tt> method (or another <tt>Model</tt> method), passing in the name of the model as the first parameter and an object defining the model schema as the second parameter. </p> </li><li class=\"\"> <p>Exports the defined endpoint using the <tt>module.exports</tt> variable. </p> </li></ol> <p>Set the following keys in the object passed to the <tt>createModel()</tt> method to define the model: </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Name </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Required </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>fields </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>true </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>An object that represents the model&#x2019;s schema defined as key-value pairs. The key is the name of the field and the value is the <tt>fields</tt> object. See the next table for details. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>connector </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>true </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Connector to which the model is bound (string). Each model can only have <strong>one</strong> connector. Connectors are responsible for reading and writing data from/to their data source. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>documented </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Determines whether to generate API documentation (true) or not (false). The default value is <tt>true</tt>. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>metadata </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Used to provide connector specific configuration (e.g., mapping the model to a specific database table for the MySQL connector or defining the join properties). </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>autogen </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Used to determine whether to generate API endpoints directly from the model. The default value is <tt>true</tt>. If the endpoint is auto-generated, you do not need to create an API endpoint definition. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>actions </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>An array of data operations supported by the model. The valid values are: &#x2018;create&#x2019;, &#x2018;read&#x2019;, &#x2018;update&#x2019;, and &#x2018;delete&#x2019;. By default, all are supported by the model. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>plural </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>A string used as the property name when your API endpoint returns an array. By default, the plural value is the plural of the model name. For example, if your model is named <strong class=\"\">car</strong>, the default plural would be <strong>cars</strong>. Note: this value can be set on an API or a model. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>singular </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>A string used as the property name when your API endpoint returns a single record. By default, the singular value is the name of the model. Note: this value can be set on an API or a model. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>before </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>One or more blocks to be executed before the request. Blocks are referenced by their <tt>name</tt> property. If you want to execute multiple blocks, you should specify them as an array of block names. If multiple blocks are specified, they are executed in the order specified. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>after </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>One or more blocks to be executed after the request. Blocks are referenced by their <tt>name</tt> property. If you want to execute multiple blocks, you should specify them as an array of block names. If multiple blocks are specified, they are executed in the order specified. </p> </td> </tr> </tbody> </table> </div> <div class=\"section section-2\" id=\"src-49153281_Models-Definition-Fielddefinition\"> <h2 class=\"heading\"><span>Field definition</span></h2> <p>The <tt>fields</tt> property (mentioned above) supports a number of sub-properties as well. The table below outlines these properties. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Name </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Required </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>type </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>true </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>The field primitive type plus others (e.g., &#x2018;string&#x2019;, &apos;number&apos;, &apos;boolean&apos;, &apos;object&apos;, &apos;array&apos;, &apos;date&apos;). Type can be any valid JavaScript primitive type. Type can be specified as a string (e.g., &#x2018;string&#x2019;) or by the type class (e.g., String). </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>required </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Specifies whether the field is required. The default value is <tt>false</tt>. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>validator </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>A function or regular expression that validates the value of the field. The function is passed the data to validate and should return either <tt class=\"\">null</tt> or <tt>undefined</tt> if the validation succeeds. Any other return value means the validation failed, and the return value will be used in the exception message. If a regular expression is used, it should evaluate to either true or false. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>name </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Used if the model field name is different than the field name in the connector&#x2019;s model or the underlying data source for the field name. For example, if my model field is <tt class=\"\">first_name</tt> and the column in a MySQL database is <tt class=\"\">fname</tt>, the value of the <tt class=\"\">name</tt> property should be <tt>&apos;fname&apos;</tt>. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>default </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>The default value for the field. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>description </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>The description of the field (used for API documentation). </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>readonly </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Either <tt class=\"\">true</tt> or <tt class=\"\">false</tt>. If <tt>true</tt> the field will be read-only and any attempt to write the field value will fail. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>maxlength </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>The max length of the field (specified as an integer) </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>get </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>A function used to set the value of a property that will be sent to the client. This property is useful if you want to define a custom field where the value is derived. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>set </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>A function used to set the value of a property that will be sent to the connector. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>custom </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>This property should be specified and set to <tt>true</tt> if you are defining a custom field. A custom field is one that does not exist in the underlying data source for the connector you specified. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>model </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>false </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Model name of the field property. This is either the logical name of a custom model or a connector model name in the form <strong>connector/model_name</strong> (e.g., appc.mysql/employee) </p> </td> </tr> </tbody> </table> </div> </div> <div class=\"section section-2\" id=\"src-49153281_Models-Definition-Modelschemaexample\"> <h2 class=\"heading\"><span>Model schema example</span></h2> <p>The example below creates the <tt class=\"\">car</tt> model with the specified schema. The car models will be stored in Mobile Backend Services as CustomObjects. Since the <tt class=\"\">autogen</tt> property was not set to <tt class=\"\">false</tt>, API Builder automatically generates the pre-defined endpoints for the client to access the car models using the <tt class=\"\">&lt;SEVER_ADDRESS&gt;/</tt><tt>api/car</tt> endpoints. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">var Arrow = require(</code><code class=\"string\">&apos;arrow&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">var car = Arrow.createModel(</code><code class=\"string\">&apos;car&apos;</code><code class=\"plain\">, {</code></div> <div class=\"line\"><code class=\"plain\"> fields: {</code></div> <div class=\"line\"><code class=\"plain\"> make:{type:String, description:</code><code class=\"string\">&apos;the make of a car &apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\"> model:{type:String, description:</code><code class=\"string\">&apos;the model of the car&apos;</code><code class=\"plain\">, required:</code><code class=\"keyword\">true</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\"> year: {type:Number, description:</code><code class=\"string\">&apos;year the car was made&apos;</code><code class=\"plain\">, required:</code><code class=\"keyword\">true</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\"> bluebook: {type:Number, description:</code><code class=\"string\">&apos;kelly bluebook value of the car&apos;</code><code class=\"plain\">, required:</code><code class=\"keyword\">true</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\"> mileage: {type:Number, description:</code><code class=\"string\">&apos;current mileage of the car&apos;</code><code class=\"plain\">, required:</code><code class=\"keyword\">true</code><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> connector: </code><code class=\"string\">&apos;appc.arrowdb&apos;</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">module.exports = car;</code></div> </div> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=49153281\"><span>Edit</span></a> </div> </body> </html> ","title":"Models - Definition"});