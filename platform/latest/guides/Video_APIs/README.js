Ext.data.JsonP['Video_APIs']({"guide":" <!doctype html> <html> <head> <title>Video APIs</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-29004911\" class=\"content\"> <h1>Video APIs</h1> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Objective\">Objective</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Contents\">Contents</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Fullscreenandembeddedplayers\">Fullscreen and embedded players</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Movieevents\">Movie events</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Hands-onpractice\">Hands-on practice</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Goal\">Goal</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Steps\">Steps</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Windowsdevelopmentconsiderations\">Windows development considerations</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Grantaccesstovideostreamandaudiostream\">Grant access to video stream and audio stream</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Grantaccesstomusiclibrary\">Grant access to music library</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Referencesandfurtherreading\">References and further reading</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Video_APIs-section-src-29004911_VideoAPIs-Summary\">Summary</a> </p> </li></ul> <div class=\"section section-2\" id=\"src-29004911_VideoAPIs-Objective\"> <h2 class=\"heading\"><span>Objective</span></h2> <p>In this chapter, you&apos;ll learn how you can embed videos within your apps. You&apos;ll see how to play both local files and how to stream remote videos. </p> </div> <div class=\"section section-2\" id=\"src-29004911_VideoAPIs-Contents\"> <h2 class=\"heading\"><span>Contents</span></h2> <p>You can use the <a class=\"external-link external-link\" href=\"#!/api/Titanium.Media.VideoPlayer\"> <tt class=\"\">Titanium.Media.VideoPlayer</tt> </a> to play videos in your Titanium app. This object is returned when you call <a class=\"external-link external-link\" href=\"#!/api/Titanium.Media-method-createVideoPlayer\"> <tt class=\"\">Titanium.Media.createVideoPlayer()</tt> </a>. It provide useful methods, such as <tt class=\"\">play()</tt>, <tt class=\"\">pause()</tt>, and <tt>stop()</tt>. </p> <p>You can play local video files by calling the <tt class=\"\">setMedia()</tt> method or by setting the <tt class=\"\">media</tt> property. Either accepts a File or Blob object. You can play a remote video by calling the <tt class=\"\">setUrl()</tt> method or by setting the <tt class=\"\">url</tt> property. Either accepts the URL of the media to play. (There&apos;s also a deprecated contentURL property, but you should use <tt class=\"\">url</tt> instead.) Finally, you can set the <tt class=\"\">autoplay</tt> property to <tt>true</tt> to automatically play the video when the VideoPlayer is rendered. </p> <p>The VideoPlayer is treated like a regular Titanium View. Thus, you can overlay images and views over the VideoPlayer by adding them to the view hierarchy. Like this: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">var activeMovie = Titanium.Media.createVideoPlayer();</code></div> <div class=\"line\"><code class=\"comments\">// create a label </code></div> <div class=\"line\"><code class=\"plain\">var movieLabel = Titanium.UI.createLabel({</code></div> <div class=\"line\"><code class=\"plain\">\ttext: </code><code class=\"string\">&apos;Do not try this at home&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">\theight: </code><code class=\"value\">35</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">\tcolor: </code><code class=\"string\">&apos;white&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">\tfont: {fontSize: </code><code class=\"value\">24</code><code class=\"plain\">, fontFamily: </code><code class=\"string\">&apos;Helvetica Neue&apos;</code><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"comments\">// add label to view</code></div> <div class=\"line\"><code class=\"plain\">activeMovie.add(movieLabel);</code></div> </div> </div> <div class=\"section section-3\" id=\"src-29004911_VideoAPIs-Fullscreenandembeddedplayers\"> <h3 class=\"heading\"><span>Fullscreen and embedded players</span></h3> <p>On Android, the VideoPlayer must be used fullscreen. It cannot be embedded into a smaller view. This is because on Android, the VideoPlayer is not technically a proxy for a native view object like it is on iOS. Instead, creating the VideoPlayer fires an Intent which launches the native video player Activity. It&apos;s for this reason that on Android, you don&apos;t call <tt>win.add(videoPlayer)</tt>. If you did so, your app would throw an error and crash. </p> <p>On iOS, you can embed the video player within a window or view; it doesn&apos;t have to be shown full size. Simply set <tt class=\"\">height</tt> and <tt class=\"\">width</tt> properties on the VideoPlayer. To display the player fullscreen, you can set <tt>videoPlayer.fullscreen=true</tt>. </p> <p>You can control the way in which the video playback controls are shown for the player. You can &quot;embed&quot; the within the player, which removes them from the player&apos;s surrounding chrome giving more space to your video. You do so by setting the <tt>movieControlStyle</tt> property, like this </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> activeMovie = Titanium.Media.createVideoPlayer({</code></div> <div class=\"line\"><code class=\"plain\">\turl: </code><code class=\"string\">&apos;../movie.mp4&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">\tmovieControlStyle: Titanium.Media.VIDEO_CONTROL_EMBEDDED</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-29004911_VideoAPIs-Movieevents\"> <h3 class=\"heading\"><span>Movie events</span></h3> <p>The VideoPlayer supports quite a few events that you can use to control the playback experience. See the <a class=\"external-link external-link\" href=\"#!/api/Titanium.Media.VideoPlayer\"> <tt>Ti.Media.VideoPlayer</tt> </a> API docs page for full information. But here are a few of the events you might monitor: </p> <ul class=\"\"><li class=\"\"> <p><tt class=\"\">complete</tt> &#x2013; fired when the playback ends or the user exits playback, use the <tt class=\"\">e.reason</tt> property to determine the actual stop condition, such as <tt>Ti.Media.VIDEO_FINISH_REASON_PLAYBACK_ENDED</tt> </p> </li><li class=\"\"> <p><tt>load</tt> &#x2013; fired when the movie finishes loading </p> </li><li class=\"\"> <p><tt class=\"\">fullscreen</tt> &#x2013; fired when the movie changes to or from fullscreen, use the <tt>e.entering</tt> property to determine if the player is entering or leaving fullscreen mode </p> </li></ul> <p>A technique you should consider is stopping the movie when the video it&apos;s embedded in closes. You can do that simply with code like this: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">win.addEventListener(</code><code class=\"string\">&apos;close&apos;</code><code class=\"plain\">, </code><code class=\"keyword\">function</code><code class=\"plain\">() {</code></div> <div class=\"line\"><code class=\"plain\">\tactiveMovie.stop();</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-29004911_VideoAPIs-Hands-onpractice\"> <h3 class=\"heading\"><span>Hands-on practice</span></h3> <div class=\"section section-4\" id=\"src-29004911_VideoAPIs-Goal\"> <h4 class=\"heading\"><span>Goal</span></h4> <p>In this activity, you will write a simple app to stream a movie from a remote URL. </p> </div> <div class=\"section section-4\" id=\"src-29004911_VideoAPIs-Steps\"> <h4 class=\"heading\"><span>Steps</span></h4> <ol class=\"\"><li> <p>Create a new Titanium Mobile app. Delete all of the code from the app.js file. </p> </li><li> <p>Define a window with a black background. Optionally, set the orientation of the window to landscape. </p> </li><li> <p>Define a VideoPlayer with these characteristics: </p> <ul class=\"\"><li> <p>backgroundColor = black </p> </li><li> <p>default video controls (not embedded) </p> </li><li> <p>scalingMode = fill the screen </p> </li><li> <p>fullscreen </p> </li><li> <p>Play the <a class=\"external-link external-link\" href=\"http://assets.appcelerator.com.s3.amazonaws.com/video/media.m4v\" target=\"_blank\">http://assets.appcelerator.com.s3.amazonaws.com/video/media.m4v</a> movie. Depending on your Android environment, that movie might not play well (due to encoding issues from the creation process). If you have playback troubles, you can play <a class=\"external-link external-link\" href=\"http://assets.appcelerator.com.s3.amazonaws.com/video/media.3gp\" target=\"_blank\">http://assets.appcelerator.com.s3.amazonaws.com/video/media.3gp</a> on Android instead. </p> </li></ul></li><li> <p>Add the branching logic so that on iOS you add the VideoPlayer to the window object. </p> </li><li> <p>Add the code to play the video stream and open the window. </p> </li><li> <p>Build and test your app in the simulator/emulator or on device. </p> </li></ol> <p> </p> <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro\"> <div class=\"title\">Simulator / emulator rotation</div> <p>Rotate the iPhone simulator by pressing Command and either the left or right arrow key. Rotate the Android emulator by pressing Control+F12. </p> </div> </div> </div> <div class=\"section section-3\" id=\"src-29004911_VideoAPIs-Windowsdevelopmentconsiderations\"> <h3 class=\"heading\"><span>Windows development considerations</span></h3> <p>In order to enable camera and audio recording for Windows Phone, you need to provide appropriate Capabilities in your <tt>tiapp.xml.</tt> Windows Phone users are prompted to grant or deny permission when your application attempt to use it. </p> <div class=\"section section-4\" id=\"src-29004911_VideoAPIs-Grantaccesstovideostreamandaudiostream\"> <h4 class=\"heading\"><span>Grant access to video stream and audio stream</span></h4> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">ti</code><code class=\"plain\">:app&gt;</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">windows</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Capabilities</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">DeviceCapability</code><code class=\"plain\"> </code><code class=\"color1\">Name</code><code class=\"plain\">=</code><code class=\"string\">&quot;microphone&quot;</code><code class=\"plain\"> /&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">DeviceCapability</code><code class=\"plain\"> </code><code class=\"color1\">Name</code><code class=\"plain\">=</code><code class=\"string\">&quot;webcam&quot;</code><code class=\"plain\"> /&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">Capabilities</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">windows</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">ti</code><code class=\"plain\">:app&gt;</code></div> </div> </div> </div> <div class=\"section section-4\" id=\"src-29004911_VideoAPIs-Grantaccesstomusiclibrary\"> <h4 class=\"heading\"><span>Grant access to music library</span></h4> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">ti</code><code class=\"plain\">:app&gt;</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">windows</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Capabilities</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Capability</code><code class=\"plain\"> </code><code class=\"color1\">Name</code><code class=\"plain\">=</code><code class=\"string\">&quot;musicLibrary&quot;</code><code class=\"plain\"> /&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">Capabilities</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">windows</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">ti</code><code class=\"plain\">:app&gt;</code></div> </div> </div> <p>For more information about audio configuration in <tt>tiapp.xml</tt>, see <a class=\"external-link external-link\" href=\"#!/guide/tiapp.xml_and_timodule.xml_Reference-section-29004921_tiapp.xmlandtimodule.xmlReference-Windows-specificsection\">Windows-specific section</a> in <a class=\"external-link external-link\" href=\"#!/guide/tiapp.xml_and_timodule.xml_Reference\">tiapp.xml and timodule.xml Reference</a>. </p> </div> </div> <div class=\"section section-3\" id=\"src-29004911_VideoAPIs-Referencesandfurtherreading\"> <h3 class=\"heading\"><span>References and further reading</span></h3> <ul class=\"\"><li> <p><a class=\"external-link external-link\" href=\"http://assets.appcelerator.com.s3.amazonaws.com/app_u/ebook/7.2_video.zip\" target=\"_blank\">Finished code</a> </p> </li><li> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.Media.VideoPlayer\">API docs: Ti.Media.VideoPlayer</a> </p> </li><li> <p><a class=\"external-link external-link\" href=\"http://developer.apple.com/library/ios/#documentation/Miscellaneous/Conceptual/iPhoneOSTechOverview/MediaLayer/MediaLayer.html\" target=\"_blank\">iOS Developer Docs: Supported video formats</a> </p> </li><li> <p><a class=\"external-link external-link\" href=\"http://developer.android.com/guide/appendix/media-formats.html\" target=\"_blank\">Android Developer Docs: Supported media formats</a> </p> </li><li> <p><a class=\"external-link external-link\" href=\"https://msdn.microsoft.com/windows/uwp/audio-video-camera/index\" target=\"_blank\">Windows 10 Mobile: Audio, video, and camera</a> </p> </li></ul> </div> </div> <div class=\"section section-2\" id=\"src-29004911_VideoAPIs-Summary\"> <h2 class=\"heading\"><span>Summary</span></h2> <p>In this chapter, you learned how you can embed videos within your apps. You saw how to play both local files and how to stream remote videos. </p> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=29004911\"><span>Edit</span></a> </div> </body> </html> ","title":"Video APIs"});