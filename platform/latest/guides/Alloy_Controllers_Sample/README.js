Ext.data.JsonP['Alloy_Controllers_Sample']({"guide":" <!doctype html> <html> <head> <title>Alloy Controllers Sample</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-46255935\" class=\"content\"> <h1>Alloy Controllers Sample</h1> <p>This document provides a sample of how to use an Alloy Controller. <span style=\"color: #2b4771;\"> </span> </p> <div class=\"section section-2\" id=\"src-46255935_AlloyControllersSample-index.js\"> <h2 class=\"heading\"><span>index.js</span></h2> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">index.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"index.js\"> <div class=\"line\"><code class=\"comments\">// These &quot;builtin&quot; requires will be detected by the alloy compile process.</code></div> <div class=\"line\"><code class=\"comments\">// You do not need to manually copy them to their project location.</code></div> <div class=\"line\"><code class=\"comments\">// When the alloy compile finds these require calls, it will include them</code></div> <div class=\"line\"><code class=\"comments\">// in your Titanium project as &quot;Resources/alloy/animation.js&quot; and</code></div> <div class=\"line\"><code class=\"comments\">// &quot;Resources/alloy/string.js&quot; automatically.</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> animation = require(</code><code class=\"string\">&apos;alloy/animation&apos;</code><code class=\"plain\">),</code></div> <div class=\"line\"><code class=\"plain\">\tstring = require(</code><code class=\"string\">&apos;alloy/string&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> shake(e) {</code></div> <div class=\"line\"><code class=\"plain\"> animation.shake($.mover, 0, </code><code class=\"keyword\">function</code><code class=\"plain\"> (){</code></div> <div class=\"line\"><code class=\"plain\"> alert(</code><code class=\"string\">&quot;Shake ended.&quot;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> flash(e) {</code></div> <div class=\"line\"><code class=\"plain\"> animation.flash($.mover);</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> trim(e) {</code></div> <div class=\"line\"><code class=\"plain\">\t$.label.text = string.trim($.label.text);</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (OS_IOS) {</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"keyword\">function</code><code class=\"plain\"> flip(e) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">var</code><code class=\"plain\"> front, back;</code></div> <div class=\"line\"><code class=\"plain\"> e.bubbleParent = </code><code class=\"keyword\">false</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.source === $.back) {</code></div> <div class=\"line\"><code class=\"plain\"> front = $.back;</code></div> <div class=\"line\"><code class=\"plain\"> back = $.front;</code></div> <div class=\"line\"><code class=\"plain\"> } </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> front = $.front;</code></div> <div class=\"line\"><code class=\"plain\"> back = $.back;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> animation.flipHorizontal(front, back, 500, </code><code class=\"keyword\">function</code><code class=\"plain\">(e) {</code></div> <div class=\"line\"><code class=\"plain\"> Ti.API.info(</code><code class=\"string\">&apos;flipped&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\">\t}</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">$.index.open();</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\">// runtime unit tests</code></div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (!ENV_PROD) {</code></div> <div class=\"line\"><code class=\"plain\">\trequire(</code><code class=\"string\">&apos;specs/index&apos;</code><code class=\"plain\">)($);</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=46255935\"><span>Edit</span></a> </div> </body> </html> ","title":"Alloy Controllers Sample"});