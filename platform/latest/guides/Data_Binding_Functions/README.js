Ext.data.JsonP['Data_Binding_Functions']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Data Binding Functions</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\"/>\n\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\"/>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"41846626\" class=\"content\">\n            <h1>Data Binding Functions</h1>\n    <p>\nDemonstrates how to manually trigger a UI update between the data model and a view.    </p>\n    <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro has-no-icon\">\n            <div class=\"title\">App Folder Location</div>\n        \n    <p>\nalloy/test/apps/<strong class=\" \">models/binding_dataFunction</strong>    </p>\n    </div>\n    \n    <p>\nBy default, a view is automatically updated whenever it's associated data collection changes. The <tt class=\" \">dataFunction</tt> attribute of an Alloy element lets you provide an explicit name to the function that's auto-generated by the Allow compiler that, when called, performs this update. This lets you manually call this function when appropriate for your application.    </p>\n    <p>\n        <img src=\"images/download/attachments/41846626/screenshot.png\" alt=\"images/download/attachments/41846626/screenshot.png\" class=\"confluence-embedded-image\" width=\"200\"/>\n            </p>\n    <p>\nThe main XML view defines the &lt;TableView/&gt; element and assigns the value &quot;updateUI&quot; to the <tt class=\" \">dataFunction</tt> attribute. It also provides some Labels (which act as buttons) to call the <tt class=\" \">doChanges()</tt> and <tt class=\" \">updateUI()</tt> functions defined in the view-controller.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/views/index.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;TableView id=</code><code class=\"string\">\"table\"</code><code class=\"plain\"> dataCollection=</code><code class=\"string\">\"locations\"</code><code class=\"plain\"> dataFunction=</code><code class=\"string\">\"updateUi\"</code><code class=\"plain\"> dataTransform=</code><code class=\"string\">\"transformData\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">\t&lt;Require src=</code><code class=\"string\">\"row\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/TableView&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;View id=</code><code class=\"string\">\"footer\"</code><code class=\"plain\"> </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">\"toolbar\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;Label id=</code><code class=\"string\">\"leftButton\"</code><code class=\"plain\"> onClick=</code><code class=\"string\">\"doChanges\"</code><code class=\"plain\">&gt;change&lt;/Label&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;View </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">\"divider\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;Label id=</code><code class=\"string\">\"rightButton\"</code><code class=\"plain\"> onClick=</code><code class=\"string\">\"updateUi\"</code><code class=\"plain\">&gt;update&lt;/Label&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/View&gt;</code></div>\n</div>\n</div>    <p>\nClicking <strong class=\" \">Change</strong> in the sample app calls the <tt class=\" \">doChanges()</tt> function, which modifies the data model used by the <tt class=\" \">TableView</tt>. The <tt class=\" \">model.set()</tt> method's second parameter is passed <tt class=\" \">silent: true</tt>, which prevents the data binding from firing automatically. Clicking the <strong class=\" \">Update</strong> button invokes the <tt class=\" \">updateUI()</tt> function, which then causes the UI to update.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/controllers/index.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">function doChanges(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">\t</code><code class=\"comments\">// grab a random model by index</code></div>\n<div class=\"line\"><code class=\"plain\">\tvar index = Math.round((locations.length-</code><code class=\"value\">1</code><code class=\"plain\">)*Math.random());</code></div>\n<div class=\"line\"><code class=\"plain\">\tvar model = locations.at(index);</code></div>\n<div class=\"line\"><code class=\"plain\">\t</code><code class=\"comments\">// Modify the model by adding a \"+\" to the end of the model's name</code></div>\n<div class=\"line\"><code class=\"plain\">\tmodel.set(</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t{ name: model.get(</code><code class=\"string\">'name'</code><code class=\"plain\">) + </code><code class=\"string\">'+'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t</code><code class=\"comments\">// set silent to true to prevent data binding from firing automatically.Â </code></div>\n<div class=\"line\"><code class=\"plain\">\t\t</code><code class=\"comments\">// Silent changes will not trigger data binding to update.</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t{ silent: </code><code class=\"keyword\">true</code><code class=\"plain\"> }</code></div>\n<div class=\"line\"><code class=\"plain\">\t);</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"comments\">// On first run, call the binding function name we defined in the TableView's dataFunction attribute</code></div>\n<div class=\"line\"><code class=\"plain\">updateUi();</code></div>\n</div>\n</div>    <p>\nThe sample's  data collection is created by the alloy.js file.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/alloy.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">var Location = Backbone.Model.extend();</code></div>\n<div class=\"line\"><code class=\"plain\">var Locations = Backbone.Collection.extend({</code></div>\n<div class=\"line\"><code class=\"plain\">\tmodel: Location</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\"><code class=\"plain\">Alloy.Collections.locations = </code><code class=\"keyword\">new</code><code class=\"plain\"> Locations();</code></div>\n<div class=\"line\"><code class=\"plain\">Alloy.Collections.locations.reset([</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'G.I. Lab'</code><code class=\"plain\">, color: </code><code class=\"string\">'#a00'</code><code class=\"plain\">, direction: </code><code class=\"string\">'left'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Medical Treatment Unit'</code><code class=\"plain\">, color: </code><code class=\"string\">'#a00'</code><code class=\"plain\">, direction: </code><code class=\"string\">'right'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Outpatient Surgery'</code><code class=\"plain\">, color: </code><code class=\"string\">'#a00'</code><code class=\"plain\">, direction: </code><code class=\"string\">'left'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Telephone'</code><code class=\"plain\">, color: </code><code class=\"string\">'#a00'</code><code class=\"plain\">, direction: </code><code class=\"string\">'right'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Central Village'</code><code class=\"plain\">, color: </code><code class=\"string\">'#008'</code><code class=\"plain\">, direction: </code><code class=\"string\">'left'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Psychiatric Unit'</code><code class=\"plain\">, color: </code><code class=\"string\">'#008'</code><code class=\"plain\">, direction: </code><code class=\"string\">'left'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Tower Elevators'</code><code class=\"plain\">, color: </code><code class=\"string\">'#05B8CC'</code><code class=\"plain\">, direction: </code><code class=\"string\">'left'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Main Village'</code><code class=\"plain\">, color: </code><code class=\"string\">'#3B5323'</code><code class=\"plain\">, direction: </code><code class=\"string\">'left'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Conference Center'</code><code class=\"plain\">, color: </code><code class=\"string\">'#3B5323'</code><code class=\"plain\">, direction: </code><code class=\"string\">'left'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Parking Garage'</code><code class=\"plain\">, color: </code><code class=\"string\">'#3B5323'</code><code class=\"plain\">, direction: </code><code class=\"string\">'left'</code><code class=\"plain\"> },</code></div>\n<div class=\"line\"><code class=\"plain\">\t{ name: </code><code class=\"string\">'Suite A-D'</code><code class=\"plain\">, color: </code><code class=\"string\">'#3B5323'</code><code class=\"plain\">, direction: </code><code class=\"string\">'left'</code><code class=\"plain\"> }</code></div>\n<div class=\"line\"><code class=\"plain\">]);</code></div>\n</div>\n</div>    <div class=\"section section-2 \" id=\"41846626_DataBindingFunctions-SeeAlso\">\n        <h2 class=\"heading \"><span>See Also</span></h2>\n<ul class=\" \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Alloy_Data_Binding-section-36739592_AlloyDataBinding-AlloyBinding\">Alloy Binding</a>    </p>\n</li></ul>    <p>\n    </p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=41846626\"><span>Edit</span></a>\n    \n        <div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n    </div>\n</body>\n</html>\n","title":"Data Binding Functions"});