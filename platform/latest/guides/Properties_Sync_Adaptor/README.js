Ext.data.JsonP['Properties_Sync_Adaptor']({"guide":" <!doctype html> <html> <head> <title>Properties Sync Adaptor</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-41845721\" class=\"content\"> <h1>Properties Sync Adaptor</h1> <p>Demonstrates using Alloy&apos;s Titanium.App.Properties sync adaptor to save data. </p> <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro has-no-icon\"> <div class=\"title\">App Folder Location</div> <p>alloy/test/apps/<strong>models/properties</strong> </p> </div> <p>The sample presents two tabs: Model and Collection. The modelTab.xml view provides buttons to create or destroy an instance of a model, and increment one a numeric model fields. The Collection tab provides UI to add items to a collection, which is bound to a TableView. Clicking a table row updates a field in the corresponding collection item. Long-pressing a table row deletes the corresponding item from the collection. </p> <p> <img src=\"images/download/attachments/41845721/propertie_sync.png\" alt=\"images/download/attachments/41845721/propertie_sync.png\" class=\"confluence-embedded-image\"> </img></p> <p>The application includes two model configuration files, one used by each tab view. Note that the adaptor type in each configuration file is set to &quot;properties&quot;. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/models/modelTab.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/models/modelTab.js\"> <div class=\"line\"><code class=\"plain\">exports.definition = {</code></div> <div class=\"line\"><code class=\"plain\"> config: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;columns&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;id&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;String&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;count&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Int&quot;</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;defaults&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;id&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;foobar&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;count&quot;</code><code class=\"plain\">: </code><code class=\"value\">0</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;adapter&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;type&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;properties&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;collection_name&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;singleModel&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">};</code></div> </div> </div> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/models/collectionTab.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/models/collectionTab.js\"> <div class=\"line\"><code class=\"plain\">exports.definition = {</code></div> <div class=\"line\"><code class=\"plain\"> config: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;columns&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;name&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;String&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;score&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Int&quot;</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;defaults&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;name&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;&lt;no name&gt;&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;score&quot;</code><code class=\"plain\">: </code><code class=\"value\">0</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;adapter&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;type&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;properties&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;collection_name&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;collection&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">};</code></div> </div> </div> <p>The modelTab.js view-controller creates an instance of the <strong class=\"\">modelTab</strong> model, and binds a callback function to the <tt class=\"\">change</tt> event on the <tt class=\"\">count</tt> field, which updates the label in the corresponding view with a JSON representation of the model&apos;s <a class=\"external-link external-link\" href=\"http://backbonejs.org/#Model-attributes\" target=\"_blank\">attributes</a>. The same handler responds to model <tt>fetch</tt> events. It also defined event handlers for the Create, Destroy, and Increment buttons defined the app/views/modelTab.xml file (not shown). </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/modelTab.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/modelTab.js\"> <div class=\"line\"><code class=\"plain\">var ID = </code><code class=\"string\">&apos;instance&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">var app = Alloy.createModel(</code><code class=\"string\">&apos;modelTab&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\">// Change label when &apos;count&apos; changes on model</code></div> <div class=\"line\"><code class=\"plain\">app.on(</code><code class=\"string\">&apos;fetch change:count&apos;</code><code class=\"plain\">, function(model) {</code></div> <div class=\"line\"><code class=\"plain\">\t$.label.text = </code><code class=\"string\">&apos;model: &apos;</code><code class=\"plain\"> + JSON.stringify(app.attributes);</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"comments\">// fetch model from Ti.App.Properties adapter</code></div> <div class=\"line\"><code class=\"plain\">app.set(</code><code class=\"string\">&apos;id&apos;</code><code class=\"plain\">, ID);</code></div> <div class=\"line\"><code class=\"plain\">app.fetch();</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\">// event handlers</code></div> <div class=\"line\"><code class=\"plain\">function create(e) {</code></div> <div class=\"line\"><code class=\"plain\">\tapp.save(app.defaults);</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">function destroy(e) {</code></div> <div class=\"line\"><code class=\"plain\">\tapp.destroy();</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">function increment(e) {</code></div> <div class=\"line\"><code class=\"plain\">\tapp.set({</code></div> <div class=\"line\"><code class=\"plain\"> count: app.get(</code><code class=\"string\">&apos;count&apos;</code><code class=\"plain\">)+</code><code class=\"value\">1</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> id: ID</code></div> <div class=\"line\"><code class=\"plain\">\t});</code></div> <div class=\"line\"><code class=\"plain\">\tapp.save();</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>The Collection tab provides UI to add items to the collection, which is bound to the <tt class=\"\">TableView</tt> element&apos;s <tt class=\"\">dataCollection</tt> attribute. Clicking a table row updates the corresponding collection item&apos;s &quot;score&quot; field, which is displayed in the row. Whenever a model is added or destroyed (by long-pressing on a TableView row), the new collection data is fetched, which fires the <tt class=\"\">fetch</tt> event. The <tt class=\"\">resetTableData()</tt> function re-populates the TableView with new instances of the <strong>controllers/collection/row.js</strong> controller, passing each the ID, name, and score to display. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/collection/collectionTab.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/collection/collectionTab.js\"> <div class=\"line\"><code class=\"plain\">var items = Alloy.createCollection(</code><code class=\"string\">&apos;collectionTab&apos;</code><code class=\"plain\">),</code></div> <div class=\"line\"><code class=\"plain\"> rowControllers = [];</code></div> <div class=\"line\"><code class=\"comments\">// update the row and save the model when the score changes</code></div> <div class=\"line\"><code class=\"plain\">items.on(</code><code class=\"string\">&apos;change:score&apos;</code><code class=\"plain\">, function(model) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (model) {</code></div> <div class=\"line\"><code class=\"plain\"> var row = _.find(rowControllers, function(r) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> r.id === model.id;</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (row) {</code></div> <div class=\"line\"><code class=\"plain\"> row.score.text = model.get(</code><code class=\"string\">&apos;score&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> model.save();</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"comments\">// reset the table whenever a model is added or destroyed</code></div> <div class=\"line\"><code class=\"comments\">// completely. Also reset whenever the collection is reset.</code></div> <div class=\"line\"><code class=\"comments\">// Save the model changes if necessary.</code></div> <div class=\"line\"><code class=\"plain\">items.on(</code><code class=\"string\">&apos;fetch&apos;</code><code class=\"plain\">, function(model) {</code></div> <div class=\"line\"><code class=\"plain\"> resetTableData();</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"comments\">// fetch collection from Ti.App.Properties adapter</code></div> <div class=\"line\"><code class=\"plain\">items.fetch();</code></div> <div class=\"line\"><code class=\"comments\">//////////////////////////////////////</code></div> <div class=\"line\"><code class=\"comments\">////////// private function //////////</code></div> <div class=\"line\"><code class=\"comments\">//////////////////////////////////////</code></div> <div class=\"line\"><code class=\"plain\">function resetTableData() {</code></div> <div class=\"line\"><code class=\"plain\"> rowControllers = [];</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// create row controllers based on all models in the collection</code></div> <div class=\"line\"><code class=\"plain\"> _.each(items.toJSON(), function(i) {</code></div> <div class=\"line\"><code class=\"plain\"> rowControllers.push(Alloy.createController(</code><code class=\"string\">&apos;collection/row&apos;</code><code class=\"plain\">, {</code></div> <div class=\"line\"><code class=\"plain\"> id: i.id,</code></div> <div class=\"line\"><code class=\"plain\"> name: i.name,</code></div> <div class=\"line\"><code class=\"plain\"> score: i.score</code></div> <div class=\"line\"><code class=\"plain\"> }));</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// fill table with the controllers&apos; TableViewRow, and sort</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// by the row&apos;s ID</code></div> <div class=\"line\"><code class=\"plain\"> var theArray = _.sortBy(rowControllers, function(r) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> r.getView(</code><code class=\"string\">&apos;name&apos;</code><code class=\"plain\">).text;</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> $.table.setData(_.map(theArray, function(r) {</code><code class=\"keyword\">return</code><code class=\"plain\"> r.getView();}));</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"comments\">////////////////////////////////////</code></div> <div class=\"line\"><code class=\"comments\">////////// event handlers //////////</code></div> <div class=\"line\"><code class=\"comments\">////////////////////////////////////</code></div> <div class=\"line\"><code class=\"plain\">function deleteItem(e) {</code></div> <div class=\"line\"><code class=\"plain\"> var model = items.get(e.row.id);</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (model) {</code></div> <div class=\"line\"><code class=\"plain\"> model.destroy();</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> items.fetch();</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">function incrementScore(e) {</code></div> <div class=\"line\"><code class=\"plain\"> var model = items.get(e.row.id);</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (model) {</code></div> <div class=\"line\"><code class=\"plain\"> model.set(</code><code class=\"string\">&apos;score&apos;</code><code class=\"plain\">, model.get(</code><code class=\"string\">&apos;score&apos;</code><code class=\"plain\">)+</code><code class=\"value\">1</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">function addItem(e) {</code></div> <div class=\"line\"><code class=\"plain\"> var model = items.create({</code></div> <div class=\"line\"><code class=\"plain\"> name: $.text.value || </code><code class=\"string\">&apos;&lt;no name&gt;&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> score: </code><code class=\"value\">0</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> items.add(model);</code></div> <div class=\"line\"><code class=\"plain\"> items.fetch();</code></div> <div class=\"line\"><code class=\"plain\"> $.text.value = </code><code class=\"string\">&apos;&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <div class=\"section section-2\" id=\"src-41845721_PropertiesSyncAdaptor-SeeAlso\"> <h2 class=\"heading\"><span>See Also</span></h2> <ul class=\"\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Sync_Adapters_and_Migrations\">Alloy Sync Adapters and Migrations</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Alloy_Collection_and_Model_Objects\">Alloy Collection and Model Objects</a> </p> </li></ul> <p> </p> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=41845721\"><span>Edit</span></a> </div> </body> </html> ","title":"Properties Sync Adaptor"});