Ext.data.JsonP['Managing_Email_Templates']({"guide":" <!doctype html> <html> <head> <title>Managing Email Templates</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-37548619\" class=\"content\"> <h1>Managing Email Templates</h1> <p>The Email Templates screen lets you create and edit plain text and HTML email templates. The email template&apos;s subject and body can contain <a class=\"document-link\" href=\"#!/guide/Managing_Email_Templates-section-src-37548619_ManagingEmailTemplates-placeholder\">placeholder values</a> that are dynamically replaced with values you specify when sending the email using the Mobile Backend Services (MBS) <a class=\"external-link external-link\" href=\"/arrowdb/latest/#!/api/Emails-method-email_from_template\">email_from_template</a> REST API, Titanium.Cloud.Emails.send() method or equivalent native <a class=\"external-link external-link\" href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSEmails.html#//api/name/send:withBlock:\" target=\"_blank\">iOS</a> or <a class=\"external-link external-link\" href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSEmails.html\" target=\"_blank\">Android</a> method. The email can be sent as plain text, HTML, or multi-part using these methods. </p> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Managing_Email_Templates-section-src-37548619_ManagingEmailTemplates-Creatinganemailtemplate\">Creating an email template</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Managing_Email_Templates-section-src-37548619_ManagingEmailTemplates-Sendingemailbasedonatemplate\">Sending email based on a template </a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Managing_Email_Templates-section-src-37548619_ManagingEmailTemplates-Usingplaceholderfields\">Using placeholder fields</a> </p> </li></ul> <div class=\"section section-2\" id=\"src-37548619_ManagingEmailTemplates-Creatinganemailtemplate\"> <h2 class=\"heading\"><span>Creating an email template</span></h2> <p>An email template specifies the email subject line and body, which may be HTML or plain-text. You specify the template name when calling <a class=\"external-link external-link\" href=\"/arrowdb/latest/#!/api/Emails-method-email_from_template\">email_from_template</a>, the recipients, and values for any <a class=\"document-link\" href=\"#!/guide/Managing_Email_Templates-section-src-37548619_ManagingEmailTemplates-placeholder\">placeholder values</a>. </p> <p><strong>To create an email template</strong>: </p> <ol class=\"\"><li> <p> <span style=\"color: #484848;\"> In Dashboard, select the Mobile Backend Services datasource to create the email template for. </span> </p> </li><li> <p> <span style=\"color: #484848;\"> Select <strong class=\"\">Manage Data</strong>, then click <strong>Email Templates</strong>. </span> </p> </li><li> <p> <span style=\"color: #484848;\"> Click <strong>Create Email Template</strong>. </span> </p> </li><li> <p> <span style=\"color: #484848;\"> Click the <strong>Code </strong>tab, and provide values for the following fields: </span> </p> <ol class=\"\"><li class=\"\"> <p><strong>Name</strong> &#x2013; Name of the email template. You will specify this name when <a class=\"external-link external-link\" href=\"#!/api/Modules.Cloud.Emails\">sending</a> the email. </p> </li><li class=\"\"> <p><strong class=\"\">Subject</strong> &#x2013; The email&apos;s subject. The subject can contain <a class=\"document-link\" href=\"#!/guide/Managing_Email_Templates-section-src-37548619_ManagingEmailTemplates-placeholder\">placeholder values</a> in double curly brackets. </p> </li><li> <p> <span style=\"color: #484848;\"> <strong class=\"\">Body (HTML)</strong> &#x2013; The email&apos;s HTML-formatted body text. The body can contain <a class=\"document-link\" href=\"#!/guide/Managing_Email_Templates-section-src-37548619_ManagingEmailTemplates-placeholder\">placeholder values</a> in double curly brackets. </span> </p> </li><li> <p> <span style=\"color: #484848;\"> <strong>Body (Plain Text)</strong> &#x2013; The email&apos;s plain text-formatted body text. <span style=\"color: #484848;\"> The body can contain </span> <a class=\"document-link\" href=\"#!/guide/Managing_Email_Templates-section-src-37548619_ManagingEmailTemplates-placeholder\">placeholder values</a> <span style=\"color: #484848;\"> in double curly brackets. </span> </span> </p> </li></ol></li><li class=\"\"> <p>Click <strong>Preview</strong> to view a rendered version of the HTML body text. </p> <img src=\"images/download/attachments/37548619/email_template_latest.png\" alt=\"images/download/attachments/37548619/email_template_latest.png\" class=\"confluence-embedded-image\" width=\"700\"> </img></li><li> <p> <span style=\"color: #484848;\"> Click <strong>Save Changes</strong>. </span> </p> </li></ol> <p> <span style=\"color: #484848;\"> Below is the sample HTML used in the above screenshot: </span> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">&lt;!DOCTYPE html&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;html lang=</code><code class=\"string\">&quot;en&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;head&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;meta charset=</code><code class=\"string\">&quot;utf-8&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;title&gt;Email Template&lt;/title&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;style&gt;</code></div> <div class=\"line\"><code class=\"plain\"> div#box {</code></div> <div class=\"line\"><code class=\"plain\"> background: #f5f5f5;</code></div> <div class=\"line\"><code class=\"plain\"> width: 400px;</code></div> <div class=\"line\"><code class=\"plain\"> height: 200px;</code></div> <div class=\"line\"><code class=\"plain\"> padding: 10px;</code></div> <div class=\"line\"><code class=\"plain\"> border-radius: 10px;</code></div> <div class=\"line\"><code class=\"plain\"> box-shadow: </code><code class=\"value\">0</code><code class=\"plain\"> </code><code class=\"value\">0</code><code class=\"plain\"> 4px rgba(</code><code class=\"value\">0</code><code class=\"plain\">, </code><code class=\"value\">0</code><code class=\"plain\">, </code><code class=\"value\">0</code><code class=\"plain\">, .</code><code class=\"value\">5</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> span {</code></div> <div class=\"line\"><code class=\"plain\"> font: 16px/20px Arial, sans-serif;</code></div> <div class=\"line\"><code class=\"plain\"> color: #1c94c4;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> p {</code></div> <div class=\"line\"><code class=\"plain\"> font: 14px/20px Arial, sans-serif;</code></div> <div class=\"line\"><code class=\"plain\"> color: #</code><code class=\"value\">666</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> p.foot {</code></div> <div class=\"line\"><code class=\"plain\"> font: 14px/20px Arial, sans-serif;</code></div> <div class=\"line\"><code class=\"plain\"> color: #</code><code class=\"value\">666</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> text-align: right;</code></div> <div class=\"line\"><code class=\"plain\"> margin: </code><code class=\"value\">0</code><code class=\"plain\"> 50px </code><code class=\"value\">0</code><code class=\"plain\"> </code><code class=\"value\">0</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> span.green {</code></div> <div class=\"line\"><code class=\"plain\"> font: 14px/20px Arial, sans-serif;</code></div> <div class=\"line\"><code class=\"plain\"> color: #9C9;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/style&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;body&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;div id=</code><code class=\"string\">&quot;box&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;span&gt;Dear {{first_name}},&lt;/span&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;p&gt;</code></div> <div class=\"line\"><code class=\"plain\"> Welcome to Mobile Backend Services! Build your mobile app without writing any server code.</code></div> <div class=\"line\"><code class=\"plain\"> Use our REST API and we&apos;ll take care of the rest.</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/p&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;p </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;foot&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> thanks,</code></div> <div class=\"line\"><code class=\"plain\"> &lt;br /&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;span </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;green&quot;</code><code class=\"plain\">&gt;The Platform Team&lt;/span&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/p&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/div&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/body&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/html&gt;</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-37548619_ManagingEmailTemplates-Sendingemailbasedonatemplate\"> <h2 class=\"heading\"><span>Sending email based on a template</span></h2> <p> <span id=\"src-37548619_ManagingEmailTemplates-send\"><a class=\"confluence-anchor-link\" name=\"src-37548619_ManagingEmailTemplates-send\"/></span> To send an email based on a template, call the <tt>email_from_template</tt> MBS method from your own application. For example, the following code example uses the Titanium.Cloud.Emails.send() method to send an email based on the &apos;welcome_template&apos; to a user. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">Cloud.Emails.send({</code></div> <div class=\"line\"><code class=\"plain\"> template: </code><code class=\"string\">&apos;welcome_template&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> recipients: </code><code class=\"string\">&apos;nobody@appcelerator.com&apos;</code></div> <div class=\"line\"><code class=\"plain\">}, function (e) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.success) {</code></div> <div class=\"line\"><code class=\"plain\"> alert(</code><code class=\"string\">&apos;Success&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> } </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> alert(</code><code class=\"string\">&apos;Error:\\n&apos;</code><code class=\"plain\"> +</code></div> <div class=\"line\"><code class=\"plain\"> ((e.error &amp;&amp; e.message) || JSON.stringify(e)));</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-37548619_ManagingEmailTemplates-Usingplaceholderfields\"> <h2 class=\"heading\"><span>Using placeholder fields</span></h2> <p> <span id=\"src-37548619_ManagingEmailTemplates-placeholder\"><a class=\"confluence-anchor-link\" name=\"src-37548619_ManagingEmailTemplates-placeholder\"/></span> The template&apos;s subject and body can contain placeholder fields delineated by double curly brackets (<tt class=\"\">{{}}</tt>). When <a class=\"document-link\" href=\"#!/guide/Managing_Email_Templates-section-src-37548619_ManagingEmailTemplates-se\">sending an email</a>, you include a parameter for each placeholder field that specifies the value to insert. For example, suppose that your email template&apos;s subject field contains <strong class=\"\">Hi {{first_name}}!</strong>. When sending the email you would include a <tt>first_name</tt> parameter, as shown below: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">curl -F </code><code class=\"string\">&quot;recipients=joe@company.com&quot;</code><code class=\"plain\"> -F </code><code class=\"string\">&quot;template=welcome&quot;</code><code class=\"plain\"> -F </code><code class=\"string\">&quot;first_name=Joe&quot;</code><code class=\"plain\"> https:</code><code class=\"comments\">//api.cloud.appcelerator.com/v1/custom_mailer/email_from_template.json?key=&lt;YOUR APP APP KEY&gt;</code></div> </div> </div> <p>In a Titanium application, you would simply add the placeholder field as another parameter to the <tt>send()</tt> method: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">Cloud.Emails.send({</code></div> <div class=\"line\"><code class=\"plain\"> template: </code><code class=\"string\">&apos;welcome_template&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> recipients: </code><code class=\"string\">&apos;jim@appcelerator.com&apos;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\">\tfirst_name: </code><code class=\"string\">&apos;Jim&apos;</code></div> <div class=\"line\"><code class=\"plain\">}, function (e) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.success) {</code></div> <div class=\"line\"><code class=\"plain\"> alert(</code><code class=\"string\">&apos;Success&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> } </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> alert(</code><code class=\"string\">&apos;Error:\\n&apos;</code><code class=\"plain\"> +</code></div> <div class=\"line\"><code class=\"plain\"> ((e.error &amp;&amp; e.message) || JSON.stringify(e)));</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=37548619\"><span>Edit</span></a> </div> </body> </html> ","title":"Managing Email Templates"});