Ext.data.JsonP['Advanced']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Advanced</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\"/>\n\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\"/>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"41845636\" class=\"content\">\n            <h1>Advanced</h1>\n    <p>\nSamples in the advanced/ folder demonstrate advanced Alloy topics and approaches, such as advanced styling, using modules, using CommonJS modules, and more.    </p>\n<ul class=\"childpages-macro \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Alloy_Themes\">Alloy Themes</a> &mdash; Demonstrates how to use Alloy themes to easily style your entire application UI for different platforms.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/CommonJS_XML\">CommonJS XML</a> &mdash; Demonstrates using CommonJS modules to create UI components in an Alloy XML view.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Complex_Styling\">Complex Styling</a> &mdash; Demonstrates how Alloy combines several TSS styles based on their priority.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Custom_TSS_Queries\">Custom TSS Queries</a> &mdash; Demonstrates how to use custom TSS queries to style Alloy elements.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Device_Queries\">Device Queries</a> &mdash; Demonstrates how to combine platform and formFactor attribute selectors to apply different styles and properties on different platforms and device types.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Dynamic_Styling\">Dynamic Styling</a> &mdash; Demonstrates different approaches to changing styles at runtime http://docs.appcelerator.com/titanium/latest/#!/guide/Dynamic_Styles in Alloy. The sample application displays a menu of options that discuss or demonstrate the different approaches and techniques for dynamic styling. See each section below for a discussion of each approach.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Form_factor\">Form factor</a> &mdash; Demonstrates how to conditionally apply TSS styles or include XML markup based on the form factor of the target device. Each XML element, or TSS style, can be assigned a formFactor attribute that can take a value of either &quot;handheld&quot; or &quot;tablet&quot;.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Handling_Different_Screen_Densities_on_Android\">Handling Different Screen Densities on Android</a> &mdash; Demonstrates how to package and use images for different screen densities on Android.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Inheritance\">Inheritance</a> &mdash; Demonstrates how an Alloy controller can inherit functionality from another controller.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Localization\">Localization</a> &mdash; Demonstrates how to use localized strings in your Alloy project.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Master-Detail\">Master-Detail</a> &mdash; Demonstrates how to create a master-detail application that presents a list of items from which the user can select to view details about that item.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/MomentJS\">MomentJS</a> &mdash; Demonstrates how to use the built-in Moment.js http://momentjs.com/ library in your Alloy application to format a date for different locales. Moment.js is a full featured date library for parsing, validating, manipulating, and formatting dates.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Native_Modules\">Native Modules</a> &mdash; Demonstrates using a native module in an Alloy application, in this case the Paint module provided by Appcelerator.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Platform_folders\">Platform folders</a> &mdash; Demonstrates how to structure an Alloy project with folders that contains platform-specific views.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Proxy_Property_Requires\">Proxy Property Requires</a> &mdash; Demonstrates using Require and Widget elements to create Titanium proxy properties.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Requiring_Child_Elements\">Requiring Child Elements</a> &mdash; Demonstrates how to use the  and  elements to include external views and widgets. Also shows how to programmatically add child views declared inside a  or  element to the parent.    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Theming_Widgets\">Theming Widgets</a> &mdash; Demonstrates how to apply themes to widgets. Theme settings override default styles and assets defined within the widget itself.    </p>\n</li></ul>        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=41845636\"><span>Edit</span></a>\n    \n        <div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n    </div>\n</body>\n</html>\n","title":"Advanced"});