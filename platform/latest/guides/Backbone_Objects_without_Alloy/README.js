Ext.data.JsonP['Backbone_Objects_without_Alloy']({"guide":" <!doctype html> <html> <head> <title>Backbone Objects without Alloy</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-36739595\" class=\"content\"> <h1>Backbone Objects without Alloy</h1> <p>You can use plain Backbone Collection and Model objects in place of the Alloy versions. This does not require any special Alloy or Titanium code. Use the <a class=\"external-link external-link\" href=\"http://docs.appcelerator.com/backbone/0.9.2/\" target=\"_blank\">Backbone API</a> to create and control Backbone objects instead of using the <tt class=\"\">createCollection</tt> and <tt>createModel</tt> methods. Backbone models also do not require a model configuration file. For example: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/index.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/index.js\"> <div class=\"line\"><code class=\"comments\">// Initialize a collection class and implement the comparator method for sorting</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> collection = Backbone.Collection.extend({</code></div> <div class=\"line\"><code class=\"plain\">\tcomparator: </code><code class=\"keyword\">function</code><code class=\"plain\">(model){</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> model.get(</code><code class=\"string\">&apos;title&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">\t}</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"comments\">// Create a new collection</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> library = </code><code class=\"keyword\">new</code><code class=\"plain\"> collection([</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;To Kill a Mockingbird&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;Harper Lee&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;The Catcher in the Rye&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;J. D. Salinger&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;Of Mice and Men&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;John Steinbeck&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;Lord of the Flies&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;William Golding&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;The Great Gatsby&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;F. Scott Fitzgerald&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;Tom Sawyer&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;Mark Twain&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;Animal Farm&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;George Orwell&apos;</code><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">]);</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\">// Initialize a model class</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> model = Backbone.Model.extend();</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"comments\">// Create a new model and add it to the collection</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> book = </code><code class=\"keyword\">new</code><code class=\"plain\"> model({title:</code><code class=\"string\">&apos;Bossypants&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;Tina Fey&apos;</code><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"plain\">library.add(book);</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"comments\">// Remove the very first model from the collection</code></div> <div class=\"line\"><code class=\"plain\">model = library.at(0);</code></div> <div class=\"line\"><code class=\"plain\">library.remove(model);</code></div> </div> </div> <p>These Backbone objects cannot persist to external storage without implementing the Backbone.sync method, so if you make calls to Collection.fetch, Collection.create, Model.fetch, Model.save and Model.destroy, the application throws an error. </p> <p>You can use Alloy&apos;s Model-View binding mechanism to keep the local Backbone Models and Collections in sync with an Alloy view-controller. Follow the same directions in the <a class=\"document-link\" href=\"#!/guide/Alloy_Data_Binding-section-src-36739592_AlloyDataBinding-Model-viewbinding\">Alloy Model-View Binding</a> section except instead of using the <tt class=\"\">Model</tt> or <tt class=\"\">Collections</tt> XML tag, you need to first initialize your model or collection in the alloy.js initializer file and add it to the <tt class=\"\">Alloy.Models</tt> or <tt>Alloy.Collections</tt> namespace. For example: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/alloy.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/alloy.js\"> <div class=\"line\"><code class=\"comments\">// Initialize a collection class and implement the comparator method for sorting</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> collection = Backbone.Collection.extend({</code></div> <div class=\"line\"><code class=\"plain\">\tcomparator: </code><code class=\"keyword\">function</code><code class=\"plain\">(model){</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> model.get(</code><code class=\"string\">&apos;title&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">\t}</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"comments\">// Create a new collection</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> library = </code><code class=\"keyword\">new</code><code class=\"plain\"> collection([</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;To Kill a Mockingbird&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;Harper Lee&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;The Catcher in the Rye&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;J. D. Salinger&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;Of Mice and Men&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;John Steinbeck&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;Lord of the Flies&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;William Golding&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;The Great Gatsby&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;F. Scott Fitzgerald&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;Tom Sawyer&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;Mark Twain&apos;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\">\t{title: </code><code class=\"string\">&apos;Animal Farm&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;George Orwell&apos;</code><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">]);</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"comments\">// Add the collection to the global scope</code></div> <div class=\"line\"><code class=\"plain\">Alloy.Collections.book = library;</code></div> </div> </div> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/views/index.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/views/index.xml\"> <div class=\"line\"><code class=\"plain\">&lt;!-- Markup the view the same except there is no Collection tag --&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Window</code><code class=\"plain\"> </code><code class=\"color1\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;container&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">TableView</code><code class=\"plain\"> </code><code class=\"color1\">dataCollection</code><code class=\"plain\">=</code><code class=\"string\">&quot;book&quot;</code><code class=\"plain\"> </code><code class=\"color1\">dataTransform</code><code class=\"plain\">=</code><code class=\"string\">&quot;transformFunction&quot;</code><code class=\"plain\"> </code><code class=\"color1\">dataFilter</code><code class=\"plain\">=</code><code class=\"string\">&quot;filterFunction&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">TableViewRow</code><code class=\"plain\"> </code><code class=\"color1\">title</code><code class=\"plain\">=</code><code class=\"string\">&quot;{title}&quot;</code><code class=\"plain\"> /&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">TableView</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/</code><code class=\"keyword\">Window</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">Alloy</code><code class=\"plain\">&gt;</code></div> </div> </div> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app/controllers/index.js</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app/controllers/index.js\"> <div class=\"line\"><code class=\"plain\">$.index.open();</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\">// Encase the title attribute in square brackets</code></div> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> transformFunction(model) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Need to convert the model to a JSON object</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">var</code><code class=\"plain\"> transform = model.toJSON();</code></div> <div class=\"line\"><code class=\"plain\"> transform.title = </code><code class=\"string\">&apos;[&apos;</code><code class=\"plain\"> + transform.title + </code><code class=\"string\">&apos;]&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Example of creating a custom attribute, reference in the view using {custom}</code></div> <div class=\"line\"><code class=\"plain\"> transform.custom = transform.title + </code><code class=\"string\">&quot; by &quot;</code><code class=\"plain\"> + transform.author;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> transform;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"comments\">// Show only book models by Mark Twain</code></div> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> filterFunction(collection) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> collection.where({author:</code><code class=\"string\">&apos;Mark Twain&apos;</code><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"comments\">// Get a reference to the library</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> library = Alloy.Collections.book;</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"comments\">// Trigger the update using the &apos;change&apos; event instead of the fetch method, since we do not have persistent storage</code></div> <div class=\"line\"><code class=\"plain\">library.trigger(</code><code class=\"string\">&apos;change&apos;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"comments\">// Same code from the previous example...</code></div> <div class=\"line\"><code class=\"comments\">// Initialize a model class</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> model = Backbone.Model.extend();</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"comments\">// Create a new model and add it to the collection</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> book = </code><code class=\"keyword\">new</code><code class=\"plain\"> model({title:</code><code class=\"string\">&apos;Bossypants&apos;</code><code class=\"plain\">, author:</code><code class=\"string\">&apos;Tina Fey&apos;</code><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"plain\">library.add(book);</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"comments\">// Remove the very first model from the collection</code></div> <div class=\"line\"><code class=\"plain\">model = library.at(0);</code></div> <div class=\"line\"><code class=\"plain\">library.remove(model);</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"comments\">// Do not forget to call destroy to unbind the event handlers created by Alloy </code></div> <div class=\"line\"><code class=\"plain\">$.index.addEventListener(</code><code class=\"string\">&apos;close&apos;</code><code class=\"plain\">, </code><code class=\"keyword\">function</code><code class=\"plain\">() {</code></div> <div class=\"line\"><code class=\"plain\"> $.destroy();</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=36739595\"><span>Edit</span></a> </div> </body> </html> ","title":"Backbone Objects without Alloy"});