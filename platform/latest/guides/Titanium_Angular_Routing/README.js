Ext.data.JsonP['Titanium_Angular_Routing']({"guide":" <!doctype html> <html> <head> <title>Titanium Angular Routing</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-55478669\" class=\"content\"> <h1>Titanium Angular Routing</h1> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Titanium_Angular_Routing-section-src-55478669_TitaniumAngularRouting-Settinguprouting\">Setting up routing</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Titanium_Angular_Routing-section-src-55478669_TitaniumAngularRouting-Addinganothercomponent\">Adding another component</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Titanium_Angular_Routing-section-src-55478669_TitaniumAngularRouting-Appendix\">Appendix</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Titanium_Angular_Routing-section-src-55478669_TitaniumAngularRouting-Additionalinformationonrouting\">Additional information on routing</a> </p> </li></ul></li></ul> <p>Up to this point most of the Angular concepts are the same as in a normal Angular web application. This makes it possible to share a great part of you application logic within Angular regardless of whether your develop for the web or Titanium apps. </p> <p>Starting with the application routing however, there are a few fundamental changes. How to setup and use routing in Titanium Angular will be described in detail here. If you haven&apos;t dealt with routing in Angular before, the <a class=\"external-link external-link\" href=\"https://angular.io/guide/router\" target=\"_blank\">Routing &amp; Navigation</a> guide is a great read. </p> <div class=\"section section-2\" id=\"src-55478669_TitaniumAngularRouting-Settinguprouting\"> <h2 class=\"heading\"><span>Setting up routing</span></h2> <p>If you followed our <a class=\"document-link\" href=\"#!/guide/Titanium_Angular_Getting_Started_Guide\">Titanium Angular Getting Started Guide</a> and <a class=\"document-link\" href=\"#!/guide/Titanium_Angular_Basics\">Titanium Angular Basics</a> guides you noticed that until now everything revolved around the <tt class=\"\">app.component.ts</tt> and <tt>app.component.html</tt>. Let&apos;s change that and move to multiple components and setup the routing for those. </p> <p>First, open <tt class=\"\">app/src/app.component.ts</tt> and copy its content to <tt class=\"\">app/src/intro.component.ts</tt>. Do the same for <tt class=\"\">app/src/app.component.html</tt> and copy it over to <tt class=\"\">app/src/intro.component.html</tt>. Open <tt>intro.component.ts</tt> again and change the component name and its template to reflect those recent changes. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">intro.component.ts</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"intro.component.ts\"> <div class=\"line\"><code class=\"plain\">@Component({</code></div> <div class=\"line\"><code class=\"plain\"> templateUrl: </code><code class=\"string\">&quot;./intro.component.html&quot;</code></div> <div class=\"line\"><code class=\"plain\">})</code></div> <div class=\"line\"><code class=\"plain\">export class IntroComponent implements AfterViewInit, OnInit {</code></div> <div class=\"line\"><code class=\"plain\">\t...</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>Now, open <tt class=\"\">app.component.ts</tt> and replace it with an empty <tt>AppComponent</tt>. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">import { Component } from </code><code class=\"string\">&apos;@angular/core&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">@Component({</code></div> <div class=\"line\"><code class=\"plain\"> selector: </code><code class=\"string\">&quot;ti-app&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> templateUrl: </code><code class=\"string\">&quot;./app.component.html&quot;</code></div> <div class=\"line\"><code class=\"plain\">})</code></div> <div class=\"line\"><code class=\"plain\">export class AppComponent { }</code></div> </div> </div> <p>After that, open <tt>app.component.html</tt> and replace its content with the Titanium router outlet directive. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">app.component.html</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app.component.html\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">ti</code><code class=\"plain\">-router-outlet&gt;&lt;/</code><code class=\"keyword\">ti</code><code class=\"plain\">-router-outlet&gt;</code></div> </div> </div> <p>This is the place where Angular will load the routed views. </p> <p>To let Angular know which routes your application has, create another file named <tt>app-routing.module.ts</tt> and paste the following code into it. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">import { NgModule } from </code><code class=\"string\">&apos;@angular/core&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { Router, RouterModule, Routes } from </code><code class=\"string\">&apos;@angular/router&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { TitaniumRouterModule } from </code><code class=\"string\">&apos;titanium-angular&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">import { IntroComponent } from </code><code class=\"string\">&apos;./intro.component&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">const appRoutes: Routes = [</code></div> <div class=\"line\"><code class=\"plain\"> { path: </code><code class=\"string\">&apos;&apos;</code><code class=\"plain\">, redirectTo: </code><code class=\"string\">&apos;/intro&apos;</code><code class=\"plain\">, pathMatch: </code><code class=\"string\">&apos;full&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> { path: </code><code class=\"string\">&apos;intro&apos;</code><code class=\"plain\">, component: IntroComponent }</code></div> <div class=\"line\"><code class=\"plain\">];</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">@NgModule({</code></div> <div class=\"line\"><code class=\"plain\"> imports: [TitaniumRouterModule.forRoot(appRoutes)],</code></div> <div class=\"line\"><code class=\"plain\"> exports: [TitaniumRouterModule]</code></div> <div class=\"line\"><code class=\"plain\">})</code></div> <div class=\"line\"><code class=\"plain\">export class AppRoutingModule { }</code></div> </div> </div> <p>This will setup a route for your previously created Intro<tt class=\"\">Component</tt> under the path <tt>/intro</tt>. It also instructs Angular to load this route upon the initial app launch by setting up a redirect for an empty path string. </p> <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro\"> <div class=\"title\">Path routing in Titanium</div> <p>You may be wondering how routing via paths is working inside a native app. The short answer is that we emulate the browsers <a class=\"external-link external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/History\" target=\"_blank\">History API</a> and let Angular&apos;s router do its magic to load the configured components. We also make sure to properly handle native navigation events such the Android back button or the iOS swipe left-to-right gesture to trigger a back navigation. </p> </div> <p>Finally, open up the <tt class=\"\">app.module.ts</tt> and add imports for the <tt class=\"\">AppRoutingModule</tt> and <tt class=\"\">IntroComponent</tt>, add the module to the <tt class=\"\">imports</tt> and the component to the <tt class=\"\">declarations</tt> of the <tt class=\"\">AppModule</tt> configuration. Your <tt>app.module.ts</tt> should look like this afterwards: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">import { NgModule, NO_ERRORS_SCHEMA } from </code><code class=\"string\">&apos;@angular/core&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { TitaniumModule } from </code><code class=\"string\">&apos;titanium-angular&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">import { AppComponent } from </code><code class=\"string\">&apos;./app.component&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { AppRoutingModule } from </code><code class=\"string\">&apos;./app-routing.module&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { HomeComponent } from </code><code class=\"string\">&apos;./home.component&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">@NgModule({</code></div> <div class=\"line\"><code class=\"plain\"> imports: [</code></div> <div class=\"line\"><code class=\"plain\"> TitaniumModule,</code></div> <div class=\"line\"><code class=\"plain\"> AppRoutingModule</code></div> <div class=\"line\"><code class=\"plain\"> ],</code></div> <div class=\"line\"><code class=\"plain\"> declarations: [</code></div> <div class=\"line\"><code class=\"plain\"> AppComponent,</code></div> <div class=\"line\"><code class=\"plain\"> HomeComponent</code></div> <div class=\"line\"><code class=\"plain\"> ],</code></div> <div class=\"line\"><code class=\"plain\"> bootstrap: [AppComponent],</code></div> <div class=\"line\"><code class=\"plain\"> schemas: [NO_ERRORS_SCHEMA]</code></div> <div class=\"line\"><code class=\"plain\">})</code></div> <div class=\"line\"><code class=\"plain\">export class AppModule { }</code></div> </div> </div> <p>You can now build your app again and routing will be enabled. But the app won&apos;t be any different than before so let&apos;s change that and see the router in action. </p> </div> <div class=\"section section-2\" id=\"src-55478669_TitaniumAngularRouting-Addinganothercomponent\"> <h2 class=\"heading\"><span>Adding another component</span></h2> <p>Now that routing is in place, it is time to add a new component and navigate to it using the Angular Router. Create <tt>app/src/home.component.ts</tt> and paste the following code. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">home.component.ts</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"home.component.ts\"> <div class=\"line\"><code class=\"plain\">import { Component } from </code><code class=\"string\">&apos;@angular/core&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">@Component({</code></div> <div class=\"line\"><code class=\"plain\"> templateUrl: </code><code class=\"string\">&quot;./home.component.html&quot;</code></div> <div class=\"line\"><code class=\"plain\">})</code></div> <div class=\"line\"><code class=\"plain\">export class HomeComponent {</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>Since we focus on the routing aspect here, we just use a very simple template. Create <tt>app/src/home.component.html</tt> and create the following user interface. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">home.component.html</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"home.component.html\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Window</code><code class=\"plain\"> </code><code class=\"color1\">backgroundColor</code><code class=\"plain\">=</code><code class=\"string\">&quot;#fafafa&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;</code><code class=\"keyword\">Label</code><code class=\"plain\">&gt;Hello World!&lt;/</code><code class=\"keyword\">Label</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/</code><code class=\"keyword\">Window</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>Now you need to go back to your <tt>app-routing.module.ts</tt> and add a route for your newly created component. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">import { NgModule } from </code><code class=\"string\">&apos;@angular/core&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { Router, RouterModule, Routes } from </code><code class=\"string\">&apos;@angular/router&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { TitaniumRouterModule } from </code><code class=\"string\">&apos;titanium-angular&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">import { IntroComponent } from </code><code class=\"string\">&apos;./intro.component&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { HomeComponent } from </code><code class=\"string\">&apos;./home.component&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">const appRoutes: Routes = [</code></div> <div class=\"line\"><code class=\"plain\"> { path: </code><code class=\"string\">&apos;&apos;</code><code class=\"plain\">, redirectTo: </code><code class=\"string\">&apos;/intro&apos;</code><code class=\"plain\">, pathMatch: </code><code class=\"string\">&apos;full&apos;</code><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> { path: </code><code class=\"string\">&apos;intro&apos;</code><code class=\"plain\">, component: IntroComponent },</code></div> <div class=\"line\"><code class=\"plain\"> { path: </code><code class=\"string\">&apos;home&apos;</code><code class=\"plain\">, component: HomeComponent }</code></div> <div class=\"line\"><code class=\"plain\">];</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">@NgModule({</code></div> <div class=\"line\"><code class=\"plain\"> imports: [TitaniumRouterModule.forRoot(appRoutes)],</code></div> <div class=\"line\"><code class=\"plain\"> exports: [TitaniumRouterModule]</code></div> <div class=\"line\"><code class=\"plain\">})</code></div> <div class=\"line\"><code class=\"plain\">export class AppRoutingModule { }</code></div> </div> </div> <p>After that, go to your <tt>app.module.ts</tt> and add the HomeComponent to the declarations property. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">import { NgModule, NO_ERRORS_SCHEMA } from </code><code class=\"string\">&apos;@angular/core&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { TitaniumModule } from </code><code class=\"string\">&apos;titanium-angular&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">import { AppComponent } from </code><code class=\"string\">&apos;./app.component&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { AppRoutingModule } from </code><code class=\"string\">&apos;./app-routing.module&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { IntroComponent } from </code><code class=\"string\">&apos;./intro.component&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">import { HomeComponent } from </code><code class=\"string\">&apos;home.component&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">@NgModule({</code></div> <div class=\"line\"><code class=\"plain\"> imports: [</code></div> <div class=\"line\"><code class=\"plain\"> TitaniumModule,</code></div> <div class=\"line\"><code class=\"plain\"> AppRoutingModule</code></div> <div class=\"line\"><code class=\"plain\"> ],</code></div> <div class=\"line\"><code class=\"plain\"> declarations: [</code></div> <div class=\"line\"><code class=\"plain\"> AppComponent,</code></div> <div class=\"line\"><code class=\"plain\"> IntroComponent,</code></div> <div class=\"line\"><code class=\"plain\"> HomeComponent</code></div> <div class=\"line\"><code class=\"plain\"> ],</code></div> <div class=\"line\"><code class=\"plain\"> bootstrap: [AppComponent],</code></div> <div class=\"line\"><code class=\"plain\"> schemas: [NO_ERRORS_SCHEMA]</code></div> <div class=\"line\"><code class=\"plain\">})</code></div> <div class=\"line\"><code class=\"plain\">export class AppModule { }</code></div> </div> </div> <p>At this point the routing setup is done and Angular knows about your new component and its route. The last thing that is missing now is to actually trigger the navigation. Go back to the <tt class=\"\">intro.component.html</tt> and change the <tt class=\"\">Button</tt> element that is marked with the <tt>#demoButton</tt> identifier to the following. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">&lt;</code><code class=\"keyword\">Button</code><code class=\"plain\"> #demoButton </code><code class=\"color1\">title</code><code class=\"plain\">=</code><code class=\"string\">&quot;Tap me!&quot;</code><code class=\"plain\"> </code><code class=\"color1\">tiRouterLink</code><code class=\"plain\">=</code><code class=\"string\">&quot;/home&quot;</code><code class=\"plain\"> </code><code class=\"color1\">bottom</code><code class=\"plain\">=</code><code class=\"string\">&quot;40&quot;</code><code class=\"plain\"> </code><code class=\"color1\">height</code><code class=\"plain\">=</code><code class=\"string\">&quot;40&quot;</code><code class=\"plain\"> </code><code class=\"color1\">width</code><code class=\"plain\">=</code><code class=\"string\">&quot;150&quot;</code><code class=\"plain\"> </code><code class=\"color1\">backgroundColor</code><code class=\"plain\">=</code><code class=\"string\">&quot;#1976d2&quot;</code><code class=\"plain\"> </code><code class=\"color1\">color</code><code class=\"plain\">=</code><code class=\"string\">&quot;white&quot;</code><code class=\"plain\"> </code><code class=\"color1\">borderRadius</code><code class=\"plain\">=</code><code class=\"string\">&quot;20&quot;</code><code class=\"plain\">&gt;&lt;/</code><code class=\"keyword\">Button</code><code class=\"plain\">&gt;</code></div> </div> </div> <p>Note the usage of the <tt class=\"\">tiRouterLink</tt> directive which is used to trigger the navigation to a new route. You can use this directive on all elements that support the <tt class=\"\">click</tt> Event. If you need to trigger the navigation from your code, for example, the click event isn&apos;t available or you need to execute some other logic first, you can also navigate using the <tt class=\"\">TitaniumRouter</tt>. For this you inject the router into your component and then call the <tt class=\"\">navigate</tt> or <tt>navigateByUrl</tt> methods as demonstrated by the code below. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">import { TitaniumRouter } from </code><code class=\"string\">&apos;titanium-angular&apos;</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">class ExampleComponent {</code></div> <div class=\"line\"><code class=\"plain\">\tconstructor(private router: TitaniumRouter) { }</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">\topenHome() {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">this</code><code class=\"plain\">.router.navigate([</code><code class=\"string\">&apos;home&apos;</code><code class=\"plain\">]).</code><code class=\"keyword\">catch</code><code class=\"plain\">(e =&gt; Ti.API.error(e.message));</code></div> <div class=\"line\"><code class=\"plain\">\t}</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>These methods take the same parameters as <a class=\"external-link external-link\" href=\"https://angular.io/api/router/Router#navigate\" target=\"_blank\">navigate</a> and <a class=\"external-link external-link\" href=\"https://angular.io/api/router/Router#navigateByUrl\" target=\"_blank\">navigateByUrl</a> from the original Angular router. </p> <p>Thats it! If you build the app again and tap on the button, it will now navigate to your second component. </p> </div> <div class=\"section section-2\" id=\"src-55478669_TitaniumAngularRouting-Appendix\"> <h2 class=\"heading\"><span>Appendix</span></h2> <div class=\"section section-3\" id=\"src-55478669_TitaniumAngularRouting-Additionalinformationonrouting\"> <h3 class=\"heading\"><span>Additional information on routing</span></h3> <p>In some guides, the routing configuration is added directly into the <tt class=\"\">app.module.ts</tt> along wit the import of the <tt>TitaniumRouter</tt> (or it&apos;s web equvalent). That way you don&apos;t need a specilal module only for routing. For simple apps that only have a handful of views, this is totally fine. But as your app grows, you will find it useful to split up routing configurations over different modules and seperate routing concers from other app concerns. </p> <p>For more details in this topic make sure to read the extensive Angular <a class=\"external-link external-link\" href=\"https://angular.io/guide/router\" target=\"_blank\">Routing &amp; Navigation</a> guide. There you will learn more about routing modules or feature modules and how to organize your routing using those. This goes far beyond the goal of this simple getting started guide. If you want to see an example of all this applied to Titanium Angular check the <a class=\"external-link external-link\" href=\"https://github.com/appcelerator/titanium-angular/tree/master/ti-angular-example\" target=\"_blank\">ti-angular-example</a> app. </p> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=55478669\"><span>Edit</span></a> </div> </body> </html> ","title":"Titanium Angular Routing"});