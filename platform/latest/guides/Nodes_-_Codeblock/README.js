Ext.data.JsonP['Nodes_-_Codeblock']({"guide":" <!doctype html> <html> <head> <title>Nodes - Codeblock</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-49158419\" class=\"content\"> <h1>Nodes - Codeblock</h1> <p>This document describes a <tt class=\"\">Codeblock</tt> flow-node and provides information on <tt>Codeblock</tt> flow-node configuration, metadata, and functionality. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Name </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Codeblock </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>A flow-node that can be used for executing user code and returns the response. This flow-node allows custom business logic to be executed as part of the flow. </p> </td> </tr> </tbody> </table> </div> <div class=\"section section-2\" id=\"src-49158419_safe-id-Tm9kZXMtQ29kZWJsb2NrLUluc3RhbmNlY29uZmlndXJhdGlvbihjb25maWcp\"> <h2 class=\"heading\"><span>Instance configuration (config)</span></h2> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Property </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Required </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Type </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>method </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>The name of the Codeblock to execute. </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>yes </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>string </p> </td> </tr> </tbody> </table> </div> <p>The typical usage of code blocks in a flow involves setting parameters, mapping responses, and setting required configs as noted in the example below. </p> <div class=\"section section-3\" id=\"src-49158419_Nodes-Codeblock-Configurationexample\"> <h3 class=\"heading\"><span>Configuration example</span></h3> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"string\">&quot;block.0&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;type&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Codeblock&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;config&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;method&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Greet&quot;</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;parameters&quot;</code><code class=\"plain\">: [</code></div> <div class=\"line\"><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;name&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;username&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;value&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;$.params.username&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> ],</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;response&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;context&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;$&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;greeting&quot;</code></div> <div class=\"line\"><code class=\"plain\"> },</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;routes&quot;</code><code class=\"plain\">: </code><code class=\"keyword\">null</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> </div> <div class=\"section section-2\" id=\"src-49158419_Nodes-Codeblock-Metadata\"> <h2 class=\"heading\"><span>Metadata</span></h2> <p>Codeblock metadata should be included in the <tt>/codeblocks</tt> directory of an API Builder Project. It is defined as a JSON file with the following properties: </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Property </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Required </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Type </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>name </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>The name of the Codeblock </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>yes </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>string </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>description </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>The description of the Codeblock </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>yes </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>string </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>path </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>The relative path to the function to be invoked. </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>yes </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>string </p> </td> </tr> </tbody> </table> </div> <div class=\"section section-3\" id=\"src-49158419_Nodes-Codeblock-Metadataexample\"> <h3 class=\"heading\"><span>Metadata example</span></h3> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;name&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Greet&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;description&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Some codeblock to run with Greet flow&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;path&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Greet.js&quot;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> </div> <div class=\"section section-2\" id=\"src-49158419_Nodes-Codeblock-Functionality\"> <h2 class=\"heading\"><span>Functionality</span></h2> <p>The functional part of a Codeblock should be a <tt>.js</tt> file which exports a function of the following signature: </p> <p><strong class=\"\"><tt>invoke(arrow, params, cb);</tt></strong> </p> <ul class=\"\"><li class=\"\"> <p><tt>arrow &lt;Arrow&gt;</tt> - The API Builder instance. </p> </li><li class=\"\"> <p><tt>params &lt;Object&gt;</tt> - Key/value pairs of parameters passed to the flow-node instance. </p> </li><li class=\"\"> <p><tt>cb &lt;Function&gt;</tt> - Callback. </p> <ul class=\"\"><li class=\"\"> <p><tt>err</tt> - Error. Passing this will cause the flow to cease processing and a 500 error to be returned from the endpoint which called it. </p> </li><li class=\"\"> <p><tt>response</tt> - The data to be returned as the flow-node response. </p> </li></ul></li></ul> <p> </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>Most of the time errors should be returned in the callback as a standard response. Using the first parameter to return errors is the same as throwing an error in the Codeblock and should rarely need to be used. </p> </div> <div class=\"section section-3\" id=\"src-49158419_Nodes-Codeblock-Functionalityexample\"> <h3 class=\"heading\"><span>Functionality example</span></h3> <p> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> invoke(arrow, params, cb) {</code></div> <div class=\"line\"><code class=\"plain\"> const salutation = arrow.config.helloworld.salutation;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (!params.username) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> cb(</code><code class=\"keyword\">null</code><code class=\"plain\">, {</code></div> <div class=\"line\"><code class=\"plain\"> error: </code><code class=\"string\">&apos;Invalid name&apos;</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> const body = salutation + </code><code class=\"string\">&apos; &apos;</code><code class=\"plain\"> + params.username;</code></div> <div class=\"line\"><code class=\"plain\"> cb(</code><code class=\"keyword\">null</code><code class=\"plain\">, body);</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">exports = module.exports = invoke</code></div> </div> </div> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=49158419\"><span>Edit</span></a> </div> </body> </html> ","title":"Nodes - Codeblock"});