Ext.data.JsonP['PyDev_Project_Creation']({"guide":" <!doctype html> <html> <head> <title>PyDev Project Creation</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-30083048\" class=\"content\"> <h1>PyDev Project Creation</h1> <div class=\"section section-2\" id=\"src-30083048_PyDevProjectCreation-CreatingaProject\"> <h2 class=\"heading\"><span>Creating a Project</span></h2> <p>Ok, now that your interpreter is configured, it is time to <strong>create a project</strong>. </p> <p>After opening Eclipse, go to the menu:<br><strong>file &gt; new &gt; project &gt; PyDev &gt; PyDev project</strong>. You should see the screen below: </br></p> <p> <img src=\"images/pydev.org/images/new_project.png\" alt=\"images/pydev.org/images/new_project.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br><strong>Project name</strong>: this is the name of the project. </br></img></p> <p><strong>Project contents</strong>: where it should be located. </p> <p><strong>Project type</strong>: defines the set of interpreters that will be available for that project. </p> <p><strong>Grammar version</strong>: the grammar used for parsing the files in this project. It doesn&apos;t have to match the grammar of the<br>actual interpreter selected. This is done so that you can use a newer interpreter while having the grammar you use<br>compatible with an older interpreter (e.g.: using a Python 2.6 interpreter with a Python 2.4 grammar in the project). </br></br></p> <p><strong>Interpreter</strong>: Defines which interpreter should be used for code-completion and default run configurations (note that<br>you can still create a run configuration with a different interpreter). </br></p> <p><strong>Create default &apos;src&apos; folder and add it to the pythonpath</strong>: If you don&apos;t leave that option checked, you&apos;ll have to create<br>the source folder(s) yourself after the project is created (which is covered in the next tutorial page). </br></p> <p>You may finish in this screen or go to the next, where you will be asked which projects are referenced from this one. </p> </div> <div class=\"section section-2\" id=\"src-30083048_PyDevProjectCreation-Referencedprojects\"> <h2 class=\"heading\"><span>Referenced projects</span></h2> <p>The referenced projects are the projects whose source folders are added to the PYTHONPATH for the<br>referrer project. </br></p> <p>The <a class=\"document-link\" href=\"#!/guide/PyDev_Project_Configuration\">next tutorial page</a> enters into more details on project references </p> </div> <div class=\"section section-2\" id=\"src-30083048_PyDevProjectCreation-CreatingaProjectfromexistingsources\"> <h2 class=\"heading\"><span>Creating a Project from existing sources</span></h2> <p>If you <strong class=\"\">created the project inside Eclipse</strong>, you just have to import the project again<br>(in <strong>files &gt; import &gt; general &gt; existing projects into workspace</strong>) &#x2013; it&apos;ll look for the existing .project<br>file and will configure it automatically from the existing configuration. </br></br></p> <p>If you have the sources from an existing project that wasn&apos;t created in Eclipse, you have 2 options: </p> <ul class=\"alternate\"><li class=\"\"> <p>Create the project as if it was a new project, but leave the <strong class=\"\">create default &apos;src&apos; folder</strong> option<br><strong>unchecked</strong> and point the location to the location of the sources (or a level above) &#x2013; the next tutorial page<br>will explain the steps to configure the PYTHONPATH (which should be done after creating the project this way). </br></br></p> </li></ul><ul class=\"alternate\"><li class=\"\"> <p>Create a new project in the default workspace and create a folder that&apos;s a <strong>link to your existing sources</strong>. Note<br>that this link folder must be added to the PYTHONPATH in the next step. </br></p> </li></ul> <p><strong class=\"\">Note 1</strong>: <strong class=\"\">links</strong> can be used <strong class=\"\">above the source folder</strong> or <strong class=\"\">as the source folder</strong>, but<br><strong>never inside a source folder</strong>, as it&apos;s not supported by PyDev) </br></p> <p><strong class=\"\">Note 2</strong>: To create the folder as a link, choose the <strong class=\"\">file &gt; new &gt; folder</strong> from the menu and in the new folder<br>dialog select the <strong>Advanced &gt;&gt;</strong> options. </br></p> <p><strong>Note 3</strong>: If the file structure you have is: </p> <blockquote> <p>myproject<br>.../ _<i>init</i>_.py<br>.../ module.py </br></br></p> </blockquote> <p> </p> <p>and you want to make the import: </p> <blockquote> <p><strong>from myproject import module</strong> </p> </blockquote> <p> </p> <p>you have to add to the project the <strong>folder above myproject</strong> (as the folder above myproject<br>will be your source folder &#x2013; as required by Python). </br></p> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=30083048\"><span>Edit</span></a> </div> </body> </html> ","title":"PyDev Project Creation"});