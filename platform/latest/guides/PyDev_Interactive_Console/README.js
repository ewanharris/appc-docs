Ext.data.JsonP['PyDev_Interactive_Console']({"guide":" <!doctype html> <html> <head> <title>Interactive Console</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-30083056\" class=\"content\"> <h1>Interactive Console</h1> <p><strong>Note</strong>: From PyDev 2.2.2 onwards, if IPython (0.10 or 0.11) is found in the PYTHONPATH,<br>PyDev will use it as the backend for the console. </br></p> <p>To use it, do <strong>Ctrl+Alt+Enter</strong> (while in the PyDev editor) to: </p> <ul class=\"\"><li> <p>Open a console if there&apos;s no open console </p> </li><li> <p>Send the selected text to the console </p> </li><li> <p>Make an execfile of the current editor in the console (if no text is selected), so that its symbols are available for further experimentation. </p> </li></ul> <p>Alternatively, it can be initialized from the console view from the dropdown for a new console<br>(rightmost corner icon in the console view) </br></p> <p> <img src=\"images/pydev.org/images/console/start_console.png\" alt=\"images/pydev.org/images/console/start_console.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>Choose the console type &#x2013; this will determine the PYTHONPATH and the interpreter that will be used in the console: </br></img></p> <ul class=\"\"><li> <p>only the PYTHONPATH for the current editor (gotten from the related project) </p> </li><li> <p>PYTHONPATH containing all the paths from Python (for all the projects in the workspace) </p> </li><li> <p>PYTHONPATH containing all the paths from Jython (for all the projects in the workspace) </p> </li></ul> <p> <img src=\"images/pydev.org/images/console/choose_console.png\" alt=\"images/pydev.org/images/console/choose_console.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>Code completion can be activated with Ctrl+Space (or the default keybinding in the target installation). All the features available for code completion in the editor are also available in the console (and they&apos;re controlled from the same place). </br></img></p> <p> <img src=\"images/pydev.org/images/console/code_completion.png\" alt=\"images/pydev.org/images/console/code_completion.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>Ctrl+1 can be used to make an assign to a variable </br></img></p> <p> <img src=\"images/pydev.org/images/console/ctrl_1.png\" alt=\"images/pydev.org/images/console/ctrl_1.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>Hovering over some element in the console shows docstrings (or other suitable description if not available) </br></img></p> <p> <img src=\"images/pydev.org/images/console/hover.png\" alt=\"images/pydev.org/images/console/hover.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>Page up shows the history (multiple lines may be selected to be re-executed and the field can be used to filter suitable lines &#x2013; with wildcards) </br></img></p> <p> <img src=\"images/pydev.org/images/console/page_up.png\" alt=\"images/pydev.org/images/console/page_up.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>Hyperlinks are linked in tracebacks </br></img></p> <p> <img src=\"images/pydev.org/images/console/hyperlink.png\" alt=\"images/pydev.org/images/console/hyperlink.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>The color, initial commands and vm args for jython can be configured in window &gt; preferences &gt; PyDev &gt; interactive console </br></img></p> <p> <img src=\"images/pydev.org/images/console/prefs.png\" alt=\"images/pydev.org/images/console/prefs.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> <br>Other actions/features available: </br></img></p> <ul class=\"\"><li class=\"\"> <p><strong>Up / Down Arrows</strong> cycles through the history (and uses the current text to match for the start of the history command) </p> </li><li class=\"\"> <p><strong>Esc</strong>: clears current line </p> </li><li> <p>Paste added directly to the command line </p> </li><li> <p>Cut will only cut from the command line </p> </li><li> <p>Copy does not get the prompt chars </p> </li><li> <p>Home goes to: first text char / prompt end / line start (and cycles again) </p> </li><li> <p>Cursor automatically moved to command line on key events </p> </li><li> <p>Multiple views of the same console can be created </p> </li></ul><ul class=\"\"><li> <p>Limitation: Output is not asynchonous (stdout and stderr are only shown after a new command is sent to the console) </p> </li></ul> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=30083056\"><span>Edit</span></a> </div> </body> </html> ","title":"Interactive Console"});