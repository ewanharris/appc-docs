Ext.data.JsonP['Android_Intent_Filters']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Android Intent Filters</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\"/>\n\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\"/>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"43287610\" class=\"content\">\n            <h1>Android Intent Filters</h1>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Android_Intent_Filters-section-43287610_AndroidIntentFilters-Introduction\">Introduction</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Android_Intent_Filters-section-43287610_AndroidIntentFilters-ReceiveanImplicitIntent\">Receive an Implicit Intent</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Android_Intent_Filters-section-43287610_AndroidIntentFilters-ModifytheAndroidManifestSection\">Modify the Android Manifest Section</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Android_Intent_Filters-section-43287610_AndroidIntentFilters-DeclareIntentFilters\">Declare Intent Filters</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Android_Intent_Filters-section-43287610_AndroidIntentFilters-RetrieveDataPassedtotheActivity\">Retrieve Data Passed to the Activity</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Android_Intent_Filters-section-43287610_AndroidIntentFilters-RespondtotheCallingActivity\">Respond to the Calling Activity</a>    </p>\n</li></ul></li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Android_Intent_Filters-section-43287610_AndroidIntentFilters-MIMETypeIntentFilterExample\">MIME Type Intent Filter Example</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Android_Intent_Filters-section-43287610_AndroidIntentFilters-URIIntentFilterExample\">URI Intent Filter Example</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Android_Intent_Filters-section-43287610_AndroidIntentFilters-FurtherReading\">Further Reading</a>    </p>\n</li></ul>    <div class=\"section section-2 \" id=\"43287610_AndroidIntentFilters-Introduction\">\n        <h2 class=\"heading \"><span>Introduction</span></h2>\n    <p>\nAndroid Intent Filters give applications the ability to receive implicit intents from other Android applications. An intent is a message object, usually containing data, sent by another application to start a new application to handle the data.  Intents are sent to the Android OS, which directs the intent to the appropriate application to handle the data.  If more than one application can handle the data, Android presents a dialog to the user to select an application to launch.  An intent filter indicates to the Android OS that your application can handle certain data types or URIs.  For example, if a user opens their browser and highlights some text, the user can share that text with other Android apps, such as an e-mail application, SMS application or a social networking application.    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \"/><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nThe user highlights the text and<br/>clicks the <strong class=\" \">Share</strong> button.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nThe <strong class=\" \">Share</strong> dialog appears and<br/>the user can select the application<br/>to send the text to, such as...    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n...an e-mail application,    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n...an SMS application    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n...or a social networking<br/>application like Google+.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n        <img src=\"images/download/attachments/43287298/HighlightText.png\" alt=\"images/download/attachments/43287298/HighlightText.png\" class=\"confluence-embedded-image\"/>\n            </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n        <img src=\"images/download/attachments/43287298/ShareDialog.png\" alt=\"images/download/attachments/43287298/ShareDialog.png\" class=\"confluence-embedded-image\"/>\n            </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n        <img src=\"images/download/attachments/43287298/EmailClient.png\" alt=\"images/download/attachments/43287298/EmailClient.png\" class=\"confluence-embedded-image\"/>\n            </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n        <img src=\"images/download/attachments/43287298/SmsClient.png\" alt=\"images/download/attachments/43287298/SmsClient.png\" class=\"confluence-embedded-image\"/>\n            </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n        <img src=\"images/download/attachments/43287298/GooglePlusShare.png\" alt=\"images/download/attachments/43287298/GooglePlusShare.png\" class=\"confluence-embedded-image\"/>\n            </p>\n    <p>\n    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <p>\n<strong class=\" \">Please ask your Confluence administrator to update the license for the  <a class=\"external-link external-link\" href=\"https://plugins.atlassian.com/plugins/biz.artemissoftware.confluence.multiexcerpt.MultiExcerptMacro\" target=\"_blank\"> MultiExcerpt Plugin for Confluence 4+ </a> .</strong>    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"43287610_AndroidIntentFilters-ReceiveanImplicitIntent\">\n        <h2 class=\"heading \"><span>Receive an Implicit Intent</span></h2>\n    <p>\nTo advertise to the Android OS that the application can receive an implicit intent, declare <tt class=\" \">&lt;intent-filter&gt;</tt> elements in the <tt class=\" \">tiapp.xml</tt> file for each data type you want the application to receive.    </p>\n    <div class=\"section section-3 \" id=\"43287610_AndroidIntentFilters-ModifytheAndroidManifestSection\">\n        <h3 class=\"heading \"><span>Modify the Android Manifest Section</span></h3>\n    <p>\nBefore declaring an intent filter, you need to copy the <tt class=\" \">&lt;activity&gt;</tt> node containing your application's default root activity from the <tt class=\" \">build/android/AndroidManifest.xml</tt> file to the Android manifest section in the <tt class=\" \">tiapp.xml</tt> file.    </p>\n<ol class=\" \"><li class=\" \">    <p>\nBuild your project once to generate the <tt class=\" \">AndroidManifest.xml</tt> file.    </p>\n</li><li class=\" \">    <p>\nOpen the <tt class=\" \">build/android/AndroidManifest.xml</tt> file and and copy the <tt class=\" \">&lt;activity&gt;</tt> node that contains your default root activity.  The <tt class=\" \">android:name</tt> attribute will contain the name of your application.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">android/build/AndroidManifest.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;manifest xmlns:android=</code><code class=\"string\">\"http://schemas.android.com/apk/res/android\"</code><code class=\"plain\"> </code><code class=\"keyword\">package</code><code class=\"plain\">=</code><code class=\"string\">\"com.example.sample\"</code><code class=\"plain\"> android:versionCode=</code><code class=\"string\">\"1\"</code><code class=\"plain\"> android:versionName=</code><code class=\"string\">\"1.0\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;uses-sdk android:minSdkVersion=</code><code class=\"string\">\"14\"</code><code class=\"plain\"> android:targetSdkVersion=</code><code class=\"string\">\"19\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;application android:icon=</code><code class=\"string\">\"@drawable/appicon\"</code><code class=\"plain\"> android:label=</code><code class=\"string\">\"My App\"</code><code class=\"plain\"> android:name=</code><code class=\"string\">\"MyappApplication\"</code><code class=\"plain\"> android:debuggable=</code><code class=\"string\">\"false\"</code><code class=\"plain\"> android:theme=</code><code class=\"string\">\"@style/Theme.AppCompat\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">Â </code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;!-- Copy </code><code class=\"keyword\">this</code><code class=\"plain\"> activity node --&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;activity android:name=</code><code class=\"string\">\".YourapplicationnameActivity\"</code><code class=\"plain\"> android:label=</code><code class=\"string\">\"@string/app_name\"</code><code class=\"plain\"> android:theme=</code><code class=\"string\">\"@style/Theme.Titanium\"</code><code class=\"plain\"> android:configChanges=</code><code class=\"string\">\"keyboardHidden|orientation|screenSize\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;action android:name=</code><code class=\"string\">\"android.intent.action.MAIN\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;category android:name=</code><code class=\"string\">\"android.intent.category.LAUNCHER\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;/intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;/activity&gt;Â </code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;activity android:name=</code><code class=\"string\">\"org.appcelerator.titanium.TiActivity\"</code><code class=\"plain\"> android:configChanges=</code><code class=\"string\">\"keyboardHidden|orientation|screenSize\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;activity android:name=</code><code class=\"string\">\"org.appcelerator.titanium.TiTranslucentActivity\"</code><code class=\"plain\"> android:configChanges=</code><code class=\"string\">\"keyboardHidden|orientation|screenSize\"</code><code class=\"plain\"> android:theme=</code><code class=\"string\">\"@style/Theme.AppCompat.Translucent\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;activity android:name=</code><code class=\"string\">\"ti.modules.titanium.ui.android.TiPreferencesActivity\"</code><code class=\"plain\"> android:configChanges=</code><code class=\"string\">\"screenSize\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/application&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;uses-permission android:name=</code><code class=\"string\">\"android.permission.INTERNET\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;uses-permission android:name=</code><code class=\"string\">\"android.permission.ACCESS_WIFI_STATE\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;uses-permission android:name=</code><code class=\"string\">\"android.permission.ACCESS_NETWORK_STATE\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;uses-permission android:name=</code><code class=\"string\">\"android.permission.WRITE_EXTERNAL_STORAGE\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;uses-permission android:name=</code><code class=\"string\">\"android.permission.ACCESS_COARSE_LOCATION\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;uses-permission android:name=</code><code class=\"string\">\"android.permission.ACCESS_FINE_LOCATION\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;uses-permission android:name=</code><code class=\"string\">\"android.permission.ACCESS_MOCK_LOCATION\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/manifest&gt;</code></div>\n</div>\n</div></li><li class=\" \">    <p>\nPaste the default root activity into the Android section of your <tt class=\" \">tiapp.xml</tt> file inside the <tt class=\" \">&lt;application&gt;</tt> element.  You may need to add the &lt;<tt class=\" \">manifest&gt;</tt> and &lt;<tt class=\" \">application&gt;</tt> elements to the &lt;<tt class=\" \">android&gt;</tt> element of your <tt class=\" \">tiapp.xml</tt> file:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">tiapp.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;?xml version=</code><code class=\"string\">\"1.0\"</code><code class=\"plain\"> encoding=</code><code class=\"string\">\"UTF-8\"</code><code class=\"plain\">?&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;ti:app xmlns:ti=</code><code class=\"string\">\"http://ti.appcelerator.org\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;android xmlns:android=</code><code class=\"string\">\"http://schemas.android.com/apk/res/android\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;manifest&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;application&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;activity android:name=</code><code class=\"string\">\".YourapplicationnameActivity\"</code><code class=\"plain\"> android:label=</code><code class=\"string\">\"@string/app_name\"</code><code class=\"plain\"> android:theme=</code><code class=\"string\">\"@style/Theme.Titanium\"</code><code class=\"plain\"> android:configChanges=</code><code class=\"string\">\"keyboardHidden|orientation|screenSize\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                        &lt;action android:name=</code><code class=\"string\">\"android.intent.action.MAIN\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                        &lt;category android:name=</code><code class=\"string\">\"android.intent.category.LAUNCHER\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;/intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;/activity&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;/application&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;/manifest&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/android&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/ti:app&gt;</code></div>\n</div>\n</div></li></ol>    <p>\nNote that the <tt class=\" \">&lt;activity&gt;</tt> node you just copied over already contains an <tt class=\" \">&lt;intent-filter&gt;</tt> element.  The elements inside the filter describe to the Android OS that this activity is the initial activity to launch for the application.  Do not remove this intent filter or the application will not be available in the application launcher menu.    </p>\n    <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n        \n    <p>\nIf you change the name of the application, you will need to copy the newly generated <tt class=\" \">android:name</tt> value from the <tt class=\" \">AndroidManifest.xml</tt> file and overwrite the old value in the <tt class=\" \">tiapp.xml</tt> file.    </p>\n    </div>\n    \n    </div>\n    <div class=\"section section-3 \" id=\"43287610_AndroidIntentFilters-DeclareIntentFilters\">\n        <h3 class=\"heading \"><span>Declare Intent Filters</span></h3>\n    <p>\nTo declare an intent filter, add <strong class=\" \"><tt class=\" \">&lt;intent-filter&gt;</tt></strong> elements as children of the <tt class=\" \">&lt;activity&gt;</tt> describing the default root activity of the application.  For each <tt class=\" \">&lt;intent-filter&gt;</tt>, you must add:    </p>\n<ul class=\" \"><li class=\" \">    <p>\none or more <tt class=\" \">&lt;action&gt;</tt> elements to it to describe which actions the activity can perform    </p>\n</li><li class=\" \">    <p>\nthe <tt class=\" \">&lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&gt;</tt> element to allow it to receive implicit intents as well as any additional categories you want to add to describe the purpose of the activity    </p>\n</li><li class=\" \">    <p>\nand a &lt;<tt class=\" \">data&gt;</tt> element describing which data types the activity can receive    </p>\n</li></ul>    <p>\nThe elements are described in more detail below.    </p>\n    <p>\nAfter adding an &lt;intent-filter&gt; tag, add the following children elements to it:    </p>\n<ul class=\" \"><li class=\" \">    <p>\n<strong class=\" \"><tt class=\" \">&lt;action/&gt;</tt></strong> element: Describes which actions the activity can do.  Assign the <tt class=\" \">android:name</tt> attribute an action.  An action is one of the <tt class=\" \">ACTION_*</tt> constants from the <a class=\"external-link external-link\" href=\"http://developer.android.com/reference/android/content/Intent.html\" target=\"_blank\">Android Intent class</a>.  Remove the <tt class=\" \">ACTION_</tt> prefix from the constant, then prefix it with the <tt class=\" \">android.intent.action</tt> namespace.  Examples:    </p>\n<ul class=\" \"><li class=\" \">    <p>\n<tt class=\" \">&lt;action android:name=&quot;android.intent.action.SEND&quot;/&gt;</tt>: Data can be sent to the activity.    </p>\n</li><li class=\" \">    <p>\n<tt class=\" \">&lt;action android:name=&quot;android.intent.action.VIEW&quot;/&gt;</tt>: Data can be viewed by the activity.    </p>\n</li></ul></li><li class=\" \">    <p>\n<strong class=\" \"><tt class=\" \">&lt;category/&gt;</tt></strong> element: Provides additional details about the activity.  Assign the <tt class=\" \">android:name</tt> attribute a category.  A category is one of the <tt class=\" \">CATEGORY_*</tt> constants from the <a class=\"external-link external-link\" href=\"http://developer.android.com/reference/android/content/Intent.html\" target=\"_blank\">Android Intent class</a>.  Remove the <tt class=\" \">CATEGORY_</tt> prefix from the constant, then prefix it with the <tt class=\" \">android.intent.category</tt> namespace.  Examples:    </p>\n<ul class=\" \"><li class=\" \">    <p>\n<tt class=\" \">&lt;category android:name=&quot;android.intent.category.BROWSABLE&quot;/&gt;</tt>: Indicates that the activity can be invoked from a browser by clicking a link    </p>\n</li></ul></li><li class=\" \">    <p>\n<strong class=\" \"><tt class=\" \">&lt;data/&gt;</tt> </strong>element: Describes the data type the activity can handle.  You can either describe the data type as a MIME type with the <tt class=\" \">android:mimeType</tt> attribute or as an URI using the <tt class=\" \">android:scheme</tt>, <tt class=\" \">android:host</tt>, <tt class=\" \">android:port</tt>, <tt class=\" \">android:path</tt>, <tt class=\" \">android:pathPrefix</tt> and <tt class=\" \">android:pathPattern</tt> attributes that take on the form: <tt class=\" \">&lt;scheme&gt;://&lt;host&gt;:&lt;port&gt;/[&lt;path&gt;|&lt;pathPrefix&gt;|&lt;pathPattern&gt;]</tt>. Note that all URI attributes are optional except if the <tt class=\" \">scheme</tt> attribute is not defined, all other URI attributes are ignored, and if the <tt class=\" \">host</tt> attribute is not defined, all other URI attributes except <tt class=\" \">scheme</tt> are ignored.  Examples:    </p>\n<ul class=\" \"><li class=\" \">    <p>\n<tt class=\" \">&lt;data android:mimeType=&quot;image/*&quot;/&gt;</tt>: Activity can accept intents with the image/* MIME type depending on the action.    </p>\n</li><li class=\" \">    <p>\n<tt class=\" \">&lt;data android:scheme=&quot;http&quot; host=&quot;www.fakedomain.com&quot;/&gt;</tt>: Activity can accept URIs that start with <tt class=\" \">http://www.fakedomain.com</tt> depending on the action.    </p>\n</li></ul></li></ul>    <p>\n    </p>\n    <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro\">\n        \n    <p>\nFor the actions and categories, you can also define your own custom action and category names. Use a reverse domain scheme to name the actions and categories to avoid potential conflicts, for example, <tt class=\" \">com.appcelerator.action.LINT</tt> or <tt class=\" \">org.foo.category.SUPER</tt>. The custom actions and categories are only useful to communicate between your applications and application activities using intents.    </p>\n    </div>\n    \n    <p>\nAdditionally, you can overwrite the appearance of the option in the <strong class=\" \">Share</strong> dialog by using the following <tt class=\" \">&lt;intent-filter&gt;</tt> attributes:    </p>\n<ul class=\" \"><li class=\" \">    <p>\n<tt class=\" \">android:icon</tt>: Icon to display in the <strong class=\" \">Share</strong> dialog.  Place the icon file in the <tt class=\" \">/platform/android/res/drawable/</tt> folder and reference the image file by removing its extension and prefixing it with <tt class=\" \">@drawable/</tt>, for example, <tt class=\" \">@drawable/filename</tt>. By default, uses the application's icon.    </p>\n</li><li class=\" \">    <p>\n<tt class=\" \">android:label</tt>: Title displayed in the <strong class=\" \">Share</strong> dialog.  By default, uses the application name.    </p>\n</li><li class=\" \">    <p>\n<tt class=\" \">android:priority</tt>: Integer used to determine the priority to give to the application. By default, set to <tt class=\" \">0</tt>.  Can be assigned a value between <tt class=\" \">-1000</tt> and <tt class=\" \">1000</tt>, inclusive.    </p>\n</li></ul>    <p>\n    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">tiapp.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;!-- slimmed down some of the nodes </code><code class=\"keyword\">for</code><code class=\"plain\"> example --&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;ti:app&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;android&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;manifest&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;application&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;activity android:name=</code><code class=\"string\">\".YourapplicationnameActivity\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;!-- </code><code class=\"keyword\">default</code><code class=\"plain\"> intent filter </code><code class=\"keyword\">for</code><code class=\"plain\"> launching activity --&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                        &lt;action android:name=</code><code class=\"string\">\"android.intent.action.MAIN\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                        &lt;category android:name=</code><code class=\"string\">\"android.intent.category.LAUNCHER\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;/intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;!-- example filter to retrieve or view plain text --&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;!-- adds a custom title and icon </code><code class=\"keyword\">for</code><code class=\"plain\"> the share option --&gt; </code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;intent-filter android:label=</code><code class=\"string\">\"Translate To Pig Latin\"</code><code class=\"plain\"> android:icon=</code><code class=\"string\">\"@drawable/pig\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                        &lt;data android:mimeType=</code><code class=\"string\">\"text/plain\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                        &lt;action android:name=</code><code class=\"string\">\"android.intent.action.SEND\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                        &lt;action android:name=</code><code class=\"string\">\"android.intent.action.VIEW\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                        &lt;category android:name=</code><code class=\"string\">\"android.intent.category.DEFAULT\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;/intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;/activity&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;/application&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;/manifest&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/android&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/ti:app&gt;</code></div>\n</div>\n</div>    <p>\n    </p>\n    </div>\n    <div class=\"section section-3 \" id=\"43287610_AndroidIntentFilters-RetrieveDataPassedtotheActivity\">\n        <h3 class=\"heading \"><span>Retrieve Data Passed to the Activity</span></h3>\n    <p>\nTo retrieve data sent to an activity using an intent, the application needs to retrieve the intent that launched the activity, then use the Intent reference to get the data URI or extras sent with the intent.    </p>\n<ul class=\" \"><li class=\" \">    <p>\nTo get the intent of the root activity, use the <tt class=\" \">Titanium.App.Android.launchIntent</tt> property.    </p>\n</li><li class=\" \">    <p>\nTo get the intent of an activity that has an <strong class=\" \">open</strong> Window or TabGroup, get a reference to the activity using the <tt class=\" \">activity</tt> property of the Window or TabGroup object, then access the intent using the activity's <tt class=\" \">intent</tt> property or <tt class=\" \">getIntent()</tt> method.    </p>\n</li><li class=\" \">    <p>\nTo get the intent of other activities, use the <tt class=\" \">Titanium.Android.currentActivity</tt> property to get a reference to the activity, then access the intent using the activity's <tt class=\" \">intent</tt> property or <tt class=\" \">getIntent()</tt> method.    </p>\n</li></ul><div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"comments\">// Retrieve intent that launched the application (root activity)</code></div>\n<div class=\"line\"><code class=\"plain\">var rootIntent = Ti.App.Android.launchIntent;</code></div>\n<div class=\"line\"><code class=\"comments\">// Retrieve intent that launched the window</code></div>\n<div class=\"line\"><code class=\"plain\">var uiActivity = win.activity;</code></div>\n<div class=\"line\"><code class=\"plain\">var uiIntent = uiActivity.getIntent();</code></div>\n<div class=\"line\"><code class=\"comments\">// Retrieve intent that launch the activity</code></div>\n<div class=\"line\"><code class=\"plain\">var activity = Ti.Android.currentActivity;</code></div>\n<div class=\"line\"><code class=\"plain\">var intent = activity.getIntent();</code></div>\n</div>\n</div>    <p>\n<u class=\" \"><br/></u>    </p>\n    <p>\n<u class=\" \">To retrieve the data URI sent with the intent</u>, simply access the <tt class=\" \">data</tt> property of the intent or call the intent's <tt class=\" \">getData()</tt> method.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">var uri = intent.getData();</code></div>\n</div>\n</div>    <p>\n    </p>\n    <p>\n    </p>\n    <p>\n<u class=\" \">To retrieve extras sent with the intent</u>, call the intent's <tt class=\" \">hasExtra()</tt> method and pass it the property to retrieve to verify the data exists, then call one of the intent's <tt class=\" \">get*Extra()</tt> methods and pass it the same property name to retrieve the data.    </p>\n    <p>\nThe example below checks for EXTRA_TEXT data sent with the intent.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">var extra;</code></div>\n<div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (intent.hasExtra(Ti.Android.EXTRA_TEXT) &amp;&amp; (extra = intent.getStringExtra(Ti.Android.EXTRA_TEXT))) {</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// Do something with the extra</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div>    </div>\n    <div class=\"section section-3 \" id=\"43287610_AndroidIntentFilters-RespondtotheCallingActivity\">\n        <h3 class=\"heading \"><span>Respond to the Calling Activity</span></h3>\n    <p>\nTo send a response back to the calling activity, the called activity needs to call its <tt class=\" \">setResult()</tt> method, then call the <tt class=\" \">finish()</tt> method to close the called activity in order to send the result.    </p>\n    <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n        \n    <p>\nThe calling activity needs to call the <tt class=\" \">startActivityForResult()</tt> method instead of the <tt class=\" \">startActivity()</tt> in order to process the result. See <a class=\"document-link \" href=\"#!/guide/Android_Intents-section-43287298_AndroidIntents-StartanActivitywithanIntent\">Android Intents: Start an Activity with an Intent</a>.    </p>\n    </div>\n    \n    <p>\nPass a <tt class=\" \">Titanium.Android.RESULT_*</tt> constant to the <tt class=\" \">setResult()</tt> method to indicate the result of the activity and an optional intent object as the second parameter.  Use the intent object to send data back to the calling activity.    </p>\n    <p>\nThe example below returns a string once the activity is created.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">someactivity.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"comments\">// Get a reference to this activity</code></div>\n<div class=\"line\"><code class=\"plain\">var activity = Ti.Android.currentActivity;</code></div>\n<div class=\"line\"><code class=\"comments\">// Bind callback to activity's create event</code></div>\n<div class=\"line\"><code class=\"plain\">activity.onCreate = function() {</code></div>\n<div class=\"line\"><code class=\"plain\">Â </code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// Create a blank activity to send data back</code></div>\n<div class=\"line\"><code class=\"plain\">    var intent = Ti.Android.createIntent({});</code></div>\n<div class=\"line\"><code class=\"plain\">    intent.putExtra(Ti.Android.EXTRA_TEXT, </code><code class=\"string\">'foobar'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">Â </code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// Set the result code and send data back to calling activity</code></div>\n<div class=\"line\"><code class=\"plain\">    activity.setResult(Ti.Android.RESULT_OK, intent);</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// Close the activity to return the result</code></div>\n<div class=\"line\"><code class=\"plain\">    activity.finish();</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div>    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"43287610_AndroidIntentFilters-MIMETypeIntentFilterExample\">\n        <h2 class=\"heading \"><span>MIME Type Intent Filter Example</span></h2>\n    <p>\nThis example creates an Alloy application that will accept a string from an external application to set the text in a text area widget.    </p>\n    <p>\nThe view code for the application displays a text area and button.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/views/index.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;Alloy&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;Window&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;TextArea id=</code><code class=\"string\">'textArea'</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;Button id=</code><code class=\"string\">'button'</code><code class=\"plain\"> onClick=</code><code class=\"string\">'toPigLatin'</code><code class=\"plain\">&gt;Translate&lt;/Button&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/Window&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/Alloy&gt;Â </code></div>\n</div>\n</div><div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/styles/index.tss</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"string\">\"Window\"</code><code class=\"plain\"> : {</code></div>\n<div class=\"line\"><code class=\"plain\">\tlayout: </code><code class=\"string\">'vertical'</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"string\">\"#textArea\"</code><code class=\"plain\"> : {</code></div>\n<div class=\"line\"><code class=\"plain\">\ttop: </code><code class=\"string\">'25dp'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">\theight: </code><code class=\"string\">'500dp'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">\twidth: Ti.UI.FILL</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"string\">\"#button\"</code><code class=\"plain\"> : {</code></div>\n<div class=\"line\"><code class=\"plain\">\ttop: </code><code class=\"string\">'15dp'</code></div>\n<div class=\"line\"><code class=\"plain\">}Â </code></div>\n</div>\n</div>    <p>\nThe controller code retrieves the text string sent to the application if an external application used an intent to start it.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/controllers/index.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">$.index.open();</code></div>\n<div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (OS_ANDROID) {</code></div>\n<div class=\"line\"><code class=\"plain\">    var launchIntent = Ti.App.Android.launchIntent;</code></div>\n<div class=\"line\"><code class=\"plain\">    var extra;</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"keyword\">if</code><code class=\"plain\"> (launchIntent.hasExtra(Ti.Android.EXTRA_TEXT) &amp;&amp; (extra = launchIntent.getStringExtra(Ti.Android.EXTRA_TEXT))) {</code></div>\n<div class=\"line\"><code class=\"plain\">        $.textArea.value = extra;</code></div>\n<div class=\"line\"><code class=\"plain\">    }</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"plain\">function toPigLatin () {</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// translate $.textArea.value to Pig Latin or some such nonsense</code></div>\n<div class=\"line\"><code class=\"plain\">}Â </code></div>\n</div>\n</div>    <p>\nNow build the application once to generate the <tt class=\" \">AndroidManifest.xml</tt> file.    </p>\n    <p>\nNext, declare the intent filter in the <tt class=\" \">tiapp.xml</tt> file.    </p>\n<ol class=\" \"><li class=\" \">    <p>\nCopy the default root activity from the <tt class=\" \">AndroidManifest.xml</tt> file to the Android manifest section of the <tt class=\" \">tiapp.xml</tt>.    </p>\n</li><li class=\" \">    <p>\nAdd an <tt class=\" \">&lt;intent-filter&gt;</tt> element as a child of the <tt class=\" \">&lt;activity&gt;</tt> element.    </p>\n</li><li class=\" \">    <p>\nAdd a <tt class=\" \">&lt;data&gt;</tt> element as a child of the <tt class=\" \">&lt;intent-filter&gt;</tt> element, then assign <tt class=\" \">text/plain</tt> to the <tt class=\" \">android:mimeType</tt> attribute to tell Android the activity can handle plain text data.    </p>\n</li><li class=\" \">    <p>\nAdd a <tt class=\" \">&lt;category&gt;</tt> element as a child of the <tt class=\" \">&lt;intent-filter&gt;</tt> element.  Assign <tt class=\" \">android.intent.category.DEFAULT</tt> to the <tt class=\" \">android:name</tt> attribute to tell Android that the activity wants to receive implicit Intents.    </p>\n</li><li class=\" \">    <p>\nAdd an <tt class=\" \">&lt;action&gt;</tt> element as a child of the <tt class=\" \">&lt;intent-filter&gt;</tt> element, then assign <tt class=\" \">android.intent.action.SEND</tt> to the <tt class=\" \">android:name</tt> attribute to tell Android that the application can receive plain text data.    </p>\n</li></ol>    <p>\nNote that the activity already had an intent filter declared indicating that the application should be available in the application launcher.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">tiapp.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">Â &lt;ti:app&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;android&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;manifest&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;activity android:name=</code><code class=\"string\">\".GibberishActivity\"</code></div>\n<div class=\"line\"><code class=\"plain\">                      android:label=</code><code class=\"string\">\"Gibberish\"</code><code class=\"plain\"> android:theme=</code><code class=\"string\">\"@style/Theme.Titanium\"</code></div>\n<div class=\"line\"><code class=\"plain\">                      android:configChanges=</code><code class=\"string\">\"keyboardHidden|orientation\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;action android:name=</code><code class=\"string\">\"android.intent.action.MAIN\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;category android:name=</code><code class=\"string\">\"android.intent.category.LAUNCHER\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;/intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;intent-filter android:label=</code><code class=\"string\">\"Translate to Pig Latin\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;data android:mimeType=</code><code class=\"string\">\"text/plain\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;category android:name=</code><code class=\"string\">\"android.intent.category.DEFAULT\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;action android:name=</code><code class=\"string\">\"android.intent.action.SEND\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;/intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;/activity&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;/manifest&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/android&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;ti:app&gt;</code></div>\n</div>\n</div>    <p>\nYou now have an app that is ready to receive Intents. Install it on either an Android device or emulator and make sure it runs. Close the application.  Now you can test the Intent Filter by doing the following:    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \"/><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nOpen your Android browser and go to a website.<br/>Select some text, then click the <strong class=\" \">Share</strong> button.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nYou should be greeted with an Intent list that<br/>looks something like this.    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nSelect your app in the list and you will then be directed<br/>to your application containing the string you highlighted.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n        <img src=\"images/download/attachments/43287610/SelectText.png\" alt=\"images/download/attachments/43287610/SelectText.png\" class=\"confluence-embedded-image\"/>\n            </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n        <img src=\"images/download/attachments/43287610/ShareDialog.png\" alt=\"images/download/attachments/43287610/ShareDialog.png\" class=\"confluence-embedded-image\"/>\n            </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n        <img src=\"images/download/attachments/43287610/ApplicationWithText.png\" alt=\"images/download/attachments/43287610/ApplicationWithText.png\" class=\"confluence-embedded-image\"/>\n            </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    </div>\n    <div class=\"section section-2 \" id=\"43287610_AndroidIntentFilters-URIIntentFilterExample\">\n        <h2 class=\"heading \"><span>URI Intent Filter Example</span></h2>\n    <p>\nThis example creates a very simple application that will make itself available to a very specific intent. The application will present itself in the intent list anytime we click on a link that is destined to <a class=\"external-link external-link\" href=\"http://www.appcelerator.com\" target=\"_blank\">http://www.appcelerator.com</a>.    </p>\n    <p>\nThe code for the application simply displays a label to the user that tells them we know they just clicked on a link to www.appcelerator.com.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">Resources/app.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">Ti.UI.backgroundColor = </code><code class=\"string\">'#fff'</code><code class=\"plain\">;</code></div>\n<div class=\"line\"><code class=\"plain\">var win = Ti.UI.createWindow();</code></div>\n<div class=\"line\"><code class=\"plain\">var label = Ti.UI.createLabel({</code></div>\n<div class=\"line\"><code class=\"plain\">\ttext:</code><code class=\"string\">\"I'll bet you just clicked on a link to http://www.appcelerator.com\"</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">\tcolor:</code><code class=\"string\">'#000'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">\tfont: {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\tfontSize:</code><code class=\"value\">32</code></div>\n<div class=\"line\"><code class=\"plain\">\t},</code></div>\n<div class=\"line\"><code class=\"plain\">\twidth:</code><code class=\"string\">'80%'</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\"><code class=\"plain\">win.add(label);</code></div>\n<div class=\"line\"><code class=\"plain\">win.open();</code></div>\n</div>\n</div>    <p>\nIf you build and run it, your output should look roughly like this:    </p>\n    <p>\n        <img src=\"images/download/attachments/43287610/app.png\" alt=\"images/download/attachments/43287610/app.png\" class=\"confluence-embedded-image confluence-content-image-border\" width=\"225\"/>\n            </p>\n    <p>\nNext, declare the intent filter in the <tt class=\" \">tiapp.xml</tt>.    </p>\n<ol class=\" \"><li class=\" \">    <p>\nCopy the default root activity from the <tt class=\" \">AndroidManifest.xml</tt> file to the Android manifest section of the <tt class=\" \">tiapp.xml</tt>.    </p>\n</li><li class=\" \">    <p>\nAdd an <tt class=\" \">&lt;intent-filter&gt;</tt> element as a child of the <tt class=\" \">&lt;activity&gt;</tt> element.    </p>\n</li><li class=\" \">    <p>\nAdd a <tt class=\" \">&lt;data&gt;</tt> element as a child of the <tt class=\" \">&lt;intent-filter&gt;</tt> element, then assign <tt class=\" \">http</tt> to the <tt class=\" \">android:scheme</tt> attribute and <tt class=\" \">www.appcelerator.com</tt> to the <tt class=\" \">android:host</tt> attribute.  This tells Android the activity can handle HTTP requests targeted at the host <a class=\"external-link external-link\" href=\"http://www.appcelerator.com\" target=\"_blank\">www.appcelerator.com</a>.    </p>\n</li><li class=\" \">    <p>\nAdd a <tt class=\" \">&lt;category&gt;</tt> element as a child of the <tt class=\" \">&lt;intent-filter&gt;</tt> element.  Assign <tt class=\" \">android.intent.category.DEFAULT</tt> to the <tt class=\" \">android:name</tt> attribute to tell Android that the activity wants to receive implicit Intents.    </p>\n</li><li class=\" \">    <p>\nAdd another <tt class=\" \">&lt;category&gt;</tt> element.  Assign <tt class=\" \">android.intent.category.BROWSABLE</tt> to the <tt class=\" \">android:name</tt> attribute to tell Android that the request can come from the browser.    </p>\n</li><li class=\" \">    <p>\nAdd an <tt class=\" \">&lt;action&gt;</tt> element as a child of the <tt class=\" \">&lt;intent-filter&gt;</tt> element, then assign <tt class=\" \">android.intent.action.VIEW</tt> to the <tt class=\" \">android:name</tt> attribute to states that the activity will be handling VIEW intents.    </p>\n</li></ol>    <p>\nNote that the activity already had an intent filter declared indicating that the application should be available in the application launcher.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">tiapp.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;ti:app&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;android&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;manifest&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;activity android:name=</code><code class=\"string\">\".IntentFilterTestActivity\"</code></div>\n<div class=\"line\"><code class=\"plain\">                      android:label=</code><code class=\"string\">\"Intent Filter Test\"</code><code class=\"plain\"> android:theme=</code><code class=\"string\">\"@style/Theme.Titanium\"</code></div>\n<div class=\"line\"><code class=\"plain\">                      android:configChanges=</code><code class=\"string\">\"keyboardHidden|orientation\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;action android:name=</code><code class=\"string\">\"android.intent.action.MAIN\"</code><code class=\"plain\"> /&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;category android:name=</code><code class=\"string\">\"android.intent.category.LAUNCHER\"</code><code class=\"plain\"> /&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;/intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;data android:scheme=</code><code class=\"string\">\"http\"</code><code class=\"plain\"> android:host=</code><code class=\"string\">\"www.appcelerator.com\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;category android:name=</code><code class=\"string\">\"android.intent.category.DEFAULT\"</code><code class=\"plain\"> /&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;category android:name=</code><code class=\"string\">\"android.intent.category.BROWSABLE\"</code><code class=\"plain\"> /&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                    &lt;action android:name=</code><code class=\"string\">\"android.intent.action.VIEW\"</code><code class=\"plain\"> /&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;/intent-filter&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;/activity&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;/manifest&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/android&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;ti:app&gt;</code></div>\n</div>\n</div>    <p>\nYou now have an app that is ready to receive Intents. Install it on either an Android device or emulator and make sure it runs. Close the application. Now you can test the Intent Filter by doing the following:    </p>\n<ol class=\" \"><li class=\" \">    <p>\nOpen your Android browser.    </p>\n</li><li class=\" \">    <p>\nSearch for &quot;appcelerator&quot; on google.com.    </p>\n</li><li class=\" \">    <p>\nClick the link for <a class=\"external-link external-link\" href=\"http://www.appcelerator.com\" target=\"_blank\">http://www.appcelerator.com</a>.    </p>\n</li></ol>    <p>\nYou should be greeted with an Intent list that looks something like this:    </p>\n    <p>\n        <img src=\"images/download/attachments/43287610/intent_test.png\" alt=\"images/download/attachments/43287610/intent_test.png\" class=\"confluence-embedded-image\"/>\n            </p>\n    <p>\nSelect your app in the list and you will then be directed to your application containing the &quot;I'll bet you just clicked on a link to www.appcelerator.com&quot; label.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"43287610_AndroidIntentFilters-FurtherReading\">\n        <h2 class=\"heading \"><span>Further Reading</span></h2>\n    <p>\n<a class=\"external-link external-link\" href=\"http://developer.android.com/guide/topics/intents/intents-filters.html\" target=\"_blank\">Android Developers: Intents and Intent Filters</a>    </p>\n    <p>\n<a class=\"external-link external-link\" href=\"http://developer.android.com/guide/topics/manifest/intent-filter-element.html\" target=\"_blank\">Android Developers: &lt;intent-filter&gt;</a>    </p>\n    <p>\n<a class=\"external-link external-link\" href=\"http://www.appcelerator.com/blog/2011/08/android-intents/\" target=\"_blank\">Appcelerator Enterprise Mobility Blog: Android Intents</a>    </p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=43287610\"><span>Edit</span></a>\n    \n        <div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n    </div>\n</body>\n</html>\n","title":"Android Intent Filters"});