Ext.data.JsonP['API_Builder_CLI']({"guide":" <!doctype html> <html> <head> <title>API Builder CLI</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-49159313\" class=\"content\"> <h1>API Builder CLI</h1> <p>This document will walk you through the process of how to publish API Builder apps to a newly deployed cluster using Appcelerator CLI commands. </p> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/API_Builder_CLI-section-src-49159313_APIBuilderCLI-Setup\">Setup</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/API_Builder_CLI-section-src-49159313_APIBuilderCLI-Publishsourcecode\">Publish source code</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/API_Builder_CLI-section-src-49159313_APIBuilderCLI-PublishbyprovidingDockerfile\">Publish by providing Dockerfile</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/API_Builder_CLI-section-src-49159313_APIBuilderCLI-PublishbyusingexistingDockerimage\">Publish by using existing Docker image</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/API_Builder_CLI-section-src-49159313_APIBuilderCLI-CLIcommands\">CLI commands</a> </p> </li></ul> <p> </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>The use of small containers should be avoided when publishing API Builder applications using the Appcelerator CLI commands. For optimum memory performance, use medium or larger size containers. </p> </div> <div class=\"section section-2\" id=\"src-49159313_APIBuilderCLI-Setup\"> <h2 class=\"heading\"><span>Setup</span></h2> <p>You will need Appcelerator CLI (appc cli) version 7.0.0+. To install Appcelerator CLI 7.0.0, execute this command: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">npm </code><code class=\"functions\">install</code><code class=\"plain\"> appcelerator -g</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-49159313_APIBuilderCLI-Publishsourcecode\"> <h2 class=\"heading\"><span>Publish source code</span></h2> <p> <span style=\"color: #2b4771;\"> </span> The legacy method to publish the API Builder app is as follows: </p> <ol class=\"\"><li> <p>Create a new API Builder app: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ appc new -t arrow</code></div> <div class=\"line\"><code class=\"plain\">Appcelerator Command-Line Interface, version 7.0.0</code></div> <div class=\"line\"><code class=\"plain\">Copyright (c) 2014-2017, Appcelerator, Inc. All Rights Reserved.</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"plain\">? What&apos;s the project name? appctest</code></div> <div class=\"line\"><code class=\"plain\">*** new completed. ***</code></div> </div> </div> </li><li class=\"\"> <p>Update <tt class=\"\">appc.json</tt> environment to add <tt class=\"\">extra_hosts</tt> if you haven&apos;t set up a DNS yet. If your cluster uses <tt class=\"\">appctest.com</tt> as a domain name, then you need to add <tt>NODE_ENV</tt> as well: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ </code><code class=\"functions\">cd</code><code class=\"plain\"> appctest</code></div> <div class=\"line\"><code class=\"plain\">$ </code><code class=\"functions\">vi</code><code class=\"plain\"> appc.json</code></div> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\">...</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;cloud&quot;</code><code class=\"plain\">: {</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"plain\">//</code><code class=\"plain\"> Change your container size here</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;container&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;Medium&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"plain\">//</code><code class=\"plain\"> Number of containers </code><code class=\"keyword\">for</code><code class=\"plain\"> your app</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;minimum&quot;</code><code class=\"plain\">: 3,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"plain\">//</code><code class=\"plain\"> Maximum number of containers </code><code class=\"keyword\">for</code><code class=\"plain\"> you app when autoscalling kicks </code><code class=\"keyword\">in</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;maximum&quot;</code><code class=\"plain\">: 5,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"plain\">//</code><code class=\"plain\"> NODE_ENV is only needed </code><code class=\"keyword\">if</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"plain\">//</code><code class=\"plain\"> a. You are running </code><code class=\"keyword\">in</code><code class=\"plain\"> an alternately-named environment (like staging)</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"plain\">//</code><code class=\"plain\"> b. You are running on a domain with appctest </code><code class=\"keyword\">in</code><code class=\"plain\"> the name</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;environment&quot;</code><code class=\"plain\">: {</code><code class=\"string\">&quot;NODE_ENV&quot;</code><code class=\"plain\">:</code><code class=\"string\">&quot;PRODUCTION&quot;</code><code class=\"plain\">,</code><code class=\"string\">&quot;extra_hosts&quot;</code><code class=\"plain\">:</code><code class=\"string\">&quot;54.212.208.81 api.cloudapp-1.appctest.com&quot;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\"> ...</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </li><li class=\"\"> <p>Execute <tt>appc install</tt> (required prior to the release of version 6.2.0). </p> </li><li class=\"\"> <p>Then publish the app normally by executing this command: <tt>appc publish</tt> </p> </li></ol> </div> <div class=\"section section-2\" id=\"src-49159313_APIBuilderCLI-PublishbyprovidingDockerfile\"> <h2 class=\"heading\"><span>Publish by providing Dockerfile</span></h2> <p>Starting from API Runtime Services (formerly known as Arrow Cloud) 1.6.0, you can publish to API Runtime Services by pushing a Docker image directly. If your cluster has no Internet access, this is the recommended method to publish. </p> <ol class=\"\"><li> <p>Create a new API Builder app: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ appc new -t arrow</code></div> <div class=\"line\"><code class=\"plain\">Appcelerator Command-Line Interface, version 7.0.0</code></div> <div class=\"line\"><code class=\"plain\">Copyright (c) 2014-2017, Appcelerator, Inc. All Rights Reserved.</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"plain\">? What&apos;s the project name? appctest</code></div> <div class=\"line\"><code class=\"plain\">*** new completed. ***</code></div> </div> </div> </li><li class=\"\"> <p>Prepare a Dockerfile by creating a Dockerfile under your project directory and use the <tt class=\"\">start_app</tt> script. Use of <tt class=\"\">start_app</tt> is required if you want to able to retrieve access and console logs of your app using the <tt class=\"\">appc cloud logcat</tt> and <tt>appc cloud accesslog</tt> commands. The following is a sample Dockerfile for an API Builder app: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">FROM mhart</code><code class=\"plain\">/alpine-node</code><code class=\"plain\">:5.12.0</code></div> <div class=\"line\"><code class=\"comments\"># Install curl command for app health check</code></div> <div class=\"line\"><code class=\"plain\">RUN apk add --no-cache curl</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\"># This is the script to start app</code></div> <div class=\"line\"><code class=\"plain\">COPY start_app </code><code class=\"plain\">/usr/local/bin/</code></div> <div class=\"line\"><code class=\"plain\">RUN </code><code class=\"functions\">chmod</code><code class=\"plain\"> 755 </code><code class=\"plain\">/usr/local/bin/start_app</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">RUN </code><code class=\"functions\">mkdir</code><code class=\"plain\"> -p </code><code class=\"plain\">/opt/app</code></div> <div class=\"line\"><code class=\"plain\">WORKDIR </code><code class=\"plain\">/opt/app</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">COPY package.json </code><code class=\"plain\">/opt/app</code></div> <div class=\"line\"><code class=\"plain\">COPY app.js </code><code class=\"plain\">/opt/app</code></div> <div class=\"line\"><code class=\"plain\">COPY README.md </code><code class=\"plain\">/opt/app</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">RUN npm </code><code class=\"functions\">install</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">ENTRYPOINT [</code><code class=\"string\">&quot;/usr/local/bin/start_app&quot;</code><code class=\"plain\">]</code></div> </div> </div> </li><li class=\"\"> <p>The <tt>start_app</tt> script should look something like this and be placed under the project directory with the Dockerfile: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"comments\">#!/bin/sh</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">APP_DIR=</code><code class=\"string\">&quot;/opt/app&quot;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\"># command to retrieve the containerId inside docker container</code></div> <div class=\"line\"><code class=\"plain\">CONTAINID=$(</code><code class=\"functions\">cat</code><code class=\"plain\"> </code><code class=\"plain\">/proc/1/cgroup</code><code class=\"plain\"> | </code><code class=\"functions\">grep</code><code class=\"plain\"> </code><code class=\"string\">&apos;docker/&apos;</code><code class=\"plain\"> | </code><code class=\"functions\">tail</code><code class=\"plain\"> -1 | </code><code class=\"functions\">sed</code><code class=\"plain\"> </code><code class=\"string\">&apos;s/^.*\\///&apos;</code><code class=\"plain\"> | </code><code class=\"functions\">cut</code><code class=\"plain\"> -c 1-12)</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\"># replace the fake &quot;serverId&quot; with the real container id</code></div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> [ ! -z $CONTAINID ]; </code><code class=\"keyword\">then</code></div> <div class=\"line\"><code class=\"plain\">\tARROWCLOUD_APP_LOG_DIR=$(</code><code class=\"functions\">echo</code><code class=\"plain\"> ${ARROWCLOUD_APP_LOG_DIR} | </code><code class=\"functions\">sed</code><code class=\"plain\"> </code><code class=\"string\">&quot;s/serverId/${CONTAINID}/&quot;</code><code class=\"plain\">)</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">export</code><code class=\"plain\"> serverId=${CONTAINID}</code></div> <div class=\"line\"><code class=\"keyword\">fi</code><code class=\"plain\">\t</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">APP_LOG_DIR=</code><code class=\"string\">&quot;/ctdebuglog/${ARROWCLOUD_APP_LOG_DIR}&quot;</code></div> <div class=\"line\"><code class=\"plain\">APP_DEBUG_LOG_DIR=</code><code class=\"string\">&quot;${APP_LOG_DIR}/debug&quot;</code></div> <div class=\"line\"><code class=\"plain\">APP_REQUESTS_LOG_DIR=</code><code class=\"string\">&quot;${APP_LOG_DIR}/requests&quot;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"functions\">mkdir</code><code class=\"plain\"> -p </code><code class=\"string\">&quot;${APP_DEBUG_LOG_DIR}&quot;</code></div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> [ $? -</code><code class=\"keyword\">ne</code><code class=\"plain\"> 0 ]; </code><code class=\"keyword\">then</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">echo</code><code class=\"plain\"> </code><code class=\"string\">&quot;Failed to create ${APP_DEBUG_LOG_DIR}&quot;</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">exit</code><code class=\"plain\"> 1</code></div> <div class=\"line\"><code class=\"keyword\">fi</code><code class=\"plain\">\t</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"functions\">mkdir</code><code class=\"plain\"> -p </code><code class=\"string\">&quot;${APP_REQUESTS_LOG_DIR}&quot;</code></div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> [ $? -</code><code class=\"keyword\">ne</code><code class=\"plain\"> 0 ]; </code><code class=\"keyword\">then</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">echo</code><code class=\"plain\"> </code><code class=\"string\">&quot;Failed to create ${APP_REQUESTS_LOG_DIR}&quot;</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">exit</code><code class=\"plain\"> 1</code></div> <div class=\"line\"><code class=\"keyword\">fi</code><code class=\"plain\">\t</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\"># make a symbolic link from ${APP_REQUESTS_LOG_DIR} to /ctlog to satisfy appc-logger</code></div> <div class=\"line\"><code class=\"functions\">ln</code><code class=\"plain\"> -s ${APP_REQUESTS_LOG_DIR} </code><code class=\"plain\">/ctlog</code></div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> [ $? -</code><code class=\"keyword\">ne</code><code class=\"plain\"> 0 ]; </code><code class=\"keyword\">then</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">echo</code><code class=\"plain\"> </code><code class=\"string\">&quot;Failed to create link from ${APP_REQUESTS_LOG_DIR} to /ctlog&quot;</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">exit</code><code class=\"plain\"> 1</code></div> <div class=\"line\"><code class=\"keyword\">fi</code><code class=\"plain\">\t</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">STDOUT_LOG_FILE=</code><code class=\"string\">&quot;${APP_DEBUG_LOG_DIR}/stdout.log&quot;</code></div> <div class=\"line\"><code class=\"plain\">STDERR_LOG_FILE=</code><code class=\"string\">&quot;${APP_DEBUG_LOG_DIR}/stderr.log&quot;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\"># curl is used for health-check when creating docker service for an app.</code></div> <div class=\"line\"><code class=\"plain\">curl &gt;</code><code class=\"plain\">/dev/null</code><code class=\"plain\"> 2&gt;&amp;1</code></div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> [ $? -</code><code class=\"keyword\">eq</code><code class=\"plain\"> 127 ]; </code><code class=\"keyword\">then</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">echo</code><code class=\"plain\"> </code><code class=\"string\">&quot;curl not found! App image must include curl for health-check purpose.&quot;</code><code class=\"plain\"> &gt;&gt; ${STDOUT_LOG_FILE} 2&gt;&gt;${STDERR_LOG_FILE}</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">exit</code><code class=\"plain\"> 1</code></div> <div class=\"line\"><code class=\"keyword\">fi</code><code class=\"plain\">\t</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"functions\">cd</code><code class=\"plain\"> $APP_DIR</code></div> <div class=\"line\"><code class=\"functions\">echo</code><code class=\"plain\"> </code><code class=\"string\">&quot;[app_launcher] starting application via \\&quot;$DAEMON $DAEMON_ARGS\\&quot;&quot;</code><code class=\"plain\"> &gt;&gt; ${STDOUT_LOG_FILE} 2&gt;&gt;${STDERR_LOG_FILE}</code></div> <div class=\"line\"><code class=\"comments\"># start the app in the same process which is the main process(pid 1), so that the app can get signals</code></div> <div class=\"line\"><code class=\"functions\">exec</code><code class=\"plain\"> node app.js &gt;&gt; ${STDOUT_LOG_FILE} 2&gt;&gt;${STDERR_LOG_FILE}</code></div> <div class=\"line\"><code class=\"plain\">RETVAL=$?</code></div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> [ $RETVAL -</code><code class=\"keyword\">ne</code><code class=\"plain\"> 0 ]; </code><code class=\"keyword\">then</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">echo</code><code class=\"plain\"> </code><code class=\"string\">&quot;[app_launcher] application is over with status code $RETVAL.&quot;</code><code class=\"plain\"> &gt;&gt; ${STDOUT_LOG_FILE} 2&gt;&gt;${STDERR_LOG_FILE}</code></div> <div class=\"line\"><code class=\"keyword\">else</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"functions\">echo</code><code class=\"plain\"> </code><code class=\"string\">&quot;[app_launcher] application is over.&quot;</code><code class=\"plain\"> &gt;&gt; ${STDOUT_LOG_FILE} 2&gt;&gt;${STDERR_LOG_FILE}</code></div> <div class=\"line\"><code class=\"keyword\">fi</code></div> <div class=\"line\"><code class=\"functions\">exit</code><code class=\"plain\"> $RETVAL</code></div> </div> </div> </li><li class=\"\"> <p>Execute <tt class=\"\">appc publish</tt>. You will need to provide the app version using the <tt class=\"\">--app-version</tt> flag. You should always provide the app name since Appcelerator CLI will not scan <tt class=\"\">package.json</tt> as it would normally with source code publishing that does obtain the app name. Using <tt>appc publish</tt> will build the Docker image by using the provided Dockerfile and push the image to API Runtime Services directly: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ </code><code class=\"functions\">cd</code><code class=\"plain\"> appctest</code></div> <div class=\"line\"><code class=\"plain\">$ appc publish --app-version 1.0.0 appctest</code></div> </div> </div> </li><li> <p>If you need to scale up the number of servers, execute these commands: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"comments\"># Set maximum number of containers allowed for appctest</code></div> <div class=\"line\"><code class=\"plain\">$ appc cloud config appctest --maxsize &lt;size&gt;</code></div> <div class=\"line\"><code class=\"comments\"># Set current number of containers for appctest as long as the cluster has enough resource)</code></div> <div class=\"line\"><code class=\"plain\">$ appc cloud config appcteest --minsize &lt;size&gt;</code></div> </div> </div> </li></ol> </div> <div class=\"section section-2\" id=\"src-49159313_APIBuilderCLI-PublishbyusingexistingDockerimage\"> <h2 class=\"heading\"><span>Publish by using existing Docker image</span></h2> <p>Alternatively, after preparing your Dockerfile and <tt>start_app</tt> script, you can build the Docker image yourself and publish the image to API Runtime Services: </p> <ol class=\"\"><li> <p>Build the Docker image: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ </code><code class=\"functions\">cd</code><code class=\"plain\"> appctest</code></div> <div class=\"line\"><code class=\"plain\">$ docker build -t appctestimage .</code></div> <div class=\"line\"><code class=\"comments\"># Double check the image presents locally</code></div> <div class=\"line\"><code class=\"plain\">$ docker images |</code><code class=\"functions\">grep</code><code class=\"plain\"> appctestimage</code></div> <div class=\"line\"><code class=\"plain\">appctestimage latest 869918dab71b 43 minutes ago 277 MB</code></div> </div> </div> </li><li class=\"\"> <p>Next, publish the image directly. Ensure that you provide the app version and name and image name by using the <tt class=\"\">--app-version</tt>, <tt class=\"\">appname</tt>, and <tt>--image</tt> flags: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ </code><code class=\"functions\">cd</code><code class=\"plain\"> appctest</code></div> <div class=\"line\"><code class=\"plain\">$ appc publish --app-version 1.0.0 --image appctestimage appctest</code></div> </div> </div> </li><li> <p>If you need to scale up the number of servers, execute these commands: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"comments\"># Set maximum number of containers allowed for appctest</code></div> <div class=\"line\"><code class=\"plain\">$ appc cloud config appctest --maxsize &lt;size&gt;</code></div> <div class=\"line\"><code class=\"comments\"># Set current number of containers for appctest as long as the cluster has enough resource)</code></div> <div class=\"line\"><code class=\"plain\">$ appc cloud config appcteest --minsize &lt;size&gt;</code></div> </div> </div> </li></ol> <p>Note: If you haven&apos;t set up your DNS yet, your app publish may fail with the following error: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ appc cloud logcat appctest</code></div> <div class=\"line\"><code class=\"plain\">...</code></div> <div class=\"line\"><code class=\"plain\">Uncaught Exception Error loading connector</code><code class=\"plain\">/appc</code><code class=\"plain\">.arrowdb. Error: getaddrinfo ENOTFOUND api.cloudapp-1.appctest.com api.cloudapp-1.appctest.com:443</code></div> <div class=\"line\"><code class=\"plain\">2017-04-03T16:24:39-07:00 | Error: Error loading connector</code><code class=\"plain\">/appc</code><code class=\"plain\">.arrowdb. Error: getaddrinfo ENOTFOUND api.cloudapp-1.appctest.com api.cloudapp-1.appctest.com:443</code></div> <div class=\"line\"><code class=\"plain\">...</code></div> </div> </div> <p>In this case, you will need to execute the following command to configure the custom host info in the app container. Please note if you try to update <tt>/etc/hosts</tt> file in the Dockerfile with the custom hostname and IP. It will not work because the Docker swarm mode will override that information at the time of the container launch. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">$ appc cloud config --</code><code class=\"functions\">set</code><code class=\"plain\"> </code><code class=\"string\">&quot;extra_hosts=54.212.208.81 api.cloudapp-1.appctest.com&quot;</code></div> <div class=\"line\"><code class=\"plain\">Appcelerator Command-Line Interface, version 7.0.0</code></div> <div class=\"line\"><code class=\"plain\">Copyright (c) 2014-2017, Appcelerator, Inc. All Rights Reserved.</code></div> <div class=\"line\"><code class=\"plain\">Admin Hostname: https:</code><code class=\"plain\">//admin</code><code class=\"plain\">.cloudapp-1.appctest.com</code></div> <div class=\"line\"><code class=\"plain\">The variable has been saved successfully.</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"comments\"># Confirm the env is set correctly</code></div> <div class=\"line\"><code class=\"plain\">$ appc cloud config --</code><code class=\"functions\">env</code><code class=\"plain\"> appctest</code></div> <div class=\"line\"><code class=\"plain\">Appcelerator Command-Line Interface, version 7.0.0</code></div> <div class=\"line\"><code class=\"plain\">Copyright (c) 2014-2017, Appcelerator, Inc. All Rights Reserved.</code></div> <div class=\"line\"><code class=\"plain\">Admin Hostname: https:</code><code class=\"plain\">//admin</code><code class=\"plain\">.cloudapp-1.appctest.com</code></div> <div class=\"line\"><code class=\"plain\">extra_hosts = 54.212.208.81 api.cloudapp-1.appctest.com</code></div> </div> </div> <p>Note about Docker image publish with Alpine: You will need to execute <tt>apk add --no-cache curl</tt> in the Docker file when publishing the Docker image. </p> </div> <div class=\"section section-2\" id=\"src-49159313_APIBuilderCLI-CLIcommands\"> <h2 class=\"heading\"><span>CLI commands</span></h2> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Command </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc login</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Login </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc config set defaultEnvironment preproduction</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Selection of an environment (optional, if the default needs to be switched). </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc new</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Create an app. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc publish</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Publish the app. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud list</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Query the list of applications that are deployed to my current environment and dashboard. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud list &lt;appname&gt;</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Query the config for a specific application that is deployed to the currently referenced environment and dashboard. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud config --maxsize 4 &lt;appname&gt;</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Configuration for a given application: change the maximum number of containers. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud config &#x2014;minsize 2 &lt;appname&gt;</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Configuration for a given application: change the minimum number of containers. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud server &lt;appname&gt; &#x2014;set &lt;value&gt;</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Change the size of the given application. Accepted values include &#x201C;Dev&#x201D;, &#x201D;Small&#x201D;, &#x201D;Medium&#x201D;, &#x201D;Large&#x201D;, and &#x201D;XLarge&#x201D;. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud logcat</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>View logs of the application. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud loglist &#x2014;build_logs</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>View logs of the application. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud accesslog</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>List application&apos;s access log. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud add</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Add a new route or service. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud cname</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Set a CNAME for an application. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud config</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Configure the application. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud crt</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Manage SSL certificates for the application. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt> appc cloud download</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Download source files for the specified application and version. Note: If you publish using a Docker image, this command won&apos;t work. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc logout</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Log out </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc remove</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Removes installed Appcelerator CLI. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc run</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Run an application locally for dev. and/or testing. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc unpublish</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Unpublish an application. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt>appc cloud whoami</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Show current login user. </p> </td> </tr> </tbody> </table> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=49159313\"><span>Edit</span></a> </div> </body> </html> ","title":"API Builder CLI"});