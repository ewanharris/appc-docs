Ext.data.JsonP['iOS_Interactive_Notifications']({"guide":" <!doctype html> <html> <head> <title>iOS Interactive Notifications</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-40930452\" class=\"content\"> <h1>iOS Interactive Notifications</h1> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Introduction\">Introduction</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Interactivenotificationtypes\">Interactive notification types</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Alertdialog\">Alert dialog</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Bannermessage\">Banner message</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Lockscreenornotificationcenter\">Lock screen or notification center</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Createanotificationaction\">Create a notification action</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Createanotificationcategory\">Create a notification category</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Registernotificationcategories\">Register notification categories</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Monitorinteractivenotifications\">Monitor interactive notifications</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-localnotificationaction\">localnotificationaction</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-remotenotificationaction\">remotenotificationaction</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Scheduleaninteractivelocalnotification\">Schedule an interactive local notification</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Sendaninteractivepushnotification\">Send an interactive push notification</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/iOS_Interactive_Notifications-section-src-40930452_iOSInteractiveNotifications-Example\">Example</a> </p> </li></ul> <div class=\"section section-2\" id=\"src-40930452_iOSInteractiveNotifications-Introduction\"> <h2 class=\"heading\"><span>Introduction</span></h2> <p>Starting with Release 3.4.0, you can create interactive notifications, where users can respond to application notifications without launching the application to the foreground. The user needs to reveal notification actions in the notification, then press a notification action to respond to the notification. This feature is available on devices running iOS 8 or later. </p> <p>To create an interactive notification, the applications needs to: </p> <ol class=\"\"><li> <p>Create and configure notification actions </p> </li><li> <p>Create notification categories and assign notification actions to them </p> </li><li> <p>Register the notification categories </p> </li><li class=\"\"> <p>Monitor the <tt class=\"\">localnotificationaction</tt> event to respond to local notifications and the <tt>remotenotificationaction</tt> event to respond to push notifications </p> </li></ol> </div> <div class=\"section section-2\" id=\"src-40930452_iOSInteractiveNotifications-Interactivenotificationtypes\"> <h2 class=\"heading\"><span>Interactive notification types</span></h2> <p>The following screen shots illustrate how iOS presents and the user interacts with the notification: </p> <div class=\"section section-3\" id=\"src-40930452_iOSInteractiveNotifications-Alertdialog\"> <h3 class=\"heading\"><span>Alert dialog</span></h3> <p>The user needs to tap the <strong class=\"\">Options</strong> button when the alert dialog first appears to display the notification actions. Tapping <strong class=\"\">Open</strong> launches the application in the foreground, while tapping <strong>Close</strong> dismisses the notification. </p> <p> <img src=\"images/download/attachments/40929226/InteractiveAlertDialog.png\" alt=\"images/download/attachments/40929226/InteractiveAlertDialog.png\" class=\"confluence-embedded-image\"> </img></p> </div> <div class=\"section section-3\" id=\"src-40930452_iOSInteractiveNotifications-Bannermessage\"> <h3 class=\"heading\"><span>Banner message</span></h3> <p>In a banner message, the user needs to swipe the banner message down to reveal the notification actions. Tapping the notification (not an action) launches the application in the foreground. The user can dismiss the notification by swiping up the notification tray. </p> <p> <img src=\"images/download/attachments/40929226/InteractiveBannerMessage.png\" alt=\"images/download/attachments/40929226/InteractiveBannerMessage.png\" class=\"confluence-embedded-image\"> </img></p> </div> <div class=\"section section-3\" id=\"src-40930452_iOSInteractiveNotifications-Lockscreenornotificationcenter\"> <h3 class=\"heading\"><span>Lock screen or notification center</span></h3> <p>In the lock screen or notification center, the user needs to swipe the notification to the left to reveal the notification actions. If the user swipes the notification to the right in the locked screen, the application is launched in the foreground. The user can dismiss the notification by tapping the <strong>x </strong>button. </p> <p> <img src=\"images/download/attachments/40929226/LockedScreenInteractiveNotiifcation.png\" alt=\"images/download/attachments/40929226/LockedScreenInteractiveNotiifcation.png\" class=\"confluence-embedded-image\"> </img></p> </div> </div> <div class=\"section section-2\" id=\"src-40930452_iOSInteractiveNotifications-Createanotificationaction\"> <h2 class=\"heading\"><span>Create a notification action</span></h2> <p>A notification action is an action that the application performs in response to a notification. The action is represented as a button in the notification. </p> <p>To create a notification action, use the <tt>Titanium.App.iOS.createUserNotificationAction()</tt> method. Pass the method a dictionary with the following required properties: </p> <ul class=\"\"><li class=\"\"> <p><tt>activationMode</tt>: </p> <ul class=\"\"><li class=\"\"> <p>Set to <tt>Titanium.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND</tt> to activate the application in the background to respond to the action unless the application is already in the foreground. </p> </li><li class=\"\"> <p>Set to <tt>Titanium.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_FOREGROUND</tt> to launch the application in the foreground to respond to the action. </p> </li></ul></li><li class=\"\"> <p><tt>authenticationRequired</tt>: set to true if the action requires the device to be unlocked. </p> </li><li class=\"\"> <p><tt>destructive</tt>: set to true if the action causes destructive behavior to the user&apos;s data or the application. The action appears red in the locked screen and notification center instead of the default color. </p> </li><li class=\"\"> <p><tt>identifier</tt>: string identifier of the action. Used to identify the action the user pressed. </p> </li><li class=\"\"> <p><tt>title</tt>: title of the button to display in the notification </p> </li></ul> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"comments\">// The following action launches the application in the foreground and requires the device to be unlocked</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> acceptAction = Ti.App.iOS.createUserNotificationAction({</code></div> <div class=\"line\"><code class=\"plain\"> identifier: </code><code class=\"string\">&quot;ACCEPT_IDENTIFIER&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> title: </code><code class=\"string\">&quot;Accept&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> activationMode: Ti.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_FOREGROUND,</code></div> <div class=\"line\"><code class=\"plain\"> destructive: </code><code class=\"keyword\">false</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> authenticationRequired: </code><code class=\"keyword\">true</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\">// The following action will only activate the application in the background, requires the device to be unlocked, and may have a red background. </code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> rejectAction = Ti.App.iOS.createUserNotificationAction({</code></div> <div class=\"line\"><code class=\"plain\"> identifier: </code><code class=\"string\">&quot;REJECT_IDENTIFIER&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> title: </code><code class=\"string\">&quot;Reject&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> activationMode: Ti.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND,</code></div> <div class=\"line\"><code class=\"plain\"> destructive: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> authenticationRequired: </code><code class=\"keyword\">true</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-40930452_iOSInteractiveNotifications-Createanotificationcategory\"> <h2 class=\"heading\"><span>Create a notification category</span></h2> <p>A notification category is a group of notification actions for a specific notification. The notification category allows the application to customize the notification options based on which notification style is used. For alert dialogs, only four notification actions can be displayed, while all other notifications can only display two actions. </p> <p>To create a notification action, use the <tt>Titanium.App.iOS.createUserNotificationCategory()</tt> method. Pass the method a dictionary with the following properties: </p> <ul class=\"\"><li class=\"\"> <p><tt>actionsForDefaultContext</tt>: Array of notification action objects to associate with the group. Note that only the first four actions can be displayed for an alert dialog and the first two actions can be displayed for all other notifications. </p> </li><li class=\"\"> <p><tt class=\"\">actionsForMinimalContext</tt>: Array of notification action objects to display for non-dialog-style notifications. If not specified, the first two actions from <tt>actionsForDefaultContent</tt> are displayed. </p> </li><li class=\"\"> <p><tt class=\"\">identifier</tt>: string identifier of the group of actions. When scheduling a notification, pass this value to the <tt>category</tt> property. </p> </li></ul> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> invitationCategory = Ti.App.iOS.createUserNotificationCategory({</code></div> <div class=\"line\"><code class=\"plain\"> identifier: </code><code class=\"string\">&quot;INVITE_CATEGORY&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// The following actions will be displayed for an alert dialog</code></div> <div class=\"line\"><code class=\"plain\"> actionsForDefaultContext: [acceptAction, rescheduleAction, delayAction, rejectAction],</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// The following actions will be displayed for all other notifications</code></div> <div class=\"line\"><code class=\"plain\"> actionsForMinimalContext: [acceptAction, rejectAction]</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-40930452_iOSInteractiveNotifications-Registernotificationcategories\"> <h2 class=\"heading\"><span>Register notification categories</span></h2> <p>Like notification types, you also need to register notification categories with iOS by using the <tt class=\"\">Titanium.App.iOS.registerUserNotificationSettings()</tt> method. Pass the method a dictionary with the <tt class=\"\">type</tt> property set to the notification types to use and the <tt>categories</tt> property to an array of notification category objects the application needs to use. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">Ti.App.iOS.registerUserNotificationSettings({</code></div> <div class=\"line\"><code class=\"plain\"> types: [Ti.App.iOS.USER_NOTIFICATION_TYPE_ALERT, Ti.App.iOS.USER_NOTIFICATION_TYPE_BADGE],</code></div> <div class=\"line\"><code class=\"plain\"> categories: [invitationCategory, downloadCategory]</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> <p>If you are using push notifications, the application needs to call the <tt class=\"\">Titanium.Network.registerForPushNotifications()</tt> method. The application should monitor the <tt>usernotificationsettings</tt> to register for push notifications. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> registerForPush() {</code></div> <div class=\"line\"><code class=\"plain\"> Ti.Network.registerForPushNotifications({</code></div> <div class=\"line\"><code class=\"plain\"> success: deviceTokenSuccess,</code></div> <div class=\"line\"><code class=\"plain\"> error: deviceTokenError,</code></div> <div class=\"line\"><code class=\"plain\"> callback: receivePush</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Remove event listener once registered for push notifications</code></div> <div class=\"line\"><code class=\"plain\"> Ti.App.iOS.removeEventListener(</code><code class=\"string\">&apos;usernotificationsettings&apos;</code><code class=\"plain\">, registerForPush); </code></div> <div class=\"line\"><code class=\"plain\">};</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"comments\">// Wait for user settings to be registered before registering for push notifications</code></div> <div class=\"line\"><code class=\"plain\">Ti.App.iOS.addEventListener(</code><code class=\"string\">&apos;usernotificationsettings&apos;</code><code class=\"plain\">, registerForPush);</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-40930452_iOSInteractiveNotifications-Monitorinteractivenotifications\"> <h2 class=\"heading\"><span>Monitor interactive notifications</span></h2> <p>The application can monitor interactive notifications and respond to them in the background by using the iOS application-level <tt class=\"\">localnotificationaction</tt> event for local notifications and <tt>remotenotificationaction</tt> event for push notifications. The event is triggered when the user selects a notification action. </p> <div class=\"section section-3\" id=\"src-40930452_iOSInteractiveNotifications-localnotificationaction\"> <h3 class=\"heading\"><span>localnotificationaction</span></h3> <p>Monitor the iOS application-level<tt class=\"\"> localnotificationaction</tt> event to respond to an interactive local notification. The event is passed the same object as the <tt>notification</tt> event except it returns two extra properties: </p> <ul class=\"\"><li class=\"\"> <p><tt>category</tt>: string identifier indicating the notification category that triggered the event </p> </li><li class=\"\"> <p><tt>identifier</tt> : string identifier indicating the notification action the user pressed </p> </li></ul> <p>Use the properties to have the application decide how to respond to the interactive notification. </p> <p> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">Ti.App.iOS.addEventListener(</code><code class=\"string\">&apos;localnotificationaction&apos;</code><code class=\"plain\">, </code><code class=\"keyword\">function</code><code class=\"plain\">(e) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Switch for categories</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">switch</code><code class=\"plain\"> (e.category) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">case</code><code class=\"plain\"> </code><code class=\"string\">&quot;DOWNLOAD_CATEGORY&quot;</code><code class=\"plain\">:</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Switch for actions</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">switch</code><code class=\"plain\"> (e.identifier) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">case</code><code class=\"plain\"> </code><code class=\"string\">&quot;ACCEPT_IDENTIFIER&quot;</code><code class=\"plain\">:</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.userInfo &amp;&amp; </code><code class=\"string\">&quot;url&quot;</code><code class=\"plain\"> </code><code class=\"keyword\">in</code><code class=\"plain\"> e.userInfo){</code></div> <div class=\"line\"><code class=\"plain\"> httpGetRequest(e.userInfo.url);</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">break</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// more actions...</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">break</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// more categories...</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">default</code><code class=\"plain\">:</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">break</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> };</code></div> <div class=\"line\"><code class=\"plain\">});\t</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-40930452_iOSInteractiveNotifications-remotenotificationaction\"> <h3 class=\"heading\"><span>remotenotificationaction</span></h3> <p>Monitor the iOS application-level <tt>remotenotificationaction</tt> event to respond to an interactive push notification. The event is passed an object with the following properties: </p> <ul class=\"\"><li class=\"\"> <p><tt>category</tt>: string identifier indicating the notification category that triggered the event </p> </li><li class=\"\"> <p><tt>data</tt>: push notification payload as a JSON object </p> </li><li class=\"\"> <p><tt>identifier</tt>: string identifier indicating the notification action the user pressed </p> </li></ul> <p>Use the properties to have the application decide how to respond to the interactive notification. </p> <p> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">Ti.App.iOS.addEventListener(</code><code class=\"string\">&apos;remotenotificationaction&apos;</code><code class=\"plain\">, </code><code class=\"keyword\">function</code><code class=\"plain\">(e) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Switch for categories</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">switch</code><code class=\"plain\"> (e.category) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">case</code><code class=\"plain\"> </code><code class=\"string\">&quot;DOWNLOAD_CATEGORY&quot;</code><code class=\"plain\">:</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Switch for actions</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">switch</code><code class=\"plain\"> (e.identifier) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">case</code><code class=\"plain\"> </code><code class=\"string\">&quot;ACCEPT_IDENTIFIER&quot;</code><code class=\"plain\">:</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.data &amp;&amp; </code><code class=\"string\">&quot;url&quot;</code><code class=\"plain\"> </code><code class=\"keyword\">in</code><code class=\"plain\"> e.data){</code></div> <div class=\"line\"><code class=\"plain\"> httpGetRequest(e.data.url);</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">break</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// more actions...</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">break</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// more categories...</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">default</code><code class=\"plain\">:</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">break</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\"> };</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> <p> </p> </div> </div> <div class=\"section section-2\" id=\"src-40930452_iOSInteractiveNotifications-Scheduleaninteractivelocalnotification\"> <h2 class=\"heading\"><span>Schedule an interactive local notification</span></h2> <p>To send an interactive local notification, use the <tt class=\"\">Titanium.App.iOS.scheduleLocalNotification()</tt> method. Use it the same way when scheduling a non-interactive local notifications except when creating the dictionary of options to pass to the method, the application must specify the <tt class=\"\">category</tt> property and set it to the <tt>identifier</tt> of the notification category to use. The notification category indicates which group of actions to use with the notification. The notification category must also be registered or else the notification will be presented as a default non-interactive notification. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">Ti.App.iOS.scheduleLocalNotification({</code></div> <div class=\"line\"><code class=\"plain\"> date: </code><code class=\"keyword\">new</code><code class=\"plain\"> Date(</code><code class=\"keyword\">new</code><code class=\"plain\"> Date().getTime() + 3000),</code></div> <div class=\"line\"><code class=\"plain\"> alertBody: </code><code class=\"string\">&quot;New content available! Download now?&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> badge: 1,</code></div> <div class=\"line\"><code class=\"plain\"> userInfo: {</code><code class=\"string\">&quot;url&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;http://www.download.com/resource/asset.json&quot;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\"> category: </code><code class=\"string\">&quot;DOWNLOAD_CATEGORY&quot;</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-40930452_iOSInteractiveNotifications-Sendaninteractivepushnotification\"> <h2 class=\"heading\"><span>Send an interactive push notification</span></h2> <p>To send an interactive push notification, send a payload with the category field set to the identifier of the notification category to use. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;alert&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;New content available! Download now?&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;badge&quot;</code><code class=\"plain\">: 1,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;url&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;http://www.download.com/resource/asset.json&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">&quot;category&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;DOWNLOAD_CATEGORY&quot;</code><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>To send the payload, you can use either the: </p> <ul class=\"\"><li class=\"\"> <p>Appcelerator Dashboard: <a class=\"document-link\" href=\"#!/guide/Sending_and_Scheduling_Push_Notifications\">Sending and Scheduling Push Notifications</a> </p> </li><li> <p>Titanium Cloud Module (ti.cloud) APIs: <a class=\"external-link external-link\" href=\"#!/api/Modules.Cloud.PushNotifications-method-notify\">Cloud.PushNotifications.notify()</a> or <a class=\"external-link external-link\" href=\"#!/api/Modules.Cloud.PushNotifications-method-notifyTokens\">Cloud.PushNotifications.notifyTokens()</a> </p> </li><li> <p>Arrow REST APIs: <a class=\"external-link external-link\" href=\"/arrowdb/latest/#!/api/PushNotifications-method-notify\"> PushNotification.notify </a> or <a class=\"external-link external-link\" href=\"/arrowdb/latest/#!/api/PushNotifications-method-notify_token\">PushNotification.notify_tokens</a> </p> </li></ul> </div> <div class=\"section section-2\" id=\"src-40930452_iOSInteractiveNotifications-Example\"> <h2 class=\"heading\"><span>Example</span></h2> <p>In the following example, run the code on an iOS device or simulator. Click the &quot;Trigger Notification&quot; button, then either lock the phone or place the application in the background. You will have three seconds or else the application will respond to the notification in the foreground. If the device or simulator is running iOS 8 or later, you will receive the interactive local notification. If not, you will receive a regular local notification. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"comments\">// Check for iOS 8 or greater</code></div> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (Ti.Platform.name == </code><code class=\"string\">&quot;iPhone OS&quot;</code><code class=\"plain\"> &amp;&amp; parseInt(Ti.Platform.version.split(</code><code class=\"string\">&quot;.&quot;</code><code class=\"plain\">)[0]) &gt;= 8) {</code></div> <div class=\"line\"><code class=\"plain\"> Ti.API.info(</code><code class=\"string\">&quot;I am iOS 8!&quot;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Create notification actions</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">var</code><code class=\"plain\"> acceptAction = Ti.App.iOS.createUserNotificationAction({</code></div> <div class=\"line\"><code class=\"plain\"> identifier: </code><code class=\"string\">&quot;ACCEPT_IDENTIFIER&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> title: </code><code class=\"string\">&quot;Accept&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> activationMode: Ti.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_FOREGROUND,</code></div> <div class=\"line\"><code class=\"plain\"> destructive: </code><code class=\"keyword\">false</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> authenticationRequired: </code><code class=\"keyword\">true</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">var</code><code class=\"plain\"> rejectAction = Ti.App.iOS.createUserNotificationAction({</code></div> <div class=\"line\"><code class=\"plain\"> identifier: </code><code class=\"string\">&quot;REJECT_IDENTIFIER&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> title: </code><code class=\"string\">&quot;Reject&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> activationMode: Ti.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND,</code></div> <div class=\"line\"><code class=\"plain\"> destructive: </code><code class=\"keyword\">true</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> authenticationRequired: </code><code class=\"keyword\">false</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Create a notification category</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">var</code><code class=\"plain\"> downloadContent = Ti.App.iOS.createUserNotificationCategory({</code></div> <div class=\"line\"><code class=\"plain\"> identifier: </code><code class=\"string\">&quot;DOWNLOAD_CONTENT&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> actionsForDefaultContext: [acceptAction, rejectAction]</code></div> <div class=\"line\"><code class=\"plain\"> }); </code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Register for user notifications and categories</code></div> <div class=\"line\"><code class=\"plain\"> Ti.App.iOS.registerUserNotificationSettings({</code></div> <div class=\"line\"><code class=\"plain\"> types: [</code></div> <div class=\"line\"><code class=\"plain\"> Ti.App.iOS.USER_NOTIFICATION_TYPE_ALERT,</code></div> <div class=\"line\"><code class=\"plain\"> Ti.App.iOS.USER_NOTIFICATION_TYPE_BADGE,</code></div> <div class=\"line\"><code class=\"plain\"> Ti.App.iOS.USER_NOTIFICATION_TYPE_SOUND</code></div> <div class=\"line\"><code class=\"plain\"> ],</code></div> <div class=\"line\"><code class=\"plain\"> categories: [downloadContent]</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Monitor notifications received while app is in the background</code></div> <div class=\"line\"><code class=\"plain\"> Ti.App.iOS.addEventListener(</code><code class=\"string\">&apos;localnotificationaction&apos;</code><code class=\"plain\">, </code><code class=\"keyword\">function</code><code class=\"plain\">(e) {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.category == </code><code class=\"string\">&quot;DOWNLOAD_CONTENT&quot;</code><code class=\"plain\"> &amp;&amp; e.identifier == </code><code class=\"string\">&quot;ACCEPT_IDENTIFIER&quot;</code><code class=\"plain\">) {</code></div> <div class=\"line\"><code class=\"plain\"> alert(</code><code class=\"string\">&quot;start download&quot;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Reset the badge value</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.badge &gt; 0) {</code></div> <div class=\"line\"><code class=\"plain\"> Ti.App.iOS.scheduleLocalNotification({</code></div> <div class=\"line\"><code class=\"plain\"> date: </code><code class=\"keyword\">new</code><code class=\"plain\"> Date(</code><code class=\"keyword\">new</code><code class=\"plain\"> Date().getTime() + 3000),</code></div> <div class=\"line\"><code class=\"plain\"> badge: </code><code class=\"string\">&quot;-1&quot;</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> Ti.API.info(JSON.stringify(e));</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"comments\">// Monitor notifications received while app is in the foreground </code></div> <div class=\"line\"><code class=\"plain\">Ti.App.iOS.addEventListener(</code><code class=\"string\">&apos;notification&apos;</code><code class=\"plain\">, </code><code class=\"keyword\">function</code><code class=\"plain\">(e) { </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Reset the badge value</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.badge &gt; 0) {</code></div> <div class=\"line\"><code class=\"plain\"> Ti.App.iOS.scheduleLocalNotification({</code></div> <div class=\"line\"><code class=\"plain\"> date: </code><code class=\"keyword\">new</code><code class=\"plain\"> Date(</code><code class=\"keyword\">new</code><code class=\"plain\"> Date().getTime() + 3000),</code></div> <div class=\"line\"><code class=\"plain\"> badge: </code><code class=\"string\">&quot;-1&quot;</code></div> <div class=\"line\"><code class=\"plain\"> });</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> Ti.API.info(JSON.stringify(e));</code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"comments\">// App UI</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> win = Ti.UI.createWindow({backgroundColor: </code><code class=\"string\">&apos;white&apos;</code><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> button = Ti.UI.createButton({title: </code><code class=\"string\">&apos;Trigger Notification&apos;</code><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"plain\">button.addEventListener(</code><code class=\"string\">&apos;click&apos;</code><code class=\"plain\">, </code><code class=\"keyword\">function</code><code class=\"plain\">(e){ </code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Send a notification in 3 seconds</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">var</code><code class=\"plain\"> note = Ti.App.iOS.scheduleLocalNotification({</code></div> <div class=\"line\"><code class=\"plain\"> date: </code><code class=\"keyword\">new</code><code class=\"plain\"> Date(</code><code class=\"keyword\">new</code><code class=\"plain\"> Date().getTime() + 3000),</code></div> <div class=\"line\"><code class=\"plain\"> alertBody: </code><code class=\"string\">&quot;New content available! Download now?&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> badge: 1,</code></div> <div class=\"line\"><code class=\"plain\"> userInfo: {</code><code class=\"string\">&quot;url&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;http://www.download.com/resource/asset.json&quot;</code><code class=\"plain\">, id:</code><code class=\"string\">&quot;1&quot;</code><code class=\"plain\">},</code></div> <div class=\"line\"><code class=\"plain\"> category: </code><code class=\"string\">&quot;DOWNLOAD_CONTENT&quot;</code></div> <div class=\"line\"><code class=\"plain\"> }); </code></div> <div class=\"line\"><code class=\"plain\">});</code></div> <div class=\"line\"><code class=\"plain\">win.add(button);</code></div> <div class=\"line\"><code class=\"plain\">win.open();</code></div> </div> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=40930452\"><span>Edit</span></a> </div> </body> </html> ","title":"iOS Interactive Notifications"});