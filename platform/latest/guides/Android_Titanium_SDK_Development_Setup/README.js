Ext.data.JsonP['Android_Titanium_SDK_Development_Setup']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Android Titanium SDK Development Setup</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\"/>\n\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\"/>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"29004964\" class=\"content\">\n            <h1>Android Titanium SDK Development Setup</h1>\n    <div class=\"section section-2 \" id=\"29004964_AndroidTitaniumSDKDevelopmentSetup-Overview\">\n        <h2 class=\"heading \"><span>Overview</span></h2>\n    <p>\n    <span style=\"color: #000000;\">\nThis is a guide to setup the Android development environment to develop for Titanium Mobile.    </span>\n    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"29004964_AndroidTitaniumSDKDevelopmentSetup-GettingStarted\">\n        <h2 class=\"heading \"><span>Getting Started</span></h2>\n<ol class=\" \"><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nMake sure you have the environment setup to build Titanium Mobile: <a class=\"document-link \" href=\"#!/guide/Building_the_Titanium_SDK_From_Source\">Building the Titanium SDK From Source</a>    </span>\n    </p>\n</li><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nDownload Eclipse IDE:    </span>\n     <span style=\"color: #000000;\">\n <a class=\"external-link external-link\" href=\"http://www.eclipse.org/downloads/\" target=\"_blank\">http://www.eclipse.org/downloads/</a>     </span>\n     <span style=\"color: #000000;\">\n. After download finishes, unzip and run it. You'll need to create a new workspace if you don't have one already.    </span>\n    </p>\n</li><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nUninstall CDT plug-in if you have it installed in Eclipse. Our setup will not work with CDT.    </span>\n    </p>\n</li><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nInstall ADT. Instructions should be here:    </span>\n     <span style=\"color: #000000;\">\n <a class=\"external-link external-link\" href=\"http://developer.android.com/sdk/eclipse-adt.html#installing\" target=\"_blank\">http://developer.android.com/sdk/eclipse-adt.html#installing</a>     </span>\n    </p>\n<ol class=\" \"><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nIf you see a warning message of &quot;installing unsigned content&quot; during installation, click OK    </span>\n    </p>\n</li><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nRestart Eclipse after installation complete.    </span>\n    </p>\n</li></ol></li></ol>    <p>\n    <span style=\"color: #000000;\">\nSet Up Eclipse Environment    </span>\n    </p>\n    <p>\nAfter completing the getting started section:    </p>\n<ol class=\" \"><li class=\" \">    <p>\nImport Projects. In Eclipse, File -&gt; Import -&gt; General -&gt; Existing Projects into Workspace.    </p>\n<ol class=\" \"><li class=\" \">    <p>\nClick Next    </p>\n</li><li class=\" \">    <p>\nClick Browse, then go into this directory: titanium_mobile/android (the path will vary- depends on where you clone the directory). Click Open.    </p>\n</li><li class=\" \">    <p>\nNow you should see a number of projects under Projects. You can enable &quot;Copy projects into workspace&quot;, but I prefer not to, b/c if this is enabled, every time you pull from master, or rebuild titanium_mobile, your eclipse workspace will not get updated. Click Finish.    </p>\n</li></ol></li><li class=\" \">    <p>\nCreate a Java project named &quot;titanium-dist&quot;, File -&gt; New -&gt; Java Project. After you name the project, click Finish.<strong class=\" \"><br/></strong>    </p>\n</li><li class=\" \">    <p>\nCreate a lib folder inside titanium-dist and link it with titanium_mobile/dist/android directory. Right-click on titanium-dist project, New -&gt; Folder -&gt; enter name, then click Advanced -&gt; select Link to Alternate Location -&gt; Browse -&gt; select titanium_mobile/dist/android directory (titanium_mobile is the directory you cloned from step 6 above)    </p>\n</li><li class=\" \">    <p>\nRun scons from terminal, then refresh your workspace. At this point, you should NOT see any errors. If you see odd errors, regarding DDMS...etc, try restarting Eclipse/ADB.    </p>\n<ol class=\" \"><li class=\" \">    <p>\nNOTE: If you encounter an error to do with ANDROID_NDK not found, go to Eclipse-&gt;About Eclipse-&gt;Installation Details, remove the Android Native Development item.    </p>\n</li></ol></li></ol>    </div>\n    <div class=\"section section-2 \" id=\"29004964_AndroidTitaniumSDKDevelopmentSetup-CreateTestProjectsinEclipse\">\n        <h2 class=\"heading \"><span>Create Test Projects in Eclipse</span></h2>\n    <p>\nAfter the Eclipse environment is set-up, we are now ready to create a test project in Eclipse for debugging purposes.    </p>\n<ol class=\" \"><li class=\" \">    <p>\nCreate a new Android project named TitaniumTest:    </p>\n<ol class=\" \"><li class=\" \">    <p>\nFile -&gt; New -&gt; Project... -&gt; Android -&gt; Android Project.    </p>\n</li><li class=\" \">    <p>\nClick Next -&gt; Select Google API 2.2 (API 8) - you may see two copies of each google APIs, just pick one.    </p>\n</li><li class=\" \">    <p>\nHit Next -&gt; enter Package Name: <strong class=\" \">com.titanium.test</strong>    </p>\n</li><li class=\" \">    <p>\nClick Finish.    </p>\n</li></ol></li><li class=\" \">    <p>\nCreate a new Titanium Project via TitaniumStudio with the exact same credentials:    </p>\n<ol class=\" \"><li class=\" \">    <p>\nFile -&gt; New -&gt; Titanium Mobile Project    </p>\n</li><li class=\" \">    <p>\nEnter name: TitaniumTest, app Id: <strong class=\" \">com.titanium.test</strong>    </p>\n</li><li class=\" \">    <p>\nClick Finish.    </p>\n</li></ol></li><li class=\" \">    <p>\nUnder src/com.titanium.test/ , rename the class TitaninumTestActivity.java to TitaniumtestActivity.java. If Eclipse doesn't automatically update the classname, update it yourself. (This is necessary for the generated files in the next step)    </p>\n</li><li class=\" \">    <p>\nRun the project you just created via TitaniumStudio on an Android device/emulator. This should generate a build folder in your Filesystem. Now in the Filesystem, go to Build -&gt; Android -&gt; gen -&gt; com -&gt; titanium -&gt; test -&gt; copy all the .java files except for R.java over to your Eclipse project. These files go to <strong class=\" \">src/com/titanium/test</strong> on your Filesystem.    </p>\n</li><li class=\" \">    <p>\nReplace the contents of your AndroidManfiest.xml in Eclipse with the one in TitaniumStudio, precisely build-&gt;Android-&gt;AndroidManifest.xml. If you see any errors like missing themes or icons, just delete those fields from your xml.    </p>\n</li><li class=\" \">    <p>\nIn your Eclipse Filesystem, create a folder named Resources in /assets, and copy Resources folder from your TitaniumStudio project to /assets/Resources. Creating a symlink between two folders <strong class=\" \">will not</strong> work.    </p>\n</li><li class=\" \">    <p>\n<del class=\" \">In your Eclipse project, add necessary libraries to it. You can do this by right clicking on the project, go to Properties -&gt; Android, then under the Library section, click Add on the right side. You should see a list of options, add ALL of them (you can only add one at a time).</del> This won't actually work anymore with the latest Android SDK. The problem is that you won't be able to breakpoint in the Library project. In your Eclipse project, add necessary libraries to it: go to Properties -&gt;  Java Build Path -&gt; Projects. Add all the titanium projects. Now go to the next tab &quot;Libraries&quot;. Add JARS... select all the projects libraries (each time under bin folder). You have to do them one by one. Finally go to the last tab &quot;Order and Export&quot;, Select all the titanium projects + jars    </p>\n<ol class=\" \"><li class=\" \">    <p>\nIf you updated to ADT 22, there's an existing bug that will cause Eclipse environment to stop working. Here's the link to the issue:    </p>\n</li></ol></li><li class=\"p1 \">    <p>\n<a class=\"external-link external-link\" href=\"https://code.google.com/p/android/issues/detail?id=55304\" target=\"_blank\">https://code.google.com/p/android/issues/detail?id=55304</a>.  To fix this, simply right-click on the project you want to run (NOT the library projects), Properties -&gt; Java Build Path -&gt; Order and Export -&gt; check Android Private Libraries box.    </p>\n</li><li class=\" \">    <p>\nIn your Eclipse project, in TitaniumtestApplication.java, remove the <strong class=\" \">content</strong> inside verifyCustomModules method, but <strong class=\" \">DON&quot;T</strong> remove the method.    </p>\n</li><li class=\" \">    <p>\nRefresh your workspace, full clean and re-build    </p>\n</li><li class=\" \">    <p>\nRun/Debug the project.    </p>\n</li></ol>    </div>\n    <div class=\"section section-2 \" id=\"29004964_AndroidTitaniumSDKDevelopmentSetup-SettingupIntelliJIDEAEnvironment\">\n        <h2 class=\"heading \"><span>Setting up IntelliJ IDEA Environment</span></h2>\n<ol class=\" \"><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nDownload and install IntelliJ IDEA here: <a class=\"external-link external-link\" href=\"https://www.jetbrains.com/idea/download/\" target=\"_blank\">https://www.jetbrains.com/idea/download/</a>    </span>\n    </p>\n</li><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nImport Projects -&gt; Select your source (~/Titanium_Mobile/android) -&gt; choose &quot;Eclipse&quot; box, hit Next    </span>\n    </p>\n</li><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nMake sure format is &quot;.idea&quot;, hit Next     </span>\n&gt; Now all projects should be selected, you want to <strong class=\" \">unselect</strong> android-build and TitaniumTest, then hit Next    </p>\n</li><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nSelect Android 6.0 SDK (if this is your first time running InteillJ, you may need to set Android home path. If you don't see Android 6.0, you'll need to install Android 6.0). Click Finish.     </span>\n    </p>\n</li><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nNow you may see a &quot;Locate Eclipse Information&quot; box, click &quot;Cancel&quot;. A box &quot;Import from Eclipse&quot; may pop up, click &quot;Cancel&quot;. This will result in an error says unkown JDKs. If you're    </span>\n    <span style=\"color: #000000;\">\n<br/>    </span>\nseeing this, one or more projects imported is using the JDK that is not configured in Intellij. For instance, if you have JDK 1.7 on IntelliJ, and kroll-apt project is using 1.6, you'll see this. Click &quot;Ok&quot; for now.    <span style=\"color: #000000;\">\n<br/>    </span>\n    </p>\n</li><li class=\" \">    <p>\n    <span style=\"color: #000000;\">\nNow you may see the box &quot;Import Android dependencies from property files&quot;, check all and click &quot;Ok&quot;.    </span>\n    </p>\n</li><li class=\" \">    <p>\nThis step assumes you have JDK 1.7 configured on IntelliJ. Do a quick Build &gt; Make Project. You should see the error &quot;Cannot start compiler... SDK is not specified for module kroll-apt&quot;.<br/>Click &quot;Ok&quot;, this should take you to &quot;Project Structure&quot; of kroll-apt, where you'll see &quot;JavaSE-1.6&quot; and &quot;ECLIPSE&quot; boxes red. Remove &quot;ECLIPSE&quot; by right click -&gt; remove. Then change &quot;Module SDK&quot; to 1.7.    </p>\n</li><li class=\" \">    <p>\nIn the same window, go through each module and remove &quot;com.android.ide.eclipse.adt.DEPENDENCIES&quot;. Click &quot;Ok&quot; once you're done.    </p>\n</li><li class=\" \">    <p>\nRight click on &quot;titanium&quot; module &gt; Open Modules Settings &gt; Remove &quot;kroll-apt.jar&quot; &gt; Click on the &quot;+&quot; button at bottom left corner, choose Module Dependencies, then choose &quot;kroll-apt&quot;. Now check the export<br/>box for both &quot;kroll-apt&quot;, &quot;kroll-common&quot;, &quot;android-support-v7-cardview&quot; and &quot;android-support-v7-appcompat&quot;. Now change the scope of &quot;android-support-v7-cardview&quot; to &quot;Provided&quot;. Then go to each modules, and remove &quot;kroll-apt.jar&quot; if present.    </p>\n</li><li class=\" \">    <p>\nBuild -&gt; Rebuild Module, it should compile successfully.    </p>\n</li></ol>    </div>\n    <div class=\"section section-2 \" id=\"29004964_AndroidTitaniumSDKDevelopmentSetup-CreateTestProjectsinIntelliJ\">\n        <h2 class=\"heading \"><span>Create Test Projects in IntelliJ</span></h2>\n    <p>\nThis guide assumes you already have a working test project for Eclipse, if not please follow the procedure for creating one above.    </p>\n<ol class=\" \"><li class=\" \">    <p>\nImport your Eclipse project over. (File -&gt; New -&gt; Module from existing sources)    </p>\n</li><li class=\" \">    <p>\nRight click on your newly imported module, go to module settings, click on the &quot;+&quot; button on the bottom left, select &quot;Module Dependency&quot; and add everything on that list EXCEPT for kroll-common, appcompat and cardview.    </p>\n</li><li class=\" \">    <p>\nRun &quot;scons&quot; if you haven't already. Forgetting to scons will result in runtime error.    </p>\n</li><li class=\" \">    <p>\nGo to Build -&gt; Rebuild Project.    </p>\n</li></ol>    </div>\n    <div class=\"section section-2 \" id=\"29004964_AndroidTitaniumSDKDevelopmentSetup-Formatting\">\n        <h2 class=\"heading \"><span>Formatting</span></h2>\n    <p>\nFor formatting we will follow Android's formatting style.  You can follow the eclipse formatting rules at <a class=\"external-link external-link\" href=\"https://source.android.com/source/using-eclipse.html#eclipse-formatting\" target=\"_blank\">https://source.android.com/source/using-eclipse.html#eclipse-formatting</a>.    </p>\n    <p>\nYou can download the formatting file here: <a class=\"attachment-link \" href=\"./attachments_39846449_1_android-formatting.xml\">android-formatting.xml</a>    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"29004964_AndroidTitaniumSDKDevelopmentSetup-Troubleshooting\">\n        <h2 class=\"heading \"><span>Troubleshooting</span></h2>\n    <p>\nAdditional troubleshooting information can be found at <a class=\"document-link unresolved\" href=\"#!/guide/Android_Titanium_SDK_Development_Setup\">SDK Developer Troubleshooting</a>    </p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=29004964\"><span>Edit</span></a>\n    \n        <div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n    </div>\n</body>\n</html>\n","title":"Android Titanium SDK Development Setup"});