Ext.data.JsonP['Integrate_a_WatchKit_App_Built_in_Xcode']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Integrate a WatchKit App Built in Xcode</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\"/>\n\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\"/>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"43314566\" class=\"content\">\n            <h1>Integrate a WatchKit App Built in Xcode</h1>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-Introduction\">Introduction</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-Prerequisites\">Prerequisites</a>    </p>\n</li></ul></li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-CreateanAppleWatchApplication\">Create an Apple Watch Application</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-ShareDataBetweentheApplicationandExtension\">Share Data Between the Application and Extension</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-SetupaSession\">Setup a Session</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-TransferData\">Transfer Data</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-TransferFiles\">Transfer Files</a>    </p>\n</li></ul></li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-ProvisioningProfiles\">Provisioning Profiles</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-RuntheProject\">Run the Project</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-PackagetheApplication\">Package the Application</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"document-link \" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-43314566_IntegrateaWatchKitAppBuiltinXcode-FurtherReading\">Further Reading</a>    </p>\n</li></ul>    <div class=\"section section-2 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-Introduction\">\n        <h2 class=\"heading \"><span>Introduction</span></h2>\n    <p>\nThis guide covers how to integrate a WatchKit app built in Xcode with your Titanium application as well as information about sharing data between the extension and application.  This guide does not cover how to develop a WatchKit app. Currently, the Titanium SDK supports WatchKit apps that are built in Xcode and run on watchOS 2.    </p>\n    <p>\nA WatchKit app contains a specialized app extension that runs on either the Apple Watch or iOS device, depending on the watchOS version.  The WatchKit app allows the user to access data from your application on their Apple Watch.    </p>\n    <div class=\"section section-3 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-Prerequisites\">\n        <h3 class=\"heading \"><span>Prerequisites</span></h3>\n<ul class=\" \"><li class=\" \">    <p>\nAppcelerator CLI 5.0 or greater    </p>\n</li><li class=\" \">    <p>\nTitanium SDK 5.0 or greater    </p>\n</li><li class=\" \">    <p>\nXcode 7 or greater    </p>\n</li><li class=\" \">    <p>\nXcode Command-Line Tools    </p>\n</li><li class=\" \">    <p>\nPaired iOS devices must run iOS 9.0 or greater    </p>\n</li></ul>    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-CreateanAppleWatchApplication\">\n        <h2 class=\"heading \"><span>Create an Apple Watch Application</span></h2>\n    <p>\n<strong class=\" \">Using Studio</strong>    </p>\n    <p>\nTo create an Apple Watch application:    </p>\n<ol class=\" \"><li class=\" \">    <p>\nOpen the project's <tt class=\" \">tiapp.xml</tt> file in the Overview tab.    </p>\n</li><li class=\" \">    <p>\nUnder the <i class=\" \">Apple watchOS 2 App</i> section, click <strong class=\" \">Create New...</strong>    </p>\n</li><li class=\" \">    <p>\nA dialog will prompt you for the name of the application.  Enter a name for the watch application, then click <strong class=\" \">OK</strong>.    </p>\n</li></ol>    <p>\nStudio will generate a new Xcode WatchKit project in the Titaniuim project's <tt class=\" \">extensions</tt> folder and updates the <tt class=\" \">ios extensions</tt> element in the <tt class=\" \">tiapp.xml</tt> file.  Open the Xcode project's <tt class=\" \">&lt;NAME&gt;.xcodeproj</tt> to start developing the watch application.    </p>\n    <p>\n    </p>\n    <p>\n<strong class=\" \">Using the CLI</strong>    </p>\n    <p>\nTo create an Apple Watch application, run the following command from the Titanium project that will include the watch application:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">appc </code><code class=\"keyword\">new</code><code class=\"plain\"> -t applewatch -n &lt;WATCH_APP_NAME&gt; --template watchos2</code></div>\n</div>\n</div>    <p>\nIf you omit the <tt class=\" \">--template option</tt>, the CLI will create a watchOS 1 project by default.    </p>\n    <p>\nThe CLI will generate a new Xcode WatchKit project in the Titaniuim project's <tt class=\" \">extensions</tt> folder and updates the <tt class=\" \">ios extensions</tt> element in the <tt class=\" \">tiapp.xml</tt> file.  Open the Xcode project's <tt class=\" \">&lt;NAME&gt;.xcodeproj</tt> to start developing the watch application.    </p>\n    <p>\n    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-ShareDataBetweentheApplicationandExtension\">\n        <h2 class=\"heading \"><span>Share Data Between the Application and Extension</span></h2>\n    <p>\nFor watchOS 2 extensions, use the <a class=\"external-link external-link\" href=\"https://developer.apple.com/library/prerelease/watchos/documentation/WatchConnectivity/Reference/WatchConnectivity_framework/index.html#//apple_ref/doc/uid/TP40015269\" target=\"_blank\">Watch Connectivity Framework</a> and the <a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession\">Titanium.WatchSession APIs</a> to transfer files and data between the watch and iOS application, respectively.    </p>\n    <div class=\"section section-3 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-SetupaSession\">\n        <h3 class=\"heading \"><span>Setup a Session</span></h3>\n    <p>\nTo setup a Watch Connectivity session, the watch application needs to check if the paired device supports Watch Connectivity sessions before retrieving a default session and activating it.  Activating the session opens a channel between the paired devices.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> ([WCSession isSupported]) {</code></div>\n<div class=\"line\"><code class=\"plain\">    watchSession = [WCSession defaultSession];</code></div>\n<div class=\"line\"><code class=\"plain\">    watchSession.delegate = self;</code></div>\n<div class=\"line\"><code class=\"plain\">    [watchSession activateSession];</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div>    <p>\nIn the Titanium application, you must also check to see if the paried devices supports Watch Connectivity sessions with the <tt class=\" \">Titanium.WatchSession.isSupported</tt> property, then call the <tt class=\" \">Titanium.WatchSession.activateSession()</tt> method to activate the session allowing messages to be transferred between devices.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (Ti.WatchSession.isSupported) {</code></div>\n<div class=\"line\"><code class=\"plain\">    Ti.WatchSession.activateSession();</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div>    <p>\nTo check if the session is activated and the paired watch application is reachable, use the following APIs.  Some APIs require that the applications are in a reachable state.    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nWatch Connectivity Framework API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nTitanium.WatchSession API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n+<tt class=\"code-voice \">isSupported</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-property-isSupported\">Ti.WatchSession.isSupported</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nChecks to see if the paired device supports Watch Connectivity sessions.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">reachable</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-property-isReachable\">Ti.WatchSession.isReachable</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nChecks to see if the paired devices share a Watch Connectivity session and both applications are in the foreground.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-sessionReachabilityDidChange:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-reachabilitychanged\">Ti.WatchSession.reachabilitychanged</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCalled or fired when the reachability state changes on the paired device.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    </div>\n    <div class=\"section section-3 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-TransferData\">\n        <h3 class=\"heading \"><span>Transfer Data</span></h3>\n    <p>\nThe Watch Connectivity framework provides a few different ways to exchange data between the iOS device and watch.    </p>\n<ul class=\" \"><li class=\" \">    <p>\n<strong class=\" \">Application Context</strong>: a shared data object between the paired devices that lasts for the current active session.  Use the application context mechanism to synchronization the state between the watch and iOS device.    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nWatch Connectivity Framework API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nTitanium.WatchSession API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">applicationContext</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-property-recentApplicationContext\">Ti.WatchSession.recentApplicationContext</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nRetrieve the current application context.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-updateApplicationContext:error:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-method-updateApplicationContext\">Ti.WatchSession.updateApplicationContext()</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nUpdates the session's application context.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p class=\"p1\">\n<tt class=\"code-voice \">-session:didReceiveApplicationContext:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-receiveapplicationcontext\">Ti.WatchSession.receiveapplicationcontext</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCalled or fired when the session receives an update from the paired device.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <p>\n    </p>\n    <p>\n    </p>\n</li><li class=\" \">    <p>\n<strong class=\" \">Messages</strong>: pass a data object immediately between the paired devices.  Requires that both applications are reachable.    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nWatch Connectivity Framework API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nTitanium.WatchSession API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-sendMessage:replyHandler:errorHandler:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-method-sendMessage\">Ti.WatchSession.sendMessage()</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nSends a message to the paired device.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-session:didReceiveMessage:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-receivemessage\">Ti.WatchSession.receivemessage</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCalled or fired when the device receives a message from the paired device.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <p>\n    </p>\n    <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n        \n    <p>\nIf you are using SDK 5.1.0 or earlier, you should form your request like this: <tt class=\" \">Ti.WatchSession.sendMessage(message)</tt>. If you are using SDK 5.1.0 and above, form your request like this: <tt class=\" \">Ti.WatchSession.sendMessage(params)</tt>.    </p>\n    </div>\n    \n    <p>\n    </p>\n    <p>\n    </p>\n    <p>\n    </p>\n</li><li class=\" \">    <p>\n<strong class=\" \">User Info Transfer</strong>: pass a data object in the background.  Queued and delivered later when the application is reachable again.    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nWatch Connectivity Framework API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nTitanium.WatchSession API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-transferUserInfo:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-method-transferUserInfo\">Ti.WatchSession.transferUserInfo()</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nTransfers user info (data object) to the paired device in the background.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-session:didReceiveUserInfo:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-receiveuserinfo\">Ti.WatchSession.receiveuserinfo</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCalled or fired when the device receives user info from the paired device.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-session:didFinishUserInfoTransfer:error:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-finishuserinfotransfer\">Ti.WatchSession. finishuserinfotransfer</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCalled of fired when the transfer completes on the paired device.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n</li></ul>    </div>\n    <div class=\"section section-3 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-TransferFiles\">\n        <h3 class=\"heading \"><span>Transfer Files</span></h3>\n    <p>\nBesides data, you can transfer files between the paired devices. Use the following APIs to transfer files:    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nWatch Connectivity Framework API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nTitanium.WatchSession API    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>\nDescription    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-transferFile:metadata:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-method-transferFile\">Ti.WatchSession.transferFile()</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nTransfers a file to the paired device in the background.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-session:didReceiveFile:</tt>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-receivefile\">Ti.WatchSession.receivefile</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCalled or fired when the device receives a file transfer from the paired device.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<tt class=\"code-voice \">-session:didFinishFileTransfer:error:</tt>    <span style=\"color: #000000;\">\n     </span>\n    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\n<a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-finishfiletransfer\">Ti.WatchSession.finishfiletransfer</a>    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>\nCalled or fired when the transfer completes (successfully or not) on the paired device.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <p>\n    </p>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-ProvisioningProfiles\">\n        <h2 class=\"heading \"><span>Provisioning Profiles</span></h2>\n    <p>\nBefore deploying a watchOS application to a device or creating a package for distribution, you need to create provisioning profiles for both the WatchKit application and WatchKit extension. You may either add the watch device to an existing provisioning profile or create separate provisioning profiles. Separate provisioning profiles will be needed if you want to support push notifications.    </p>\n    <p>\nFor directions on creating a provisioning profile, see <a class=\"document-link \" href=\"#!/guide/Deploying_to_iOS_devices\">Deploying to iOS devices</a> or <a class=\"document-link \" href=\"#!/guide/Distributing_iOS_apps\">Distributing iOS apps</a>.    </p>\n    <p>\nAfter you create your provisioning profiles and add them to Xcode, you need to add the UUID of the provisioning profiles to the <tt class=\" \">tiapp.xml</tt> file.    </p>\n    <p>\n<strong class=\" \">Using Studio:</strong>    </p>\n<ol class=\" \"><li class=\" \">    <p>\nOpen the tiapp.xml file in the Overview tab.    </p>\n</li><li class=\" \">    <p>\nUnder the <i class=\" \">Apple watchOS 2 App</i> section, click <strong class=\" \">Configure Provisioning Profiles...</strong>    </p>\n</li><li class=\" \">    <p>\nIn the <i class=\" \">Configure Targets</i> step, verify both the Watch App and WatchApp Extension are checked, then click <strong class=\" \">Next</strong>.    </p>\n</li><li class=\" \">    <p>\nFor each distribution target, select in drop-down the provisioning profile you want to use for the WatchApp and WatchApp extension.    </p>\n</li></ol>    <p>\n    </p>\n    <p>\n<strong class=\" \">Using a Text Editor:</strong>    </p>\n<ol class=\" \"><li class=\" \">    <p>\nOpen the <tt class=\" \">tiapp.xml</tt> file.    </p>\n</li><li class=\" \">    <p>\nLocate the <tt class=\" \">extensions</tt> element under the <tt class=\" \">ios</tt> element.    </p>\n</li><li class=\" \">    <p>\nUnder the <tt class=\" \">extensions</tt> element, you should see two <tt class=\" \">target</tt> elements.  One is for the WatchKit extension (target name should contain the <tt class=\" \">Extension</tt>) and the other is for the WatchKit app (target name should not contain <tt class=\" \">Extension</tt>.    </p>\n</li><li class=\" \">    <p>\nUnder each <tt class=\" \">target</tt> element, you should see three self-closing elements: <tt class=\" \">devices</tt>, <tt class=\" \">dist-appstore</tt> and <tt class=\" \">dist-adhoc</tt>.  Add the UUID of the provisioning profile as node text for each deployment type.    </p>\n<ol class=\" \"><li class=\" \">    <p>\n<tt class=\" \">devices</tt>: Add the UUID of the development provisioning profile    </p>\n</li><li class=\" \">    <p>\n<tt class=\" \">dist-appstore</tt>: Add the UUID of the app store distribution provisioning profile    </p>\n</li><li class=\" \">    <p>\n<tt class=\" \">dist-adhoc</tt>: Add the UUID of the ad hoc distribution provisioning profile    </p>\n</li></ol></li></ol>    <p>\nThe example below add the development provisioning profiles to the file.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">tiapp.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;ti:app&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">  &lt;ios&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;extensions&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">      &lt;extension projectPath=</code><code class=\"string\">\"extensions/foo/foo.xcodeproj\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;target name=</code><code class=\"string\">\"foo WatchApp Extension\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">          &lt;provisioning-profiles&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;devices&gt;</code><code class=\"value\">12345678</code><code class=\"plain\">-</code><code class=\"value\">0987</code><code class=\"plain\">-</code><code class=\"value\">6543</code><code class=\"plain\">-</code><code class=\"value\">2121</code><code class=\"plain\">-fedcba098765&lt;/devices&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;dist-appstore/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;dist-adhoc/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">          &lt;/provisioning-profiles&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;/target&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;target name=</code><code class=\"string\">\"foo WatchApp\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">          &lt;provisioning-profiles&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;devices&gt;abcdef-dead-beef-</code><code class=\"value\">0909</code><code class=\"plain\">-</code><code class=\"value\">01234567</code><code class=\"plain\">&lt;/devices&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;dist-appstore/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;dist-adhoc/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">          &lt;/provisioning-profiles&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;/target&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">      &lt;/extension&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/extensions&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">  &lt;ios&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/ti:app&gt;</code></div>\n</div>\n</div>    </div>\n    <div class=\"section section-2 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-RuntheProject\">\n        <h2 class=\"heading \"><span>Run the Project</span></h2>\n    <p>\nTo run the project, just build and launch the project like you would any other Titanium project, but for the WatchKit app, add the <tt class=\" \">--launch-watch-app</tt> or <tt class=\" \">--launch-watch-app-only</tt> flags to launch the watch application with or without the iOS application, respectively.    </p>\n    <p>\nFor Studio, use the run command from the launch options toolbar. If you want to run the watch application on a simulator, in the Target drop-down, select a 9.0 or greater simulator that has a paired watch target.    </p>\n    <p>\n        <img src=\"images/download/attachments/43314566/StudioWatchSimulator.png\" alt=\"images/download/attachments/43314566/StudioWatchSimulator.png\" class=\"confluence-embedded-image confluence-content-image-border\"/>\n            </p>\n    <p>\nFor the CLI, execute <tt class=\" \">appc run -p ios</tt> with the additional build options.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">appc run -p ios --launch-watch-app</code></div>\n</div>\n</div>    <p>\nIf you have more than one watch application extensions, specify the watch application to launch with the <tt class=\" \">--watch-app-name &lt;APP_NAME&gt;</tt> option.    </p>\n    <p>\nIf you want to specify the watch simulator, use the <tt class=\" \">--watch-device-id &lt;UDID&gt;</tt> option.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-PackagetheApplication\">\n        <h2 class=\"heading \"><span>Package the Application</span></h2>\n    <p>\nTo package the application with the extension, just package the project like you would any other Titanium application.  For Studio, use the package command from the launch options toolbar, and for the CLI, execute <tt class=\" \">appc run</tt> command with the package options.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"43314566_IntegrateaWatchKitAppBuiltinXcode-FurtherReading\">\n        <h2 class=\"heading \"><span>Further Reading</span></h2>\n    <p>\n<a class=\"external-link external-link\" href=\"https://developer.apple.com/library/ios/documentation/General/Conceptual/WatchKitProgrammingGuide/index.html\" target=\"_blank\">iOS Developer Library: Apple Watch Programming Guide</a>    </p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=43314566\"><span>Edit</span></a>\n    \n        <div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n    </div>\n</body>\n</html>\n","title":"Integrate a WatchKit App Built in Xcode"});