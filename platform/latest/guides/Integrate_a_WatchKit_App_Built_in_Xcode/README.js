Ext.data.JsonP['Integrate_a_WatchKit_App_Built_in_Xcode']({"guide":" <!doctype html> <html> <head> <title>Integrate a WatchKit App Built in Xcode</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-43314566\" class=\"content\"> <h1>Integrate a WatchKit App Built in Xcode</h1> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-Introduction\">Introduction</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-Prerequisites\">Prerequisites</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-CreateanAppleWatchApplication\">Create an Apple Watch Application</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-ShareDataBetweentheApplicationandExtension\">Share Data Between the Application and Extension</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-SetupaSession\">Setup a Session</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-TransferData\">Transfer Data</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-TransferFiles\">Transfer Files</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-ProvisioningProfiles\">Provisioning Profiles</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-RuntheProject\">Run the Project</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-PackagetheApplication\">Package the Application</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Integrate_a_WatchKit_App_Built_in_Xcode-section-src-43314566_IntegrateaWatchKitAppBuiltinXcode-FurtherReading\">Further Reading</a> </p> </li></ul> <div class=\"section section-2\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-Introduction\"> <h2 class=\"heading\"><span>Introduction</span></h2> <p>This guide covers how to integrate a WatchKit app built in Xcode with your Titanium application as well as information about sharing data between the extension and application. This guide does not cover how to develop a WatchKit app. Currently, the Titanium SDK supports WatchKit apps that are built in Xcode and run on watchOS 2. </p> <p>A WatchKit app contains a specialized app extension that runs on either the Apple Watch or iOS device, depending on the watchOS version. The WatchKit app allows the user to access data from your application on their Apple Watch. </p> <div class=\"section section-3\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-Prerequisites\"> <h3 class=\"heading\"><span>Prerequisites</span></h3> <ul class=\"\"><li> <p>Appcelerator CLI 5.0 or greater </p> </li><li> <p>Titanium SDK 5.0 or greater </p> </li><li> <p>Xcode 7 or greater </p> </li><li> <p>Xcode Command-Line Tools </p> </li><li> <p>Paired iOS devices must run iOS 9.0 or greater </p> </li></ul> <p> </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>As of SDK 6.0.0, the watchOS 1 template and all related code are no longer supported. See <a class=\"external-link external-link\" href=\"https://jira.appcelerator.org/browse/TIMOB-20083\" target=\"_blank\">TIMOB-20083</a> for details. </p> </div> <p> </p> </div> </div> <div class=\"section section-2\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-CreateanAppleWatchApplication\"> <h2 class=\"heading\"><span>Create an Apple Watch Application</span></h2> <p><strong>Using Studio</strong> </p> <p>To create an Apple Watch application: </p> <ol class=\"\"><li class=\"\"> <p>Open the project&apos;s <tt>tiapp.xml</tt> file in the Overview tab. </p> </li><li class=\"\"> <p>Under the <i class=\"\">Apple watchOS 2 App</i> section, click <strong>Create New...</strong> </p> </li><li class=\"\"> <p>A dialog will prompt you for the name of the application. Enter a name for the watch application, then click <strong>OK</strong>. </p> </li></ol> <p>Studio will generate a new Xcode WatchKit project in the Titaniuim project&apos;s <tt class=\"\">extensions</tt> folder and updates the <tt class=\"\">ios extensions</tt> element in the <tt class=\"\">tiapp.xml</tt> file. Open the Xcode project&apos;s <tt>&lt;NAME&gt;.xcodeproj</tt> to start developing the watch application. </p> <p> </p> <p><strong>Using the CLI</strong> </p> <p>To create an Apple Watch application, run the following command from the Titanium project that will include the watch application: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">appc </code><code class=\"keyword\">new</code><code class=\"plain\"> -t applewatch -n &lt;WATCH_APP_NAME&gt; --template watchos2</code></div> </div> </div> <p>If you omit the <tt>--template option</tt>, the CLI will create a watchOS 2 project by default. </p> <p>The CLI will generate a new Xcode WatchKit project in the Titaniuim project&apos;s <tt class=\"\">extensions</tt> folder and updates the <tt class=\"\">ios extensions</tt> element in the <tt class=\"\">tiapp.xml</tt> file. Open the Xcode project&apos;s <tt>&lt;NAME&gt;.xcodeproj</tt> to start developing the watch application. </p> </div> <div class=\"section section-2\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-ShareDataBetweentheApplicationandExtension\"> <h2 class=\"heading\"><span>Share Data Between the Application and Extension</span></h2> <p>For watchOS 2 extensions (or later), use the <a class=\"external-link external-link\" href=\"https://developer.apple.com/library/prerelease/watchos/documentation/WatchConnectivity/Reference/WatchConnectivity_framework/index.html#//apple_ref/doc/uid/TP40015269\" target=\"_blank\">Watch Connectivity Framework</a> and the <a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession\">Titanium.WatchSession APIs</a> to transfer files and data between the watch and iOS application, respectively. </p> <div class=\"section section-3\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-SetupaSession\"> <h3 class=\"heading\"><span>Setup a Session</span></h3> <p>To setup a Watch Connectivity session, the watch application needs to check if the paired device supports Watch Connectivity sessions before retrieving a default session and activating it. Activating the session opens a channel between the paired devices. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> ([WCSession isSupported]) {</code></div> <div class=\"line\"><code class=\"plain\"> watchSession = [WCSession defaultSession];</code></div> <div class=\"line\"><code class=\"plain\"> watchSession.delegate = self;</code></div> <div class=\"line\"><code class=\"plain\"> [watchSession activateSession];</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>In the Titanium application, you must also check to see if the paried devices supports Watch Connectivity sessions with the <tt class=\"\">Titanium.WatchSession.isSupported</tt> property, then call the <tt>Titanium.WatchSession.activateSession()</tt> method to activate the session allowing messages to be transferred between devices. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (Ti.WatchSession.isSupported) {</code></div> <div class=\"line\"><code class=\"plain\"> Ti.WatchSession.activateSession();</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> <p>To check if the session is activated and the paired watch application is reachable, use the following APIs. Some APIs require that the applications are in a reachable state. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Watch Connectivity Framework API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Titanium.WatchSession API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>+<tt class=\"code-voice\">isSupported</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-property-isSupported\">Ti.WatchSession.isSupported</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Checks to see if the paired device supports Watch Connectivity sessions. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">reachable</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-property-isReachable\">Ti.WatchSession.isReachable</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Checks to see if the paired devices share a Watch Connectivity session and both applications are in the foreground. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-sessionReachabilityDidChange:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-reachabilitychanged\">Ti.WatchSession.reachabilitychanged</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Called or fired when the reachability state changes on the paired device. </p> </td> </tr> </tbody> </table> </div> </div> <div class=\"section section-3\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-TransferData\"> <h3 class=\"heading\"><span>Transfer Data</span></h3> <p>The Watch Connectivity framework provides a few different ways to exchange data between the iOS device and watch. </p> <ul class=\"\"><li class=\"\"> <p><strong>Application Context</strong>: a shared data object between the paired devices that lasts for the current active session. Use the application context mechanism to synchronization the state between the watch and iOS device. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Watch Connectivity Framework API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Titanium.WatchSession API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">applicationContext</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-property-recentApplicationContext\">Ti.WatchSession.recentApplicationContext</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Retrieve the current application context. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-updateApplicationContext:error:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-method-updateApplicationContext\">Ti.WatchSession.updateApplicationContext()</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Updates the session&apos;s application context. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p class=\"p1\"><tt class=\"code-voice\">-session:didReceiveApplicationContext:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-receiveapplicationcontext\">Ti.WatchSession.receiveapplicationcontext</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Called or fired when the session receives an update from the paired device. </p> </td> </tr> </tbody> </table> </div> <p> </p> <p> </p> </li><li class=\"\"> <p><strong>Messages</strong>: pass a data object immediately between the paired devices. Requires that both applications are reachable. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Watch Connectivity Framework API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Titanium.WatchSession API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-sendMessage:replyHandler:errorHandler:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-method-sendMessage\">Ti.WatchSession.sendMessage()</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Sends a message to the paired device. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-session:didReceiveMessage:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-receivemessage\">Ti.WatchSession.receivemessage</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Called or fired when the device receives a message from the paired device. </p> </td> </tr> </tbody> </table> </div> <p> </p> <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\"> <p>If you are using SDK 5.1.0 or earlier, you should form your request like this: <tt class=\"\">Ti.WatchSession.sendMessage(message)</tt>. If you are using SDK 5.1.0 and above, form your request like this: <tt>Ti.WatchSession.sendMessage(params)</tt>. </p> </div> <p> </p> <p> </p> <p> </p> </li><li class=\"\"> <p><strong>User Info Transfer</strong>: pass a data object in the background. Queued and delivered later when the application is reachable again. </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Watch Connectivity Framework API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Titanium.WatchSession API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-transferUserInfo:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-method-transferUserInfo\">Ti.WatchSession.transferUserInfo()</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Transfers user info (data object) to the paired device in the background. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-session:didReceiveUserInfo:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-receiveuserinfo\">Ti.WatchSession.receiveuserinfo</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Called or fired when the device receives user info from the paired device. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-session:didFinishUserInfoTransfer:error:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-finishuserinfotransfer\">Ti.WatchSession. finishuserinfotransfer</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Called of fired when the transfer completes on the paired device. </p> </td> </tr> </tbody> </table> </div> </li></ul> </div> <div class=\"section section-3\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-TransferFiles\"> <h3 class=\"heading\"><span>Transfer Files</span></h3> <p>Besides data, you can transfer files between the paired devices. Use the following APIs to transfer files: </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Watch Connectivity Framework API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Titanium.WatchSession API </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Description </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-transferFile:metadata:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-method-transferFile\">Ti.WatchSession.transferFile()</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Transfers a file to the paired device in the background. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-session:didReceiveFile:</tt> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-receivefile\">Ti.WatchSession.receivefile</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Called or fired when the device receives a file transfer from the paired device. </p> </td> </tr> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><tt class=\"code-voice\">-session:didFinishFileTransfer:error:</tt> <span style=\"color: #000000;\"> </span> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p><a class=\"external-link external-link\" href=\"#!/api/Titanium.WatchSession-event-finishfiletransfer\">Ti.WatchSession.finishfiletransfer</a> </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>Called or fired when the transfer completes (successfully or not) on the paired device. </p> </td> </tr> </tbody> </table> </div> <p> </p> </div> </div> <div class=\"section section-2\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-ProvisioningProfiles\"> <h2 class=\"heading\"><span>Provisioning Profiles</span></h2> <p>Before deploying a watchOS application to a device or creating a package for distribution, you need to create provisioning profiles for both the WatchKit application and WatchKit extension. You may either add the watch device to an existing provisioning profile or create separate provisioning profiles. Separate provisioning profiles will be needed if you want to support push notifications. </p> <p>For directions on creating a provisioning profile, see <a class=\"document-link\" href=\"#!/guide/Deploying_to_iOS_devices\">Deploying to iOS devices</a> or <a class=\"document-link\" href=\"#!/guide/Distributing_iOS_apps\">Distributing iOS apps</a>. </p> <p>After you create your provisioning profiles and add them to Xcode, you need to add the UUID of the provisioning profiles to the <tt>tiapp.xml</tt> file. </p> <p><strong>Using Studio:</strong> </p> <ol class=\"\"><li> <p>Open the tiapp.xml file in the Overview tab. </p> </li><li class=\"\"> <p>Under the <i class=\"\">Apple watchOS 2 App</i> section, click <strong>Configure Provisioning Profiles...</strong> </p> </li><li class=\"\"> <p>In the <i class=\"\">Configure Targets</i> step, verify both the Watch App and WatchApp Extension are checked, then click <strong>Next</strong>. </p> </li><li> <p>For each distribution target, select in drop-down the provisioning profile you want to use for the WatchApp and WatchApp extension. </p> </li></ol> <p> </p> <p><strong>Using a Text Editor:</strong> </p> <ol class=\"\"><li class=\"\"> <p>Open the <tt>tiapp.xml</tt> file. </p> </li><li class=\"\"> <p>Locate the <tt class=\"\">extensions</tt> element under the <tt>ios</tt> element. </p> </li><li class=\"\"> <p>Xcode 8 requires the Team-ID of your app to be set in order to link the different app targets. Add the Team-ID of your app into the <tt>team-id</tt> element </p> </li><li class=\"\"> <p>Under the <tt class=\"\">extensions</tt> element, you should see two <tt class=\"\">target</tt> elements. One is for the WatchKit extension (target name should contain the <tt class=\"\">Extension</tt>) and the other is for the WatchKit app (target name should not contain <tt>Extension</tt>. </p> </li><li class=\"\"> <p>Under each <tt class=\"\">target</tt> element, you should see three self-closing elements: <tt class=\"\">devices</tt>, <tt class=\"\">dist-appstore</tt> and <tt>dist-adhoc</tt>. Add the UUID of the provisioning profile as node text for each deployment type. </p> <ol class=\"\"><li class=\"\"> <p><tt>devices</tt>: Add the UUID of the development provisioning profile </p> </li><li class=\"\"> <p><tt>dist-appstore</tt>: Add the UUID of the app store distribution provisioning profile </p> </li><li class=\"\"> <p><tt>dist-adhoc</tt>: Add the UUID of the ad hoc distribution provisioning profile </p> </li></ol></li></ol> <p>The example below add the development provisioning profiles to the file. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">tiapp.xml</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"tiapp.xml\"> <div class=\"line\"><code class=\"plain\">&lt;ti:app&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;ios&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;!-- Required </code><code class=\"keyword\">for</code><code class=\"plain\"> Xcode </code><code class=\"value\">8</code><code class=\"plain\"> and later (Titanium SDK </code><code class=\"value\">5.5</code><code class=\"plain\">.</code><code class=\"value\">0</code><code class=\"plain\">+) --&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;team-id&gt;YOUR-TEAM-ID&lt;/team-id&gt; </code></div> <div class=\"line\"><code class=\"plain\"> &lt;extensions&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;extension projectPath=</code><code class=\"string\">&quot;extensions/foo/foo.xcodeproj&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;target name=</code><code class=\"string\">&quot;foo WatchApp Extension&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;provisioning-profiles&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;devices&gt;</code><code class=\"value\">12345678</code><code class=\"plain\">-</code><code class=\"value\">0987</code><code class=\"plain\">-</code><code class=\"value\">6543</code><code class=\"plain\">-</code><code class=\"value\">2121</code><code class=\"plain\">-fedcba098765&lt;/devices&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;dist-appstore/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;dist-adhoc/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/provisioning-profiles&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/target&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;target name=</code><code class=\"string\">&quot;foo WatchApp&quot;</code><code class=\"plain\">&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;provisioning-profiles&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;devices&gt;abcdef-dead-beef-</code><code class=\"value\">0909</code><code class=\"plain\">-</code><code class=\"value\">01234567</code><code class=\"plain\">&lt;/devices&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;dist-appstore/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;dist-adhoc/&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/provisioning-profiles&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/target&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/extension&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;/extensions&gt;</code></div> <div class=\"line\"><code class=\"plain\"> &lt;ios&gt;</code></div> <div class=\"line\"><code class=\"plain\">&lt;/ti:app&gt;</code></div> </div> </div> </div> <div class=\"section section-2\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-RuntheProject\"> <h2 class=\"heading\"><span>Run the Project</span></h2> <p>To run the project, just build and launch the project like you would any other Titanium project, but for the WatchKit app, add the <tt class=\"\">--launch-watch-app</tt> or <tt>--launch-watch-app-only</tt> flags to launch the watch application with or without the iOS application, respectively. </p> <p>For Studio, use the run command from the launch options toolbar. If you want to run the watch application on a simulator, in the Target drop-down, select a 9.0 or greater simulator that has a paired watch target. </p> <p> <img src=\"images/download/attachments/43314566/StudioWatchSimulator.png\" alt=\"images/download/attachments/43314566/StudioWatchSimulator.png\" class=\"confluence-embedded-image confluence-content-image-border\"> </img></p> <p>For the CLI, execute <tt>appc run -p ios</tt> with the additional build options. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">appc run -p ios --launch-watch-app</code></div> </div> </div> <p>If you have more than one watch application extensions, specify the watch application to launch with the <tt>--watch-app-name &lt;APP_NAME&gt;</tt> option. </p> <p>If you want to specify the watch simulator, use the <tt>--watch-device-id &lt;UDID&gt;</tt> option. </p> </div> <div class=\"section section-2\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-PackagetheApplication\"> <h2 class=\"heading\"><span>Package the Application</span></h2> <p>To package the application with the extension, just package the project like you would any other Titanium application. For Studio, use the package command from the launch options toolbar, and for the CLI, execute <tt>appc run</tt> command with the package options. </p> </div> <div class=\"section section-2\" id=\"src-43314566_IntegrateaWatchKitAppBuiltinXcode-FurtherReading\"> <h2 class=\"heading\"><span>Further Reading</span></h2> <p><a class=\"external-link external-link\" href=\"https://developer.apple.com/library/ios/documentation/General/Conceptual/WatchKitProgrammingGuide/index.html\" target=\"_blank\">iOS Developer Library: Apple Watch Programming Guide</a> </p> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=43314566\"><span>Edit</span></a> </div> </body> </html> ","title":"Integrate a WatchKit App Built in Xcode"});