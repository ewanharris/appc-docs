Ext.data.JsonP['Master-Detail']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Master-Detail</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\"/>\n\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\"/>\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\"/>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"41845665\" class=\"content\">\n            <h1>Master-Detail</h1>\n    <p>\nDemonstrates how to create a master-detail application that presents a list of items from which the user can select to view details about that item.    </p>\n    <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro\">\n            <div class=\"title\">App folder location</div>\n        \n    <p>\n<i class=\" \">alloy</i>/test/apps/<strong class=\" \">advanced/master_detail</strong>    </p>\n    </div>\n    \n    <p>\nThe sample is designed to support handheld and tablet (iPad) form factors. On iPhone, a <a class=\"external-link external-link\" href=\"#!/api/Titanium.UI.iOS.NavigationWindow\">NavigationWindow</a> control is used to display the master and detail windows; on iPad, a <a class=\"external-link external-link\" href=\"#!/api/Titanium.UI.iPad.SplitWindow\">SplitWindow</a> is used; and on Android, a standard <a class=\"external-link external-link\" href=\"https://docs.appcelerator.com/titanium/latest/#!/api/Titanium.UI.Window\" target=\"_blank\">Window</a> control is used for both the master and detail views, as shown below.    </p>\n    <p>\n        <img src=\"images/download/attachments/41845665/master-detail.png\" alt=\"images/download/attachments/41845665/master-detail.png\" class=\"confluence-embedded-image\" width=\"900\"/>\n            </p>\n    <p>\nThe main index.xml view defines this view structure using <tt class=\" \">platform</tt> and <tt class=\" \">formFactor</tt> condition attributes on each top-level window control, as shown below.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/views/index.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;Alloy&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;!-- iPad --&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;SplitWindow id=</code><code class=\"string\">\"index\"</code><code class=\"plain\"> platform=</code><code class=\"string\">\"ios\"</code><code class=\"plain\"> formFactor=</code><code class=\"string\">\"tablet\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;Require src=</code><code class=\"string\">\"master\"</code><code class=\"plain\"> id=</code><code class=\"string\">\"master\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;Require src=</code><code class=\"string\">\"detail\"</code><code class=\"plain\"> id=</code><code class=\"string\">\"detail\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/SplitWindow&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;!-- iPhone --&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">  &lt;NavigationWindow id=</code><code class=\"string\">\"index\"</code><code class=\"plain\"> platform=</code><code class=\"string\">\"ios\"</code><code class=\"plain\"> formFactor=</code><code class=\"string\">\"handheld\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;Require src=</code><code class=\"string\">\"master\"</code><code class=\"plain\"> id=</code><code class=\"string\">\"master\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">  &lt;/NavigationWindow&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;!-- Android --&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">  &lt;Require id=</code><code class=\"string\">\"master\"</code><code class=\"plain\"> src=</code><code class=\"string\">\"master\"</code><code class=\"plain\"> platform=</code><code class=\"string\">\"android\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/Alloy&gt;</code></div>\n</div>\n</div>    <p>\nThe master.xml view is used for all for all platforms and includes a <a class=\"external-link external-link\" href=\"https://docs.appcelerator.com/titanium/latest/#!/api/Titanium.UI.TableView\" target=\"_blank\">TableView</a> element to display the master list of items. An <tt class=\" \">onClick</tt> handler named <strong class=\" \">openDetail</strong> is assigned to the TableView, which is invoked when an item in the table is selected. For Android builds, a <a class=\"external-link external-link\" href=\"https://docs.appcelerator.com/titanium/latest/#!/api/Titanium.UI.TableViewSection-property-headerView\" target=\"_blank\">headerView</a> is conditionally added to the TableView to display the table name.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/views/master.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;Alloy&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;Window title=</code><code class=\"string\">\"Boxers\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;TableView id=</code><code class=\"string\">\"table\"</code><code class=\"plain\"> onClick=</code><code class=\"string\">\"openDetail\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;HeaderView platform=</code><code class=\"string\">\"android\"</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">                &lt;Label id=</code><code class=\"string\">\"header\"</code><code class=\"plain\">&gt;Boxers&lt;/Label&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">            &lt;/HeaderView&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;/TableView&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/Window&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/Alloy&gt;</code></div>\n</div>\n</div>    <p>\nThe index.js controller is responsible for opening the right top-level window depending on which platform the application is running. It also defines a Backbone-based event handler for the &quot;detail&quot; event that is triggered when the user selects an item from the TableView. This event is triggered in the master.js view-controller, shown next.    </p>\n    <p>\nThe controller uses the <a class=\"external-link external-link\" href=\"#!/api/Alloy-property-isHandheld\">Alloy.isHandheld</a>, <a class=\"external-link external-link\" href=\"#!/api/Alloy-property-isHandheld\">Alloy.isTablet</a> and <a class=\"document-link \" href=\"#!/guide/Alloy_Controllers-section-34636384_AlloyControllers-ConditionalCode\">OS_IOS</a> conditionals in the &quot;detail&quot; event handler to determine whether it needs to create a controller to display the details for the selected item (on iPhone) or simply use the existing view in the SplitWindow.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/controllers/index.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (OS_IOS &amp;&amp; Alloy.isHandheld) {</code></div>\n<div class=\"line\"><code class=\"plain\">    Alloy.Globals.navgroup = $.index;</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"plain\">$.master.on(</code><code class=\"string\">'detail'</code><code class=\"plain\">, function(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// get the detail controller and window references</code></div>\n<div class=\"line\"><code class=\"plain\">    var controller = OS_IOS &amp;&amp; Alloy.isTablet ? $.detail : Alloy.createController(</code><code class=\"string\">'detail'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">    var win = controller.getView();</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// get boxer stats by name</code></div>\n<div class=\"line\"><code class=\"plain\">    controller.setBoxerStats(e.row.fighterName);</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// open the detail windows</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"keyword\">if</code><code class=\"plain\"> (OS_IOS &amp;&amp; Alloy.isHandheld) {</code></div>\n<div class=\"line\"><code class=\"plain\">        Alloy.Globals.navgroup.openWindow(win);</code></div>\n<div class=\"line\"><code class=\"plain\">    } </code><code class=\"keyword\">else</code><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (OS_ANDROID) {</code></div>\n<div class=\"line\"><code class=\"plain\">        win.open();</code></div>\n<div class=\"line\"><code class=\"plain\">    }</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (OS_ANDROID) {</code></div>\n<div class=\"line\"><code class=\"plain\">    $.master.getView().open();</code></div>\n<div class=\"line\"><code class=\"plain\">} </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div>\n<div class=\"line\"><code class=\"plain\">    $.index.open();</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div>    <p>\nThe master.js view-controller, shown below, populates the TableView with <a class=\"external-link external-link\" href=\"https://docs.appcelerator.com/titanium/latest/#!/api/Titanium.UI.TableViewRow\" target=\"_blank\">TableViewRow</a> objects. It uses the included Underscore library's <a class=\"external-link external-link\" href=\"http://underscorejs.org/#each\" target=\"_blank\">each()</a> function to iterate over each member of <tt class=\" \">Alloy.Globals.data</tt> collection (defined in app/alloy.js) and creates a new TableViewRow from the app/views/row.xml view. The first argument passed to the <a class=\"external-link external-link\" href=\"#!/api/Alloy-method-createController\">Alloy.createController()</a> is the view-controller's base name (&quot;row&quot;) followed by the specific data for that row to display. Each new view-controller is pushed onto a local array named <tt class=\" \">data</tt>, which is finally passed to the TableView object's <a class=\"external-link external-link\" href=\"#!/api/Titanium.UI.TableView-method-setData\">setData()</a> method.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/controllers/master.js</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">function openDetail(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">    $.trigger(</code><code class=\"string\">'detail'</code><code class=\"plain\">, e);</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"plain\">var data = [];</code></div>\n<div class=\"line\"><code class=\"plain\">_.each(Alloy.Globals.data, function(stats, name) {</code></div>\n<div class=\"line\"><code class=\"plain\">    data.push(Alloy.createController(</code><code class=\"string\">'row'</code><code class=\"plain\">, {</code></div>\n<div class=\"line\"><code class=\"plain\">        name: name,</code></div>\n<div class=\"line\"><code class=\"plain\">        nickname: stats.nickname</code></div>\n<div class=\"line\"><code class=\"plain\">    }).getView());</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\"><code class=\"plain\">$.table.setData(data);</code></div>\n</div>\n</div>    <p>\nThe row.xml view defines the layout and content of each TableViewRow.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">app/views/row.xml</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">&lt;Alloy&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;TableViewRow&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;Label id=</code><code class=\"string\">\"name\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">        &lt;Label id=</code><code class=\"string\">\"nickname\"</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/TableViewRow&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/Alloy&gt;</code></div>\n</div>\n</div>    <p>\nThe row.js view-controller reads the values of the arguments passed to it by the createController() method, and assigns the proper values to the <tt class=\" \">name</tt> and <tt class=\" \">nickname</tt> Label elements.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">var args = arguments[</code><code class=\"value\">0</code><code class=\"plain\">] || {};</code></div>\n<div class=\"line\"><code class=\"plain\">$.row.fighterName = $.name.text = args.name;</code></div>\n<div class=\"line\"><code class=\"plain\">$.nickname.text = args.nickname;</code></div>\n</div>\n</div>    <div class=\"section section-2 \" id=\"41845665_Master-Detail-SeeAlso\">\n        <h2 class=\"heading \"><span>See Also</span></h2>\n<ul class=\" \"><li class=\" \">    <p>\n<a class=\"external-link external-link\" href=\"https://docs.appcelerator.com/titanium/latest/#!/api/Titanium.UI.iOS.NavigationWindow\" target=\"_blank\">NavigationWindow</a>    </p>\n</li><li class=\" \">    <p>\n<a class=\"external-link external-link\" href=\"https://docs.appcelerator.com/titanium/latest/#!/api/Titanium.UI.iPad.SplitWindo\" target=\"_blank\">SplitWindow</a>    </p>\n</li></ul>    <p>\n    </p>\n    <p>\n    </p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=41845665\"><span>Edit</span></a>\n    \n        <div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n    </div>\n</body>\n</html>\n","title":"Master-Detail"});