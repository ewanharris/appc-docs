Ext.data.JsonP['PyDev_Debugger']({"guide":" <!doctype html> <html> <head> <title>PyDev Debugger</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-30083074\" class=\"content\"> <h1>PyDev Debugger</h1> <p>This section is targetted at explaining how to use the debugger. If you want more details on how to use the remote debugger, please check the <a class=\"document-link\" href=\"#!/guide/PyDev_Remote_Debugger\">Remote Debugger page</a>. </p> <p>Ok, probably the first thing you&apos;ll want to do is: add a breakpoint to some file and then run the file (and wait for it to hit the breakpoint). To do that, let&apos;s start with the example below: </p> <p> <img src=\"images/pydev.org/images/debugger/debugger1.png\" alt=\"images/pydev.org/images/debugger/debugger1.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> mod1.py </p> <p>The first thing we&apos;ll want to do is add a breakpoint. Let&apos;s do that at line 5 (print i). There are 2 ways of adding a breakpoint: </p> <ul class=\"alternate\"><li> <p>Double-clicking the left ruler </p> </li><li class=\"\"> <p>Typing <strong>Ctrl+F10</strong> to open the context-menu (see image below) </p> </li></ul> <p> <img src=\"images/pydev.org/images/debugger/debugger2.png\" alt=\"images/pydev.org/images/debugger/debugger2.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Context-menu </p> <p>If everything goes ok, you&apos;ll have the breakpoint shown in your sidebar (as below). </p> <p> <img src=\"images/pydev.org/images/debugger/debugger3.png\" alt=\"images/pydev.org/images/debugger/debugger3.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Breakpoint added </p> <p><strong>NOTE</strong>: if you are putting the breakpoint in an external file (e.g.: some file in the site-packages), the left ruler will not appear, so, you&apos;ll not see the breakpoint. That&apos;s an Eclipse bug in version 3.1. It appears to be fixed for Eclipse 3.2, but as Eclipse 3.2 currently only has only &apos;development&apos; releases, it is unsupported. </p> <p>Now, to run that file, you can rigth click the file and choose to debug the file as a &apos;python run&apos;. <strong class=\"\">NOTE</strong>: if you want to re-run the last executed file, you can click <strong>F11</strong> to debug it. </p> <p> <img src=\"images/pydev.org/images/debugger/debugger4.png\" alt=\"images/pydev.org/images/debugger/debugger4.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Running the file in the debugger </p> <p>When it hits the breakpoint, it will ask you to go to the debug perspective (you should say YES to this dialog). </p> <p> <img src=\"images/pydev.org/images/debugger/debugger5.png\" alt=\"images/pydev.org/images/debugger/debugger5.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Go to perspective dialog </p> <p>This perspective has the actions needed for debugging and allows you to see the variables and evaluate expressions. </p> <p> <img src=\"images/pydev.org/images/debugger/debugger6.png\" alt=\"images/pydev.org/images/debugger/debugger6.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Debug perspective </p> <ul class=\"alternate\"><li class=\"\"> <p><strong>1. Stack view</strong>: You can see the variables in previous stacks by clicking on the stack you want to see. </p> </li><li class=\"\"> <p><strong>2. Variables view</strong>: It allows you to see the globals and locals for the selected stack. </p> </li><li class=\"\"> <p><strong>3. Breakpoints view</strong>:Selecting this tab you can see the breakpoints available and enable/disable any breakpoint. </p> </li><li class=\"\"> <p><strong>4. Editor</strong>: Shows the code and highlights the line that is about to be executed. </p> </li><li class=\"\"> <p><strong>5. Console</strong>: When you run a file through the PyDev debugger, the first thing that appears is a &apos;PyDev debugger&apos; string, to indicate that you&apos;re running the file through the debugger. </p> </li></ul> <p>Now, the basic things you can do in the debugger have some keybindings: </p> <ul class=\"alternate\"><li class=\"\"> <p>Step in: <strong>F5</strong> </p> </li><li class=\"\"> <p>Step over: <strong>F6</strong> </p> </li><li class=\"\"> <p>Step out: <strong>F7</strong> </p> </li><li class=\"\"> <p>Resume: <strong>F8</strong> </p> </li></ul> <p>And you can also evaluate some expression or make the breakpoint a conditional breakpoint. We&apos;ll see how this works below. </p> <div class=\"section section-2\" id=\"src-30083074_PyDevDebugger-Evaluatingsomeexpression\"> <h2 class=\"heading\"><span>Evaluating some expression</span></h2> <p>To evaluate some expression, you can simply select the piece of code you want to evaluate, right-click it and select &apos;watch&apos;. </p> <p> <img src=\"images/pydev.org/images/debugger/debugger7.png\" alt=\"images/pydev.org/images/debugger/debugger7.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Evaluating expression </p> <p>Doing so will open a new view that allows you to view the result of evaluating that piece of code in the current context. It allows you to edit some existing watch, add a new one or remove an existing (right clicking it provides all those actions). </p> <p> <img src=\"images/pydev.org/images/debugger/debugger8.png\" alt=\"images/pydev.org/images/debugger/debugger8.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Evaluate Expression view </p> </div> <div class=\"section section-2\" id=\"src-30083074_PyDevDebugger-Conditionalbreakpoints\"> <h2 class=\"heading\"><span>Conditional breakpoints</span></h2> <p>To make some breakpoint a &apos;conditional breakpoint&apos;, you have to go to some line that already has a breakpoint, type <strong class=\"\">Ctrl+F10</strong> and select <strong>breakpoint properties</strong>. </p> <p> <img src=\"images/pydev.org/images/debugger/debugger9.png\" alt=\"images/pydev.org/images/debugger/debugger9.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Adding a condition to a breakpoint </p> <p>Doing that will give you the following screen: </p> <p> <img src=\"images/pydev.org/images/debugger/debugger10.png\" alt=\"images/pydev.org/images/debugger/debugger10.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Breakpoint Properties </p> <p>In this screen, you can enable some condition... </p> <p> <img src=\"images/pydev.org/images/debugger/debugger11.png\" alt=\"images/pydev.org/images/debugger/debugger11.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\"> </img></p> <p><strong>Image:</strong> Enabling some condition </p> <p>So, now, if you resume execution, it will only hit that breakpoint again when the condition is evaluated to True. </p> </div> <div class=\"section section-2\" id=\"src-30083074_safe-id-UHlEZXZEZWJ1Z2dlci1XaGF0bW9yZT8\"> <h2 class=\"heading\"><span>What more?</span></h2> <p>Now, on to the <a class=\"document-link\" href=\"#!/guide/PyDev_Remote_Debugger\">Remote Debugger</a> and the <a class=\"document-link\" href=\"#!/guide/PyDev_Debug_Console\">Debug Console</a>... </p> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=30083074\"><span>Edit</span></a> </div> </body> </html> ","title":"PyDev Debugger"});