Ext.data.JsonP['Quick_Start_Guide_for_iOS_APS_SDK']({"guide":" <!doctype html> <html> <head> <title>Quick Start Guide for iOS APS SDK</title> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> </meta></head> <body> <div class=\"container\"> <div class=\"header\"/> <div id=\"src-43298726\" class=\"content\"> <h1>Quick Start Guide for iOS APS SDK</h1> <p> </p> <div class=\"confbox admonition admonition-warning aui-message problem shadowed information-macro\"> <div class=\"title\">Pro or Enterprise Subscription Required</div> <p>This AMPLIFY Appcelerator Services feature requires a Pro or Enterprise Subscription. </p> </div> <p> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-Introduction\">Introduction</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-Requirements\">Requirements</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-Setup\">Setup</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-QuickTutorial\">Quick Tutorial</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-ModifytheApplication\">Modify the Application</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-SendanAnalyticsFeatureEvent\">Send an Analytics Feature Event</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-QueryCloudUsers\">Query Cloud Users</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-LogintoaCloudAccount\">Login to a Cloud Account</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-LogaHandledException\">Log a Handled Exception</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-SetaUsernameforCrashLogs\">Set a Username for Crash Logs</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-Testingthetutorialsample\">Testing the tutorial sample</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_safe-id-UXVpY2tTdGFydEd1aWRlZm9yaU9TQVBTU0RLLU5leHRTdGVwc2ZvckFwcGNlbGVyYXRvckFuYWx5dGljcyxDbG91ZGFuZFBlcmZvcm1hbmNl\">Next Steps for Appcelerator Analytics, Cloud and Performance</a> </p> </li></ul></li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-SettingupAppceleratorTest\">Setting up Appcelerator Test</a> </p> <ul class=\"toc-indentation\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-InstalltheTouchTestAgent\">Install the TouchTest Agent</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-RecordaTestClip\">Record a Test Clip</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK-section-src-43298726_QuickStartGuideforiOSAPSSDK-NextStepsforAppceleratorTest\">Next Steps for Appcelerator Test</a> </p> </li></ul></li></ul> <div class=\"section section-2\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-Introduction\"> <h2 class=\"heading\"><span>Introduction</span></h2> <p>This guide walks through the setup of the AMPLIFY Appcelerator Services for iOS applications. The AMPLIFY Appcelerator Services SDK gives you access to the Appcelerator Analytics, Cloud and Performance services. To enable Appcelerator Test for a project, run the <tt>appceletator-test</tt> utility against either the project or IPA file. </p> <div class=\"confbox panel panel\"> <div class=\"title\">Not developing a native iOS application with Objective-C?</div> <p>See the following topics to use the AMPLIFY Appcelerator Services on other platforms: </p> <p> <img src=\"images/download/attachments/43298732/android_icon.png\" alt=\"images/download/attachments/43298732/android_icon.png\" class=\"confluence-embedded-image\"> </img></p> <p>For native Android applications built with Java, see <a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_Android_APS_SDK\">Quick Start Guide for Android APS SDK</a>. </p> <p> <img src=\"images/download/attachments/43298720/ios_icon.png\" alt=\"images/download/attachments/43298720/ios_icon.png\" class=\"confluence-embedded-image\"> </img></p> <p>For native iOS applications built with Swift, see <a class=\"document-link\" href=\"#!/guide/Quick_Start_Guide_for_iOS_APS_SDK_using_Swift\">Quick Start Guide for iOS APS SDK using Swift</a>. </p> <p> <img src=\"images/download/attachments/43298732/titanium_icon.png\" alt=\"images/download/attachments/43298732/titanium_icon.png\" class=\"confluence-embedded-image\"> </img></p> <p>For Titanium Applications, see <a class=\"document-link\" href=\"#!/guide/Quick_Start\">Quick Start</a>. </p> </div> </div> <div class=\"section section-2\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-Requirements\"> <h2 class=\"heading\"><span>Requirements</span></h2> <p>You should be familiar with developing native iOS applications using Xcode and Objective-C. The SDKs supports the following base SDK and target iOS versions: </p> <div class=\"tablewrap\"> <table class=\"confluenceTable\"> <thead> <tr> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Maximum SDK version </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Minimum SDK version </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Maximum target iOS version </p> </td> <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\"> <p>Maximum target iOS version </p> </td> </tr> </thead><tfoot class=\"\"/><tbody> <tr> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>9.0.x </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>8.0.x </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>9.0.x </p> </td> <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\"> <p>7.1.x </p> </td> </tr> </tbody> </table> </div> </div> <div class=\"section section-2\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-Setup\"> <h2 class=\"heading\"><span>Setup</span></h2> <p>Before you can use Appcelerator Services in your application you need to: </p> <ul class=\"\"><li> <p>Create an application in Dashboard </p> </li><li class=\"\"> <p>Download the SDK and <tt>appcelerator-test</tt> utility </p> </li><li> <p>Get the application keys </p> </li></ul> <p><strong>To register an Android Java, or iOS Objective-C or Swift application in Dashboard:</strong> </p> <ol class=\"\"><li> <p>Log in to <a class=\"external-link external-link\" href=\"https://platform.axway.com/\" target=\"_blank\">Dashboard</a>. </p> </li><li class=\"\"> <p>Click the Add menu (<strong class=\"\">+</strong>) and select <strong class=\"\">Register App for Services</strong> to open the <strong>Register App for Services</strong> form. </p> <img src=\"images/download/attachments/43298776/RegisterAppForService_latest.png\" alt=\"images/download/attachments/43298776/RegisterAppForService_latest.png\" class=\"confluence-embedded-image\" width=\"700\"> <p> </p> </img></li><li class=\"\"> <p>In the Register App for Services form, enter the <strong class=\"\">Name</strong> of the application, and select a <strong class=\"\">Platform</strong> and <strong class=\"\">Category</strong>. Optionally, you can provide a description of your application. To add application team members from the organization, click the add (<strong>+</strong>) button in the App Team list at the right. </p> </li><li class=\"\"> <p>Click <strong>OK.</strong> </p> </li></ol> <p>Dashboard displays the <strong class=\"\">Platform Services</strong> tab for your application. In the tab, you can download the APS SDK and <tt>appcelerator-test</tt> utility, and get code snippets to copy and paste into your application. </p> <p>For more information, refer to <a class=\"document-link\" href=\"#!/guide/Managing_Non-Titanium_Client_Applications_in_Dashboard\">Managing Non-Titanium Client Applications in Dashboard</a>. </p> </div> <div class=\"section section-2\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-QuickTutorial\"> <h2 class=\"heading\"><span>Quick Tutorial</span></h2> <p>The following tutorial demonstrates basic setup and usage of Analytics, Cloud, and Performance libraries in an Xcode project. To complete the tutorial you will need your APS application key for the Cloud, Analytics, and Performance services. <a class=\"external-link external-link\" href=\"https://github.com/appcelerator-developer-relations/APSiOSObjectiveC\" target=\"_blank\">Download</a> a complete version of the project. </p> <p><strong>To create a basic application using APS</strong>: </p> <ol class=\"\"><li> <p>In Xcode, create a new iOS Project (Single View Application). </p> </li><li class=\"\"> <p>Unzip <tt class=\"\">appcelerator-sdk-ios-&lt;VERSION&gt;.zip</tt> file and drag the <tt class=\"\">Appcelerator.framework</tt> folder into the root project folder if you are using Xcode 6 and above, or the <tt>Frameworks</tt> folder if you are using Xcode 5 or below. </p> </li><li class=\"\"> <p>Select <strong class=\"\">Copy items into destination&#x2026;</strong> and click <strong>Finish</strong>. </p> </li><li class=\"\"> <p>Select your project in the Project Navigator and click the <strong>Build Phases</strong> tab. </p> </li><li class=\"\"> <p>Expand the <strong class=\"\">Link Binary With Libraries</strong> section and add the <tt class=\"\">libsqlite3.tbd</tt> and <tt class=\"\">libz.tbd</tt> frameworks. Prior to Xcode 7, the framework extension is <tt class=\"\">dylib</tt> rather than <tt>tbd</tt>. </p> </li><li class=\"\"> <p>Click the <strong class=\"\">Build Settings</strong> tab, then click the <strong>All</strong> button in the top-left corner of the tab. </p> </li><li class=\"\"> <p>If you are using Xcode 7, you will need to disable bitcode since some third-party libraries do not have bitcode enabled. Expand the <strong class=\"\">Build Options</strong> section and set <strong class=\"\">Enable Bitcode</strong> to <strong>No</strong>. </p> </li><li class=\"\"> <p>Expand the <strong class=\"\">Linking</strong> section and add <tt class=\"\">-ObjC</tt> to <strong>Other Linker Flags</strong> . </p> </li><li class=\"\"> <p>In your application delegate implementation file, import <strong>Appcelerator/Appcelerator.h.</strong> </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">#</code><code class=\"keyword\">import</code><code class=\"plain\"> &lt;Appcelerator/Appcelerator.h&gt;</code></div> </div> </div> </li><li class=\"\"> <p>Add the following initialization code to your application delegate&apos;s <tt>application:didFinishLaunchingWithOptions</tt> method, replacing the placeholder string with your APS application key: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">[[APSServiceManager sharedInstance] enableWithAppKey:@</code><code class=\"string\">&quot;APS_APP_KEY&quot;</code><code class=\"plain\">];</code></div> </div> </div> <p>The iOS application is now ready to make method calls using the APS SDK APIs. </p> </li></ol> <p> </p> <div class=\"confbox admonition admonition-warning aui-message problem shadowed information-macro\"> <p>If the application attempts to make APS SDK API calls without first setting the application key, the application will throw an exception and crash. </p> </div> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-ModifytheApplication\"> <h3 class=\"heading\"><span>Modify the Application</span></h3> <p>Customize the application&apos;s UI to display a picker, text field and button, and add some logic to respond to user interaction. The picker will display a list of available user accounts. The user can enter their password in the text field, then click the button to log in. </p> <ol class=\"\"><li class=\"\"> <p>Open your project&apos;s <tt>Main.storyboard</tt> file. </p> </li><li> <p>Drag a Picker View, Text Field and Button from the Object library to the view. </p> </li><li class=\"\"> <p>Open the <strong class=\"\">Assistant Editor</strong>. (From the menu, select <strong class=\"\">View</strong> &gt; <strong class=\"\">Assistant Editor </strong>&gt; <strong class=\"\">Show Assistant Editor</strong> or click the <strong>Assistant Editor</strong> button in the top-right corner.) </p> </li><li class=\"\"> <p>In the right pane, display the <tt>ViewController.h</tt> file. </p> </li><li class=\"\"> <p>Control-drag the Picker View to <strong class=\"\">View Controller</strong> icon at the bottom of the storyboard. Select <strong class=\"\">dataSource</strong>. Repeat for the <strong>delegate</strong> option. </p> <img src=\"images/download/attachments/43298726/PickerDataSourceDelegate.png\" alt=\"images/download/attachments/43298726/PickerDataSourceDelegate.png\" class=\"confluence-embedded-image\"> </img></li><li class=\"\"> <p>Drag the Picker View to the header file to create an IBOutlet. Name the outlet <tt class=\"\">picker</tt> and click <strong class=\"\">Connect</strong>. Repeat the same procedure for the Text Field and name it <tt>textField</tt>. <img src=\"images/download/attachments/43298726/CreateOutlet.png\" alt=\"images/download/attachments/43298726/CreateOutlet.png\" class=\"confluence-embedded-image\"> </img></p> </li><li class=\"\"> <p>In the <tt class=\"\">ViewController.h</tt> file, declare the View Controller to implement the <tt class=\"\">UIPickerViewDelegate</tt>, <tt class=\"\">UIPickerViewDataSource</tt>, and <tt class=\"\">UITextFieldDelegate</tt> protocols. Add an NSArray property called <tt class=\"\">usernames</tt> to keep track of the Picker View&apos;s data source and an NSString property called <tt>username</tt> to reference the current selection. The final header file should look like: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">ViewController.h</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"ViewController.h\"> <div class=\"line\"><code class=\"plain\">#</code><code class=\"keyword\">import</code><code class=\"plain\"> &lt;UIKit/UIKit.h&gt;</code></div> <div class=\"line\"><code class=\"plain\">#</code><code class=\"keyword\">import</code><code class=\"plain\"> &lt;CoreLocation/CoreLocation.h&gt;</code></div> <div class=\"line\"><code class=\"color2\">@interface</code><code class=\"plain\"> ViewController : UIViewController &lt;UIPickerViewDelegate, UIPickerViewDataSource, UITextFieldDelegate&gt;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"color1\">@property</code><code class=\"plain\"> (weak, nonatomic) IBOutlet UIPickerView *picker;</code></div> <div class=\"line\"><code class=\"color1\">@property</code><code class=\"plain\"> (weak, nonatomic) IBOutlet UITextField *textField;</code></div> <div class=\"line\"><code class=\"color1\">@property</code><code class=\"plain\"> (strong, nonatomic) NSArray *usernames;</code></div> <div class=\"line\"><code class=\"color1\">@property</code><code class=\"plain\"> (strong, nonatomic) NSString *username;</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"color1\">@end</code><code class=\"plain\">&#xA0;</code></div> </div> </div> </li><li class=\"\"> <p>In the <tt class=\"\">ViewController.m</tt> file, create an IBAction for the button named <tt class=\"\">doClick</tt>. In the following sections, you will add code to this handler that calls Cloud, Analytics and Performance services. The View Controller needs to implement the methods of <tt class=\"\">UIPickerViewDelegate</tt>, <tt class=\"\">UIPickerViewDataSource</tt> and<tt> UITextFieldDelegate</tt> protocols. Add the following code to the file: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">ViewController.m</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"ViewController.m\"> <div class=\"line\"><code class=\"plain\">#</code><code class=\"keyword\">import</code><code class=\"plain\"> </code><code class=\"string\">&quot;ViewController.h&quot;</code></div> <div class=\"line\"><code class=\"comments\">// Add this import statement</code></div> <div class=\"line\"><code class=\"plain\">#</code><code class=\"keyword\">import</code><code class=\"plain\"> &lt;Appcelerator/Appcelerator.h&gt;</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"color1\">@implementation</code><code class=\"plain\"> ViewController</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">- (</code><code class=\"keyword\">void</code><code class=\"plain\">)viewDidLoad</code></div> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> [</code><code class=\"keyword\">super</code><code class=\"plain\"> viewDidLoad];</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Add these statements to dismiss the keyboard </code></div> <div class=\"line\"><code class=\"plain\"> self.textField.delegate = self;</code></div> <div class=\"line\"><code class=\"plain\"> [self.textField resignFirstResponder];&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">- (</code><code class=\"keyword\">void</code><code class=\"plain\">)didReceiveMemoryWarning</code></div> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> [</code><code class=\"keyword\">super</code><code class=\"plain\"> didReceiveMemoryWarning];</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"comments\">// Add these methods</code></div> <div class=\"line\"><code class=\"plain\">- (IBAction)onClick:(id)sender {</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">#pragma mark Picker DataSource/Delegate</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> </code><code class=\"value\">1</code><code class=\"plain\">;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> _usernames.count;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">- (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component {</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> [_usernames[row] objectForKey:@</code><code class=\"string\">&quot;username&quot;</code><code class=\"plain\">];</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">- (</code><code class=\"keyword\">void</code><code class=\"plain\">)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component {</code></div> <div class=\"line\"><code class=\"plain\"> _username = [_usernames[row] objectForKey:@</code><code class=\"string\">&quot;username&quot;</code><code class=\"plain\">];</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">#pragma mark TextField Delegate</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField</code></div> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> YES;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">- (BOOL)textFieldShouldReturn:(UITextField *)textField</code></div> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> [textField resignFirstResponder];</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> YES;</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"color1\">@end</code></div> </div> </div> </li><li class=\"\"> <p>Control-drag the Button to the <tt>onClick:sender</tt> method to create an action connection. <img src=\"images/download/attachments/43298726/ConnectAction.png\" alt=\"images/download/attachments/43298726/ConnectAction.png\" class=\"confluence-embedded-image\"> </img></p> </li></ol> </div> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-SendanAnalyticsFeatureEvent\"> <h3 class=\"heading\"><span>Send an Analytics Feature Event</span></h3> <p>The Analytics library automatically captures and sends application life-cycle events to the backend Analytics service. You can also send custom analytics events, as shown in this example. There are two types of custom events: feature events and navigation events. </p> <p>In the <tt class=\"\">doClick</tt> method, add a <tt class=\"\">sendAppFeatureEvent:</tt> method call to send a feature event with the string &quot;sample.feature.login&quot;. The optional <tt class=\"\">payload</tt> parameter is set to <tt>nil</tt> for this example, but it lets you send additional data along with the event. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">- (IBAction)doClick:(id)sender {</code></div> <div class=\"line\"><code class=\"plain\">\t</code><code class=\"comments\">// Call Analytics method</code></div> <div class=\"line\"><code class=\"plain\">\t[[APSAnalytics sharedInstance] sendAppFeatureEvent:@</code><code class=\"string\">&quot;sample.feature.login&quot;</code><code class=\"plain\"> payload:nil];</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-QueryCloudUsers\"> <h3 class=\"heading\"><span>Query Cloud Users</span></h3> <p>To use the APS Cloud component, most of the methods require a user to be logged in. This sample uses the Picker View to select a Cloud user account. To populate the Picker View values, the application needs to retrieve a list of users. Call the <tt class=\"\">query:withBlock:</tt> method to retrieve a list of user accounts from inside the <tt>viewDidLoad</tt> method. </p> <p>Every APS Cloud method includes a <tt class=\"\">withBlock</tt> parameter that specifies the callback to handle the server response. The callback is passed an <tt>APSResponse</tt> object that contains response metadata (such as success or failure) and the response payload. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">ViewController.m</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"ViewController.m\"> <div class=\"line\"><code class=\"plain\">- (</code><code class=\"keyword\">void</code><code class=\"plain\">)viewDidLoad</code></div> <div class=\"line\"><code class=\"plain\">{</code></div> <div class=\"line\"><code class=\"plain\"> [</code><code class=\"keyword\">super</code><code class=\"plain\"> viewDidLoad];</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Call the APSUsers query method</code></div> <div class=\"line\"><code class=\"plain\"> [APSUsers query:nil withBlock:^(APSResponse *e){</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.success) {</code></div> <div class=\"line\"><code class=\"plain\"> _usernames = [e.response objectForKey:@</code><code class=\"string\">&quot;users&quot;</code><code class=\"plain\">];</code></div> <div class=\"line\"><code class=\"plain\"> [self.picker reloadAllComponents];</code></div> <div class=\"line\"><code class=\"plain\"> } </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@</code><code class=\"string\">&quot;Error&quot;</code></div> <div class=\"line\"><code class=\"plain\"> message:@</code><code class=\"string\">&quot;Unable to retrieve user accounts!&quot;</code></div> <div class=\"line\"><code class=\"plain\"> delegate:nil</code></div> <div class=\"line\"><code class=\"plain\"> cancelButtonTitle:@</code><code class=\"string\">&quot;OK&quot;</code></div> <div class=\"line\"><code class=\"plain\"> otherButtonTitles: nil];</code></div> <div class=\"line\"><code class=\"plain\"> [alert show];</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }];</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-LogintoaCloudAccount\"> <h3 class=\"heading\"><span>Login to a Cloud Account</span></h3> <p>To login to a Cloud account, you need the username and password. Since the application was modified to get all available user accounts and populate the Picker View, the application needs to get the current value of the picker and the text entered in the Text Field. These values are passed to the <tt class=\"\">login:withBlock:</tt> method. Modify the <tt>doClick</tt> method to login to a Cloud user account. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">ViewController.m</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"ViewController.m\"> <div class=\"line\"><code class=\"plain\">- (IBAction)doClick:(id)sender {</code></div> <div class=\"line\"><code class=\"plain\">\t[[APSAnalytics sharedInstance] sendAppFeatureEvent:@</code><code class=\"string\">&quot;sample.feature.login&quot;</code><code class=\"plain\"> payload:nil];</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Construct the request parameters</code></div> <div class=\"line\"><code class=\"plain\"> NSDictionary *params = [[NSDictionary alloc]</code></div> <div class=\"line\"><code class=\"plain\"> initWithObjectsAndKeys:_username,@</code><code class=\"string\">&quot;login&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> [_textField text],@</code><code class=\"string\">&quot;password&quot;</code><code class=\"plain\">,</code></div> <div class=\"line\"><code class=\"plain\"> nil];</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Call the APSUsers login method</code></div> <div class=\"line\"><code class=\"plain\"> [APSUsers login:params withBlock:^(APSResponse *e){</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.success) {</code></div> <div class=\"line\"><code class=\"plain\"> NSLog(@</code><code class=\"string\">&quot;Successfully logged in as %@&quot;</code><code class=\"plain\">, _username);</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\"> } </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> NSLog(@</code><code class=\"string\">&quot;ERROR: Failed to log in!&quot;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }];</code></div> <div class=\"line\"><code class=\"plain\">}&#xA0;</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-LogaHandledException\"> <h3 class=\"heading\"><span>Log a Handled Exception</span></h3> <p>The Performance library automatically logs application crashes (unhandled exceptions) and handled exceptions to the backend Performance service. You can also leave breadcrumbs in your application, which are developer-defined text strings (up to 140 characters) that are analogous to log messages. </p> <p>For example, you can replace the <tt class=\"\">Log</tt> calls in the catch statements with <tt class=\"\">logHandledException</tt> calls. Instead, the application will generate a runtime exception, and then call the <tt class=\"\">logHandledException</tt> method to log that exception to the Performance backend. To the <tt>doClick</tt> method, add the following new code: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">- (IBAction)doClick:(id)sender {</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Analytics call...</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Cloud call...</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"color1\">@try</code><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> [NSException raise:NSGenericException format:@</code><code class=\"string\">&quot;Something happened...&quot;</code><code class=\"plain\">];</code></div> <div class=\"line\"><code class=\"plain\"> } </code><code class=\"color1\">@catch</code><code class=\"plain\"> (NSException *exception) {</code></div> <div class=\"line\"><code class=\"plain\"> [[APSPerformance sharedInstance] logHandledException:exception];</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\">}</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-SetaUsernameforCrashLogs\"> <h3 class=\"heading\"><span>Set a Username for Crash Logs</span></h3> <p>To help differentiate crash logs, use the <a class=\"external-link external-link\" href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSPerformance.html#//api/name/username\" target=\"_blank\">u<tt class=\"\">sername</tt> </a> property. When the application successfully logs in to the Cloud user account, the application sets the u<tt>sername</tt> property. </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"title\">ViewController.m</div> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"ViewController.m\"> <div class=\"line\"><code class=\"plain\">- (IBAction)doClick:(id)sender {</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\"> [APSUsers login:params withBlock:^(APSResponse *e){</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (e.success) {</code></div> <div class=\"line\"><code class=\"plain\"> NSLog(@</code><code class=\"string\">&quot;Successfully logged in as %@&quot;</code><code class=\"plain\">, _username);</code></div> <div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Add this APS Performance method call</code></div> <div class=\"line\"><code class=\"plain\"> [[APSPerformance sharedInstance] username] = _username;</code></div> <div class=\"line\"><code class=\"plain\"> } </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div> <div class=\"line\"><code class=\"plain\"> NSLog(@</code><code class=\"string\">&quot;ERROR: Failed to log in!&quot;</code><code class=\"plain\">);</code></div> <div class=\"line\"><code class=\"plain\"> }</code></div> <div class=\"line\"><code class=\"plain\"> }];</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">}&#xA0;</code></div> </div> </div> </div> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-Testingthetutorialsample\"> <h3 class=\"heading\"><span>Testing the tutorial sample</span></h3> <p>Before testing the sample, you need to create user accounts for the application to query. To create Cloud user accounts: </p> <ol class=\"\"><li> <p>Log in to <a class=\"external-link external-link\" href=\"https://platform.axway.com/\" target=\"_blank\">Appcelerator Dashboard</a>. </p> </li><li class=\"\"> <p>In Dashboard, select your application from the <strong>APIs</strong> menu in the upper-left corner. </p> </li><li class=\"\"> <p>In the left navigation bar, click <strong class=\"\">Manage</strong> <strong>Data</strong>. </p> </li><li class=\"\"> <p>Click <strong class=\"\">Users</strong>, then the <strong>Create User</strong> button. </p> </li><li class=\"\"> <p>In the <strong>Username</strong> field enter the user&apos;s username. </p> </li><li class=\"\"> <p>In the <strong>Password</strong> field enter the new user&apos;s password (four-character minimum). </p> </li><li class=\"\"> <p>Click <strong>Save Changes</strong>. </p> </li></ol> <p> </p> <div class=\"confbox admonition admonition-info aui-message hint shadowed information-macro\"> <p>To create a Cloud user account, you only need a username or e-mail address, and a password. </p> <p>For more information about managing Cloud user accounts, see <a class=\"document-link\" href=\"#!/guide/Managing_Organizations\">Managing Organizations</a>. </p> </div> <p>After you have created a few Cloud user accounts, build the sample and launch it on either a device or emulator. </p> <p>Once the application launches: </p> <ol class=\"\"><li> <p>Click on the Picker/Spinner. You should see a list of all the Cloud user accounts you added. </p> </li><li> <p>Select a user account from the Picker/Spinner and enter that user&apos;s password. Click the Button. In the log output, you should see an info log that login command was successful or not. </p> </li><li> <p>Go back to the <a class=\"external-link external-link\" href=\"https://platform.appcelerator.com/\" target=\"_blank\">Appcelerator Dashboard</a>. </p> </li><li class=\"\"> <p>In Dashboard, select your application from the <strong>Apps</strong> menu in the upper-left corner. </p> </li><li class=\"\"> <p>In the left navbar, click <strong class=\"\">Performance</strong>, then <strong>Handled Exceptions</strong>. You should see the &quot;Something happened...&quot; exception in the list. </p> </li><li class=\"\"> <p>In the left navbar, click <strong>Search by User</strong>. Enter the username of the account that successfully logged in. Click the username. You should see a crash report for the user. </p> </li><li class=\"\"> <p>In the left navbar, select <strong>Analytics</strong>. </p> </li><li> <p>In the Real Time view, you should see at least one active session. </p> </li><li class=\"\"> <p>In the left navbar, click <strong>Events</strong>. You should see the &quot;sample.feature.login&quot; feature event. </p> </li></ol> </div> <div class=\"section section-3\" id=\"src-43298726_safe-id-UXVpY2tTdGFydEd1aWRlZm9yaU9TQVBTU0RLLU5leHRTdGVwc2ZvckFwcGNlbGVyYXRvckFuYWx5dGljcyxDbG91ZGFuZFBlcmZvcm1hbmNl\"> <h3 class=\"heading\"><span>Next Steps for Appcelerator Analytics, Cloud and Performance</span></h3> <p>This tutorial only covers a small portion of what the Analytics, Cloud and Performance services can provide. For more in-depth information about these features, see the following topics: </p> <ul class=\"\"><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/APS_Analytics_for_iOS\">APS Analytics for iOS</a> </p> </li><li> <p><a class=\"external-link external-link\" href=\"/arrowdb/latest/#!/guide/ios\">APS Cloud for iOS</a> </p> </li><li class=\"\"> <p><a class=\"document-link\" href=\"#!/guide/APS_Performance_for_iOS\">APS Performance for iOS</a> </p> </li></ul> </div> </div> <div class=\"section section-2\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-SettingupAppceleratorTest\"> <h2 class=\"heading\"><span>Setting up Appcelerator Test</span></h2> <p>To setup your application to use Appcelerator Test, download and run the <tt>appcelerator-test</tt> Utility. </p> <ol class=\"\"><li class=\"\"> <p>Download the <tt class=\"\">appcelerator-test</tt> Utility and copy your Appcelerator Test application key from the Appcelerator Dashboard. (For instructions, see <a class=\"document-link\" href=\"#!/guide/Managing_Non-Titanium_Client_Applications_in_Dashboard\">Managing Non-Titanium Client Applications in Dashboard</a>.) </p> </li><li> <p>Unpack the file to a common location. You will need to use this utility to enable Appcelerator Test for each of your applications. </p> </li></ol> <p>You can run the <tt>appcelerator-test</tt> utility either against the project or an IPA file. </p> <p> </p> <p><strong>To run the appcelerator-test utility against an IPA file</strong>, first export your project as an IPA file, then run the following command, and install the IPA file to a device: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">java -jar appcelerator-test.jar -ipa &lt;IPA_FILE&gt; -provisioningprofile &lt;DISTRIBUTION_PROVISIONING_PROFILE&gt; -signingidentity &lt;SIGNING_IDENTITY_NAME&gt; -dashboardurl &lt;CLOUDTEST_URL&gt; -appkey &lt;APP_GUID&gt; -username &lt;APPC_PLATFORM_USERNAME&gt; -password &lt;APPC_PLATFORM_PASSWORD&gt;</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">### Example</code></div> <div class=\"line\"><code class=\"plain\">java -jar appcelerator-test.jar -ipa ~/Documents/Xcode_Workspace/SampleProject.ipa -provisioningprofile ~/Downloads/BluthCo.mobileprovision -signingidentity </code><code class=\"string\">&quot;iPhone Distribution: Joe User (XX1111XXXX)&quot;</code><code class=\"plain\"> -appkey </code><code class=\"string\">&quot;11111111-2222-3333-4444-555555555555&quot;</code><code class=\"plain\"> -dashboardurl https:</code><code class=\"comments\">//platform.appcelerator.com -username user@appcelerator.com -password secret</code></div> <div class=\"line\">&#xA0;</div> <div class=\"line\"><code class=\"plain\">### Successful Response</code></div> <div class=\"line\"><code class=\"plain\">Mobile App Object </code><code class=\"string\">&quot;SampleProject_11111111-2222-3333-4444-555555555555&quot;</code><code class=\"plain\"> representing your Application </code><code class=\"string\">&quot;SampleProject&quot;</code><code class=\"plain\"> has been created in CloudTest Repository.</code></div> </div> </div> <p><strong> <br> </br></strong> </p> <p><strong class=\"\">To run the appcelerator-test utility against a project</strong>, run the following command, then build the project with the<tt> -TouchTest</tt> suffix and install the application to a device or simulator: </p> <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\"> <div class=\"line\"><code class=\"plain\">java -jar appcelerator-test.jar -project &lt;PATH_TO_PROJECT&gt; -target &lt;XCODE_TARGET&gt; -dashboardurl &lt;CLOUDTEST_URL&gt; -appkey &lt;APP_GUID&gt; -username &lt;APPC_PLATFORM_USERNAME&gt; -password &lt;APPC_PLATFORM_PASSWORD&gt; -useforceloadlinkerflag -removelibraryfrombuildphase</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">### Example</code></div> <div class=\"line\"><code class=\"plain\">java -jar appcelerator-test.jar -project ~/Documents/Xcode_Workspace/SampleProject/SampleProject.xcodeproj/ -target SampleProject -dashboardurl https:</code><code class=\"comments\">//platform.appcelerator.com -username user@appcelerator.com -appkey &quot;11111111-2222-3333-4444-555555555555&quot; -password secret -useforceloadlinkerflag -removelibraryfrombuildphase</code></div> <div class=\"line\"><code class=\"plain\">&#xA0;</code></div> <div class=\"line\"><code class=\"plain\">### Successful Response</code></div> <div class=\"line\"><code class=\"plain\">Mobile App Object </code><code class=\"string\">&quot;SampleProject_11111111-2222-3333-4444-555555555555&quot;</code><code class=\"plain\"> representing your Application </code><code class=\"string\">&quot;SampleProject&quot;</code><code class=\"plain\"> has been created in CloudTest Repository.</code></div> </div> </div> <p> </p> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-InstalltheTouchTestAgent\"> <h3 class=\"heading\"><span>Install the TouchTest Agent</span></h3> <p>To run tests on a device you need to install the <strong class=\"\">TouchTest Agent </strong>a light-weight software agent that controls the device during test recording and playback. Once installed you also need to register your device with the Test service, and have the device approved by an administrator (see <a class=\"document-link\" href=\"#!/guide/Getting_Started_with_Test-section-src-43298707_GettingStartedwithTest-approval\">Approving devices and simulators</a>). </p> <p>On iOS, the TouchTest Agent runs as a web application in mobile Safari. The steps for installing TouchTest Agent on an iOS device and simulator are slightly different. Also, installing TouchTest Agent on a simulator running iOS 6 or earlier requires providing the Mac system&apos;s hardware UUID. </p> <p><strong>To install on an iOS device:</strong> </p> <ol class=\"\"><li class=\"\"> <p>Point the device&apos;s Safari browser at the <a class=\"document-link\" href=\"#!/guide/Getting_Started_with_Test-section-src-43298707_GettingStartedwithTest-anchorurl\">TouchTest Agent URL</a> ( <span style=\"color: #000000;\"> <strong> <a class=\"external-link external-link\" href=\"http://appctest-2.appcelerator.com/concerto/touchtest\" target=\"_blank\">http://appctest-2.appcelerator.com/concerto/touchtest</a> </strong>). </span> </p> </li><li> <p>Enter your AMPLIFY Appcelerator Services credentials and login. </p> </li><li class=\"\"> <p>Click <strong class=\"\">Register Device</strong>. The Install Profile dialog opens asking you to install the <strong>TouchTest Device Registration</strong> profile. </p> </li><li class=\"\"> <p>Click <strong class=\"\">Install</strong> in the Install Profile dialog, then click <strong>Install Now</strong> in the confirmation dialog. (You may also be prompted for a passcode by the device, if that security feature is enabled.) </p> </li><li class=\"\"> <p>Enter a name for your device and click <strong>Submit for Approval</strong>. </p> </li><li> <p>Once the device has been approved, the TouchTest Agent displays the current connection status to the Test web service, TouchTest URL, user name, and TouchTest Agent build number. </p> </li></ol> <p><strong>To install on a iOS simulator:</strong> </p> <ol class=\"\"><li class=\"\"> <p>Point the simulator&apos;s web browser at the <a class=\"document-link\" href=\"#!/guide/Getting_Started_with_Test-section-src-43298707_GettingStartedwithTest-anchorurl\">TouchTest Agent URL</a> ( <span style=\"color: #000000;\"> <strong> <a class=\"external-link external-link\" href=\"http://appctest-2.appcelerator.com/concerto/touchtest\" target=\"_blank\">http://appctest-2.appcelerator.com/concerto/touchtest</a> </strong>). </span> </p> </li><li class=\"\"> <p>Click <strong>Tap here if this is a simulator</strong>. </p> </li><li> <p>Enter your AMPLIFY Appcelerator Services credentials and login. </p> </li><li class=\"\"> <p>Click <strong class=\"\">Register </strong> <strong>Simulator</strong>. </p> </li><li class=\"\"> <p>For simulators running <strong>iOS 6 or earlier</strong>, provide your computer&apos;s hardware UUID. </p> </li><li class=\"\"> <p>Provide a name for your device and click <strong>Submit for Approval</strong>. (The name must be unique among other registered devices in your organization.) </p> </li><li> <p>Once the device has been approved, the TouchTest Agent displays the current connection status to the Test web service, TouchTest URL, user name, and TouchTest Agent build number. </p> </li></ol> </div> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-RecordaTestClip\"> <h3 class=\"heading\"><span>Record a Test Clip</span></h3> <p>A <strong class=\"\">clip</strong> is the basic building block of a test. You create clips in the <strong>Clip Editor</strong>. Clips are composed of App Actions &#x2013; taps, gestures, text inputs, and so forth &#x2013; that simulate actions a user take in an application. When you record a test clip, the actions you take on a device are automatically added as App Actions in the test clip. </p> <p>For example, the following screenshot shows a test clip containing four recorded actions: a <strong class=\"\">tap</strong> operation, followed a <strong class=\"\">type</strong> operation, followed by two more <strong>tap</strong> operations. </p> <p> <img src=\"images/download/attachments/43298726/image2014-3-4_16_46_47.png\" alt=\"images/download/attachments/43298726/image2014-3-4_16_46_47.png\" class=\"confluence-embedded-image\" width=\"500\"> </img></p> <p>Typically a recorded test clip is a starting point for you to refine, add validations, inputs, outputs and so forth. </p> <p><strong>To record a test clip</strong>: </p> <ol class=\"\"><li class=\"\"> <p>Open <a class=\"external-link external-link\" href=\"https://platform.appcelerator.com/\" target=\"_blank\">Appcelerator Dashboard</a> and click the <strong>Test</strong> tab. </p> </li><li> <p>Select the application to test from the Application menu in the upper-left corner. </p> </li><li class=\"\"> <p>With your application selected, on the <strong class=\"\">Central</strong> tab select <strong class=\"\">Clips</strong> in the left navigation, then click the <strong class=\"\">New</strong> button. The <strong>Clip Editor</strong> opens a new untitled clip. </p> <img src=\"images/download/attachments/43298726/image2014-3-16_20_8_24.png\" alt=\"images/download/attachments/43298726/image2014-3-16_20_8_24.png\" class=\"confluence-embedded-image\" width=\"500\"> <p> </p> </img></li><li class=\"\"> <p>In the Clip Editor, click the <strong class=\"\">Record</strong> menu and select <strong>Record Mobile App</strong>. </p> <img src=\"images/download/attachments/43298726/image2014-3-16_20_16_47.png\" alt=\"images/download/attachments/43298726/image2014-3-16_20_16_47.png\" class=\"confluence-embedded-image\" width=\"400\"> </img></li><li class=\"\"> <p>In the <strong class=\"\">Choose a Device Agent and Mobile App </strong>dialog select the test device from the upper pane, and the application to test, and click <strong>Record</strong>. </p> <p> <img src=\"images/download/attachments/43298726/choose_agent_app.png\" alt=\"images/download/attachments/43298726/choose_agent_app.png\" class=\"confluence-embedded-image\" width=\"500\"> </img></p> </li><li> <p>The test application launches on the device. Perform the following actions on the device: </p> <ol class=\"\"><li> <p>Click the Picker. </p> </li><li> <p>Select a user account. </p> </li><li> <p>Click the Text Field widget. </p> </li><li> <p>Enter the user&apos;s password. </p> </li><li class=\"\"> <p>Click <strong>return</strong> to dismiss the keyboard. </p> </li><li> <p>Click the Button. You should see the following output in the test clip: </p> <img src=\"images/download/attachments/43298726/TestClipResults.png\" alt=\"images/download/attachments/43298726/TestClipResults.png\" class=\"confluence-embedded-image\"> </img></li></ol></li><li class=\"\"> <p>Click the <strong>Record</strong> button in the Test tab in Dashboard again to stop recording. </p> </li><li class=\"\"> <p>Click <strong class=\"\">Save</strong> or <strong>Save As</strong> <img src=\"images/download/thumbnails/43298726/SaveButton.png\" alt=\"images/download/thumbnails/43298726/SaveButton.png\" class=\"confluence-embedded-image confluence-thumbnail\" width=\"90\"> in the toolbar, give the clip a name or accept the default, and click <strong>Save</strong>. </img></p> </li></ol> <p>To playback a test clip that you&apos;ve recorded, it needs to be added to a <strong class=\"\">test composition</strong>. For simplicity, you can playback the clip immediately by clicking the <strong class=\"\">Play </strong> button and select <strong>Play in Compostion</strong> in the test clip. </p> <p> <img src=\"images/download/thumbnails/43298726/Playback.png\" alt=\"images/download/thumbnails/43298726/Playback.png\" class=\"confluence-embedded-image confluence-thumbnail\" width=\"200\"> </img></p> <p>The clip is added to a draft composition and starts playing. Once the playback completes, results display in the test composition. <img src=\"images/download/attachments/43298726/iOSTestResults.png\" alt=\"images/download/attachments/43298726/iOSTestResults.png\" class=\"confluence-embedded-image\"> </img></p> </div> <div class=\"section section-3\" id=\"src-43298726_QuickStartGuideforiOSAPSSDK-NextStepsforAppceleratorTest\"> <h3 class=\"heading\"><span>Next Steps for Appcelerator Test</span></h3> <p>This tutorial only covers the very basics of using the Appcelerator Test service. For more in-depth information, see <a class=\"document-link\" href=\"#!/guide/Appcelerator_Test\">Appcelerator Test</a>. For more information about the <tt class=\"\">appcelerator-test</tt> utility, see <a class=\"document-link\" href=\"#!/guide/Appcelerator_Test_CLI_Reference\">Appcelerator Test CLI Reference</a>. </p> </div> </div> </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=43298726\"><span>Edit</span></a> </div> </body> </html> ","title":"Quick Start Guide for iOS APS SDK"});