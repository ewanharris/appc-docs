Ext.data.JsonP['Modules_Newsstand']({"tagname":"class","name":"Modules.Newsstand","extends":"Titanium.Module","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"platform":["iphone 1.0.0","ipad 1.0.0"],"editurl":"https://github.com/appcelerator-modules/ti.newsstand/edit/master/apidoc/Newsstand.yml","description":["<h3>Requirements</h3>\n\n<p>This module requires iOS 5 or greater</p>\n\n<h3>Newsstand Resources</h3>\n\n<ul>\n<li><a href=\"https://developer.apple.com/newsstand/\">Newsstand for Developers</a></li>\n<li><a href=\"https://developer.apple.com/library/ios/#documentation/StoreKit/Reference/NewsstandKit_Framework/_index.html\">Newsstand Kit Framework Reference</a></li>\n</ul>\n\n<h3>Publishing</h3>\n\n<p>Apple allows you to update your app icon in iTunes connect so that the latest issue can always be displayed. Documentation around setting this up can be found in the <a href=\"https://developer.apple.com/library/ios/#documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/14_Newsstand/Newsstand.html\">iTunes Connect Developer Guide</a>.</p>\n\n<h3>Getting Started</h3>\n\n<p>View the <a href=\"http://docs.appcelerator.com/titanium/latest/#!/guide/Using_Titanium_Modules\">Using Titanium Modules</a> document for instructions on getting\nstarted with using this module in your application.</p>\n\n<h3>Accessing the Newsstand Module</h3>\n\n<p>To access this module from JavaScript, you would do the following:</p>\n\n<pre><code>var Newsstand = require(\"ti.newsstand\");\n</code></pre>\n\n<p>The newsstand variable is a reference to the Module object.</p>\n\n<h3>Setup</h3>\n\n<ol>\n<li>Setup the app as a Newsstand app by adding the code below to your tiapp.xml</li>\n<li>Modify the <code>UINewsstandBindingEdge</code> and <code>UINewsstandBindingType</code> values to get different decorations on the icons. Available options can be found in Apple's <a href=\"https://developer.apple.com/library/mac/#documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\">CoreFoundationKeys Documentation</a>.</li>\n<li>Add <code>newsstandicon.png</code> to the 'Resources/iphone' directory next to appicon.png</li>\n<li>Run the app, you should see it in the Newsstand folder.</li>\n<li>During development, be sure to call {@link Modules.Newsstand#method-enableDevMode} to remove the daily download limit.</li>\n</ol>\n\n<p>tiapp.xml</p>\n\n<pre><code>&lt;ios&gt;\n    &lt;plist&gt;\n        &lt;dict&gt;\n            &lt;key&gt;CFBundleIcons&lt;/key&gt;\n            &lt;dict&gt;\n                &lt;key&gt;CFBundlePrimaryIcon&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;CFBundleIconFiles&lt;/key&gt;\n                    &lt;array&gt;\n                        &lt;string&gt;appicon.png&lt;/string&gt;\n                    &lt;/array&gt;\n                &lt;/dict&gt;\n                &lt;key&gt;UINewsstandIcon&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;CFBundleIconFiles&lt;/key&gt;\n                    &lt;array&gt;\n                        &lt;string&gt;newsstandicon.png&lt;/string&gt;\n                    &lt;/array&gt;\n                    &lt;key&gt;UINewsstandBindingEdge&lt;/key&gt;\n                    &lt;string&gt;UINewsstandBindingEdgeLeft&lt;/string&gt;\n                    &lt;key&gt;UINewsstandBindingType&lt;/key&gt;\n                    &lt;string&gt;UINewsstandBindingTypeMagazine&lt;/string&gt;\n                &lt;/dict&gt;\n            &lt;/dict&gt;\n            &lt;key&gt;UINewsstandApp&lt;/key&gt;\n            &lt;true/&gt;\n            &lt;key&gt;UIBackgroundModes&lt;/key&gt;\n            &lt;array&gt;\n                &lt;string&gt;newsstand-content&lt;/string&gt;\n            &lt;/array&gt;\n        &lt;/dict&gt;\n    &lt;/plist&gt;\n&lt;/ios&gt;\n</code></pre>\n\n<h3>Push Notifications</h3>\n\n<p>Push notifications can be sent to the device to notify it that a new issue is available. The notification payload must contain a \"content-available\" key set to 1. If this is not set, iOS will not allow the application to wake in the background to download a new issue.</p>\n\n<pre><code>{\n  \"aps\":{\n    \"content-available\":1,\n        },\n   \"device_tokens\": [\"exampleToken4F2509D125889AED3466F4D1376B26C374190B3974739\"]\n}\n</code></pre>\n\n<p>Use the {@link Titanium.Network#property-NOTIFICATION_TYPE_NEWSSTAND} type when calling {@link Titanium.Network#method-registerForPushNotifications}</p>\n\n<pre><code>Ti.Network.registerForPushNotifications({\n    types:[\n        Ti.Network.NOTIFICATION_TYPE_NEWSSTAND\n    ],\n    success: eventSuccess,\n    error: eventError,\n    callback: eventCallback\n});\n</code></pre>\n\n<p>To enable your application to download assets in the background in response to a push notification, you <em>must</em> wrap \nyour {@link Modules.Newsstand.Issue#method-downloadAsset} calls with calls to {@link Modules.Newsstand#method-beginBackgroundDownloadRequests} and {@link Modules.Newsstand#method-endBackgroundDownloadRequests}.</p>\n\n<p>For example, the event callback specified for {@link Titanium.Network#method-registerForPushNotifications} might look like the following:</p>\n\n<pre><code>function eventCallback(e) {\n    if (e.data['content-available'] === 1) {\n        Newsstand.beginBackgroundDownloadRequests();\n        var issue = Newsstand.getIssue({\n            name: issues[0].name\n        }); \n        if (!issue) {\n            // if issue is not found then add it\n            issue = Newsstand.addIssue({\n                name: name,\n                date: new Date()\n            });\n        }\n        issue.downloadAsset({\n            url: issues[0].content,\n            userInfo: {\n                id: 9999,\n                name: 'TESTBACKGROUND'\n            }\n        });\n        Newsstand.endBackgroundDownloadRequests();\n    }\n}\n</code></pre>"]},"private":null,"id":"class-Modules.Newsstand","members":{"cfg":[],"property":[{"name":"ISSUE_CONTENT_STATUS_AVAILABLE","tagname":"property","owner":"Modules.Newsstand","meta":{"readonly":true},"id":"property-ISSUE_CONTENT_STATUS_AVAILABLE"},{"name":"ISSUE_CONTENT_STATUS_DOWNLOADING","tagname":"property","owner":"Modules.Newsstand","meta":{"readonly":true},"id":"property-ISSUE_CONTENT_STATUS_DOWNLOADING"},{"name":"ISSUE_CONTENT_STATUS_NONE","tagname":"property","owner":"Modules.Newsstand","meta":{"readonly":true},"id":"property-ISSUE_CONTENT_STATUS_NONE"},{"name":"apiName","tagname":"property","owner":"Titanium.Proxy","meta":{"readonly":true,"description":["<p>The value of this property is the fully qualified name of the API. For example, {@link Titanium.UI.Button Button}\nreturns <code>Ti.UI.Button</code>.</p>"],"platform":["android 3.2.0","iphone 3.2.0","ipad 3.2.0","mobileweb 3.2.0","windowsphone 4.1.0"]},"id":"property-apiName"},{"name":"applicationIconBadgeNumber","tagname":"property","owner":"Modules.Newsstand","meta":{},"id":"property-applicationIconBadgeNumber"},{"name":"currentlyReadingIssue","tagname":"property","owner":"Modules.Newsstand","meta":{},"id":"property-currentlyReadingIssue"},{"name":"iconImage","tagname":"property","owner":"Modules.Newsstand","meta":{"writeonly":true,"description":["<p><strong>Note:</strong> If the image is not within the dimensions outlined in the Newsstand Icon section of the <a href=\"http://developer.apple.com/library/ios/#documentation/userexperience/conceptual/mobilehig/IconsImages/IconsImages.html\">iOS Human Interface Guidelines</a>, it may not be displayed.</p>\n\n<p><strong>Note:</strong> Sometimes this does not work on the simulator. Works consistently on device.</p>\n\n<p><strong>Example</strong></p>\n\n<pre><code>var file = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory,'newIcon.png');\nNewsstand.iconImage = file;\n</code></pre>"]},"id":"property-iconImage"},{"name":"issues","tagname":"property","owner":"Modules.Newsstand","meta":{"readonly":true},"id":"property-issues"},{"name":"lifecycleContainer","tagname":"property","owner":"Titanium.Proxy","meta":{"description":["<p>If this property is set to a Window or TabGroup, then the corresponding Activity lifecycle event callbacks\nwill also be called on the proxy. Proxies that require the activity lifecycle will need this property set\nto the appropriate containing Window or TabGroup.</p>"],"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"property-lifecycleContainer"}],"method":[{"name":"addEventListener","tagname":"method","owner":"Titanium.Proxy","meta":{},"id":"method-addEventListener"},{"name":"addIssue","tagname":"method","owner":"Modules.Newsstand","meta":{"description":["<p>Throws an exception if name and date are invalid. Also throws an exception if you use a name that is already taken by another issue.</p>\n\n<p>Returns a {@link Modules.Newsstand.Issue} representing the issue that was added to the library or undefined if the issues could not be added to the library.</p>\n\n<p><strong>Example</strong></p>\n\n<pre><code>var issueDate = new Date();\nissueDate.setFullYear(2013);\nissueDate.setMonth(0);\nissueDate.setDate(14);\nvar issue = Newsstand.addIssue({\n    name: \"Magazine-0\", \n    date: issueDate\n});\n</code></pre>"]},"id":"method-addIssue"},{"name":"beginBackgroundDownloadRequests","tagname":"method","owner":"Modules.Newsstand","meta":{"description":["<p><strong>Example</strong></p>\n\n<pre><code>Newsstand.beginBackgroundDownloadRequests();\nissue1.downloadAsset(...);\nissue2.downloadAsset(...);\nNewsstand.endBackgroundDownloadRequests();\n</code></pre>"]},"id":"method-beginBackgroundDownloadRequests"},{"name":"enableDevMode","tagname":"method","owner":"Modules.Newsstand","meta":{"description":["<p><strong>Note:</strong> A development device refers to a device which has been recognized in Xcode Organizer as having the \"Use for Development\" checkbox enabled. </p>\n\n<p><strong>Example</strong></p>\n\n<pre><code>Newsstand.enableDevMode();\n</code></pre>"]},"id":"method-enableDevMode"},{"name":"endBackgroundDownloadRequests","tagname":"method","owner":"Modules.Newsstand","meta":{"description":["<p><strong>Example</strong></p>\n\n<pre><code>Newsstand.beginBackgroundDownloadRequests();\nissue1.downloadAsset(...);\nissue2.downloadAsset(...);\nNewsstand.endBackgroundDownloadRequests();\n</code></pre>"]},"id":"method-endBackgroundDownloadRequests"},{"name":"getApiName","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.2.0","iphone 3.2.0","ipad 3.2.0","mobileweb 3.2.0","windowsphone 4.1.0"]},"id":"method-getApiName"},{"name":"getApplicationIconBadgeNumber","tagname":"method","owner":"Modules.Newsstand","meta":{},"id":"method-getApplicationIconBadgeNumber"},{"name":"getCurrentlyReadingIssue","tagname":"method","owner":"Modules.Newsstand","meta":{},"id":"method-getCurrentlyReadingIssue"},{"name":"getIssue","tagname":"method","owner":"Modules.Newsstand","meta":{"description":["<p>Returns a {@link Modules.Newsstand.Issue} representing the issue or undefined if the issue does not exist in the library.</p>\n\n<p><strong>Example</strong></p>\n\n<pre><code>var issue = Newsstand.getIssue({\n    name: \"Magazine-0\"\n});\n</code></pre>"]},"id":"method-getIssue"},{"name":"getIssues","tagname":"method","owner":"Modules.Newsstand","meta":{},"id":"method-getIssues"},{"name":"getLifecycleContainer","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"method-getLifecycleContainer"},{"name":"removeEventListener","tagname":"method","owner":"Titanium.Proxy","meta":{"description":["<p>Multiple listeners can be registered for the same event, so the \n<code>callback</code> parameter is used to determine which listener to remove. </p>\n\n<p>When adding a listener, you must save a reference to the callback function\nin order to remove the listener later:</p>\n\n<pre><code>var listener = function() { Ti.API.info(\"Event listener called.\"); }\nwindow.addEventListener('click', listener);\n</code></pre>\n\n<p>To remove the listener, pass in a reference to the callback function:</p>\n\n<pre><code>window.removeEventListener('click', listener);\n</code></pre>"]},"id":"method-removeEventListener"},{"name":"removeIssue","tagname":"method","owner":"Modules.Newsstand","meta":{"description":["<p><strong>Note:</strong> It is possible to hold on to a {@link Modules.Newsstand.Issue} even after it is removed from the library. This is not something you want to do, because issues are useless if they are not in the library. Most of the properties of the issue will still be available excelpt <code>contentURL</code> which will be undefined. </p>\n\n<p><strong>Example</strong></p>\n\n<pre><code>Newsstand.removeIssue(issueToRemove);\n</code></pre>"]},"id":"method-removeIssue"},{"name":"setApplicationIconBadgeNumber","tagname":"method","owner":"Modules.Newsstand","meta":{},"id":"method-setApplicationIconBadgeNumber"},{"name":"setBasicAuthentication","tagname":"method","owner":"Modules.Newsstand","meta":{"description":["<p><strong>Example</strong></p>\n\n<pre><code>Newsstand.setBasicAuthentication({\n    username: \"jalter\",\n    password: \"password\"\n});\n</code></pre>"]},"id":"method-setBasicAuthentication"},{"name":"setCurrentlyReadingIssue","tagname":"method","owner":"Modules.Newsstand","meta":{},"id":"method-setCurrentlyReadingIssue"},{"name":"setIconImage","tagname":"method","owner":"Modules.Newsstand","meta":{},"id":"method-setIconImage"},{"name":"setLifecycleContainer","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"method-setLifecycleContainer"}],"event":[{"name":"assetcomplete","tagname":"event","owner":"Modules.Newsstand","meta":{},"id":"event-assetcomplete"},{"name":"error","tagname":"event","owner":"Modules.Newsstand","meta":{},"id":"event-error"},{"name":"issuecomplete","tagname":"event","owner":"Modules.Newsstand","meta":{},"id":"event-issuecomplete"},{"name":"progress","tagname":"event","owner":"Modules.Newsstand","meta":{"description":["<p><strong>Note:</strong> totalBytes only applies to the current file being downloaded.</p>"]},"id":"event-progress"}],"css_var":[],"css_mixin":[]},"linenr":22740,"files":[{"filename":"titanium.js","href":"titanium.html#Modules-Newsstand"}],"html_meta":{"platform":"<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>1.0.0</li><li class='platform-ipad'\n        title='iPad'>1.0.0</li></ul>","editurl":null,"description":"<p><h3>Requirements</h3>\n\n\n\n\n<p>This module requires iOS 5 or greater</p>\n\n\n\n\n<h3>Newsstand Resources</h3>\n\n\n\n\n<ul>\n<li><a href=\"https://developer.apple.com/newsstand/\">Newsstand for Developers</a></li>\n<li><a href=\"https://developer.apple.com/library/ios/#documentation/StoreKit/Reference/NewsstandKit_Framework/_index.html\">Newsstand Kit Framework Reference</a></li>\n</ul>\n\n\n\n\n<h3>Publishing</h3>\n\n\n\n\n<p>Apple allows you to update your app icon in iTunes connect so that the latest issue can always be displayed. Documentation around setting this up can be found in the <a href=\"https://developer.apple.com/library/ios/#documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/14_Newsstand/Newsstand.html\">iTunes Connect Developer Guide</a>.</p>\n\n\n\n\n<h3>Getting Started</h3>\n\n\n\n\n<p>View the <a href=\"http://docs.appcelerator.com/titanium/latest/#!/guide/Using_Titanium_Modules\">Using Titanium Modules</a> document for instructions on getting\nstarted with using this module in your application.</p>\n\n\n\n\n<h3>Accessing the Newsstand Module</h3>\n\n\n\n\n<p>To access this module from JavaScript, you would do the following:</p>\n\n\n\n\n<pre><code>var Newsstand = require(\"ti.newsstand\");\n</code></pre>\n\n\n\n\n<p>The newsstand variable is a reference to the Module object.</p>\n\n\n\n\n<h3>Setup</h3>\n\n\n\n\n<ol>\n<li>Setup the app as a Newsstand app by adding the code below to your tiapp.xml</li>\n<li>Modify the <code>UINewsstandBindingEdge</code> and <code>UINewsstandBindingType</code> values to get different decorations on the icons. Available options can be found in Apple's <a href=\"https://developer.apple.com/library/mac/#documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\">CoreFoundationKeys Documentation</a>.</li>\n<li>Add <code>newsstandicon.png</code> to the 'Resources/iphone' directory next to appicon.png</li>\n<li>Run the app, you should see it in the Newsstand folder.</li>\n<li>During development, be sure to call <a href=\"#!/api/Modules.Newsstand-method-enableDevMode\" rel=\"Modules.Newsstand-method-enableDevMode\" class=\"docClass\">enableDevMode</a> to remove the daily download limit.</li>\n</ol>\n\n\n\n\n<p>tiapp.xml</p>\n\n\n\n\n<pre><code>&lt;ios&gt;\n    &lt;plist&gt;\n        &lt;dict&gt;\n            &lt;key&gt;CFBundleIcons&lt;/key&gt;\n            &lt;dict&gt;\n                &lt;key&gt;CFBundlePrimaryIcon&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;CFBundleIconFiles&lt;/key&gt;\n                    &lt;array&gt;\n                        &lt;string&gt;appicon.png&lt;/string&gt;\n                    &lt;/array&gt;\n                &lt;/dict&gt;\n                &lt;key&gt;UINewsstandIcon&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;CFBundleIconFiles&lt;/key&gt;\n                    &lt;array&gt;\n                        &lt;string&gt;newsstandicon.png&lt;/string&gt;\n                    &lt;/array&gt;\n                    &lt;key&gt;UINewsstandBindingEdge&lt;/key&gt;\n                    &lt;string&gt;UINewsstandBindingEdgeLeft&lt;/string&gt;\n                    &lt;key&gt;UINewsstandBindingType&lt;/key&gt;\n                    &lt;string&gt;UINewsstandBindingTypeMagazine&lt;/string&gt;\n                &lt;/dict&gt;\n            &lt;/dict&gt;\n            &lt;key&gt;UINewsstandApp&lt;/key&gt;\n            &lt;true/&gt;\n            &lt;key&gt;UIBackgroundModes&lt;/key&gt;\n            &lt;array&gt;\n                &lt;string&gt;newsstand-content&lt;/string&gt;\n            &lt;/array&gt;\n        &lt;/dict&gt;\n    &lt;/plist&gt;\n&lt;/ios&gt;\n</code></pre>\n\n\n\n\n<h3>Push Notifications</h3>\n\n\n\n\n<p>Push notifications can be sent to the device to notify it that a new issue is available. The notification payload must contain a \"content-available\" key set to 1. If this is not set, iOS will not allow the application to wake in the background to download a new issue.</p>\n\n\n\n\n<pre><code>{\n  \"aps\":{\n    \"content-available\":1,\n        },\n   \"device_tokens\": [\"exampleToken4F2509D125889AED3466F4D1376B26C374190B3974739\"]\n}\n</code></pre>\n\n\n\n\n<p>Use the <a href=\"#!/api/Titanium.Network-property-NOTIFICATION_TYPE_NEWSSTAND\" rel=\"Titanium.Network-property-NOTIFICATION_TYPE_NEWSSTAND\" class=\"docClass\">Titanium.Network.NOTIFICATION_TYPE_NEWSSTAND</a> type when calling <a href=\"#!/api/Titanium.Network-method-registerForPushNotifications\" rel=\"Titanium.Network-method-registerForPushNotifications\" class=\"docClass\">Titanium.Network.registerForPushNotifications</a></p>\n\n\n\n\n<pre><code>Ti.Network.registerForPushNotifications({\n    types:[\n        Ti.Network.NOTIFICATION_TYPE_NEWSSTAND\n    ],\n    success: eventSuccess,\n    error: eventError,\n    callback: eventCallback\n});\n</code></pre>\n\n\n\n\n<p>To enable your application to download assets in the background in response to a push notification, you <em>must</em> wrap \nyour <a href=\"#!/api/Modules.Newsstand.Issue-method-downloadAsset\" rel=\"Modules.Newsstand.Issue-method-downloadAsset\" class=\"docClass\">Modules.Newsstand.Issue.downloadAsset</a> calls with calls to <a href=\"#!/api/Modules.Newsstand-method-beginBackgroundDownloadRequests\" rel=\"Modules.Newsstand-method-beginBackgroundDownloadRequests\" class=\"docClass\">beginBackgroundDownloadRequests</a> and <a href=\"#!/api/Modules.Newsstand-method-endBackgroundDownloadRequests\" rel=\"Modules.Newsstand-method-endBackgroundDownloadRequests\" class=\"docClass\">endBackgroundDownloadRequests</a>.</p>\n\n\n\n\n<p>For example, the event callback specified for <a href=\"#!/api/Titanium.Network-method-registerForPushNotifications\" rel=\"Titanium.Network-method-registerForPushNotifications\" class=\"docClass\">Titanium.Network.registerForPushNotifications</a> might look like the following:</p>\n\n\n\n\n<pre><code>function eventCallback(e) {\n    if (e.data['content-available'] === 1) {\n        Newsstand.beginBackgroundDownloadRequests();\n        var issue = Newsstand.getIssue({\n            name: issues[0].name\n        }); \n        if (!issue) {\n            // if issue is not found then add it\n            issue = Newsstand.addIssue({\n                name: name,\n                date: new Date()\n            });\n        }\n        issue.downloadAsset({\n            url: issues[0].content,\n            userInfo: {\n                id: 9999,\n                name: 'TESTBACKGROUND'\n            }\n        });\n        Newsstand.endBackgroundDownloadRequests();\n    }\n}\n</code></pre>\n\n</p>"},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Titanium.Proxy","Titanium.Module","Modules.Newsstand"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'><ul class=\"sidebar-platforms\"><li class='platform-iphone' title='iPhone since Titanium SDK 1.0.0'>iPhone 1.0.0</li><li class='platform-ipad' title='iPad since Titanium SDK 1.0.0'>iPad 1.0.0</li></ul></div><div class='hierarchy'><div class='classes'><div class='subclass'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='docClass'>Titanium.Proxy</a></div><div class='subclass'> &gt; <a href='#!/api/Titanium.Module' rel='Titanium.Module' class='docClass'>Titanium.Module</a></div><div class='subclass'> &gt; <strong>Modules.Newsstand</strong></div></div></div><div class='doc-contents'><p>The Newsstand module allows you to access Apple's NewsKit APIs</p>\n\n<p><h3>Requirements</h3>\n\n\n\n\n<p>This module requires iOS 5 or greater</p>\n\n\n\n\n<h3>Newsstand Resources</h3>\n\n\n\n\n<ul>\n<li><a href=\"https://developer.apple.com/newsstand/\">Newsstand for Developers</a></li>\n<li><a href=\"https://developer.apple.com/library/ios/#documentation/StoreKit/Reference/NewsstandKit_Framework/_index.html\">Newsstand Kit Framework Reference</a></li>\n</ul>\n\n\n\n\n<h3>Publishing</h3>\n\n\n\n\n<p>Apple allows you to update your app icon in iTunes connect so that the latest issue can always be displayed. Documentation around setting this up can be found in the <a href=\"https://developer.apple.com/library/ios/#documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/14_Newsstand/Newsstand.html\">iTunes Connect Developer Guide</a>.</p>\n\n\n\n\n<h3>Getting Started</h3>\n\n\n\n\n<p>View the <a href=\"http://docs.appcelerator.com/titanium/latest/#!/guide/Using_Titanium_Modules\">Using Titanium Modules</a> document for instructions on getting\nstarted with using this module in your application.</p>\n\n\n\n\n<h3>Accessing the Newsstand Module</h3>\n\n\n\n\n<p>To access this module from JavaScript, you would do the following:</p>\n\n\n\n\n<pre><code>var Newsstand = require(\"ti.newsstand\");\n</code></pre>\n\n\n\n\n<p>The newsstand variable is a reference to the Module object.</p>\n\n\n\n\n<h3>Setup</h3>\n\n\n\n\n<ol>\n<li>Setup the app as a Newsstand app by adding the code below to your tiapp.xml</li>\n<li>Modify the <code>UINewsstandBindingEdge</code> and <code>UINewsstandBindingType</code> values to get different decorations on the icons. Available options can be found in Apple's <a href=\"https://developer.apple.com/library/mac/#documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\">CoreFoundationKeys Documentation</a>.</li>\n<li>Add <code>newsstandicon.png</code> to the 'Resources/iphone' directory next to appicon.png</li>\n<li>Run the app, you should see it in the Newsstand folder.</li>\n<li>During development, be sure to call <a href=\"#!/api/Modules.Newsstand-method-enableDevMode\" rel=\"Modules.Newsstand-method-enableDevMode\" class=\"docClass\">enableDevMode</a> to remove the daily download limit.</li>\n</ol>\n\n\n\n\n<p>tiapp.xml</p>\n\n\n\n\n<pre><code>&lt;ios&gt;\n    &lt;plist&gt;\n        &lt;dict&gt;\n            &lt;key&gt;CFBundleIcons&lt;/key&gt;\n            &lt;dict&gt;\n                &lt;key&gt;CFBundlePrimaryIcon&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;CFBundleIconFiles&lt;/key&gt;\n                    &lt;array&gt;\n                        &lt;string&gt;appicon.png&lt;/string&gt;\n                    &lt;/array&gt;\n                &lt;/dict&gt;\n                &lt;key&gt;UINewsstandIcon&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;CFBundleIconFiles&lt;/key&gt;\n                    &lt;array&gt;\n                        &lt;string&gt;newsstandicon.png&lt;/string&gt;\n                    &lt;/array&gt;\n                    &lt;key&gt;UINewsstandBindingEdge&lt;/key&gt;\n                    &lt;string&gt;UINewsstandBindingEdgeLeft&lt;/string&gt;\n                    &lt;key&gt;UINewsstandBindingType&lt;/key&gt;\n                    &lt;string&gt;UINewsstandBindingTypeMagazine&lt;/string&gt;\n                &lt;/dict&gt;\n            &lt;/dict&gt;\n            &lt;key&gt;UINewsstandApp&lt;/key&gt;\n            &lt;true/&gt;\n            &lt;key&gt;UIBackgroundModes&lt;/key&gt;\n            &lt;array&gt;\n                &lt;string&gt;newsstand-content&lt;/string&gt;\n            &lt;/array&gt;\n        &lt;/dict&gt;\n    &lt;/plist&gt;\n&lt;/ios&gt;\n</code></pre>\n\n\n\n\n<h3>Push Notifications</h3>\n\n\n\n\n<p>Push notifications can be sent to the device to notify it that a new issue is available. The notification payload must contain a \"content-available\" key set to 1. If this is not set, iOS will not allow the application to wake in the background to download a new issue.</p>\n\n\n\n\n<pre><code>{\n  \"aps\":{\n    \"content-available\":1,\n        },\n   \"device_tokens\": [\"exampleToken4F2509D125889AED3466F4D1376B26C374190B3974739\"]\n}\n</code></pre>\n\n\n\n\n<p>Use the <a href=\"#!/api/Titanium.Network-property-NOTIFICATION_TYPE_NEWSSTAND\" rel=\"Titanium.Network-property-NOTIFICATION_TYPE_NEWSSTAND\" class=\"docClass\">Titanium.Network.NOTIFICATION_TYPE_NEWSSTAND</a> type when calling <a href=\"#!/api/Titanium.Network-method-registerForPushNotifications\" rel=\"Titanium.Network-method-registerForPushNotifications\" class=\"docClass\">Titanium.Network.registerForPushNotifications</a></p>\n\n\n\n\n<pre><code>Ti.Network.registerForPushNotifications({\n    types:[\n        Ti.Network.NOTIFICATION_TYPE_NEWSSTAND\n    ],\n    success: eventSuccess,\n    error: eventError,\n    callback: eventCallback\n});\n</code></pre>\n\n\n\n\n<p>To enable your application to download assets in the background in response to a push notification, you <em>must</em> wrap \nyour <a href=\"#!/api/Modules.Newsstand.Issue-method-downloadAsset\" rel=\"Modules.Newsstand.Issue-method-downloadAsset\" class=\"docClass\">Modules.Newsstand.Issue.downloadAsset</a> calls with calls to <a href=\"#!/api/Modules.Newsstand-method-beginBackgroundDownloadRequests\" rel=\"Modules.Newsstand-method-beginBackgroundDownloadRequests\" class=\"docClass\">beginBackgroundDownloadRequests</a> and <a href=\"#!/api/Modules.Newsstand-method-endBackgroundDownloadRequests\" rel=\"Modules.Newsstand-method-endBackgroundDownloadRequests\" class=\"docClass\">endBackgroundDownloadRequests</a>.</p>\n\n\n\n\n<p>For example, the event callback specified for <a href=\"#!/api/Titanium.Network-method-registerForPushNotifications\" rel=\"Titanium.Network-method-registerForPushNotifications\" class=\"docClass\">Titanium.Network.registerForPushNotifications</a> might look like the following:</p>\n\n\n\n\n<pre><code>function eventCallback(e) {\n    if (e.data['content-available'] === 1) {\n        Newsstand.beginBackgroundDownloadRequests();\n        var issue = Newsstand.getIssue({\n            name: issues[0].name\n        }); \n        if (!issue) {\n            // if issue is not found then add it\n            issue = Newsstand.addIssue({\n                name: name,\n                date: new Date()\n            });\n        }\n        issue.downloadAsset({\n            url: issues[0].content,\n            userInfo: {\n                id: 9999,\n                name: 'TESTBACKGROUND'\n            }\n        });\n        Newsstand.endBackgroundDownloadRequests();\n    }\n}\n</code></pre>\n\n</p><ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>1.0.0</li><li class='platform-ipad'\n        title='iPad'>1.0.0</li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ISSUE_CONTENT_STATUS_AVAILABLE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-property-ISSUE_CONTENT_STATUS_AVAILABLE' class='name not-expandable'>ISSUE_CONTENT_STATUS_AVAILABLE</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Downloading of assets is not taking place and there is issue content at contentURL.</p>\n\n</div><div class='long'><p>Downloading of assets is not taking place and there is issue content at contentURL.</p>\n\n</div></div></div><div id='property-ISSUE_CONTENT_STATUS_DOWNLOADING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-property-ISSUE_CONTENT_STATUS_DOWNLOADING' class='name not-expandable'>ISSUE_CONTENT_STATUS_DOWNLOADING</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>The issue has assets that are currently downloading.</p>\n\n</div><div class='long'><p>The issue has assets that are currently downloading.</p>\n\n</div></div></div><div id='property-ISSUE_CONTENT_STATUS_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-property-ISSUE_CONTENT_STATUS_NONE' class='name not-expandable'>ISSUE_CONTENT_STATUS_NONE</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Assets are not downloading for the issue and there is no content at contentURL.</p>\n\n</div><div class='long'><p>Assets are not downloading for the issue and there is no content at contentURL.</p>\n\n</div></div></div><div id='property-apiName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-apiName' class='name not-expandable'>apiName</a><span> : String</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>The name of the API that this proxy corresponds to.</p>\n\n</div><div class='long'><p>The name of the API that this proxy corresponds to.</p>\n\n<p><p>The value of this property is the fully qualified name of the API. For example, <a href=\"#!/api/Titanium.UI.Button\" rel=\"Titanium.UI.Button\" class=\"docClass\">Button</a>\nreturns <code>Ti.UI.Button</code>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.2.0</li><li class='platform-iphone'\n        title='iPhone'>3.2.0</li><li class='platform-ipad'\n        title='iPad'>3.2.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.2.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-applicationIconBadgeNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-property-applicationIconBadgeNumber' class='name expandable'>applicationIconBadgeNumber</a><span> : Number</span></div><div class='description'><div class='short'>Accesses or sets the icon badge number of the app. ...</div><div class='long'><p>Accesses or sets the icon badge number of the app. Instead of displaying a badge number on the app icon, this will set the \"new\" badge on the app icon if the number is greater than 0.</p>\n\n</div></div></div><div id='property-currentlyReadingIssue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-property-currentlyReadingIssue' class='name expandable'>currentlyReadingIssue</a><span> : <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a></span></div><div class='description'><div class='short'>Accesses or sets the newsstand issue that the user is currently reading. ...</div><div class='long'><p>Accesses or sets the newsstand issue that the user is currently reading. If no issue is set, it will be undefined.</p>\n\n\n\n\n<p>Newsstand Kit takes this setting into consideration when it purges back issues because of low levels of available flash storage.</p>\n\n</div></div></div><div id='property-iconImage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-property-iconImage' class='name not-expandable'>iconImage</a><span> : <a href=\"#!/api/Titanium.Filesystem.File\" rel=\"Titanium.Filesystem.File\" class=\"docClass\">Titanium.Filesystem.File</a></span><strong class='writeonly signature' >writeonly</strong></div><div class='description'><div class='short'><p>Sets the image of the application icon.</p>\n\n</div><div class='long'><p>Sets the image of the application icon.</p>\n\n<p><p><strong>Note:</strong> If the image is not within the dimensions outlined in the Newsstand Icon section of the <a href=\"http://developer.apple.com/library/ios/#documentation/userexperience/conceptual/mobilehig/IconsImages/IconsImages.html\">iOS Human Interface Guidelines</a>, it may not be displayed.</p>\n\n\n\n\n<p><strong>Note:</strong> Sometimes this does not work on the simulator. Works consistently on device.</p>\n\n\n\n\n<p><strong>Example</strong></p>\n\n\n\n\n<pre><code>var file = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory,'newIcon.png');\nNewsstand.iconImage = file;\n</code></pre>\n\n</p></div></div></div><div id='property-issues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-property-issues' class='name not-expandable'>issues</a><span> : <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a>[]</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Returns an array of <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a>s representing the current issues in the library.</p>\n\n</div><div class='long'><p>Returns an array of <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a>s representing the current issues in the library.</p>\n\n</div></div></div><div id='property-lifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-lifecycleContainer' class='name not-expandable'>lifecycleContainer</a><span> : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></span></div><div class='description'><div class='short'><p>The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.</p>\n\n</div><div class='long'><p>The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.</p>\n\n<p><p>If this property is set to a Window or TabGroup, then the corresponding Activity lifecycle event callbacks\nwill also be called on the proxy. Proxies that require the activity lifecycle will need this property set\nto the appropriate containing Window or TabGroup.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addEventListener' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-addEventListener' class='name expandable'>addEventListener</a>( <span class='pre'>name, callback</span> )</div><div class='description'><div class='short'>Adds the specified callback as an event listener for the named event. ...</div><div class='long'><p>Adds the specified callback as an event listener for the named event.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;Object&gt;<div class='sub-desc'><p>Callback function to invoke when the event is fired.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-addIssue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-addIssue' class='name expandable'>addIssue</a>( <span class='pre'>props</span> ) : <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a></div><div class='description'><div class='short'>Adds an issues to the library. ...</div><div class='long'><p>Adds an issues to the library.</p>\n\n<p><p>Throws an exception if name and date are invalid. Also throws an exception if you use a name that is already taken by another issue.</p>\n\n\n\n\n<p>Returns a <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a> representing the issue that was added to the library or undefined if the issues could not be added to the library.</p>\n\n\n\n\n<p><strong>Example</strong></p>\n\n\n\n\n<pre><code>var issueDate = new Date();\nissueDate.setFullYear(2013);\nissueDate.setMonth(0);\nissueDate.setDate(14);\nvar issue = Newsstand.addIssue({\n    name: \"Magazine-0\", \n    date: issueDate\n});\n</code></pre>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>props</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a>&lt;<a href=\"#!/api/NewsstandAddIssueProps\" rel=\"NewsstandAddIssueProps\" class=\"docClass\">NewsstandAddIssueProps</a>&gt;<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-beginBackgroundDownloadRequests' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-beginBackgroundDownloadRequests' class='name expandable'>beginBackgroundDownloadRequests</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Signals the start of a series of Modules.Newsstand.Issue.downloadAsset calls. ...</div><div class='long'><p>Signals the start of a series of <a href=\"#!/api/Modules.Newsstand.Issue-method-downloadAsset\" rel=\"Modules.Newsstand.Issue-method-downloadAsset\" class=\"docClass\">Modules.Newsstand.Issue.downloadAsset</a> calls. This call notifies the device that additional time may be needed by the application while running in the background.</p>\n\n<p><p><strong>Example</strong></p>\n\n\n\n\n<pre><code>Newsstand.beginBackgroundDownloadRequests();\nissue1.downloadAsset(...);\nissue2.downloadAsset(...);\nNewsstand.endBackgroundDownloadRequests();\n</code></pre>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-enableDevMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-enableDevMode' class='name expandable'>enableDevMode</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Newsstand push notifications are only allowed one background download per day. ...</div><div class='long'><p>Newsstand push notifications are only allowed one background download per day. This function will disable this limit for development devices during testing.</p>\n\n<p><p><strong>Note:</strong> A development device refers to a device which has been recognized in Xcode Organizer as having the \"Use for Development\" checkbox enabled. </p>\n\n\n\n\n<p><strong>Example</strong></p>\n\n\n\n\n<pre><code>Newsstand.enableDevMode();\n</code></pre>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-endBackgroundDownloadRequests' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-endBackgroundDownloadRequests' class='name expandable'>endBackgroundDownloadRequests</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Signals the end of a series of Modules.Newsstand.Issue.downloadAsset calls. ...</div><div class='long'><p>Signals the end of a series of <a href=\"#!/api/Modules.Newsstand.Issue-method-downloadAsset\" rel=\"Modules.Newsstand.Issue-method-downloadAsset\" class=\"docClass\">Modules.Newsstand.Issue.downloadAsset</a> calls. This call notifies the device that the application no longer requires additional time while running in the background.</p>\n\n<p><p><strong>Example</strong></p>\n\n\n\n\n<pre><code>Newsstand.beginBackgroundDownloadRequests();\nissue1.downloadAsset(...);\nissue2.downloadAsset(...);\nNewsstand.endBackgroundDownloadRequests();\n</code></pre>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-getApiName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getApiName' class='name expandable'>getApiName</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Gets the value of the apiName property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-apiName\" rel=\"Titanium.Proxy-property-apiName\" class=\"docClass\">apiName</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.2.0</li><li class='platform-iphone'\n        title='iPhone'>3.2.0</li><li class='platform-ipad'\n        title='iPad'>3.2.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.2.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getApplicationIconBadgeNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-getApplicationIconBadgeNumber' class='name expandable'>getApplicationIconBadgeNumber</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Gets the value of the applicationIconBadgeNumber property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Newsstand-property-applicationIconBadgeNumber\" rel=\"Modules.Newsstand-property-applicationIconBadgeNumber\" class=\"docClass\">applicationIconBadgeNumber</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getCurrentlyReadingIssue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-getCurrentlyReadingIssue' class='name expandable'>getCurrentlyReadingIssue</a>( <span class='pre'></span> ) : <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a></div><div class='description'><div class='short'>Gets the value of the currentlyReadingIssue property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Newsstand-property-currentlyReadingIssue\" rel=\"Modules.Newsstand-property-currentlyReadingIssue\" class=\"docClass\">currentlyReadingIssue</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getIssue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-getIssue' class='name expandable'>getIssue</a>( <span class='pre'>props</span> ) : <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a></div><div class='description'><div class='short'>Retrieves an issue from the library via its unique name. ...</div><div class='long'><p>Retrieves an issue from the library via its unique name.</p>\n\n<p><p>Returns a <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a> representing the issue or undefined if the issue does not exist in the library.</p>\n\n\n\n\n<p><strong>Example</strong></p>\n\n\n\n\n<pre><code>var issue = Newsstand.getIssue({\n    name: \"Magazine-0\"\n});\n</code></pre>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>props</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a>&lt;<a href=\"#!/api/NewsstandGetIssueProps\" rel=\"NewsstandGetIssueProps\" class=\"docClass\">NewsstandGetIssueProps</a>&gt;<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getIssues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-getIssues' class='name expandable'>getIssues</a>( <span class='pre'></span> ) : <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a>[]</div><div class='description'><div class='short'>Gets the value of the issues property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Newsstand-property-issues\" rel=\"Modules.Newsstand-property-issues\" class=\"docClass\">issues</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a>[]</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getLifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getLifecycleContainer' class='name expandable'>getLifecycleContainer</a>( <span class='pre'></span> ) : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></div><div class='description'><div class='short'>Gets the value of the lifecycleContainer property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-removeEventListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-removeEventListener' class='name expandable'>removeEventListener</a>( <span class='pre'>name, callback</span> )</div><div class='description'><div class='short'>Removes the specified callback as an event listener for the named event. ...</div><div class='long'><p>Removes the specified callback as an event listener for the named event.</p>\n\n<p><p>Multiple listeners can be registered for the same event, so the \n<code>callback</code> parameter is used to determine which listener to remove. </p>\n\n\n\n\n<p>When adding a listener, you must save a reference to the callback function\nin order to remove the listener later:</p>\n\n\n\n\n<pre><code>var listener = function() { Ti.API.info(\"Event listener called.\"); }\nwindow.addEventListener('click', listener);\n</code></pre>\n\n\n\n\n<p>To remove the listener, pass in a reference to the callback function:</p>\n\n\n\n\n<pre><code>window.removeEventListener('click', listener);\n</code></pre>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;Object&gt;<div class='sub-desc'><p>Callback function to remove. Must be the same function passed to <code>addEventListener</code>.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-removeIssue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-removeIssue' class='name expandable'>removeIssue</a>( <span class='pre'>issue</span> )</div><div class='description'><div class='short'>Removes an issue from the library. ...</div><div class='long'><p>Removes an issue from the library.</p>\n\n<p><p><strong>Note:</strong> It is possible to hold on to a <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a> even after it is removed from the library. This is not something you want to do, because issues are useless if they are not in the library. Most of the properties of the issue will still be available excelpt <code>contentURL</code> which will be undefined. </p>\n\n\n\n\n<p><strong>Example</strong></p>\n\n\n\n\n<pre><code>Newsstand.removeIssue(issueToRemove);\n</code></pre>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>issue</span> : <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a><div class='sub-desc'><p>The issue to be removed.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setApplicationIconBadgeNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-setApplicationIconBadgeNumber' class='name expandable'>setApplicationIconBadgeNumber</a>( <span class='pre'>applicationIconBadgeNumber</span> )</div><div class='description'><div class='short'>Sets the value of the applicationIconBadgeNumber property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.Newsstand-property-applicationIconBadgeNumber\" rel=\"Modules.Newsstand-property-applicationIconBadgeNumber\" class=\"docClass\">applicationIconBadgeNumber</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>applicationIconBadgeNumber</span> : Number<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setBasicAuthentication' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-setBasicAuthentication' class='name expandable'>setBasicAuthentication</a>( <span class='pre'>props</span> )</div><div class='description'><div class='short'>Sets the username and password that will be used if the Modules.Newsstand.Issue.downloadAsset call needs to authentic...</div><div class='long'><p>Sets the username and password that will be used if the <a href=\"#!/api/Modules.Newsstand.Issue-method-downloadAsset\" rel=\"Modules.Newsstand.Issue-method-downloadAsset\" class=\"docClass\">Modules.Newsstand.Issue.downloadAsset</a> call needs to authenticate.</p>\n\n<p><p><strong>Example</strong></p>\n\n\n\n\n<pre><code>Newsstand.setBasicAuthentication({\n    username: \"jalter\",\n    password: \"password\"\n});\n</code></pre>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>props</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a>&lt;<a href=\"#!/api/NewsstandSetBasicAuthProps\" rel=\"NewsstandSetBasicAuthProps\" class=\"docClass\">NewsstandSetBasicAuthProps</a>&gt;<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setCurrentlyReadingIssue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-setCurrentlyReadingIssue' class='name expandable'>setCurrentlyReadingIssue</a>( <span class='pre'>currentlyReadingIssue</span> )</div><div class='description'><div class='short'>Sets the value of the currentlyReadingIssue property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.Newsstand-property-currentlyReadingIssue\" rel=\"Modules.Newsstand-property-currentlyReadingIssue\" class=\"docClass\">currentlyReadingIssue</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>currentlyReadingIssue</span> : <a href=\"#!/api/Modules.Newsstand.Issue\" rel=\"Modules.Newsstand.Issue\" class=\"docClass\">Modules.Newsstand.Issue</a><div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setIconImage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-method-setIconImage' class='name expandable'>setIconImage</a>( <span class='pre'>iconImage</span> )</div><div class='description'><div class='short'>Sets the value of the iconImage property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.Newsstand-property-iconImage\" rel=\"Modules.Newsstand-property-iconImage\" class=\"docClass\">iconImage</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>iconImage</span> : <a href=\"#!/api/Titanium.Filesystem.File\" rel=\"Titanium.Filesystem.File\" class=\"docClass\">Titanium.Filesystem.File</a><div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setLifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-setLifecycleContainer' class='name expandable'>setLifecycleContainer</a>( <span class='pre'>lifecycleContainer</span> )</div><div class='description'><div class='short'>Sets the value of the lifecycleContainer property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lifecycleContainer</span> : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a><div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-assetcomplete' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-event-assetcomplete' class='name expandable'>assetcomplete</a></div><div class='description'><div class='short'>Occurs when each asset download completes. ...</div><div class='long'><p>Occurs when each asset download completes.</p>\n\n<h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The unique name of the issue the asset is being downloaded for.</p>\n\n</div></li><li><span class='pre'>userInfo</span> : Object<div class='sub-desc'><p>The dictionary of key value pairs that was set when calling <a href=\"#!/api/Modules.Newsstand.Issue-method-downloadAsset\" rel=\"Modules.Newsstand.Issue-method-downloadAsset\" class=\"docClass\">Modules.Newsstand.Issue.downloadAsset</a>.</p>\n\n</div></li><li><span class='pre'>filePath</span> : String<div class='sub-desc'><p>The location of the file that was downloaded.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-error' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-event-error' class='name expandable'>error</a></div><div class='description'><div class='short'>Occurs when there is an error while downloading an asset. ...</div><div class='long'><p>Occurs when there is an error while downloading an asset.</p>\n\n<h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The unique name of the issue the asset is being downloaded for.</p>\n\n</div></li><li><span class='pre'>userInfo</span> : Object<div class='sub-desc'><p>The dictionary of key value pairs that was set when calling <a href=\"#!/api/Modules.Newsstand.Issue-method-downloadAsset\" rel=\"Modules.Newsstand.Issue-method-downloadAsset\" class=\"docClass\">Modules.Newsstand.Issue.downloadAsset</a>.</p>\n\n</div></li><li><span class='pre'>description</span> : String<div class='sub-desc'><p>Description of the error.</p>\n\n</div></li><li><span class='pre'>code</span> : String<div class='sub-desc'><p>The error code.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-issuecomplete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-event-issuecomplete' class='name expandable'>issuecomplete</a></div><div class='description'><div class='short'>Occurs when all of the asset downloads that have been started for an issue are complete. ...</div><div class='long'><p>Occurs when all of the asset downloads that have been started for an issue are complete. This could be a successful completion or error.</p>\n\n<h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The unique name of the issue.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-progress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Newsstand'>Modules.Newsstand</span></div><a href='#!/api/Modules.Newsstand-event-progress' class='name expandable'>progress</a></div><div class='description'><div class='short'>Occurs if you call downloadAsset and an issue asset is downloading. ...</div><div class='long'><p>Occurs if you call downloadAsset and an issue asset is downloading. This event is only sent when the application is running in the foreground.</p>\n\n<p><p><strong>Note:</strong> totalBytes only applies to the current file being downloaded.</p>\n\n</p><h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The unique name of the issue the asset is being downloaded for.</p>\n\n</div></li><li><span class='pre'>userInfo</span> : Object<div class='sub-desc'><p>The dictionary of key value pairs that was set when calling <a href=\"#!/api/Modules.Newsstand.Issue-method-downloadAsset\" rel=\"Modules.Newsstand.Issue-method-downloadAsset\" class=\"docClass\">Modules.Newsstand.Issue.downloadAsset</a>.</p>\n\n</div></li><li><span class='pre'>bytesWritten</span> : Number<div class='sub-desc'><p>The number of bytes downloaded.</p>\n\n</div></li><li><span class='pre'>totalBytes</span> : Number<div class='sub-desc'><p>The total number of bytes to download for the current asset.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div></div></div></div></div>"});