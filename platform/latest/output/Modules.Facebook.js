Ext.data.JsonP['Modules_Facebook']({"tagname":"class","name":"Modules.Facebook","extends":"Titanium.Module","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"platform":["android 3.1.0","iphone 3.1.0","ipad 3.1.0"],"editurl":"https://github.com/appcelerator-modules/ti.facebook/edit/master/apidoc/Facebook.yml","description":["<p>The Facebook module is used for connecting your application with\nFacebook. This module supports the following features:</p>\n\n<ul>\n<li><p>Logging in to Facebook and authorizing your application with either the\n{@link Modules.Facebook.LoginButton Login button} or programatically.</p></li>\n<li><p>Making requests through the Facebook Graph API using the\n{@link Modules.Facebook#method-requestWithGraphPath requestWithGraphPath()} method.</p></li>\n<li><p>Sharing content using Facebook dialogs or the {@link Modules.Facebook.LikeButton Like button}.</p></li>\n</ul>\n\n<p><strong>Using Ti.Facebook with iOS 10 and Xcode 8</strong>\nTo log in using Facebook on iOS Simulator, you now must include an entitlements file that enables Keychain\nSharing Capabilities. While the entitlements file is not necessary for device build (it is self-generated),\nit won't affect anything in your build. To do so, create a <code>/platform/ios/name.entitlements</code> file (replace\nname with the name element in tiapp.xml) with this content:</p>\n\n<pre><code>    &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n    &lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;\n    &lt;plist version=\"1.0\"&gt;\n    &lt;dict&gt;\n        &lt;key&gt;keychain-access-groups&lt;/key&gt;\n        &lt;array&gt;\n            &lt;!-- APP_ID same as the id value in the tiapp.xml file --&gt;\n            &lt;string&gt;$(AppIdentifierPrefix)APP_ID&lt;/string&gt;\n        &lt;/array&gt;\n    &lt;/dict&gt;\n    &lt;/plist&gt;\n</code></pre>\n\n<p><strong>Note:</strong> As of April 30th, 2015, Facebook no longer supports version 1.0 of their API, which\nincludes the FQL and REST APIs.  Only the Graph APIs will be supported.</p>\n\n<p><strong>Migration from the Facebook module v4.x to v5.x</strong></p>\n\n<ul>\n<li><p><strong>dialog() method</strong> -- {@link Modules.Facebook#method-presentWebShareDialog presentWebShareDialog()} is\ndeprecated and removed. The module will auto determine if you have a native Facebook App installed.\n{@link Modules.Facebook#property-canPresentShareDialog canPresentShareDialog()} is also deprecated and removed.\nFor more details, see 'Share Dialogs' and 'Request Dialogs' below.</p></li>\n<li><p><strong>presentShareDialog() method</strong> -- 'name' parameter is deprecated and replaced with 'title'.\n'caption' parameter is deprecated and removed.</p></li>\n<li><p><strong>presentSendRequestDialog() method</strong> -- 'to' parameter is deprecated and replaced with 'recipients'.\nThere are a few new parameters as well, for more details,\nsee {@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()}</p></li>\n</ul>\n\n<p>The following APIs were removed due to changes in the native Facebook SDKs and\nremoval of the Facebook v1.0 REST APIs:</p>\n\n<ul>\n<li><strong>appid property</strong> -- The Facebook application ID can no longer be set programmatically\nin the application.  Set the Facebook application ID in the <code>tiapp.xml</code> file.\nFor more details, see 'Getting Started' below for more details.\n<strong>Migration from the Facebook module v3.x to v4.x</strong></li>\n</ul>\n\n<p>The following APIs were removed due to changes in the native Facebook SDKs and\nremoval of the Facebook v1.0 REST APIs:</p>\n\n<ul>\n<li><p><strong>appid property</strong> -- The Facebook application ID can no longer be set programmatically\nin the application.  Set the Facebook application ID in the <code>tiapp.xml</code> file.\nFor more details, see 'Getting Started' below for more details.</p></li>\n<li><p><strong>dialog() method</strong> -- Use either\n{@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()},\n{@link Modules.Facebook#method-presentInviteDialog presentInviteDialog()},\n{@link Modules.Facebook#method-presentMessengerDialog presentMessengerDialog()},\n{@link Modules.Facebook#method-presentShareDialog presentShareDialog()} or\n{@link Modules.Facebook#method-presentWebShareDialog presentWebShareDialog()}.\nFor more details, see 'Share Dialogs' and 'Request Dialogs' below.</p></li>\n<li><p><strong>forceDialogAuth property</strong> -- On Android, you can force dialog authorization with the\n{@link Modules.Facebook.LoginButton#property-sessionLoginBehavior LoginButton.sessionLoginBehavior} property.</p></li>\n<li><p><strong>publishInstall() method</strong> -- The underlying Facebook API has been deprecated and\nis now handled automatically by the module.</p></li>\n<li><p><strong>request() method</strong> -- Due to the removal of the Facebook v1.0 APIs,\nall applications should call the Graph APIs instead. If you make any REST API calls\nwith the <code>request()</code> method, transition to the Graph APIs and use the\n{@link Modules.Facebook#method-requestWithGraphPath requestWithGraphPath()} method.</p></li>\n<li><p><strong>reauthorize() method</strong> -- To request additional Facebook permissions once the\nuser authorizes the application, use either the\n{@link Modules.Facebook#method-requestNewReadPermissions requestNewReadPermissions()} or\n{@link Modules.Facebook#method-requestNewPublishPermissions requestNewPublishPermissions()}.\nFor more details, see \"Manage Read and Write Permissions\" below.</p></li>\n<li><p><strong>LoginButton style property</strong> -- Facebook redesigned its Login button and the\nstyle can no longer be changed.</p></li>\n</ul>\n\n<h2>Getting Started</h2>\n\n<p>To use the Facebook module, you need a Facebook application. To create a Facebook App,\ngo to the Facebook Developer App: <a href=\"https://developers.facebook.com/apps\">developers.facebook.com/apps</a>.</p>\n\n<ul>\n<li><p>Edit the <code>modules</code> section of your tiapp.xml file to include this module:</p>\n\n<pre><code>&lt;modules&gt;\n    &lt;!-- Add the appropriate line(s) to your modules section --&gt;\n    &lt;module platform=\"android\"&gt;facebook&lt;/module&gt;\n    &lt;module platform=\"iphone\"&gt;facebook&lt;/module&gt;\n&lt;/modules&gt;\n</code></pre></li>\n<li><p>Instantiate the module with the <code>require('facebook')</code> method, then make subsequent API calls\n with the new Facebook object.</p>\n\n<pre><code> var fb = require('facebook');\n fb.permissions = [FACEBOOK_APP_PERMISSIONS];\n fb.initialize();\n fb.authorize();\n</code></pre></li>\n</ul>\n\n<h3>Additional iOS Setup Steps</h3>\n\n<p>For the iOS platform, in the <code>ios plist dict</code> section of your <code>tiapp.xml</code> file, add the following keys:</p>\n\n<ul>\n<li><code>FacebookAppID</code> key with your Facebook App ID as the string value</li>\n<li><code>FacebookDisplayName</code> key with your Facebook App name (the one from <code>developer.facebook.com</code>) as the string value</li>\n<li><code>CFBundleURLTypes</code> key with a single-element array containing a dict as the value, where the dict contains:\n<ul><li><code>CFBundleURLName</code> key with the application app ID (same value as the <code>id</code> in the <code>tiapp.xml</code> file) as the string value</li>\n<li><code>CFBundleURLSchemes</code> key with a single-element array containing the Facebook App ID prefixed with <code>fb</code> as a string value</li></ul></li>\n</ul>\n\n<p>For example:</p>\n\n<pre><code>    &lt;ti:app&gt;\n        &lt;ios&gt;\n            &lt;plist&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;CFBundleURLTypes&lt;/key&gt;\n                    &lt;array&gt;\n                        &lt;dict&gt;\n                            &lt;key&gt;CFBundleURLName&lt;/key&gt;\n                            &lt;!-- Application ID same as the id value in the tiapp.xml file --&gt;\n                            &lt;string&gt;APP_ID&lt;/string&gt;\n                            &lt;key&gt;CFBundleURLSchemes&lt;/key&gt;\n                            &lt;array&gt;\n                                &lt;!-- Prefix the Facebook App ID with 'fb' --&gt;\n                                &lt;string&gt;fbFACEBOOK_APP_ID&lt;/string&gt;\n                            &lt;/array&gt;\n                        &lt;/dict&gt;\n                    &lt;/array&gt;\n                    &lt;key&gt;FacebookAppID&lt;/key&gt;\n                    &lt;!-- Facebook App ID --&gt;\n                    &lt;string&gt;FACEBOOK_APP_ID&lt;/string&gt;\n                    &lt;key&gt;FacebookDisplayName&lt;/key&gt;\n                    &lt;!-- Facebook App Name from developer.facebook.com --&gt;\n                    &lt;string&gt;FACEBOOK_APP_NAME&lt;/string&gt;\n                &lt;/dict&gt;\n            &lt;/plist&gt;\n        &lt;/ios&gt;\n    &lt;/ti:app&gt;\n</code></pre>\n\n<p>To enable the use of Facebook dialogs (e.g., Login, Share), you also need to include the following key and values in <code>tiapp.xml</code>\nto handle the switching in and out of your app:</p>\n\n<pre><code>&lt;key&gt;LSApplicationQueriesSchemes&lt;/key&gt;\n&lt;array&gt;\n    &lt;string&gt;fbapi&lt;/string&gt;\n    &lt;string&gt;fb-messenger-api&lt;/string&gt;\n    &lt;string&gt;fbauth2&lt;/string&gt;\n    &lt;string&gt;fbshareextension&lt;/string&gt;\n&lt;/array&gt;\n</code></pre>\n\n<p>If you are using the older Ti.Facebook Module 4.0.5 and wish to support iOS9, you will instead need to include the following key\nand values in <code>tiapp.xml</code> to handle the switching in and out of your app:</p>\n\n<p><key>LSApplicationQueriesSchemes</key>\n    <array>\n        <string>fbapi</string>\n        <string>fbapi20130214</string>\n        <string>fbapi20130410</string>\n        <string>fbapi20130702</string>\n        <string>fbapi20131010</string>\n        <string>fbapi20131219</string>\n        <string>fbapi20140410</string>\n        <string>fbapi20140116</string>\n        <string>fbapi20150313</string>\n        <string>fbapi20150629</string>\n        <string>fbauth</string>\n        <string>fbauth2</string>\n        <string>fb-messenger-api20140430</string>\n    </array></p>\n\n<p>For iOS9 and titanium 5.0.0.GA and above, App Transport Security is disabled by default.\nIf you choose to enable it, you have to set the following keys and values in <code>tiapp.xml</code> <ios> section for facebook module:</p>\n\n<pre><code>&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;\n&lt;dict&gt;\n    &lt;key&gt;NSExceptionDomains&lt;/key&gt;\n        &lt;dict&gt;\n            &lt;key&gt;facebook.com&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;NSIncludesSubdomains&lt;/key&gt; \n                    &lt;true/&gt;\n                    &lt;key&gt;NSExceptionRequiresForwardSecrecy&lt;/key&gt; \n                    &lt;false/&gt;\n                &lt;/dict&gt;\n            &lt;key&gt;fbcdn.net&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;NSIncludesSubdomains&lt;/key&gt; \n                    &lt;true/&gt;\n                    &lt;key&gt;NSExceptionRequiresForwardSecrecy&lt;/key&gt;  \n                    &lt;false/&gt;\n                &lt;/dict&gt;\n            &lt;key&gt;akamaihd.net&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;NSIncludesSubdomains&lt;/key&gt; \n                    &lt;true/&gt;\n                    &lt;key&gt;NSExceptionRequiresForwardSecrecy&lt;/key&gt; \n                    &lt;false/&gt;\n                &lt;/dict&gt;\n        &lt;/dict&gt;\n&lt;/dict&gt;\n</code></pre>\n\n<h3>Additional Android Setup Steps</h3>\n\n<p>Since Facebook module v4.0.0, for the Android platform, you need to:</p>\n\n<ul>\n<li>Add the Facebook Login activity to the Android manifest</li>\n<li>Add the Facebook App ID to the Android resources <code>string.xml</code> file</li>\n<li>Create a Facebook proxy and associate it with the current active activity</li>\n</ul>\n\n<p><strong>Modify the Android Manifest</strong></p>\n\n<p>Add the Facebook Login activity to the <code>android manifest</code> section of your <code>tiapp.xml</code> file.\nYou may need to add the <code>manifest</code> and <code>application</code> elements.</p>\n\n<pre><code>&lt;ti:app&gt;\n    &lt;android xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n        &lt;manifest&gt;\n            &lt;application&gt;\n                &lt;activity android:name=\"com.facebook.FacebookActivity\" \n                          android:theme=\"@android:style/Theme.Translucent.NoTitleBar\" \n                          android:label=\"YourAppName\" \n                          android:configChanges=\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\" /&gt;\n                &lt;meta-data android:name=\"com.facebook.sdk.ApplicationId\" android:value=\"@string/facebook_app_id\"/&gt;\n            &lt;/application&gt;\n        &lt;/manifest&gt;\n    &lt;/android&gt;\n&lt;ti:app&gt;\n</code></pre>\n\n<p><strong>Add the Facebook App ID to Android Resources</strong></p>\n\n<p>Add a string element to the <code>/platform/android/res/values/strings.xml</code> file with the <code>name</code>\nattribute set to <code>facebook_app_id</code> and the node text set to your Facebook App ID. Create the\nfile if it does not exist.</p>\n\n<pre><code>&lt;resources&gt;\n    &lt;string name=\"facebook_app_id\"&gt;FACEBOOK_APP_ID&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre>\n\n<p><strong>Create a Facebook Proxy</strong></p>\n\n<p>Use the {@link Modules.Facebook#method-createActivityWorker createActivityWorker()} method to create a\nFacebook proxy. Pass the method a dictionary with the <code>lifecycleContainer</code> property set to\nthe current active instance of a standalone Window (window not contained in a tab group) or TabGroup.\nCreate the proxy before calling the <code>open()</code> method on either the window or tab group.</p>\n\n<p>The Facebook module needs to hook into the lifecycle events of the current active activity\nin order to synchronize its state between various activities in the application, for example,\nto update the label of the Login button when the user logs in or out of Facebook.</p>\n\n<p>Attach the proxy to the Window or TabGroup object, so it does not get garbage collected.</p>\n\n<pre><code>win.fbProxy = fb.createActivityWorker({lifecycleContainer: win});\n</code></pre>\n\n<h2>Module API Usage</h2>\n\n<h3>Facebook Login and Authorization</h3>\n\n<p>To use Facebook, a user must logged into Facebook and explicitly authorize the application to\nperform certain actions, such as accessing profile information or posting status messages.</p>\n\n<p>There are two ways to initiate the login process:</p>\n\n<ul>\n<li><p>Call {@link Modules.Facebook#method-authorize authorize} to prompt the user to login and authorize\nthe application. Before calling this method, set the {@link Modules.Facebook#property-permissions} property\nif additional permissions are needed.</p></li>\n<li><p>Create a Facebook {@link Modules.Facebook.LoginButton LoginButton} to allow the user to\nlog in if desired. You can add either read permissions or write permissions,\notherwise the default is to request for the <code>public_profile</code> permission.\nNote that Facebook does not support setting both <code>readPermissions</code> and <code>publishPermissions</code>\nproperties at the same time when using the LoginButton.</p></li>\n</ul>\n\n<p>Which approach you take depends on your UI and how central Facebook is to your\napplication.</p>\n\n<h3>Manage Read and Write Permissions</h3>\n\n<p>In order to read or write content to a user's Facebook page, you need to request permission from\nthe user.  You can either request permissions when the user authorizes your application or\nrequest permissions on the fly.</p>\n\n<p>Before the user logs in and authorizes the application, you can request permissions for the\napplication to use by either:</p>\n\n<ul>\n<li>Setting the {@link Modules.Facebook#property-permissions} property if you are using <code>authorize()</code> method to\nhave the user login and authorize the application.</li>\n<li>Setting either the {@link Modules.Facebook.LoginButton#property-readPermissions readPermissions} or\n{@link Modules.Facebook.LoginButton#property-publishPermissions publishPermissions} on an instance of a LoginButton.\nDo not set both properties or the application will throw an error.</li>\n</ul>\n\n<p>For a complete list of permissions, see the <a href=\"https://developers.facebook.com/docs/facebook-login/permissions/\">official Facebook Permissions Reference</a></p>\n\n<p><strong>Refresh Application Permissions</strong></p>\n\n<p>Since the user can selectively turn application permissions on and off from their Facebook\npage, the application may need to refresh its granted permissions.</p>\n\n<p>To refresh the application's permissions, call the\n{@link Modules.Facebook#method-refreshPermissionsFromServer refreshPermissionsFromServer()} method, then\nlisten for the {@link Modules.Facebook#event-tokenUpdated} event to be notified when permissions are updated.</p>\n\n<pre><code>fb.addEventListener('tokenUpdated', function(e) {\n    Ti.API.info('Updated permissions: ' + JSON.stringify(fb.permissions));\n});\nfb.refreshPermissionsFromServer();\n</code></pre>\n\n<p><strong>Request Additional Read Permissions</strong></p>\n\n<p>To request additional read permissions once the user authorizes your application, use the\n{@link Modules.Facebook#method-requestNewReadPermissions requestNewReadPermissions()} method.</p>\n\n<p>Check the {@link Modules.Facebook#property-permissions} property to make sure the user accepted the request for\nadditional permissions.</p>\n\n<pre><code>var fb = require('facebook');\nfb.requestNewReadPermissions(['read_stream','user_hometown', etc...], function(e) {\n    if (e.success) {\n        fb.requestWithGraphPath(...);\n    } else if (e.cancelled) {\n        ....\n    } else {\n        Ti.API.debug('Failed authorization due to: ' + e.error);\n    }\n});\n</code></pre>\n\n<p><strong>Request Additional Write Permissions</strong></p>\n\n<p>To request additional write permissions once the user authorizes your application, use the\n{@link Modules.Facebook#method-requestNewPublishPermissions requestNewPublishPermissions()} method.\nNote that in addition to passing the permissions to request, you need to also pass an <code>AUDIENCE_*</code>\nconstant to indicate the default audience when positing content.</p>\n\n<p>Check the {@link Modules.Facebook#property-permissions} property to make sure the user accepted the request for\nadditional permissions.</p>\n\n<pre><code>var fb = require('facebook');\nfb.requestNewPublishPermissions(['read_stream','user_hometown', etc...], fb.AUDIENCE_FRIENDS, function(e) {\n    if (e.success) {\n        fb.requestWithGraphPath(...);\n    } else if (e.cancelled) {\n    ....\n    } else {\n        Ti.API.debug('Failed authorization due to: ' + e.error);\n    }\n});\n</code></pre>\n\n<h3>Share Dialogs</h3>\n\n<p>The Share dialog prompts a person to publish an individual story or an Open Graph story\nto their timeline. This does not require the user to authorize your app or any extended permissions,\nso it is the easiest way to enable sharing.</p>\n\n<p>The Share dialog uses the Facebook apps interface, so the Facebook app needs to be installed.  If\nthe Facebook app is not installed, the application can use the Feed dialog that presents the\ndialog in a web-based view as a back up if the Share dialog is not available.</p>\n\n<p>To present a Share dialog to a user, use the {@link Modules.Facebook#property-canPresentShareDialog} property to\ncheck if the application can use the Share dialog. If the application supports the Share dialog,\ncall the {@link Modules.Facebook#method-presentShareDialog presentShareDialog()} to present it, else call the\n{@link Modules.Facebook#method-presentWebShareDialog presentWebShareDialog()} method to present the Feed dialog.</p>\n\n<p>Pass either method parameters you want to add to the post, such as a link or picture, or to\nshare the user's status, do not pass any parameters to the methods.</p>\n\n<p>To monitor if the share request succeeded or not, listen to the {@link Modules.Facebook#event-shareCompleted}\nevent.</p>\n\n<pre><code>    fb.addEventListener('shareCompleted', function (e) {\n        if (e.success) {\n            Ti.API.info('Share request succeeded.');\n        } else {\n            Ti.API.warn('Failed to share.');\n        }\n    });\n\n    fb.presentShareDialog({\n        link: 'https://appcelerator.com/',\n        title: 'great product',\n        description: 'Titanium is a great product',\n        picture: 'http://www.appcelerator.com/wp-content/uploads/scale_triangle1.png'\n    });\n</code></pre>\n\n<p>For details on the Share dialog, see the\n<a href=\"https://developers.facebook.com/docs/sharing/reference/share-dialog\">official Facebook Share Dialogs documentation</a>.</p>\n\n<h3>Requests Dialog</h3>\n\n<p>A request dialog allows a user to invite another user to use your application.\nFacebook will send a private message to the recipient.\nThe typical use case is to invite another user to play a game.\nIf you want to invite people to your application which is not a game, use the\n{@link Modules.Facebook#method-presentInviteDialog presentInviteDialog()} method instead.</p>\n\n<p>To send a request to a user, call the\n{@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()} method and pass the\nmethod a dictionary with the <code>message</code> property set the message you want to send the invited user.\nOptional: You can set the <code>title</code> property with a title string. You can also set the <code>data</code> property\nwith a dictionary of custom parameters. If you want to preselect users to send invite to, you can set\nthe <code>to</code> property with string of values that are facebook ids seperated by comma.</p>\n\n<p>To monitor if the request succeeded or not, listen to the {@link Modules.Facebook#event-requestDialogCompleted} event.</p>\n\n<pre><code>    fb.addEventListener('requestDialogCompleted', function (e) {\n        if (e.success) {\n            Ti.API.info('request succeeded.');\n        } else {\n            Ti.API.warn('Failed to share.');\n        }\n    });\n\n    fb.presentSendRequestDialog({\n        message: 'Go to https://appcelerator.com/',\n        title: 'Invitation to Appcelerator',\n        recipients: ['123456789', '123456788'],\n        data: {\n            badge_of_awesomeness: '1',\n            social_karma: '5'\n        }\n    });\n</code></pre>\n\n<p>For details on request dialogs see the\n<a href=\"https://developers.facebook.com/docs/games/requests/v2.2\">official Facebook Request Dialogs documentation</a>.</p>\n\n<h3>Messenger Dialog</h3>\n\n<p>A messenger dialog allows a user to send content to the Facebook Messenger using your application.</p>\n\n<p>To send a message to a user, call the {@link Modules.Facebook#method-presentMessengerDialog presentMessengerDialog()} method\nand pass the method a dictionary with the optional values \"title\", \"description\", \"link\", \"to\", \"placeID\"\nand \"referal\".</p>\n\n<pre><code>    fb.presentMessengerDialog({\n        title: \"Appcelerator Titanium rocks!\", // The title of the link\n        description: \"Shared from my Titanium application\", // The description of the link\n        link: \"https://appcelerator.com\", // The link you want to share\n        referal: \"ti_app\", // The referal to be added as a suffix to your link\n        placeID: \"my_id\", // The ID for a place to tag with this content\n        to: [] // List of IDs for taggable people to tag with this content\n    });\n</code></pre>\n\n<p>For details on dialog see the\n<a href=\"https://developers.facebook.com/docs/messenger\">official Facebook Messenger Dialogs documentation</a>.</p>\n\n<h3>Messenger Button</h3>\n\n<p>The Messenger button provides a quick mechanism for users to share content to the Facebook Messenger.\nA click on the button can share the content to multiple users.</p>\n\n<p>To create a Messenger button, call the {@link Modules.Facebook#method-createMessengerButton createMessengerButton()}\nmethod and pass the \"mode\" and \"style\" properties:</p>\n\n<pre><code>var messengerButton = fb.createMessengerButton({\n    mode: fb.MESSENGER_BUTTON_MODE_RECTANGULAR\n    style: fb.MESSENGER_BUTTON_STYLE_BLUE\n});\nwin.add(messengerButton);\n</code></pre>\n\n<p>For more information, see the {@link Modules.Facebook.MessengerButton MessengerButton API reference}.</p>\n\n<h3>Like Button</h3>\n\n<p>The Like button provides a quick mechanism for users to share content. A click on the button\nwill share the content on the user's Facebook page.</p>\n\n<p>To create a Like button, call the {@link Modules.Facebook#method-createLikeButton createLikeButton()} method\nand pass it a dictionary with the <code>objectID</code> assigned to either a URL or Open Graph object ID\nyou want to share. Add the button instance to a view to display it.</p>\n\n<pre><code>var likeButton = fb.createLikeButton({\n    objectID: \"https://www.facebook.com/appcelerator\"\n});\nwin.add(likeButton);\n</code></pre>\n\n<p>For more information, see the {@link Modules.Facebook.LikeButton LikeButton API reference}.</p> \n<h3>Examples</h3>\n<h4>Alloy Example</h4>\n<p>Displays the Facebook Login and Like buttons in a window.</p>\n\n<p><code>app/alloy.js</code>:</p>\n\n<pre><code>// Make API calls to Alloy.Globals.Facebook\nAlloy.Globals.Facebook = require('facebook');\n</code></pre>\n\n<p><code>app/views/index.xml</code>:</p>\n\n<pre><code>&lt;Alloy&gt;\n    &lt;Window backgroundColor=\"white\"&gt;\n        &lt;LoginButton id=\"fbLogin\" module=\"facebook\" top=\"25\" /&gt;\n        &lt;LikeButton id=\"fbLike\" module=\"facebook\" top=\"100\" /&gt;\n    &lt;/Window&gt;\n&lt;/Alloy&gt;\n</code></pre>\n\n<p><code>app/controllers/index.js</code>:</p>\n\n<pre><code>$.fbLike.objectID = \"http://www.facebook.com/appcelerator\";\nif (OS_ANDROID) {\n    $.index.fbProxy = Alloy.Globals.Facebook.createActivityWorker({lifecycleContainer: $.index});\n}\n$.index.open();\n</code></pre><h4>Authorize</h4>\n<p>Shows official Facebook dialog for logging in the user and prompting the user to approve your\nrequested permissions.  Listen for the module's {@link Modules.Facebook#event-login login} event to\ndetermine whether the request succeeded.</p>\n\n<pre><code>var fb = require('facebook');\nfb.addEventListener('login', function(e) {\n    if (e.success) {\n        alert('login from uid: '+e.uid+', name: '+ JSON.parse(e.data).name);\n        label.text = 'Logged In = ' + fb.loggedIn;\n    }\n    else if (e.cancelled) {\n        // user cancelled\n        alert('cancelled');\n    }\n    else {\n        alert(e.error);\n    }\n});\nfb.authorize();\n</code></pre><h4>Logout</h4>\n<p>Logout the user and forget the authorization token.  The\n{@link Modules.Facebook#method-logout logout} event is fired after the user is logged out.</p>\n\n<pre><code>fb.addEventListener('logout', function(e) {\n    alert('Logged out');\n});\nfb.logout();\n</code></pre><h4>Authorize/Logout Using the Facebook LoginButton</h4>\n<p>You can use the the native Facebook {@link Modules.Facebook.LoginButton LoginButton}\nto allow the user to log in as required. The button updates its state automatically depending\non whether the user is logged in or not.  When the user is logged in, then the button\nwill show \"Logout\", and vice-versa.</p>\n\n<p>Note that you don't need to set a click listener or anything else on the button.\nTo be notified when the user logs in or out, add event listeners for the\n{@link Modules.Facebook#event-login login} and {@link Modules.Facebook#method-logout logout} events\nprovided by the Facebook module, as in the example below.</p>\n\n<pre><code>// Don't forget to set your requested permissions, else the login button won't be effective.\nvar win = Ti.UI.createWindow({backgroundColor: 'white'});\nvar fb = require('facebook');\n\nfb.addEventListener('login', function(e) {\n    if (e.success) {\n        alert('Logged in');\n    }\n});\nfb.addEventListener('logout', function(e) {\n    alert('Logged out');\n});\n\nif (Ti.Platform.name === 'android') {\n    win.fbProxy = fb.createActivityWorker({lifecycleContainer: win});\n}\n\n// Add the button.  Note that it doesn't need a click event listener.\nwin.add(fb.createLoginButton({\n        readPermissions: ['read_stream','email'],\n        top: 50\n}));\n\nwin.open()\n</code></pre><h4>Simple Graph API Call</h4>\n<p>This example makes a call to the \"me\" graph path, which represents the current\nuser. The JSON results are simply displayed in an alert.  This example assumes\nthe user is already logged in. You can check this with {@link Modules.Facebook#property-loggedIn}.</p>\n\n<pre><code>fb.requestWithGraphPath('me', {}, 'GET', function(e) {\n    if (e.success) {\n        alert(e.result);\n    } else if (e.error) {\n        alert(e.error);\n    } else {\n        alert('Unknown response');\n    }\n});\n</code></pre><h4>Post a Photo Using the Graph API from the Gallery.</h4>\n<p>This example posts a photo to the user's account using the Graph API.\nThis requires the \"publish_actions\" permission.</p>\n\n<pre><code>var B1_TITLE = 'Upload Photo from Gallery with Graph API';\nvar b1 = Ti.UI.createButton({\n    title:B1_TITLE,\n    left: 10, right: 10, top: 0, height: 80\n});\n\nb1.addEventListener('click', function() {\n    Titanium.Media.openPhotoGallery({\n        success:function(event)\n        {\n            b1.title = 'Uploading Photo...';\n            var data = {picture: event.media};\n            // If publish_actions permission is not granted, request it\n            if (fb.permissions.indexOf('publish_actions') &lt; 0) {\n                fb.requestNewPublishPermissions(['publish_actions'], fb.AUDIENCE_FRIENDS, function(e) {\n                    if (e.success) {\n                        Ti.API.info('Permissions:'+fb.permissions);\n                        fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n                    }\n                    if (e.error) {\n                        Ti.API.info('Publish permission error');\n                    }\n                    if (e.cancelled) {\n                        Ti.API.info('Publish permission cancelled');\n                    }\n                });\n            } else {\n                fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n            }\n        },\n        cancel:function()\n        {\n        },\n        error:function(error)\n        {\n        },\n        allowEditing:true\n    });\n});\n</code></pre>\n\n<p>For more information on posting photos, see:</p>\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/graph-api/reference/v2.2/photo\">Photo in the Facebook Graph API Reference</a></li>\n</ul><h4>Post a Photo Using the Graph API with an image in resources directory</h4>\n<p>This example posts a photo to the user's account using the Graph API.\nThis requires the \"publish_actions\" permission.</p>\n\n<pre><code>var b2 = Ti.UI.createButton({\n    title: 'Upload Photo from file with Graph API',\n    left: 10, \n    right: 10, \n    top: 90, \n    height: 80\n});\n\nb2.addEventListener('click', function() {\n    b2.title = 'Uploading Photo...';\n    var f = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, 'images', 'flower.jpg');\n    var blob = f.read();\n    var data = {\n        caption: 'behold, a flower',\n        picture: blob\n    };\n    // If publish_actions permission is not granted, request it\n    if (fb.permissions.indexOf('publish_actions') &lt; 0) {\n        fb.requestNewPublishPermissions(['publish_actions'], fb.AUDIENCE_FRIENDS, function(e) {\n            if (e.success) {\n                Ti.API.info('Permissions:'+fb.permissions);\n                fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n            }\n            if (e.error) {\n                Ti.API.info('Publish permission error');\n            }\n            if (e.cancelled) {\n                Ti.API.info('Publish permission cancelled');\n            }\n        });\n    } else {\n        fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n    }\n});\n</code></pre>\n\n<p>For more information on posting photos, see:</p>\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/graph-api/reference/v2.2/photo\">Photo in the Facebook Graph API Reference</a></li>\n</ul><h4>Show the Share Dialog</h4>\n<p>This example shows how to use the Share Dialog.</p>\n\n<pre><code>var wallDialog = Ti.UI.createButton({\n    title: 'Share URL with Share Dialog',\n    top: 135, \n    left: 10, \n    right: 10, \n    height: 40\n});\n\nwallDialog.addEventListener('click', function() {\n    if (fb.getCanPresentShareDialog()) {\n        fb.presentShareDialog({\n            link: 'https://appcelerator.com/',\n            name: 'great product',\n            description: 'Titanium is a great product',\n            caption: 'it rocks too',\n            picture: 'http://www.appcelerator.com/wp-content/uploads/scale_triangle1.png'\n        });\n    } else {\n        fb.presentWebShareDialog({\n            link: 'https://appcelerator.com/',\n            name: 'great product',\n            description: 'Titanium is a great product',\n            caption: 'it rocks too',\n            picture: 'http://www.appcelerator.com/wp-content/uploads/scale_triangle1.png'\n        });\n    }\n});\n</code></pre>\n\n<p>For more information on Facebook Dialogs, see:</p>\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/sharing/reference/share-dialog\">Facebook Share Dialog Reference</a></li>\n</ul><h4>Show the Invite Dialog</h4>\n<p>This example shows how to use the Invite Dialog.</p>\n\n<pre><code>var wallDialog = Ti.UI.createButton({\n    title: 'Invite friends!',\n    top: 135, \n    left: 10, \n    right: 10, \n    height: 40\n});\n\nwallDialog.addEventListener('click', function() {\n    FB.presentInviteDialog({\n        appLink: \"https://fb.me/xxxxxxxx\",\n        appPreviewImageLink: \"https://www.mydomain.com/my_invite_image.jpg\"\n    });\n});\n</code></pre>\n\n<p>For more information on Invite Dialogs, see:\n<a href=\"https://developers.facebook.com/docs/app-invites/ios\">Facebook Invite Dialog Reference</a></p><h4>Share content to the Facebook Messenger</h4>\n<p>This example shows how to share images, GIF's and videos to the Facebook messenger.</p>\n\n<pre><code>var btn = Ti.UI.createButton({\n    title: \"Share media to messenger\"\n});\nbtn.addEventListener(\"click\", function(e) {\n    var media = [\n        Ti.UI.createView({height: 30,width:30,backgroundColor: \"#ff0\"}).toImage(), // Image blob\n        Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, \"test.gif\").read(), // GIF Blob\n        Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, \"movie.mp4\").read() // Video Blob\n    ];\n\n    var options = Ti.UI.createOptionDialog({\n        options: [\"Photo\", \"GIF\", \"Video\", \"Cancel\"],\n        cancel: 3\n    });\n    options.addEventListener(\"click\", function(e) {\n        if (e.index == 3) {\n            return;\n        }\n        FB.shareMediaToMessenger({\n            media: media[e.index],\n            metadata: \"Ti rocks!\",\n            link: \"https://appcelerator.com\",\n            //renderAsSticker: true // Only for photos e.g. selfies\n        });\n    });\n    options.show();\n});\n</code></pre>\n\n<p>For more information on sharing media to the Facebook Messenger, see:</p>\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/messenger\">Facebook Messenger Reference</a></li>\n</ul><h4>Requesting additional permissions</h4>\n<p>This example shows how to use the <code>requestNewPublishPermissions</code> method to request additional permissions\nto publish a post to the user's wall.</p>\n\n<pre><code>fb.requestNewPublishPermissions(['publish_actions'], fb.AUDIENCE_FRIENDS, function(e) {\n    if (e.success) {\n        fb.requestWithGraphPath('me/feed', null, \"POST\", showRequestResult);\n    } else {\n        Ti.API.debug('Failed authorization due to: ' + e.error);\n    }\n});\n</code></pre>"]},"private":null,"id":"class-Modules.Facebook","members":{"cfg":[],"property":[{"name":"ACTION_TYPE_ASK_FOR","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the actionType with {@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()}</p>"],"platform":["android 5.0.0","iphone 5.0.0","ipad 5.0.0"]},"id":"property-ACTION_TYPE_ASK_FOR"},{"name":"ACTION_TYPE_NONE","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the actionType with {@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()}</p>"],"platform":["android 5.0.0","iphone 5.0.0","ipad 5.0.0"]},"id":"property-ACTION_TYPE_NONE"},{"name":"ACTION_TYPE_SEND","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the actionType with {@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()}</p>"],"platform":["android 5.0.0","iphone 5.0.0","ipad 5.0.0"]},"id":"property-ACTION_TYPE_SEND"},{"name":"ACTION_TYPE_TURN","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the actionType with {@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()}</p>"],"platform":["android 5.0.0","iphone 5.0.0","ipad 5.0.0"]},"id":"property-ACTION_TYPE_TURN"},{"name":"AUDIENCE_EVERYONE","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the default audience with either {@link Modules.Facebook.LoginButton#property-audience LoginButton.audience}\nor {@link Modules.Facebook#method-requestNewPublishPermissions}.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"property-AUDIENCE_EVERYONE"},{"name":"AUDIENCE_FRIENDS","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the default audience with either {@link Modules.Facebook.LoginButton#property-audience LoginButton.audience}\nor {@link Modules.Facebook#method-requestNewPublishPermissions}.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"property-AUDIENCE_FRIENDS"},{"name":"AUDIENCE_NONE","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"removed":{"version":"5.0.0","text":""},"description":["<p>Use to set the default audience with either {@link Modules.Facebook.LoginButton#property-audience LoginButton.audience}\nor {@link Modules.Facebook#method-requestNewPublishPermissions}.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"property-AUDIENCE_NONE"},{"name":"AUDIENCE_ONLY_ME","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the default audience with either {@link Modules.Facebook.LoginButton#property-audience LoginButton.audience}\nor {@link Modules.Facebook#method-requestNewPublishPermissions}.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"property-AUDIENCE_ONLY_ME"},{"name":"BUTTON_STYLE_NORMAL","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"removed":{"version":"4.0.0","text":""}},"id":"property-BUTTON_STYLE_NORMAL"},{"name":"BUTTON_STYLE_WIDE","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"removed":{"version":"4.0.0","text":""}},"id":"property-BUTTON_STYLE_WIDE"},{"name":"FILTER_APP_NON_USERS","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the filter with {@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()}</p>"],"platform":["android 5.0.0","iphone 5.0.0","ipad 5.0.0"]},"id":"property-FILTER_APP_NON_USERS"},{"name":"FILTER_APP_USERS","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the filter with {@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()}</p>"],"platform":["android 5.0.0","iphone 5.0.0","ipad 5.0.0"]},"id":"property-FILTER_APP_USERS"},{"name":"FILTER_NONE","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use to set the filter with {@link Modules.Facebook#method-presentSendRequestDialog presentSendRequestDialog()}</p>"],"platform":["android 5.0.0","iphone 5.0.0","ipad 5.0.0"]},"id":"property-FILTER_NONE"},{"name":"LOGIN_BEHAVIOR_BROWSER","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["android 5.4.0","iphone 5.4.0","ipad 5.4.0"]},"id":"property-LOGIN_BEHAVIOR_BROWSER"},{"name":"LOGIN_BEHAVIOR_DEVICE_AUTH","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["android 5.4.0"]},"id":"property-LOGIN_BEHAVIOR_DEVICE_AUTH"},{"name":"LOGIN_BEHAVIOR_NATIVE","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["android 5.4.0","iphone 5.4.0","ipad 5.4.0"]},"id":"property-LOGIN_BEHAVIOR_NATIVE"},{"name":"LOGIN_BEHAVIOR_NATIVE_WITH_FALLBACK","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["android 5.4.0"]},"id":"property-LOGIN_BEHAVIOR_NATIVE_WITH_FALLBACK"},{"name":"LOGIN_BEHAVIOR_SYSTEM_ACCOUNT","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"property-LOGIN_BEHAVIOR_SYSTEM_ACCOUNT"},{"name":"LOGIN_BEHAVIOR_WEB","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"property-LOGIN_BEHAVIOR_WEB"},{"name":"MESSENGER_BUTTON_MODE_CIRCULAR","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>You can localize the button by localizing \"Send\" in your strings.xml. Learn more about\nthat topic <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Internationalization\">here</a>.</p>"],"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"property-MESSENGER_BUTTON_MODE_CIRCULAR"},{"name":"MESSENGER_BUTTON_MODE_RECTANGULAR","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>You can localize the button by localizing \"Send\" in your strings.xml. Learn more about\nthat topic <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Internationalization\">here</a>.</p>"],"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"property-MESSENGER_BUTTON_MODE_RECTANGULAR"},{"name":"MESSENGER_BUTTON_STYLE_BLUE","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"property-MESSENGER_BUTTON_STYLE_BLUE"},{"name":"MESSENGER_BUTTON_STYLE_WHITE","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"property-MESSENGER_BUTTON_STYLE_WHITE"},{"name":"MESSENGER_BUTTON_STYLE_WHITE_BORDERED","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"property-MESSENGER_BUTTON_STYLE_WHITE_BORDERED"},{"name":"SHARE_DIALOG_MODE_AUTOMATIC","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with {@link Modules.Facebook#method-presentShareDialog presentShareDialog()}.</p>"],"platform":["android 6.0.0","iphone 6.0.0","ipad 6.0.0"]},"id":"property-SHARE_DIALOG_MODE_AUTOMATIC"},{"name":"SHARE_DIALOG_MODE_BROWSER","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with {@link Modules.Facebook#method-presentShareDialog presentShareDialog()}.</p>"],"platform":["iphone 6.0.0","ipad 6.0.0"]},"id":"property-SHARE_DIALOG_MODE_BROWSER"},{"name":"SHARE_DIALOG_MODE_FEED_BROWSER","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with {@link Modules.Facebook#method-presentShareDialog presentShareDialog()}.</p>"],"platform":["iphone 6.0.0","ipad 6.0.0"]},"id":"property-SHARE_DIALOG_MODE_FEED_BROWSER"},{"name":"SHARE_DIALOG_MODE_FEED_WEB","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with {@link Modules.Facebook#method-presentShareDialog presentShareDialog()}.</p>"],"platform":["android 6.0.0","iphone 6.0.0","ipad 6.0.0"]},"id":"property-SHARE_DIALOG_MODE_FEED_WEB"},{"name":"SHARE_DIALOG_MODE_NATIVE","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with {@link Modules.Facebook#method-presentShareDialog presentShareDialog()}.</p>"],"platform":["android 6.0.0","iphone 6.0.0","ipad 6.0.0"]},"id":"property-SHARE_DIALOG_MODE_NATIVE"},{"name":"SHARE_DIALOG_MODE_SHARE_SHEET","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with {@link Modules.Facebook#method-presentShareDialog presentShareDialog()}.</p>"],"platform":["iphone 6.0.0","ipad 6.0.0"]},"id":"property-SHARE_DIALOG_MODE_SHARE_SHEET"},{"name":"SHARE_DIALOG_MODE_WEB","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with {@link Modules.Facebook#method-presentShareDialog presentShareDialog()}.</p>"],"platform":["android 6.0.0","iphone 6.0.0","ipad 6.0.0"]},"id":"property-SHARE_DIALOG_MODE_WEB"},{"name":"SSO_ONLY","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with the {@link Modules.Facebook.LoginButton#property-sessionLoginBehavior LoginButton.sessionLoginBehavior} property.</p>"],"platform":["android 4.0.0"]},"id":"property-SSO_ONLY"},{"name":"SSO_WITH_FALLBACK","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with the {@link Modules.Facebook.LoginButton#property-sessionLoginBehavior LoginButton.sessionLoginBehavior} property.</p>"],"platform":["android 4.0.0"]},"id":"property-SSO_WITH_FALLBACK"},{"name":"SUPPRESS_SSO","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"description":["<p>Use with the {@link Modules.Facebook.LoginButton#property-sessionLoginBehavior LoginButton.sessionLoginBehavior} property.</p>"],"platform":["android 4.0.0"]},"id":"property-SUPPRESS_SSO"},{"name":"accessToken","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true},"id":"property-accessToken"},{"name":"apiName","tagname":"property","owner":"Titanium.Proxy","meta":{"readonly":true,"description":["<p>The value of this property is the fully qualified name of the API. For example, {@link Titanium.UI.Button Button}\nreturns <code>Ti.UI.Button</code>.</p>"],"platform":["android 3.2.0","iphone 3.2.0","ipad 3.2.0","mobileweb 3.2.0","windowsphone 4.1.0"]},"id":"property-apiName"},{"name":"appid","tagname":"property","owner":"Modules.Facebook","meta":{"removed":{"version":"4.0.0","text":"Set the Facebook App ID in the `tiapp.xml` file.  See \"Getting Started\" above for details."}},"id":"property-appid"},{"name":"bubbleParent","tagname":"property","owner":"Titanium.Proxy","meta":{"description":["<p>Some proxies (most commonly views) have a relationship to other proxies, often\nestablished by the add() method. For example, for a button added to a window, a\nclick event on the button would bubble up to the window. Other common parents are\ntable sections to their rows, table views to their sections, and scrollable views\nto their views. Set this property to false to disable the bubbling to the proxy's parent.</p>"],"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","windowsphone 4.1.0"]},"id":"property-bubbleParent"},{"name":"canPresentOpenGraphActionDialog","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"platform":["android 4.0.0"]},"id":"property-canPresentOpenGraphActionDialog"},{"name":"canPresentShareDialog","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true,"removed":{"version":"5.0.0","text":""},"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"property-canPresentShareDialog"},{"name":"expirationDate","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true},"id":"property-expirationDate"},{"name":"forceDialogAuth","tagname":"property","owner":"Modules.Facebook","meta":{"removed":{"version":"4.0.0","text":""},"description":["<p>Set to <code>false</code> to enable Single-Sign-On (SSO) in cases where the official Facebook app is on the\ndevice.  Default is <code>true</code>, meaning the traditional, dialog-based\nauthentication is used rather than SSO. See  the\n<a href=\"http://developers.facebook.com/docs/guides/mobile\">Facebook Mobile Guide</a> for\ndetails of their Single-Sign-On scheme.</p>\n\n<p>To use the built-in iOS 6 login, set this property to <code>false</code>.\nThis property is read-only on Mobile Web.</p>"]},"id":"property-forceDialogAuth"},{"name":"lifecycleContainer","tagname":"property","owner":"Titanium.Proxy","meta":{"description":["<p>If this property is set to a Window or TabGroup, then the corresponding Activity lifecycle event callbacks\nwill also be called on the proxy. Proxies that require the activity lifecycle will need this property set\nto the appropriate containing Window or TabGroup.</p>"],"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"property-lifecycleContainer"},{"name":"loggedIn","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true},"id":"property-loggedIn"},{"name":"loginBehavior","tagname":"property","owner":"Modules.Facebook","meta":{"creationOnly":[null],"description":["<p>Be sure to set this before calling authorize if this is needed. It is\nrecommended to follow Facebook's <a href=\"https://developers.facebook.com/blog/post/2015/10/29/Facebook-Login-iOS9\">guidelines</a>\nfor ideal login behavior</p>"],"platform":["android 5.4.0","iphone 5.4.0","ipad 5.4.0"]},"id":"property-loginBehavior"},{"name":"permissions","tagname":"property","owner":"Modules.Facebook","meta":{"description":["<p>Be sure the permissions you want are set before calling\n{@link Modules.Facebook#method-authorize authorize}.</p>\n\n<p>For a complete list of permissions, see the\n<a href=\"https://developers.facebook.com/docs/facebook-login/permissions/v2.2\">official Facebook Permissions Reference</a></p>\n\n<h4>iOS Platform Notes</h4>\n\n<p>On iOS, do not request any write permissions before calling the <code>authorize()</code> method.  Use the\n{@link Modules.Facebook#method-requestNewPublishPermissions requestNewPublishPermissions()}\nto request write permissions once the user authorizes the application.</p>\n\n<p><strong>Prior to Release 4.0.0</strong></p>\n\n<p>To use the build-in iOS 6 login, this property cannot contain any of the following:\noffline_access, publish_actions, publish_stream, publish_checkins,\nads_management, create_event, rsvp_event, manage_friendlists, manage_notifications,\nor manage_pages.</p>"]},"id":"property-permissions"},{"name":"uid","tagname":"property","owner":"Modules.Facebook","meta":{"readonly":true},"id":"property-uid"}],"method":[{"name":"addEventListener","tagname":"method","owner":"Titanium.Proxy","meta":{},"id":"method-addEventListener"},{"name":"applyProperties","tagname":"method","owner":"Titanium.Proxy","meta":{"description":["<p>Properties are supplied as a dictionary. Each key-value pair in the object is applied to the proxy such that\nmyproxy[key] = value.</p>"],"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","mobileweb 3.0.0","windowsphone 4.1.0"]},"id":"method-applyProperties"},{"name":"authorize","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>Be sure to set your required {@link Modules.Facebook#property-permissions permissions} before\ncalling <code>authorize</code>.</p>\n\n<p>A {@link Modules.Facebook#event-login login} event is generated to indicate a successful or\nunsuccessful login attempt.</p>\n\n<h4>iOS Platform Notes</h4>\n\n<p>On iOS, do not request any write permissions before calling this method.  Use the\n{@link Modules.Facebook#method-requestNewPublishPermissions requestNewPublishPermissions()}\nto request write permissions once the user authorizes the application.</p>\n\n<h4>Prior to Release 4.0.0</h4>\n\n<p>Set the {@link Modules.Facebook#property-appid appid} property as well as the <code>permissions</code> property\nbefore calling <code>authorize()</code>.</p>"]},"id":"method-authorize"},{"name":"createActivityWorker","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>Set the <code>lifecycleContainer</code> property in the dictionary passed to the method to either\nthe current active  instance of a {@link Titanium.UI.Window} or {@link Titanium.UI.TabGroup} in order to monitor the activity's\nlifecycle events, required by Facebook to synchronize its state between various\nactivities in the application.</p>\n\n<p>The proxy object must be created before calling the <code>open()</code> method on the associated Window\nor TabGroup.</p>"],"platform":["android 4.0.0"]},"id":"method-createActivityWorker"},{"name":"createLikeButton","tagname":"method","owner":"Modules.Facebook","meta":{"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-createLikeButton"},{"name":"createLoginButton","tagname":"method","owner":"Modules.Facebook","meta":{},"id":"method-createLoginButton"},{"name":"createMessengerButton","tagname":"method","owner":"Modules.Facebook","meta":{"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"method-createMessengerButton"},{"name":"dialog","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"version":"4.0.0","text":""},"description":["<p>For a list of dialogs, parameters, and response formats, see the\n<a href=\"https://developers.facebook.com/docs/javascript/reference/FB.ui\">official documentation for Facebook Dialogs</a>.</p>\n\n<p>The callback is invoked when the dialog is closed, either because the user\napproved the action, or canceled the dialog.</p>"]},"id":"method-dialog"},{"name":"fetchDeferredAppLink","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>Deferred deep linking allows you to send people to a custom view after they installed your app via the app store.</p>"],"platform":["android 5.4.0","iphone 5.4.0","ipad 5.4.0"]},"id":"method-fetchDeferredAppLink"},{"name":"fireEvent","tagname":"method","owner":"Titanium.Proxy","meta":{},"id":"method-fireEvent"},{"name":"getAccessToken","tagname":"method","owner":"Modules.Facebook","meta":{},"id":"method-getAccessToken"},{"name":"getApiName","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.2.0","iphone 3.2.0","ipad 3.2.0","mobileweb 3.2.0","windowsphone 4.1.0"]},"id":"method-getApiName"},{"name":"getAppid","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"version":"4.0.0","text":"Set the Facebook App ID in the `tiapp.xml` file.  See \"Getting Started\" above for details."}},"id":"method-getAppid"},{"name":"getBubbleParent","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","windowsphone 4.1.0"]},"id":"method-getBubbleParent"},{"name":"getCanPresentOpenGraphActionDialog","tagname":"method","owner":"Modules.Facebook","meta":{"platform":["android 4.0.0"]},"id":"method-getCanPresentOpenGraphActionDialog"},{"name":"getCanPresentShareDialog","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"version":"5.0.0","text":""},"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-getCanPresentShareDialog"},{"name":"getExpirationDate","tagname":"method","owner":"Modules.Facebook","meta":{},"id":"method-getExpirationDate"},{"name":"getForceDialogAuth","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"version":"4.0.0","text":""}},"id":"method-getForceDialogAuth"},{"name":"getLifecycleContainer","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"method-getLifecycleContainer"},{"name":"getLoggedIn","tagname":"method","owner":"Modules.Facebook","meta":{},"id":"method-getLoggedIn"},{"name":"getLoginBehavior","tagname":"method","owner":"Modules.Facebook","meta":{"platform":["android 5.4.0","iphone 5.4.0","ipad 5.4.0"]},"id":"method-getLoginBehavior"},{"name":"getPermissions","tagname":"method","owner":"Modules.Facebook","meta":{},"id":"method-getPermissions"},{"name":"getUid","tagname":"method","owner":"Modules.Facebook","meta":{},"id":"method-getUid"},{"name":"initialize","tagname":"method","owner":"Modules.Facebook","meta":{"deprecated":{"version":"5.0.0","text":""},"description":["<p>Be sure to set your {@link Modules.Facebook#event-login login} and {@link Modules.Facebook#method-logout logout}\nevent listeners before calling <code>initialize</code>.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-initialize"},{"name":"logCustomEvent","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p><strong>From the Facebook API Reference:</strong></p>\n\n<p>Events are not sent immediately when logged. They're cached and flushed out to the Facebook servers\nin a number of situations:</p>\n\n<ul>\n<li>when an event count threshold is passed (currently 100 logged events).</li>\n<li>when a time threshold is passed (currently 15 seconds).</li>\n<li>when an app has gone to background and is then brought back to the foreground.</li>\n</ul>\n\n<p>Some things to note when logging events:</p>\n\n<ul>\n<li>There is a limit on the number of unique event names an app can use, on the order of 300.</li>\n<li>Event names must be between 2 and 40 characters and must consist of alphanumeric\ncharacters, <code>_</code>, <code>-</code> or spaces.</li>\n</ul>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-logCustomEvent"},{"name":"logPurchase","tagname":"method","owner":"Modules.Facebook","meta":{"platform":["android 5.2.0","iphone 5.2.0","ipad 5.2.0"]},"id":"method-logPurchase"},{"name":"logout","tagname":"method","owner":"Modules.Facebook","meta":{},"id":"method-logout"},{"name":"presentInviteDialog","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>To monitor if the share request succeeded or not, listen to the\n{@link Modules.Facebook#event-shareCompleted} event.</p>"],"platform":["android 5.4.0","iphone 5.4.0","ipad 5.4.0"]},"id":"method-presentInviteDialog"},{"name":"presentMessengerDialog","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>Be sure to check if the device can support this method by calling {@link Titanium.Platform#method-canOpenURL canOpenURL} with \"fb-messenger-api://\"\nbefore using this method. If true, you can use this method. If false, the Facebook Messenger application\nis probably not installed in the device.</p>\n\n<p>Listen for the {@link Modules.Facebook#event-shareCompleted} to be notified if the attempt was\nsuccessful or not.</p>"],"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"method-presentMessengerDialog"},{"name":"presentSendRequestDialog","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>A <code>requestDialogCompleted</code> event is generated to indicate if the request attempt was successful or unsuccessful,\nand the resultURL.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-presentSendRequestDialog"},{"name":"presentShareDialog","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>Be sure to check if the device can support this method by calling {@link Modules.Facebook#method-getCanPresentShareDialog getCanPresentShareDialog}\nbefore using this method. If true, you can use this method. If false, the Facebook application\nis probably not installed in the device. In this case, use {@link Modules.Facebook#method-presentWebShareDialog presentWebShareDialog}\ninstead.</p>\n\n<p>Listen for the {@link Modules.Facebook#event-shareCompleted} to be notified if the attempt was\nsuccessful or not.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-presentShareDialog"},{"name":"presentWebShareDialog","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"version":"5.0.0","text":""},"description":["<p>This is a fallback for when Share dialog is not available.</p>\n\n<p>Listen for the {@link Modules.Facebook#event-shareCompleted} to be notified if the attempt was\nsuccessful or not.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-presentWebShareDialog"},{"name":"publishInstall","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"version":"4.0.0","text":""},"description":["<p>Be sure to set your {@link Modules.Facebook#property-appid appid} before calling <code>publishInstall</code>.</p>"],"platform":["android 3.4.1","iphone 3.4.1","ipad 3.4.1"]},"id":"method-publishInstall"},{"name":"reauthorize","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"version":"4.0.0","text":""},"description":["<p>iOS 6's facebook login forbids minimum authorization to include write permissions.\nIn order to make any write actions, the app must reauthorize asking for the additional\npermissions. If the application already has these permissions, there will be no user\ninteraction.</p>"],"platform":["iphone 3.1.0","ipad 3.1.0"]},"id":"method-reauthorize"},{"name":"refreshPermissionsFromServer","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>Facebook now grants total control over granted permissions, and if the user modified the permissions\noutside of your app your cached token may not be updated.</p>\n\n<p>Listen for the {@link Modules.Facebook#event-tokenUpdated} event to be notified if the attempt was\nsuccessful.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-refreshPermissionsFromServer"},{"name":"removeEventListener","tagname":"method","owner":"Titanium.Proxy","meta":{"description":["<p>Multiple listeners can be registered for the same event, so the \n<code>callback</code> parameter is used to determine which listener to remove. </p>\n\n<p>When adding a listener, you must save a reference to the callback function\nin order to remove the listener later:</p>\n\n<pre><code>var listener = function() { Ti.API.info(\"Event listener called.\"); }\nwindow.addEventListener('click', listener);\n</code></pre>\n\n<p>To remove the listener, pass in a reference to the callback function:</p>\n\n<pre><code>window.removeEventListener('click', listener);\n</code></pre>"]},"id":"method-removeEventListener"},{"name":"request","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"text":"4.0.0 As of April 30, 2014, Facebook no longer supports its version 1.0 REST API. Use the\n<Modules.Facebook.requestWithGraphPath> method to make Facebook Graph API requests."},"description":["<p>For details on API calls and responses, see the\n<a href=\"http://developers.facebook.com/docs/reference/rest/\">offical Facebook REST API documentation</a>.</p>"]},"id":"method-request"},{"name":"requestNewPublishPermissions","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>Note that it is not an error for the user to 'Skip' your requested permissions,\nso you should check the module's <code>permissions</code> property following the call.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-requestNewPublishPermissions"},{"name":"requestNewReadPermissions","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>Note that it is not an error for the user to 'Skip' your requested permissions,\nso you should check the module's <code>permissions</code> property following the call.</p>"],"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"method-requestNewReadPermissions"},{"name":"requestWithGraphPath","tagname":"method","owner":"Modules.Facebook","meta":{"description":["<p>If the request requires user authorization, the user must be logged in, and your app\nmust be authorized to make the request. You can check the\n{@link Modules.Facebook#property-loggedIn loggedIn} property to determine if the user is logged in.</p>\n\n<p>Every Facebook object has an associated path. For example, \"me\" requests information about\nthe current user.</p>\n\n<p>For a complete list of Graph API methods, parameters and return types, see the\n<a href=\"https://developers.facebook.com/docs/graph-api\">official Facebook Graph API documentation</a>.</p>"]},"id":"method-requestWithGraphPath"},{"name":"setAppid","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"version":"4.0.0","text":"Set the Facebook App ID in the `tiapp.xml` file.  See \"Getting Started\" above for details."}},"id":"method-setAppid"},{"name":"setBubbleParent","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","windowsphone 4.1.0"]},"id":"method-setBubbleParent"},{"name":"setForceDialogAuth","tagname":"method","owner":"Modules.Facebook","meta":{"removed":{"version":"4.0.0","text":""}},"id":"method-setForceDialogAuth"},{"name":"setLifecycleContainer","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"method-setLifecycleContainer"},{"name":"setLoginBehavior","tagname":"method","owner":"Modules.Facebook","meta":{"platform":["android 5.4.0","iphone 5.4.0","ipad 5.4.0"]},"id":"method-setLoginBehavior"},{"name":"setPermissions","tagname":"method","owner":"Modules.Facebook","meta":{},"id":"method-setPermissions"},{"name":"shareMediaToMessenger","tagname":"method","owner":"Modules.Facebook","meta":{"platform":["iphone 5.4.0","ipad 5.4.0"]},"id":"method-shareMediaToMessenger"}],"event":[{"name":"inviteCompleted","tagname":"event","owner":"Modules.Facebook","meta":{"platform":["android 5.4.0","iphone 5.4.0","ipad 5.4.0"]},"id":"event-inviteCompleted"},{"name":"login","tagname":"event","owner":"Modules.Facebook","meta":{},"id":"event-login"},{"name":"logout","tagname":"event","owner":"Modules.Facebook","meta":{},"id":"event-logout"},{"name":"requestDialogCompleted","tagname":"event","owner":"Modules.Facebook","meta":{"platform":["android 4.0.2","iphone 4.0.2","ipad 4.0.2"]},"id":"event-requestDialogCompleted"},{"name":"shareCompleted","tagname":"event","owner":"Modules.Facebook","meta":{"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"event-shareCompleted"},{"name":"tokenUpdated","tagname":"event","owner":"Modules.Facebook","meta":{"platform":["android 4.0.0","iphone 4.0.0","ipad 4.0.0"]},"id":"event-tokenUpdated"}],"css_var":[],"css_mixin":[]},"linenr":12093,"files":[{"filename":"titanium.js","href":"titanium.html#Modules-Facebook"}],"html_meta":{"platform":"<ul class='platforms'><li class='platform-android'\n        title='Android'>3.1.0</li><li class='platform-iphone'\n        title='iPhone'>3.1.0</li><li class='platform-ipad'\n        title='iPad'>3.1.0</li></ul>","editurl":null,"description":"<p><p>The Facebook module is used for connecting your application with\nFacebook. This module supports the following features:</p>\n\n\n\n\n<ul>\n<li><p>Logging in to Facebook and authorizing your application with either the\n<a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">Login button</a> or programatically.</p></li>\n<li><p>Making requests through the Facebook Graph API using the\n<a href=\"#!/api/Modules.Facebook-method-requestWithGraphPath\" rel=\"Modules.Facebook-method-requestWithGraphPath\" class=\"docClass\">requestWithGraphPath()</a> method.</p></li>\n<li><p>Sharing content using Facebook dialogs or the <a href=\"#!/api/Modules.Facebook.LikeButton\" rel=\"Modules.Facebook.LikeButton\" class=\"docClass\">Like button</a>.</p></li>\n</ul>\n\n\n\n\n<p><strong>Using Ti.Facebook with iOS 10 and Xcode 8</strong>\nTo log in using Facebook on iOS Simulator, you now must include an entitlements file that enables Keychain\nSharing Capabilities. While the entitlements file is not necessary for device build (it is self-generated),\nit won't affect anything in your build. To do so, create a <code>/platform/ios/name.entitlements</code> file (replace\nname with the name element in tiapp.xml) with this content:</p>\n\n\n\n\n<pre><code>    &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n    &lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;\n    &lt;plist version=\"1.0\"&gt;\n    &lt;dict&gt;\n        &lt;key&gt;keychain-access-groups&lt;/key&gt;\n        &lt;array&gt;\n            &lt;!-- APP_ID same as the id value in the tiapp.xml file --&gt;\n            &lt;string&gt;$(AppIdentifierPrefix)APP_ID&lt;/string&gt;\n        &lt;/array&gt;\n    &lt;/dict&gt;\n    &lt;/plist&gt;\n</code></pre>\n\n\n\n\n<p><strong>Note:</strong> As of April 30th, 2015, Facebook no longer supports version 1.0 of their API, which\nincludes the FQL and REST APIs.  Only the Graph APIs will be supported.</p>\n\n\n\n\n<p><strong>Migration from the Facebook module v4.x to v5.x</strong></p>\n\n\n\n\n<ul>\n<li><p><strong>dialog() method</strong> -- <a href=\"#!/api/Modules.Facebook-method-presentWebShareDialog\" rel=\"Modules.Facebook-method-presentWebShareDialog\" class=\"docClass\">presentWebShareDialog()</a> is\ndeprecated and removed. The module will auto determine if you have a native Facebook App installed.\n<a href=\"#!/api/Modules.Facebook-property-canPresentShareDialog\" rel=\"Modules.Facebook-property-canPresentShareDialog\" class=\"docClass\">canPresentShareDialog()</a> is also deprecated and removed.\nFor more details, see 'Share Dialogs' and 'Request Dialogs' below.</p></li>\n<li><p><strong>presentShareDialog() method</strong> -- 'name' parameter is deprecated and replaced with 'title'.\n'caption' parameter is deprecated and removed.</p></li>\n<li><p><strong>presentSendRequestDialog() method</strong> -- 'to' parameter is deprecated and replaced with 'recipients'.\nThere are a few new parameters as well, for more details,\nsee <a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a></p></li>\n</ul>\n\n\n\n\n<p>The following APIs were removed due to changes in the native Facebook SDKs and\nremoval of the Facebook v1.0 REST APIs:</p>\n\n\n\n\n<ul>\n<li><strong>appid property</strong> -- The Facebook application ID can no longer be set programmatically\nin the application.  Set the Facebook application ID in the <code>tiapp.xml</code> file.\nFor more details, see 'Getting Started' below for more details.\n<strong>Migration from the Facebook module v3.x to v4.x</strong></li>\n</ul>\n\n\n\n\n<p>The following APIs were removed due to changes in the native Facebook SDKs and\nremoval of the Facebook v1.0 REST APIs:</p>\n\n\n\n\n<ul>\n<li><p><strong>appid property</strong> -- The Facebook application ID can no longer be set programmatically\nin the application.  Set the Facebook application ID in the <code>tiapp.xml</code> file.\nFor more details, see 'Getting Started' below for more details.</p></li>\n<li><p><strong>dialog() method</strong> -- Use either\n<a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a>,\n<a href=\"#!/api/Modules.Facebook-method-presentInviteDialog\" rel=\"Modules.Facebook-method-presentInviteDialog\" class=\"docClass\">presentInviteDialog()</a>,\n<a href=\"#!/api/Modules.Facebook-method-presentMessengerDialog\" rel=\"Modules.Facebook-method-presentMessengerDialog\" class=\"docClass\">presentMessengerDialog()</a>,\n<a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a> or\n<a href=\"#!/api/Modules.Facebook-method-presentWebShareDialog\" rel=\"Modules.Facebook-method-presentWebShareDialog\" class=\"docClass\">presentWebShareDialog()</a>.\nFor more details, see 'Share Dialogs' and 'Request Dialogs' below.</p></li>\n<li><p><strong>forceDialogAuth property</strong> -- On Android, you can force dialog authorization with the\n<a href=\"#!/api/Modules.Facebook.LoginButton-property-sessionLoginBehavior\" rel=\"Modules.Facebook.LoginButton-property-sessionLoginBehavior\" class=\"docClass\">LoginButton.sessionLoginBehavior</a> property.</p></li>\n<li><p><strong>publishInstall() method</strong> -- The underlying Facebook API has been deprecated and\nis now handled automatically by the module.</p></li>\n<li><p><strong>request() method</strong> -- Due to the removal of the Facebook v1.0 APIs,\nall applications should call the Graph APIs instead. If you make any REST API calls\nwith the <code>request()</code> method, transition to the Graph APIs and use the\n<a href=\"#!/api/Modules.Facebook-method-requestWithGraphPath\" rel=\"Modules.Facebook-method-requestWithGraphPath\" class=\"docClass\">requestWithGraphPath()</a> method.</p></li>\n<li><p><strong>reauthorize() method</strong> -- To request additional Facebook permissions once the\nuser authorizes the application, use either the\n<a href=\"#!/api/Modules.Facebook-method-requestNewReadPermissions\" rel=\"Modules.Facebook-method-requestNewReadPermissions\" class=\"docClass\">requestNewReadPermissions()</a> or\n<a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions()</a>.\nFor more details, see \"Manage Read and Write Permissions\" below.</p></li>\n<li><p><strong>LoginButton style property</strong> -- Facebook redesigned its Login button and the\nstyle can no longer be changed.</p></li>\n</ul>\n\n\n\n\n<h2>Getting Started</h2>\n\n\n\n\n<p>To use the Facebook module, you need a Facebook application. To create a Facebook App,\ngo to the Facebook Developer App: <a href=\"https://developers.facebook.com/apps\">developers.facebook.com/apps</a>.</p>\n\n\n\n\n<ul>\n<li><p>Edit the <code>modules</code> section of your tiapp.xml file to include this module:</p>\n\n<pre><code>&lt;modules&gt;\n    &lt;!-- Add the appropriate line(s) to your modules section --&gt;\n    &lt;module platform=\"android\"&gt;facebook&lt;/module&gt;\n    &lt;module platform=\"iphone\"&gt;facebook&lt;/module&gt;\n&lt;/modules&gt;\n</code></pre></li>\n<li><p>Instantiate the module with the <code>require('facebook')</code> method, then make subsequent API calls\n with the new Facebook object.</p>\n\n<pre><code> var fb = require('facebook');\n fb.permissions = [FACEBOOK_APP_PERMISSIONS];\n fb.initialize();\n fb.authorize();\n</code></pre></li>\n</ul>\n\n\n\n\n<h3>Additional iOS Setup Steps</h3>\n\n\n\n\n<p>For the iOS platform, in the <code>ios plist dict</code> section of your <code>tiapp.xml</code> file, add the following keys:</p>\n\n\n\n\n<ul>\n<li><code>FacebookAppID</code> key with your Facebook App ID as the string value</li>\n<li><code>FacebookDisplayName</code> key with your Facebook App name (the one from <code>developer.facebook.com</code>) as the string value</li>\n<li><code>CFBundleURLTypes</code> key with a single-element array containing a dict as the value, where the dict contains:\n<ul><li><code>CFBundleURLName</code> key with the application app ID (same value as the <code>id</code> in the <code>tiapp.xml</code> file) as the string value</li>\n<li><code>CFBundleURLSchemes</code> key with a single-element array containing the Facebook App ID prefixed with <code>fb</code> as a string value</li></ul></li>\n</ul>\n\n\n\n\n<p>For example:</p>\n\n\n\n\n<pre><code>    &lt;ti:app&gt;\n        &lt;ios&gt;\n            &lt;plist&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;CFBundleURLTypes&lt;/key&gt;\n                    &lt;array&gt;\n                        &lt;dict&gt;\n                            &lt;key&gt;CFBundleURLName&lt;/key&gt;\n                            &lt;!-- Application ID same as the id value in the tiapp.xml file --&gt;\n                            &lt;string&gt;APP_ID&lt;/string&gt;\n                            &lt;key&gt;CFBundleURLSchemes&lt;/key&gt;\n                            &lt;array&gt;\n                                &lt;!-- Prefix the Facebook App ID with 'fb' --&gt;\n                                &lt;string&gt;fbFACEBOOK_APP_ID&lt;/string&gt;\n                            &lt;/array&gt;\n                        &lt;/dict&gt;\n                    &lt;/array&gt;\n                    &lt;key&gt;FacebookAppID&lt;/key&gt;\n                    &lt;!-- Facebook App ID --&gt;\n                    &lt;string&gt;FACEBOOK_APP_ID&lt;/string&gt;\n                    &lt;key&gt;FacebookDisplayName&lt;/key&gt;\n                    &lt;!-- Facebook App Name from developer.facebook.com --&gt;\n                    &lt;string&gt;FACEBOOK_APP_NAME&lt;/string&gt;\n                &lt;/dict&gt;\n            &lt;/plist&gt;\n        &lt;/ios&gt;\n    &lt;/ti:app&gt;\n</code></pre>\n\n\n\n\n<p>To enable the use of Facebook dialogs (e.g., Login, Share), you also need to include the following key and values in <code>tiapp.xml</code>\nto handle the switching in and out of your app:</p>\n\n\n\n\n<pre><code>&lt;key&gt;LSApplicationQueriesSchemes&lt;/key&gt;\n&lt;array&gt;\n    &lt;string&gt;fbapi&lt;/string&gt;\n    &lt;string&gt;fb-messenger-api&lt;/string&gt;\n    &lt;string&gt;fbauth2&lt;/string&gt;\n    &lt;string&gt;fbshareextension&lt;/string&gt;\n&lt;/array&gt;\n</code></pre>\n\n\n\n\n<p>If you are using the older Ti.Facebook Module 4.0.5 and wish to support iOS9, you will instead need to include the following key\nand values in <code>tiapp.xml</code> to handle the switching in and out of your app:</p>\n\n\n\n\n<p><key>LSApplicationQueriesSchemes</key>\n    <array>\n        <string>fbapi</string>\n        <string>fbapi20130214</string>\n        <string>fbapi20130410</string>\n        <string>fbapi20130702</string>\n        <string>fbapi20131010</string>\n        <string>fbapi20131219</string>\n        <string>fbapi20140410</string>\n        <string>fbapi20140116</string>\n        <string>fbapi20150313</string>\n        <string>fbapi20150629</string>\n        <string>fbauth</string>\n        <string>fbauth2</string>\n        <string>fb-messenger-api20140430</string>\n    </array></p>\n\n\n\n\n<p>For iOS9 and titanium 5.0.0.GA and above, App Transport Security is disabled by default.\nIf you choose to enable it, you have to set the following keys and values in <code>tiapp.xml</code> <ios> section for facebook module:</ios></p>\n\n\n\n\n<pre><code>&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;\n&lt;dict&gt;\n    &lt;key&gt;NSExceptionDomains&lt;/key&gt;\n        &lt;dict&gt;\n            &lt;key&gt;facebook.com&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;NSIncludesSubdomains&lt;/key&gt; \n                    &lt;true/&gt;\n                    &lt;key&gt;NSExceptionRequiresForwardSecrecy&lt;/key&gt; \n                    &lt;false/&gt;\n                &lt;/dict&gt;\n            &lt;key&gt;fbcdn.net&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;NSIncludesSubdomains&lt;/key&gt; \n                    &lt;true/&gt;\n                    &lt;key&gt;NSExceptionRequiresForwardSecrecy&lt;/key&gt;  \n                    &lt;false/&gt;\n                &lt;/dict&gt;\n            &lt;key&gt;akamaihd.net&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;NSIncludesSubdomains&lt;/key&gt; \n                    &lt;true/&gt;\n                    &lt;key&gt;NSExceptionRequiresForwardSecrecy&lt;/key&gt; \n                    &lt;false/&gt;\n                &lt;/dict&gt;\n        &lt;/dict&gt;\n&lt;/dict&gt;\n</code></pre>\n\n\n\n\n<h3>Additional Android Setup Steps</h3>\n\n\n\n\n<p>Since Facebook module v4.0.0, for the Android platform, you need to:</p>\n\n\n\n\n<ul>\n<li>Add the Facebook Login activity to the Android manifest</li>\n<li>Add the Facebook App ID to the Android resources <code>string.xml</code> file</li>\n<li>Create a Facebook proxy and associate it with the current active activity</li>\n</ul>\n\n\n\n\n<p><strong>Modify the Android Manifest</strong></p>\n\n\n\n\n<p>Add the Facebook Login activity to the <code>android manifest</code> section of your <code>tiapp.xml</code> file.\nYou may need to add the <code>manifest</code> and <code>application</code> elements.</p>\n\n\n\n\n<pre><code>&lt;ti:app&gt;\n    &lt;android xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n        &lt;manifest&gt;\n            &lt;application&gt;\n                &lt;activity android:name=\"com.facebook.FacebookActivity\" \n                          android:theme=\"@android:style/Theme.Translucent.NoTitleBar\" \n                          android:label=\"YourAppName\" \n                          android:configChanges=\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\" /&gt;\n                &lt;meta-data android:name=\"com.facebook.sdk.ApplicationId\" android:value=\"@string/facebook_app_id\"/&gt;\n            &lt;/application&gt;\n        &lt;/manifest&gt;\n    &lt;/android&gt;\n&lt;ti:app&gt;\n</code></pre>\n\n\n\n\n<p><strong>Add the Facebook App ID to Android Resources</strong></p>\n\n\n\n\n<p>Add a string element to the <code>/platform/android/res/values/strings.xml</code> file with the <code>name</code>\nattribute set to <code>facebook_app_id</code> and the node text set to your Facebook App ID. Create the\nfile if it does not exist.</p>\n\n\n\n\n<pre><code>&lt;resources&gt;\n    &lt;string name=\"facebook_app_id\"&gt;FACEBOOK_APP_ID&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre>\n\n\n\n\n<p><strong>Create a Facebook Proxy</strong></p>\n\n\n\n\n<p>Use the <a href=\"#!/api/Modules.Facebook-method-createActivityWorker\" rel=\"Modules.Facebook-method-createActivityWorker\" class=\"docClass\">createActivityWorker()</a> method to create a\nFacebook proxy. Pass the method a dictionary with the <code>lifecycleContainer</code> property set to\nthe current active instance of a standalone Window (window not contained in a tab group) or TabGroup.\nCreate the proxy before calling the <code>open()</code> method on either the window or tab group.</p>\n\n\n\n\n<p>The Facebook module needs to hook into the lifecycle events of the current active activity\nin order to synchronize its state between various activities in the application, for example,\nto update the label of the Login button when the user logs in or out of Facebook.</p>\n\n\n\n\n<p>Attach the proxy to the Window or TabGroup object, so it does not get garbage collected.</p>\n\n\n\n\n<pre><code>win.fbProxy = fb.createActivityWorker({lifecycleContainer: win});\n</code></pre>\n\n\n\n\n<h2>Module API Usage</h2>\n\n\n\n\n<h3>Facebook Login and Authorization</h3>\n\n\n\n\n<p>To use Facebook, a user must logged into Facebook and explicitly authorize the application to\nperform certain actions, such as accessing profile information or posting status messages.</p>\n\n\n\n\n<p>There are two ways to initiate the login process:</p>\n\n\n\n\n<ul>\n<li><p>Call <a href=\"#!/api/Modules.Facebook-method-authorize\" rel=\"Modules.Facebook-method-authorize\" class=\"docClass\">authorize</a> to prompt the user to login and authorize\nthe application. Before calling this method, set the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property\nif additional permissions are needed.</p></li>\n<li><p>Create a Facebook <a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">LoginButton</a> to allow the user to\nlog in if desired. You can add either read permissions or write permissions,\notherwise the default is to request for the <code>public_profile</code> permission.\nNote that Facebook does not support setting both <code>readPermissions</code> and <code>publishPermissions</code>\nproperties at the same time when using the LoginButton.</p></li>\n</ul>\n\n\n\n\n<p>Which approach you take depends on your UI and how central Facebook is to your\napplication.</p>\n\n\n\n\n<h3>Manage Read and Write Permissions</h3>\n\n\n\n\n<p>In order to read or write content to a user's Facebook page, you need to request permission from\nthe user.  You can either request permissions when the user authorizes your application or\nrequest permissions on the fly.</p>\n\n\n\n\n<p>Before the user logs in and authorizes the application, you can request permissions for the\napplication to use by either:</p>\n\n\n\n\n<ul>\n<li>Setting the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property if you are using <code>authorize()</code> method to\nhave the user login and authorize the application.</li>\n<li>Setting either the <a href=\"#!/api/Modules.Facebook.LoginButton-property-readPermissions\" rel=\"Modules.Facebook.LoginButton-property-readPermissions\" class=\"docClass\">readPermissions</a> or\n<a href=\"#!/api/Modules.Facebook.LoginButton-property-publishPermissions\" rel=\"Modules.Facebook.LoginButton-property-publishPermissions\" class=\"docClass\">publishPermissions</a> on an instance of a LoginButton.\nDo not set both properties or the application will throw an error.</li>\n</ul>\n\n\n\n\n<p>For a complete list of permissions, see the <a href=\"https://developers.facebook.com/docs/facebook-login/permissions/\">official Facebook Permissions Reference</a></p>\n\n\n\n\n<p><strong>Refresh Application Permissions</strong></p>\n\n\n\n\n<p>Since the user can selectively turn application permissions on and off from their Facebook\npage, the application may need to refresh its granted permissions.</p>\n\n\n\n\n<p>To refresh the application's permissions, call the\n<a href=\"#!/api/Modules.Facebook-method-refreshPermissionsFromServer\" rel=\"Modules.Facebook-method-refreshPermissionsFromServer\" class=\"docClass\">refreshPermissionsFromServer()</a> method, then\nlisten for the <a href=\"#!/api/Modules.Facebook-event-tokenUpdated\" rel=\"Modules.Facebook-event-tokenUpdated\" class=\"docClass\">tokenUpdated</a> event to be notified when permissions are updated.</p>\n\n\n\n\n<pre><code>fb.addEventListener('tokenUpdated', function(e) {\n    Ti.API.info('Updated permissions: ' + JSON.stringify(fb.permissions));\n});\nfb.refreshPermissionsFromServer();\n</code></pre>\n\n\n\n\n<p><strong>Request Additional Read Permissions</strong></p>\n\n\n\n\n<p>To request additional read permissions once the user authorizes your application, use the\n<a href=\"#!/api/Modules.Facebook-method-requestNewReadPermissions\" rel=\"Modules.Facebook-method-requestNewReadPermissions\" class=\"docClass\">requestNewReadPermissions()</a> method.</p>\n\n\n\n\n<p>Check the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property to make sure the user accepted the request for\nadditional permissions.</p>\n\n\n\n\n<pre><code>var fb = require('facebook');\nfb.requestNewReadPermissions(['read_stream','user_hometown', etc...], function(e) {\n    if (e.success) {\n        fb.requestWithGraphPath(...);\n    } else if (e.cancelled) {\n        ....\n    } else {\n        Ti.API.debug('Failed authorization due to: ' + e.error);\n    }\n});\n</code></pre>\n\n\n\n\n<p><strong>Request Additional Write Permissions</strong></p>\n\n\n\n\n<p>To request additional write permissions once the user authorizes your application, use the\n<a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions()</a> method.\nNote that in addition to passing the permissions to request, you need to also pass an <code>AUDIENCE_*</code>\nconstant to indicate the default audience when positing content.</p>\n\n\n\n\n<p>Check the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property to make sure the user accepted the request for\nadditional permissions.</p>\n\n\n\n\n<pre><code>var fb = require('facebook');\nfb.requestNewPublishPermissions(['read_stream','user_hometown', etc...], fb.AUDIENCE_FRIENDS, function(e) {\n    if (e.success) {\n        fb.requestWithGraphPath(...);\n    } else if (e.cancelled) {\n    ....\n    } else {\n        Ti.API.debug('Failed authorization due to: ' + e.error);\n    }\n});\n</code></pre>\n\n\n\n\n<h3>Share Dialogs</h3>\n\n\n\n\n<p>The Share dialog prompts a person to publish an individual story or an Open Graph story\nto their timeline. This does not require the user to authorize your app or any extended permissions,\nso it is the easiest way to enable sharing.</p>\n\n\n\n\n<p>The Share dialog uses the Facebook apps interface, so the Facebook app needs to be installed.  If\nthe Facebook app is not installed, the application can use the Feed dialog that presents the\ndialog in a web-based view as a back up if the Share dialog is not available.</p>\n\n\n\n\n<p>To present a Share dialog to a user, use the <a href=\"#!/api/Modules.Facebook-property-canPresentShareDialog\" rel=\"Modules.Facebook-property-canPresentShareDialog\" class=\"docClass\">canPresentShareDialog</a> property to\ncheck if the application can use the Share dialog. If the application supports the Share dialog,\ncall the <a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a> to present it, else call the\n<a href=\"#!/api/Modules.Facebook-method-presentWebShareDialog\" rel=\"Modules.Facebook-method-presentWebShareDialog\" class=\"docClass\">presentWebShareDialog()</a> method to present the Feed dialog.</p>\n\n\n\n\n<p>Pass either method parameters you want to add to the post, such as a link or picture, or to\nshare the user's status, do not pass any parameters to the methods.</p>\n\n\n\n\n<p>To monitor if the share request succeeded or not, listen to the <a href=\"#!/api/Modules.Facebook-event-shareCompleted\" rel=\"Modules.Facebook-event-shareCompleted\" class=\"docClass\">shareCompleted</a>\nevent.</p>\n\n\n\n\n<pre><code>    fb.addEventListener('shareCompleted', function (e) {\n        if (e.success) {\n            Ti.API.info('Share request succeeded.');\n        } else {\n            Ti.API.warn('Failed to share.');\n        }\n    });\n\n    fb.presentShareDialog({\n        link: 'https://appcelerator.com/',\n        title: 'great product',\n        description: 'Titanium is a great product',\n        picture: 'http://www.appcelerator.com/wp-content/uploads/scale_triangle1.png'\n    });\n</code></pre>\n\n\n\n\n<p>For details on the Share dialog, see the\n<a href=\"https://developers.facebook.com/docs/sharing/reference/share-dialog\">official Facebook Share Dialogs documentation</a>.</p>\n\n\n\n\n<h3>Requests Dialog</h3>\n\n\n\n\n<p>A request dialog allows a user to invite another user to use your application.\nFacebook will send a private message to the recipient.\nThe typical use case is to invite another user to play a game.\nIf you want to invite people to your application which is not a game, use the\n<a href=\"#!/api/Modules.Facebook-method-presentInviteDialog\" rel=\"Modules.Facebook-method-presentInviteDialog\" class=\"docClass\">presentInviteDialog()</a> method instead.</p>\n\n\n\n\n<p>To send a request to a user, call the\n<a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a> method and pass the\nmethod a dictionary with the <code>message</code> property set the message you want to send the invited user.\nOptional: You can set the <code>title</code> property with a title string. You can also set the <code>data</code> property\nwith a dictionary of custom parameters. If you want to preselect users to send invite to, you can set\nthe <code>to</code> property with string of values that are facebook ids seperated by comma.</p>\n\n\n\n\n<p>To monitor if the request succeeded or not, listen to the <a href=\"#!/api/Modules.Facebook-event-requestDialogCompleted\" rel=\"Modules.Facebook-event-requestDialogCompleted\" class=\"docClass\">requestDialogCompleted</a> event.</p>\n\n\n\n\n<pre><code>    fb.addEventListener('requestDialogCompleted', function (e) {\n        if (e.success) {\n            Ti.API.info('request succeeded.');\n        } else {\n            Ti.API.warn('Failed to share.');\n        }\n    });\n\n    fb.presentSendRequestDialog({\n        message: 'Go to https://appcelerator.com/',\n        title: 'Invitation to Appcelerator',\n        recipients: ['123456789', '123456788'],\n        data: {\n            badge_of_awesomeness: '1',\n            social_karma: '5'\n        }\n    });\n</code></pre>\n\n\n\n\n<p>For details on request dialogs see the\n<a href=\"https://developers.facebook.com/docs/games/requests/v2.2\">official Facebook Request Dialogs documentation</a>.</p>\n\n\n\n\n<h3>Messenger Dialog</h3>\n\n\n\n\n<p>A messenger dialog allows a user to send content to the Facebook Messenger using your application.</p>\n\n\n\n\n<p>To send a message to a user, call the <a href=\"#!/api/Modules.Facebook-method-presentMessengerDialog\" rel=\"Modules.Facebook-method-presentMessengerDialog\" class=\"docClass\">presentMessengerDialog()</a> method\nand pass the method a dictionary with the optional values \"title\", \"description\", \"link\", \"to\", \"placeID\"\nand \"referal\".</p>\n\n\n\n\n<pre><code>    fb.presentMessengerDialog({\n        title: \"Appcelerator Titanium rocks!\", // The title of the link\n        description: \"Shared from my Titanium application\", // The description of the link\n        link: \"https://appcelerator.com\", // The link you want to share\n        referal: \"ti_app\", // The referal to be added as a suffix to your link\n        placeID: \"my_id\", // The ID for a place to tag with this content\n        to: [] // List of IDs for taggable people to tag with this content\n    });\n</code></pre>\n\n\n\n\n<p>For details on dialog see the\n<a href=\"https://developers.facebook.com/docs/messenger\">official Facebook Messenger Dialogs documentation</a>.</p>\n\n\n\n\n<h3>Messenger Button</h3>\n\n\n\n\n<p>The Messenger button provides a quick mechanism for users to share content to the Facebook Messenger.\nA click on the button can share the content to multiple users.</p>\n\n\n\n\n<p>To create a Messenger button, call the <a href=\"#!/api/Modules.Facebook-method-createMessengerButton\" rel=\"Modules.Facebook-method-createMessengerButton\" class=\"docClass\">createMessengerButton()</a>\nmethod and pass the \"mode\" and \"style\" properties:</p>\n\n\n\n\n<pre><code>var messengerButton = fb.createMessengerButton({\n    mode: fb.MESSENGER_BUTTON_MODE_RECTANGULAR\n    style: fb.MESSENGER_BUTTON_STYLE_BLUE\n});\nwin.add(messengerButton);\n</code></pre>\n\n\n\n\n<p>For more information, see the <a href=\"#!/api/Modules.Facebook.MessengerButton\" rel=\"Modules.Facebook.MessengerButton\" class=\"docClass\">MessengerButton API reference</a>.</p>\n\n\n\n\n<h3>Like Button</h3>\n\n\n\n\n<p>The Like button provides a quick mechanism for users to share content. A click on the button\nwill share the content on the user's Facebook page.</p>\n\n\n\n\n<p>To create a Like button, call the <a href=\"#!/api/Modules.Facebook-method-createLikeButton\" rel=\"Modules.Facebook-method-createLikeButton\" class=\"docClass\">createLikeButton()</a> method\nand pass it a dictionary with the <code>objectID</code> assigned to either a URL or Open Graph object ID\nyou want to share. Add the button instance to a view to display it.</p>\n\n\n\n\n<pre><code>var likeButton = fb.createLikeButton({\n    objectID: \"https://www.facebook.com/appcelerator\"\n});\nwin.add(likeButton);\n</code></pre>\n\n\n\n\n<p>For more information, see the <a href=\"#!/api/Modules.Facebook.LikeButton\" rel=\"Modules.Facebook.LikeButton\" class=\"docClass\">LikeButton API reference</a>.</p>\n\n\n<p></p>\n\n<h3>Examples</h3>\n\n\n<h4>Alloy Example</h4>\n\n\n<p>Displays the Facebook Login and Like buttons in a window.</p>\n\n\n\n\n<p><code>app/alloy.js</code>:</p>\n\n\n\n\n<pre><code>// Make API calls to Alloy.Globals.Facebook\nAlloy.Globals.Facebook = require('facebook');\n</code></pre>\n\n\n\n\n<p><code>app/views/index.xml</code>:</p>\n\n\n\n\n<pre><code>&lt;Alloy&gt;\n    &lt;Window backgroundColor=\"white\"&gt;\n        &lt;LoginButton id=\"fbLogin\" module=\"facebook\" top=\"25\" /&gt;\n        &lt;LikeButton id=\"fbLike\" module=\"facebook\" top=\"100\" /&gt;\n    &lt;/Window&gt;\n&lt;/Alloy&gt;\n</code></pre>\n\n\n\n\n<p><code>app/controllers/index.js</code>:</p>\n\n\n\n\n<pre><code>$.fbLike.objectID = \"http://www.facebook.com/appcelerator\";\nif (OS_ANDROID) {\n    $.index.fbProxy = Alloy.Globals.Facebook.createActivityWorker({lifecycleContainer: $.index});\n}\n$.index.open();\n</code></pre>\n\n\n<h4>Authorize</h4>\n\n\n<p>Shows official Facebook dialog for logging in the user and prompting the user to approve your\nrequested permissions.  Listen for the module's <a href=\"#!/api/Modules.Facebook-event-login\" rel=\"Modules.Facebook-event-login\" class=\"docClass\">login</a> event to\ndetermine whether the request succeeded.</p>\n\n\n\n\n<pre><code>var fb = require('facebook');\nfb.addEventListener('login', function(e) {\n    if (e.success) {\n        alert('login from uid: '+e.uid+', name: '+ JSON.parse(e.data).name);\n        label.text = 'Logged In = ' + fb.loggedIn;\n    }\n    else if (e.cancelled) {\n        // user cancelled\n        alert('cancelled');\n    }\n    else {\n        alert(e.error);\n    }\n});\nfb.authorize();\n</code></pre>\n\n\n<h4>Logout</h4>\n\n\n<p>Logout the user and forget the authorization token.  The\n<a href=\"#!/api/Modules.Facebook-method-logout\" rel=\"Modules.Facebook-method-logout\" class=\"docClass\">logout</a> event is fired after the user is logged out.</p>\n\n\n\n\n<pre><code>fb.addEventListener('logout', function(e) {\n    alert('Logged out');\n});\nfb.logout();\n</code></pre>\n\n\n<h4>Authorize/Logout Using the Facebook LoginButton</h4>\n\n\n<p>You can use the the native Facebook <a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">LoginButton</a>\nto allow the user to log in as required. The button updates its state automatically depending\non whether the user is logged in or not.  When the user is logged in, then the button\nwill show \"Logout\", and vice-versa.</p>\n\n\n\n\n<p>Note that you don't need to set a click listener or anything else on the button.\nTo be notified when the user logs in or out, add event listeners for the\n<a href=\"#!/api/Modules.Facebook-event-login\" rel=\"Modules.Facebook-event-login\" class=\"docClass\">login</a> and <a href=\"#!/api/Modules.Facebook-method-logout\" rel=\"Modules.Facebook-method-logout\" class=\"docClass\">logout</a> events\nprovided by the Facebook module, as in the example below.</p>\n\n\n\n\n<pre><code>// Don't forget to set your requested permissions, else the login button won't be effective.\nvar win = Ti.UI.createWindow({backgroundColor: 'white'});\nvar fb = require('facebook');\n\nfb.addEventListener('login', function(e) {\n    if (e.success) {\n        alert('Logged in');\n    }\n});\nfb.addEventListener('logout', function(e) {\n    alert('Logged out');\n});\n\nif (Ti.Platform.name === 'android') {\n    win.fbProxy = fb.createActivityWorker({lifecycleContainer: win});\n}\n\n// Add the button.  Note that it doesn't need a click event listener.\nwin.add(fb.createLoginButton({\n        readPermissions: ['read_stream','email'],\n        top: 50\n}));\n\nwin.open()\n</code></pre>\n\n\n<h4>Simple Graph API Call</h4>\n\n\n<p>This example makes a call to the \"me\" graph path, which represents the current\nuser. The JSON results are simply displayed in an alert.  This example assumes\nthe user is already logged in. You can check this with <a href=\"#!/api/Modules.Facebook-property-loggedIn\" rel=\"Modules.Facebook-property-loggedIn\" class=\"docClass\">loggedIn</a>.</p>\n\n\n\n\n<pre><code>fb.requestWithGraphPath('me', {}, 'GET', function(e) {\n    if (e.success) {\n        alert(e.result);\n    } else if (e.error) {\n        alert(e.error);\n    } else {\n        alert('Unknown response');\n    }\n});\n</code></pre>\n\n\n<h4>Post a Photo Using the Graph API from the Gallery.</h4>\n\n\n<p>This example posts a photo to the user's account using the Graph API.\nThis requires the \"publish_actions\" permission.</p>\n\n\n\n\n<pre><code>var B1_TITLE = 'Upload Photo from Gallery with Graph API';\nvar b1 = Ti.UI.createButton({\n    title:B1_TITLE,\n    left: 10, right: 10, top: 0, height: 80\n});\n\nb1.addEventListener('click', function() {\n    <a href=\"#!/api/Titanium.Media-method-openPhotoGallery\" rel=\"Titanium.Media-method-openPhotoGallery\" class=\"docClass\">Titanium.Media.openPhotoGallery</a>({\n        success:function(event)\n        {\n            b1.title = 'Uploading Photo...';\n            var data = {picture: event.media};\n            // If publish_actions permission is not granted, request it\n            if (fb.permissions.indexOf('publish_actions') &lt; 0) {\n                fb.requestNewPublishPermissions(['publish_actions'], fb.AUDIENCE_FRIENDS, function(e) {\n                    if (e.success) {\n                        Ti.API.info('Permissions:'+fb.permissions);\n                        fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n                    }\n                    if (e.error) {\n                        Ti.API.info('Publish permission error');\n                    }\n                    if (e.cancelled) {\n                        Ti.API.info('Publish permission cancelled');\n                    }\n                });\n            } else {\n                fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n            }\n        },\n        cancel:function()\n        {\n        },\n        error:function(error)\n        {\n        },\n        allowEditing:true\n    });\n});\n</code></pre>\n\n\n\n\n<p>For more information on posting photos, see:</p>\n\n\n\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/graph-api/reference/v2.2/photo\">Photo in the Facebook Graph API Reference</a></li>\n</ul>\n\n\n<h4>Post a Photo Using the Graph API with an image in resources directory</h4>\n\n\n<p>This example posts a photo to the user's account using the Graph API.\nThis requires the \"publish_actions\" permission.</p>\n\n\n\n\n<pre><code>var b2 = Ti.UI.createButton({\n    title: 'Upload Photo from file with Graph API',\n    left: 10, \n    right: 10, \n    top: 90, \n    height: 80\n});\n\nb2.addEventListener('click', function() {\n    b2.title = 'Uploading Photo...';\n    var f = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, 'images', 'flower.jpg');\n    var blob = f.read();\n    var data = {\n        caption: 'behold, a flower',\n        picture: blob\n    };\n    // If publish_actions permission is not granted, request it\n    if (fb.permissions.indexOf('publish_actions') &lt; 0) {\n        fb.requestNewPublishPermissions(['publish_actions'], fb.AUDIENCE_FRIENDS, function(e) {\n            if (e.success) {\n                Ti.API.info('Permissions:'+fb.permissions);\n                fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n            }\n            if (e.error) {\n                Ti.API.info('Publish permission error');\n            }\n            if (e.cancelled) {\n                Ti.API.info('Publish permission cancelled');\n            }\n        });\n    } else {\n        fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n    }\n});\n</code></pre>\n\n\n\n\n<p>For more information on posting photos, see:</p>\n\n\n\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/graph-api/reference/v2.2/photo\">Photo in the Facebook Graph API Reference</a></li>\n</ul>\n\n\n<h4>Show the Share Dialog</h4>\n\n\n<p>This example shows how to use the Share Dialog.</p>\n\n\n\n\n<pre><code>var wallDialog = Ti.UI.createButton({\n    title: 'Share URL with Share Dialog',\n    top: 135, \n    left: 10, \n    right: 10, \n    height: 40\n});\n\nwallDialog.addEventListener('click', function() {\n    if (fb.getCanPresentShareDialog()) {\n        fb.presentShareDialog({\n            link: 'https://appcelerator.com/',\n            name: 'great product',\n            description: 'Titanium is a great product',\n            caption: 'it rocks too',\n            picture: 'http://www.appcelerator.com/wp-content/uploads/scale_triangle1.png'\n        });\n    } else {\n        fb.presentWebShareDialog({\n            link: 'https://appcelerator.com/',\n            name: 'great product',\n            description: 'Titanium is a great product',\n            caption: 'it rocks too',\n            picture: 'http://www.appcelerator.com/wp-content/uploads/scale_triangle1.png'\n        });\n    }\n});\n</code></pre>\n\n\n\n\n<p>For more information on Facebook Dialogs, see:</p>\n\n\n\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/sharing/reference/share-dialog\">Facebook Share Dialog Reference</a></li>\n</ul>\n\n\n<h4>Show the Invite Dialog</h4>\n\n\n<p>This example shows how to use the Invite Dialog.</p>\n\n\n\n\n<pre><code>var wallDialog = Ti.UI.createButton({\n    title: 'Invite friends!',\n    top: 135, \n    left: 10, \n    right: 10, \n    height: 40\n});\n\nwallDialog.addEventListener('click', function() {\n    FB.presentInviteDialog({\n        appLink: \"https://fb.me/xxxxxxxx\",\n        appPreviewImageLink: \"https://www.mydomain.com/my_invite_image.jpg\"\n    });\n});\n</code></pre>\n\n\n\n\n<p>For more information on Invite Dialogs, see:\n<a href=\"https://developers.facebook.com/docs/app-invites/ios\">Facebook Invite Dialog Reference</a></p>\n\n\n<h4>Share content to the Facebook Messenger</h4>\n\n\n<p>This example shows how to share images, GIF's and videos to the Facebook messenger.</p>\n\n\n\n\n<pre><code>var btn = Ti.UI.createButton({\n    title: \"Share media to messenger\"\n});\nbtn.addEventListener(\"click\", function(e) {\n    var media = [\n        Ti.UI.createView({height: 30,width:30,backgroundColor: \"#ff0\"}).toImage(), // Image blob\n        Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, \"test.gif\").read(), // GIF Blob\n        Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, \"movie.mp4\").read() // Video Blob\n    ];\n\n    var options = Ti.UI.createOptionDialog({\n        options: [\"Photo\", \"GIF\", \"Video\", \"Cancel\"],\n        cancel: 3\n    });\n    options.addEventListener(\"click\", function(e) {\n        if (e.index == 3) {\n            return;\n        }\n        FB.shareMediaToMessenger({\n            media: media[e.index],\n            metadata: \"Ti rocks!\",\n            link: \"https://appcelerator.com\",\n            //renderAsSticker: true // Only for photos e.g. selfies\n        });\n    });\n    options.show();\n});\n</code></pre>\n\n\n\n\n<p>For more information on sharing media to the Facebook Messenger, see:</p>\n\n\n\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/messenger\">Facebook Messenger Reference</a></li>\n</ul>\n\n\n<h4>Requesting additional permissions</h4>\n\n\n<p>This example shows how to use the <code>requestNewPublishPermissions</code> method to request additional permissions\nto publish a post to the user's wall.</p>\n\n\n\n\n<pre><code>fb.requestNewPublishPermissions(['publish_actions'], fb.AUDIENCE_FRIENDS, function(e) {\n    if (e.success) {\n        fb.requestWithGraphPath('me/feed', null, \"POST\", showRequestResult);\n    } else {\n        Ti.API.debug('Failed authorization due to: ' + e.error);\n    }\n});\n</code></pre>\n\n</p>"},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Titanium.Proxy","Titanium.Module","Modules.Facebook"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'><ul class=\"sidebar-platforms\"><li class='platform-android' title='Android since Titanium SDK 3.1.0'>Android 3.1.0</li><li class='platform-iphone' title='iPhone since Titanium SDK 3.1.0'>iPhone 3.1.0</li><li class='platform-ipad' title='iPad since Titanium SDK 3.1.0'>iPad 3.1.0</li></ul></div><div class='hierarchy'><div class='classes'><div class='subclass'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='docClass'>Titanium.Proxy</a></div><div class='subclass'> &gt; <a href='#!/api/Titanium.Module' rel='Titanium.Module' class='docClass'>Titanium.Module</a></div><div class='subclass'> &gt; <strong>Modules.Facebook</strong></div></div></div><div class='doc-contents'><p>Add-on Facebook module.</p>\n\n<p><p>The Facebook module is used for connecting your application with\nFacebook. This module supports the following features:</p>\n\n\n\n\n<ul>\n<li><p>Logging in to Facebook and authorizing your application with either the\n<a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">Login button</a> or programatically.</p></li>\n<li><p>Making requests through the Facebook Graph API using the\n<a href=\"#!/api/Modules.Facebook-method-requestWithGraphPath\" rel=\"Modules.Facebook-method-requestWithGraphPath\" class=\"docClass\">requestWithGraphPath()</a> method.</p></li>\n<li><p>Sharing content using Facebook dialogs or the <a href=\"#!/api/Modules.Facebook.LikeButton\" rel=\"Modules.Facebook.LikeButton\" class=\"docClass\">Like button</a>.</p></li>\n</ul>\n\n\n\n\n<p><strong>Using Ti.Facebook with iOS 10 and Xcode 8</strong>\nTo log in using Facebook on iOS Simulator, you now must include an entitlements file that enables Keychain\nSharing Capabilities. While the entitlements file is not necessary for device build (it is self-generated),\nit won't affect anything in your build. To do so, create a <code>/platform/ios/name.entitlements</code> file (replace\nname with the name element in tiapp.xml) with this content:</p>\n\n\n\n\n<pre><code>    &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n    &lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;\n    &lt;plist version=\"1.0\"&gt;\n    &lt;dict&gt;\n        &lt;key&gt;keychain-access-groups&lt;/key&gt;\n        &lt;array&gt;\n            &lt;!-- APP_ID same as the id value in the tiapp.xml file --&gt;\n            &lt;string&gt;$(AppIdentifierPrefix)APP_ID&lt;/string&gt;\n        &lt;/array&gt;\n    &lt;/dict&gt;\n    &lt;/plist&gt;\n</code></pre>\n\n\n\n\n<p><strong>Note:</strong> As of April 30th, 2015, Facebook no longer supports version 1.0 of their API, which\nincludes the FQL and REST APIs.  Only the Graph APIs will be supported.</p>\n\n\n\n\n<p><strong>Migration from the Facebook module v4.x to v5.x</strong></p>\n\n\n\n\n<ul>\n<li><p><strong>dialog() method</strong> -- <a href=\"#!/api/Modules.Facebook-method-presentWebShareDialog\" rel=\"Modules.Facebook-method-presentWebShareDialog\" class=\"docClass\">presentWebShareDialog()</a> is\ndeprecated and removed. The module will auto determine if you have a native Facebook App installed.\n<a href=\"#!/api/Modules.Facebook-property-canPresentShareDialog\" rel=\"Modules.Facebook-property-canPresentShareDialog\" class=\"docClass\">canPresentShareDialog()</a> is also deprecated and removed.\nFor more details, see 'Share Dialogs' and 'Request Dialogs' below.</p></li>\n<li><p><strong>presentShareDialog() method</strong> -- 'name' parameter is deprecated and replaced with 'title'.\n'caption' parameter is deprecated and removed.</p></li>\n<li><p><strong>presentSendRequestDialog() method</strong> -- 'to' parameter is deprecated and replaced with 'recipients'.\nThere are a few new parameters as well, for more details,\nsee <a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a></p></li>\n</ul>\n\n\n\n\n<p>The following APIs were removed due to changes in the native Facebook SDKs and\nremoval of the Facebook v1.0 REST APIs:</p>\n\n\n\n\n<ul>\n<li><strong>appid property</strong> -- The Facebook application ID can no longer be set programmatically\nin the application.  Set the Facebook application ID in the <code>tiapp.xml</code> file.\nFor more details, see 'Getting Started' below for more details.\n<strong>Migration from the Facebook module v3.x to v4.x</strong></li>\n</ul>\n\n\n\n\n<p>The following APIs were removed due to changes in the native Facebook SDKs and\nremoval of the Facebook v1.0 REST APIs:</p>\n\n\n\n\n<ul>\n<li><p><strong>appid property</strong> -- The Facebook application ID can no longer be set programmatically\nin the application.  Set the Facebook application ID in the <code>tiapp.xml</code> file.\nFor more details, see 'Getting Started' below for more details.</p></li>\n<li><p><strong>dialog() method</strong> -- Use either\n<a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a>,\n<a href=\"#!/api/Modules.Facebook-method-presentInviteDialog\" rel=\"Modules.Facebook-method-presentInviteDialog\" class=\"docClass\">presentInviteDialog()</a>,\n<a href=\"#!/api/Modules.Facebook-method-presentMessengerDialog\" rel=\"Modules.Facebook-method-presentMessengerDialog\" class=\"docClass\">presentMessengerDialog()</a>,\n<a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a> or\n<a href=\"#!/api/Modules.Facebook-method-presentWebShareDialog\" rel=\"Modules.Facebook-method-presentWebShareDialog\" class=\"docClass\">presentWebShareDialog()</a>.\nFor more details, see 'Share Dialogs' and 'Request Dialogs' below.</p></li>\n<li><p><strong>forceDialogAuth property</strong> -- On Android, you can force dialog authorization with the\n<a href=\"#!/api/Modules.Facebook.LoginButton-property-sessionLoginBehavior\" rel=\"Modules.Facebook.LoginButton-property-sessionLoginBehavior\" class=\"docClass\">LoginButton.sessionLoginBehavior</a> property.</p></li>\n<li><p><strong>publishInstall() method</strong> -- The underlying Facebook API has been deprecated and\nis now handled automatically by the module.</p></li>\n<li><p><strong>request() method</strong> -- Due to the removal of the Facebook v1.0 APIs,\nall applications should call the Graph APIs instead. If you make any REST API calls\nwith the <code>request()</code> method, transition to the Graph APIs and use the\n<a href=\"#!/api/Modules.Facebook-method-requestWithGraphPath\" rel=\"Modules.Facebook-method-requestWithGraphPath\" class=\"docClass\">requestWithGraphPath()</a> method.</p></li>\n<li><p><strong>reauthorize() method</strong> -- To request additional Facebook permissions once the\nuser authorizes the application, use either the\n<a href=\"#!/api/Modules.Facebook-method-requestNewReadPermissions\" rel=\"Modules.Facebook-method-requestNewReadPermissions\" class=\"docClass\">requestNewReadPermissions()</a> or\n<a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions()</a>.\nFor more details, see \"Manage Read and Write Permissions\" below.</p></li>\n<li><p><strong>LoginButton style property</strong> -- Facebook redesigned its Login button and the\nstyle can no longer be changed.</p></li>\n</ul>\n\n\n\n\n<h2>Getting Started</h2>\n\n\n\n\n<p>To use the Facebook module, you need a Facebook application. To create a Facebook App,\ngo to the Facebook Developer App: <a href=\"https://developers.facebook.com/apps\">developers.facebook.com/apps</a>.</p>\n\n\n\n\n<ul>\n<li><p>Edit the <code>modules</code> section of your tiapp.xml file to include this module:</p>\n\n<pre><code>&lt;modules&gt;\n    &lt;!-- Add the appropriate line(s) to your modules section --&gt;\n    &lt;module platform=\"android\"&gt;facebook&lt;/module&gt;\n    &lt;module platform=\"iphone\"&gt;facebook&lt;/module&gt;\n&lt;/modules&gt;\n</code></pre></li>\n<li><p>Instantiate the module with the <code>require('facebook')</code> method, then make subsequent API calls\n with the new Facebook object.</p>\n\n<pre><code> var fb = require('facebook');\n fb.permissions = [FACEBOOK_APP_PERMISSIONS];\n fb.initialize();\n fb.authorize();\n</code></pre></li>\n</ul>\n\n\n\n\n<h3>Additional iOS Setup Steps</h3>\n\n\n\n\n<p>For the iOS platform, in the <code>ios plist dict</code> section of your <code>tiapp.xml</code> file, add the following keys:</p>\n\n\n\n\n<ul>\n<li><code>FacebookAppID</code> key with your Facebook App ID as the string value</li>\n<li><code>FacebookDisplayName</code> key with your Facebook App name (the one from <code>developer.facebook.com</code>) as the string value</li>\n<li><code>CFBundleURLTypes</code> key with a single-element array containing a dict as the value, where the dict contains:\n<ul><li><code>CFBundleURLName</code> key with the application app ID (same value as the <code>id</code> in the <code>tiapp.xml</code> file) as the string value</li>\n<li><code>CFBundleURLSchemes</code> key with a single-element array containing the Facebook App ID prefixed with <code>fb</code> as a string value</li></ul></li>\n</ul>\n\n\n\n\n<p>For example:</p>\n\n\n\n\n<pre><code>    &lt;ti:app&gt;\n        &lt;ios&gt;\n            &lt;plist&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;CFBundleURLTypes&lt;/key&gt;\n                    &lt;array&gt;\n                        &lt;dict&gt;\n                            &lt;key&gt;CFBundleURLName&lt;/key&gt;\n                            &lt;!-- Application ID same as the id value in the tiapp.xml file --&gt;\n                            &lt;string&gt;APP_ID&lt;/string&gt;\n                            &lt;key&gt;CFBundleURLSchemes&lt;/key&gt;\n                            &lt;array&gt;\n                                &lt;!-- Prefix the Facebook App ID with 'fb' --&gt;\n                                &lt;string&gt;fbFACEBOOK_APP_ID&lt;/string&gt;\n                            &lt;/array&gt;\n                        &lt;/dict&gt;\n                    &lt;/array&gt;\n                    &lt;key&gt;FacebookAppID&lt;/key&gt;\n                    &lt;!-- Facebook App ID --&gt;\n                    &lt;string&gt;FACEBOOK_APP_ID&lt;/string&gt;\n                    &lt;key&gt;FacebookDisplayName&lt;/key&gt;\n                    &lt;!-- Facebook App Name from developer.facebook.com --&gt;\n                    &lt;string&gt;FACEBOOK_APP_NAME&lt;/string&gt;\n                &lt;/dict&gt;\n            &lt;/plist&gt;\n        &lt;/ios&gt;\n    &lt;/ti:app&gt;\n</code></pre>\n\n\n\n\n<p>To enable the use of Facebook dialogs (e.g., Login, Share), you also need to include the following key and values in <code>tiapp.xml</code>\nto handle the switching in and out of your app:</p>\n\n\n\n\n<pre><code>&lt;key&gt;LSApplicationQueriesSchemes&lt;/key&gt;\n&lt;array&gt;\n    &lt;string&gt;fbapi&lt;/string&gt;\n    &lt;string&gt;fb-messenger-api&lt;/string&gt;\n    &lt;string&gt;fbauth2&lt;/string&gt;\n    &lt;string&gt;fbshareextension&lt;/string&gt;\n&lt;/array&gt;\n</code></pre>\n\n\n\n\n<p>If you are using the older Ti.Facebook Module 4.0.5 and wish to support iOS9, you will instead need to include the following key\nand values in <code>tiapp.xml</code> to handle the switching in and out of your app:</p>\n\n\n\n\n<p><key>LSApplicationQueriesSchemes</key>\n    <array>\n        <string>fbapi</string>\n        <string>fbapi20130214</string>\n        <string>fbapi20130410</string>\n        <string>fbapi20130702</string>\n        <string>fbapi20131010</string>\n        <string>fbapi20131219</string>\n        <string>fbapi20140410</string>\n        <string>fbapi20140116</string>\n        <string>fbapi20150313</string>\n        <string>fbapi20150629</string>\n        <string>fbauth</string>\n        <string>fbauth2</string>\n        <string>fb-messenger-api20140430</string>\n    </array></p>\n\n\n\n\n<p>For iOS9 and titanium 5.0.0.GA and above, App Transport Security is disabled by default.\nIf you choose to enable it, you have to set the following keys and values in <code>tiapp.xml</code> <ios> section for facebook module:</ios></p>\n\n\n\n\n<pre><code>&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;\n&lt;dict&gt;\n    &lt;key&gt;NSExceptionDomains&lt;/key&gt;\n        &lt;dict&gt;\n            &lt;key&gt;facebook.com&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;NSIncludesSubdomains&lt;/key&gt; \n                    &lt;true/&gt;\n                    &lt;key&gt;NSExceptionRequiresForwardSecrecy&lt;/key&gt; \n                    &lt;false/&gt;\n                &lt;/dict&gt;\n            &lt;key&gt;fbcdn.net&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;NSIncludesSubdomains&lt;/key&gt; \n                    &lt;true/&gt;\n                    &lt;key&gt;NSExceptionRequiresForwardSecrecy&lt;/key&gt;  \n                    &lt;false/&gt;\n                &lt;/dict&gt;\n            &lt;key&gt;akamaihd.net&lt;/key&gt;\n                &lt;dict&gt;\n                    &lt;key&gt;NSIncludesSubdomains&lt;/key&gt; \n                    &lt;true/&gt;\n                    &lt;key&gt;NSExceptionRequiresForwardSecrecy&lt;/key&gt; \n                    &lt;false/&gt;\n                &lt;/dict&gt;\n        &lt;/dict&gt;\n&lt;/dict&gt;\n</code></pre>\n\n\n\n\n<h3>Additional Android Setup Steps</h3>\n\n\n\n\n<p>Since Facebook module v4.0.0, for the Android platform, you need to:</p>\n\n\n\n\n<ul>\n<li>Add the Facebook Login activity to the Android manifest</li>\n<li>Add the Facebook App ID to the Android resources <code>string.xml</code> file</li>\n<li>Create a Facebook proxy and associate it with the current active activity</li>\n</ul>\n\n\n\n\n<p><strong>Modify the Android Manifest</strong></p>\n\n\n\n\n<p>Add the Facebook Login activity to the <code>android manifest</code> section of your <code>tiapp.xml</code> file.\nYou may need to add the <code>manifest</code> and <code>application</code> elements.</p>\n\n\n\n\n<pre><code>&lt;ti:app&gt;\n    &lt;android xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n        &lt;manifest&gt;\n            &lt;application&gt;\n                &lt;activity android:name=\"com.facebook.FacebookActivity\" \n                          android:theme=\"@android:style/Theme.Translucent.NoTitleBar\" \n                          android:label=\"YourAppName\" \n                          android:configChanges=\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\" /&gt;\n                &lt;meta-data android:name=\"com.facebook.sdk.ApplicationId\" android:value=\"@string/facebook_app_id\"/&gt;\n            &lt;/application&gt;\n        &lt;/manifest&gt;\n    &lt;/android&gt;\n&lt;ti:app&gt;\n</code></pre>\n\n\n\n\n<p><strong>Add the Facebook App ID to Android Resources</strong></p>\n\n\n\n\n<p>Add a string element to the <code>/platform/android/res/values/strings.xml</code> file with the <code>name</code>\nattribute set to <code>facebook_app_id</code> and the node text set to your Facebook App ID. Create the\nfile if it does not exist.</p>\n\n\n\n\n<pre><code>&lt;resources&gt;\n    &lt;string name=\"facebook_app_id\"&gt;FACEBOOK_APP_ID&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre>\n\n\n\n\n<p><strong>Create a Facebook Proxy</strong></p>\n\n\n\n\n<p>Use the <a href=\"#!/api/Modules.Facebook-method-createActivityWorker\" rel=\"Modules.Facebook-method-createActivityWorker\" class=\"docClass\">createActivityWorker()</a> method to create a\nFacebook proxy. Pass the method a dictionary with the <code>lifecycleContainer</code> property set to\nthe current active instance of a standalone Window (window not contained in a tab group) or TabGroup.\nCreate the proxy before calling the <code>open()</code> method on either the window or tab group.</p>\n\n\n\n\n<p>The Facebook module needs to hook into the lifecycle events of the current active activity\nin order to synchronize its state between various activities in the application, for example,\nto update the label of the Login button when the user logs in or out of Facebook.</p>\n\n\n\n\n<p>Attach the proxy to the Window or TabGroup object, so it does not get garbage collected.</p>\n\n\n\n\n<pre><code>win.fbProxy = fb.createActivityWorker({lifecycleContainer: win});\n</code></pre>\n\n\n\n\n<h2>Module API Usage</h2>\n\n\n\n\n<h3>Facebook Login and Authorization</h3>\n\n\n\n\n<p>To use Facebook, a user must logged into Facebook and explicitly authorize the application to\nperform certain actions, such as accessing profile information or posting status messages.</p>\n\n\n\n\n<p>There are two ways to initiate the login process:</p>\n\n\n\n\n<ul>\n<li><p>Call <a href=\"#!/api/Modules.Facebook-method-authorize\" rel=\"Modules.Facebook-method-authorize\" class=\"docClass\">authorize</a> to prompt the user to login and authorize\nthe application. Before calling this method, set the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property\nif additional permissions are needed.</p></li>\n<li><p>Create a Facebook <a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">LoginButton</a> to allow the user to\nlog in if desired. You can add either read permissions or write permissions,\notherwise the default is to request for the <code>public_profile</code> permission.\nNote that Facebook does not support setting both <code>readPermissions</code> and <code>publishPermissions</code>\nproperties at the same time when using the LoginButton.</p></li>\n</ul>\n\n\n\n\n<p>Which approach you take depends on your UI and how central Facebook is to your\napplication.</p>\n\n\n\n\n<h3>Manage Read and Write Permissions</h3>\n\n\n\n\n<p>In order to read or write content to a user's Facebook page, you need to request permission from\nthe user.  You can either request permissions when the user authorizes your application or\nrequest permissions on the fly.</p>\n\n\n\n\n<p>Before the user logs in and authorizes the application, you can request permissions for the\napplication to use by either:</p>\n\n\n\n\n<ul>\n<li>Setting the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property if you are using <code>authorize()</code> method to\nhave the user login and authorize the application.</li>\n<li>Setting either the <a href=\"#!/api/Modules.Facebook.LoginButton-property-readPermissions\" rel=\"Modules.Facebook.LoginButton-property-readPermissions\" class=\"docClass\">readPermissions</a> or\n<a href=\"#!/api/Modules.Facebook.LoginButton-property-publishPermissions\" rel=\"Modules.Facebook.LoginButton-property-publishPermissions\" class=\"docClass\">publishPermissions</a> on an instance of a LoginButton.\nDo not set both properties or the application will throw an error.</li>\n</ul>\n\n\n\n\n<p>For a complete list of permissions, see the <a href=\"https://developers.facebook.com/docs/facebook-login/permissions/\">official Facebook Permissions Reference</a></p>\n\n\n\n\n<p><strong>Refresh Application Permissions</strong></p>\n\n\n\n\n<p>Since the user can selectively turn application permissions on and off from their Facebook\npage, the application may need to refresh its granted permissions.</p>\n\n\n\n\n<p>To refresh the application's permissions, call the\n<a href=\"#!/api/Modules.Facebook-method-refreshPermissionsFromServer\" rel=\"Modules.Facebook-method-refreshPermissionsFromServer\" class=\"docClass\">refreshPermissionsFromServer()</a> method, then\nlisten for the <a href=\"#!/api/Modules.Facebook-event-tokenUpdated\" rel=\"Modules.Facebook-event-tokenUpdated\" class=\"docClass\">tokenUpdated</a> event to be notified when permissions are updated.</p>\n\n\n\n\n<pre><code>fb.addEventListener('tokenUpdated', function(e) {\n    Ti.API.info('Updated permissions: ' + JSON.stringify(fb.permissions));\n});\nfb.refreshPermissionsFromServer();\n</code></pre>\n\n\n\n\n<p><strong>Request Additional Read Permissions</strong></p>\n\n\n\n\n<p>To request additional read permissions once the user authorizes your application, use the\n<a href=\"#!/api/Modules.Facebook-method-requestNewReadPermissions\" rel=\"Modules.Facebook-method-requestNewReadPermissions\" class=\"docClass\">requestNewReadPermissions()</a> method.</p>\n\n\n\n\n<p>Check the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property to make sure the user accepted the request for\nadditional permissions.</p>\n\n\n\n\n<pre><code>var fb = require('facebook');\nfb.requestNewReadPermissions(['read_stream','user_hometown', etc...], function(e) {\n    if (e.success) {\n        fb.requestWithGraphPath(...);\n    } else if (e.cancelled) {\n        ....\n    } else {\n        Ti.API.debug('Failed authorization due to: ' + e.error);\n    }\n});\n</code></pre>\n\n\n\n\n<p><strong>Request Additional Write Permissions</strong></p>\n\n\n\n\n<p>To request additional write permissions once the user authorizes your application, use the\n<a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions()</a> method.\nNote that in addition to passing the permissions to request, you need to also pass an <code>AUDIENCE_*</code>\nconstant to indicate the default audience when positing content.</p>\n\n\n\n\n<p>Check the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property to make sure the user accepted the request for\nadditional permissions.</p>\n\n\n\n\n<pre><code>var fb = require('facebook');\nfb.requestNewPublishPermissions(['read_stream','user_hometown', etc...], fb.AUDIENCE_FRIENDS, function(e) {\n    if (e.success) {\n        fb.requestWithGraphPath(...);\n    } else if (e.cancelled) {\n    ....\n    } else {\n        Ti.API.debug('Failed authorization due to: ' + e.error);\n    }\n});\n</code></pre>\n\n\n\n\n<h3>Share Dialogs</h3>\n\n\n\n\n<p>The Share dialog prompts a person to publish an individual story or an Open Graph story\nto their timeline. This does not require the user to authorize your app or any extended permissions,\nso it is the easiest way to enable sharing.</p>\n\n\n\n\n<p>The Share dialog uses the Facebook apps interface, so the Facebook app needs to be installed.  If\nthe Facebook app is not installed, the application can use the Feed dialog that presents the\ndialog in a web-based view as a back up if the Share dialog is not available.</p>\n\n\n\n\n<p>To present a Share dialog to a user, use the <a href=\"#!/api/Modules.Facebook-property-canPresentShareDialog\" rel=\"Modules.Facebook-property-canPresentShareDialog\" class=\"docClass\">canPresentShareDialog</a> property to\ncheck if the application can use the Share dialog. If the application supports the Share dialog,\ncall the <a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a> to present it, else call the\n<a href=\"#!/api/Modules.Facebook-method-presentWebShareDialog\" rel=\"Modules.Facebook-method-presentWebShareDialog\" class=\"docClass\">presentWebShareDialog()</a> method to present the Feed dialog.</p>\n\n\n\n\n<p>Pass either method parameters you want to add to the post, such as a link or picture, or to\nshare the user's status, do not pass any parameters to the methods.</p>\n\n\n\n\n<p>To monitor if the share request succeeded or not, listen to the <a href=\"#!/api/Modules.Facebook-event-shareCompleted\" rel=\"Modules.Facebook-event-shareCompleted\" class=\"docClass\">shareCompleted</a>\nevent.</p>\n\n\n\n\n<pre><code>    fb.addEventListener('shareCompleted', function (e) {\n        if (e.success) {\n            Ti.API.info('Share request succeeded.');\n        } else {\n            Ti.API.warn('Failed to share.');\n        }\n    });\n\n    fb.presentShareDialog({\n        link: 'https://appcelerator.com/',\n        title: 'great product',\n        description: 'Titanium is a great product',\n        picture: 'http://www.appcelerator.com/wp-content/uploads/scale_triangle1.png'\n    });\n</code></pre>\n\n\n\n\n<p>For details on the Share dialog, see the\n<a href=\"https://developers.facebook.com/docs/sharing/reference/share-dialog\">official Facebook Share Dialogs documentation</a>.</p>\n\n\n\n\n<h3>Requests Dialog</h3>\n\n\n\n\n<p>A request dialog allows a user to invite another user to use your application.\nFacebook will send a private message to the recipient.\nThe typical use case is to invite another user to play a game.\nIf you want to invite people to your application which is not a game, use the\n<a href=\"#!/api/Modules.Facebook-method-presentInviteDialog\" rel=\"Modules.Facebook-method-presentInviteDialog\" class=\"docClass\">presentInviteDialog()</a> method instead.</p>\n\n\n\n\n<p>To send a request to a user, call the\n<a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a> method and pass the\nmethod a dictionary with the <code>message</code> property set the message you want to send the invited user.\nOptional: You can set the <code>title</code> property with a title string. You can also set the <code>data</code> property\nwith a dictionary of custom parameters. If you want to preselect users to send invite to, you can set\nthe <code>to</code> property with string of values that are facebook ids seperated by comma.</p>\n\n\n\n\n<p>To monitor if the request succeeded or not, listen to the <a href=\"#!/api/Modules.Facebook-event-requestDialogCompleted\" rel=\"Modules.Facebook-event-requestDialogCompleted\" class=\"docClass\">requestDialogCompleted</a> event.</p>\n\n\n\n\n<pre><code>    fb.addEventListener('requestDialogCompleted', function (e) {\n        if (e.success) {\n            Ti.API.info('request succeeded.');\n        } else {\n            Ti.API.warn('Failed to share.');\n        }\n    });\n\n    fb.presentSendRequestDialog({\n        message: 'Go to https://appcelerator.com/',\n        title: 'Invitation to Appcelerator',\n        recipients: ['123456789', '123456788'],\n        data: {\n            badge_of_awesomeness: '1',\n            social_karma: '5'\n        }\n    });\n</code></pre>\n\n\n\n\n<p>For details on request dialogs see the\n<a href=\"https://developers.facebook.com/docs/games/requests/v2.2\">official Facebook Request Dialogs documentation</a>.</p>\n\n\n\n\n<h3>Messenger Dialog</h3>\n\n\n\n\n<p>A messenger dialog allows a user to send content to the Facebook Messenger using your application.</p>\n\n\n\n\n<p>To send a message to a user, call the <a href=\"#!/api/Modules.Facebook-method-presentMessengerDialog\" rel=\"Modules.Facebook-method-presentMessengerDialog\" class=\"docClass\">presentMessengerDialog()</a> method\nand pass the method a dictionary with the optional values \"title\", \"description\", \"link\", \"to\", \"placeID\"\nand \"referal\".</p>\n\n\n\n\n<pre><code>    fb.presentMessengerDialog({\n        title: \"Appcelerator Titanium rocks!\", // The title of the link\n        description: \"Shared from my Titanium application\", // The description of the link\n        link: \"https://appcelerator.com\", // The link you want to share\n        referal: \"ti_app\", // The referal to be added as a suffix to your link\n        placeID: \"my_id\", // The ID for a place to tag with this content\n        to: [] // List of IDs for taggable people to tag with this content\n    });\n</code></pre>\n\n\n\n\n<p>For details on dialog see the\n<a href=\"https://developers.facebook.com/docs/messenger\">official Facebook Messenger Dialogs documentation</a>.</p>\n\n\n\n\n<h3>Messenger Button</h3>\n\n\n\n\n<p>The Messenger button provides a quick mechanism for users to share content to the Facebook Messenger.\nA click on the button can share the content to multiple users.</p>\n\n\n\n\n<p>To create a Messenger button, call the <a href=\"#!/api/Modules.Facebook-method-createMessengerButton\" rel=\"Modules.Facebook-method-createMessengerButton\" class=\"docClass\">createMessengerButton()</a>\nmethod and pass the \"mode\" and \"style\" properties:</p>\n\n\n\n\n<pre><code>var messengerButton = fb.createMessengerButton({\n    mode: fb.MESSENGER_BUTTON_MODE_RECTANGULAR\n    style: fb.MESSENGER_BUTTON_STYLE_BLUE\n});\nwin.add(messengerButton);\n</code></pre>\n\n\n\n\n<p>For more information, see the <a href=\"#!/api/Modules.Facebook.MessengerButton\" rel=\"Modules.Facebook.MessengerButton\" class=\"docClass\">MessengerButton API reference</a>.</p>\n\n\n\n\n<h3>Like Button</h3>\n\n\n\n\n<p>The Like button provides a quick mechanism for users to share content. A click on the button\nwill share the content on the user's Facebook page.</p>\n\n\n\n\n<p>To create a Like button, call the <a href=\"#!/api/Modules.Facebook-method-createLikeButton\" rel=\"Modules.Facebook-method-createLikeButton\" class=\"docClass\">createLikeButton()</a> method\nand pass it a dictionary with the <code>objectID</code> assigned to either a URL or Open Graph object ID\nyou want to share. Add the button instance to a view to display it.</p>\n\n\n\n\n<pre><code>var likeButton = fb.createLikeButton({\n    objectID: \"https://www.facebook.com/appcelerator\"\n});\nwin.add(likeButton);\n</code></pre>\n\n\n\n\n<p>For more information, see the <a href=\"#!/api/Modules.Facebook.LikeButton\" rel=\"Modules.Facebook.LikeButton\" class=\"docClass\">LikeButton API reference</a>.</p>\n\n\n<p></p>\n\n<h3>Examples</h3>\n\n\n<h4>Alloy Example</h4>\n\n\n<p>Displays the Facebook Login and Like buttons in a window.</p>\n\n\n\n\n<p><code>app/alloy.js</code>:</p>\n\n\n\n\n<pre><code>// Make API calls to Alloy.Globals.Facebook\nAlloy.Globals.Facebook = require('facebook');\n</code></pre>\n\n\n\n\n<p><code>app/views/index.xml</code>:</p>\n\n\n\n\n<pre><code>&lt;Alloy&gt;\n    &lt;Window backgroundColor=\"white\"&gt;\n        &lt;LoginButton id=\"fbLogin\" module=\"facebook\" top=\"25\" /&gt;\n        &lt;LikeButton id=\"fbLike\" module=\"facebook\" top=\"100\" /&gt;\n    &lt;/Window&gt;\n&lt;/Alloy&gt;\n</code></pre>\n\n\n\n\n<p><code>app/controllers/index.js</code>:</p>\n\n\n\n\n<pre><code>$.fbLike.objectID = \"http://www.facebook.com/appcelerator\";\nif (OS_ANDROID) {\n    $.index.fbProxy = Alloy.Globals.Facebook.createActivityWorker({lifecycleContainer: $.index});\n}\n$.index.open();\n</code></pre>\n\n\n<h4>Authorize</h4>\n\n\n<p>Shows official Facebook dialog for logging in the user and prompting the user to approve your\nrequested permissions.  Listen for the module's <a href=\"#!/api/Modules.Facebook-event-login\" rel=\"Modules.Facebook-event-login\" class=\"docClass\">login</a> event to\ndetermine whether the request succeeded.</p>\n\n\n\n\n<pre><code>var fb = require('facebook');\nfb.addEventListener('login', function(e) {\n    if (e.success) {\n        alert('login from uid: '+e.uid+', name: '+ JSON.parse(e.data).name);\n        label.text = 'Logged In = ' + fb.loggedIn;\n    }\n    else if (e.cancelled) {\n        // user cancelled\n        alert('cancelled');\n    }\n    else {\n        alert(e.error);\n    }\n});\nfb.authorize();\n</code></pre>\n\n\n<h4>Logout</h4>\n\n\n<p>Logout the user and forget the authorization token.  The\n<a href=\"#!/api/Modules.Facebook-method-logout\" rel=\"Modules.Facebook-method-logout\" class=\"docClass\">logout</a> event is fired after the user is logged out.</p>\n\n\n\n\n<pre><code>fb.addEventListener('logout', function(e) {\n    alert('Logged out');\n});\nfb.logout();\n</code></pre>\n\n\n<h4>Authorize/Logout Using the Facebook LoginButton</h4>\n\n\n<p>You can use the the native Facebook <a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">LoginButton</a>\nto allow the user to log in as required. The button updates its state automatically depending\non whether the user is logged in or not.  When the user is logged in, then the button\nwill show \"Logout\", and vice-versa.</p>\n\n\n\n\n<p>Note that you don't need to set a click listener or anything else on the button.\nTo be notified when the user logs in or out, add event listeners for the\n<a href=\"#!/api/Modules.Facebook-event-login\" rel=\"Modules.Facebook-event-login\" class=\"docClass\">login</a> and <a href=\"#!/api/Modules.Facebook-method-logout\" rel=\"Modules.Facebook-method-logout\" class=\"docClass\">logout</a> events\nprovided by the Facebook module, as in the example below.</p>\n\n\n\n\n<pre><code>// Don't forget to set your requested permissions, else the login button won't be effective.\nvar win = Ti.UI.createWindow({backgroundColor: 'white'});\nvar fb = require('facebook');\n\nfb.addEventListener('login', function(e) {\n    if (e.success) {\n        alert('Logged in');\n    }\n});\nfb.addEventListener('logout', function(e) {\n    alert('Logged out');\n});\n\nif (Ti.Platform.name === 'android') {\n    win.fbProxy = fb.createActivityWorker({lifecycleContainer: win});\n}\n\n// Add the button.  Note that it doesn't need a click event listener.\nwin.add(fb.createLoginButton({\n        readPermissions: ['read_stream','email'],\n        top: 50\n}));\n\nwin.open()\n</code></pre>\n\n\n<h4>Simple Graph API Call</h4>\n\n\n<p>This example makes a call to the \"me\" graph path, which represents the current\nuser. The JSON results are simply displayed in an alert.  This example assumes\nthe user is already logged in. You can check this with <a href=\"#!/api/Modules.Facebook-property-loggedIn\" rel=\"Modules.Facebook-property-loggedIn\" class=\"docClass\">loggedIn</a>.</p>\n\n\n\n\n<pre><code>fb.requestWithGraphPath('me', {}, 'GET', function(e) {\n    if (e.success) {\n        alert(e.result);\n    } else if (e.error) {\n        alert(e.error);\n    } else {\n        alert('Unknown response');\n    }\n});\n</code></pre>\n\n\n<h4>Post a Photo Using the Graph API from the Gallery.</h4>\n\n\n<p>This example posts a photo to the user's account using the Graph API.\nThis requires the \"publish_actions\" permission.</p>\n\n\n\n\n<pre><code>var B1_TITLE = 'Upload Photo from Gallery with Graph API';\nvar b1 = Ti.UI.createButton({\n    title:B1_TITLE,\n    left: 10, right: 10, top: 0, height: 80\n});\n\nb1.addEventListener('click', function() {\n    <a href=\"#!/api/Titanium.Media-method-openPhotoGallery\" rel=\"Titanium.Media-method-openPhotoGallery\" class=\"docClass\">Titanium.Media.openPhotoGallery</a>({\n        success:function(event)\n        {\n            b1.title = 'Uploading Photo...';\n            var data = {picture: event.media};\n            // If publish_actions permission is not granted, request it\n            if (fb.permissions.indexOf('publish_actions') &lt; 0) {\n                fb.requestNewPublishPermissions(['publish_actions'], fb.AUDIENCE_FRIENDS, function(e) {\n                    if (e.success) {\n                        Ti.API.info('Permissions:'+fb.permissions);\n                        fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n                    }\n                    if (e.error) {\n                        Ti.API.info('Publish permission error');\n                    }\n                    if (e.cancelled) {\n                        Ti.API.info('Publish permission cancelled');\n                    }\n                });\n            } else {\n                fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n            }\n        },\n        cancel:function()\n        {\n        },\n        error:function(error)\n        {\n        },\n        allowEditing:true\n    });\n});\n</code></pre>\n\n\n\n\n<p>For more information on posting photos, see:</p>\n\n\n\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/graph-api/reference/v2.2/photo\">Photo in the Facebook Graph API Reference</a></li>\n</ul>\n\n\n<h4>Post a Photo Using the Graph API with an image in resources directory</h4>\n\n\n<p>This example posts a photo to the user's account using the Graph API.\nThis requires the \"publish_actions\" permission.</p>\n\n\n\n\n<pre><code>var b2 = Ti.UI.createButton({\n    title: 'Upload Photo from file with Graph API',\n    left: 10, \n    right: 10, \n    top: 90, \n    height: 80\n});\n\nb2.addEventListener('click', function() {\n    b2.title = 'Uploading Photo...';\n    var f = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, 'images', 'flower.jpg');\n    var blob = f.read();\n    var data = {\n        caption: 'behold, a flower',\n        picture: blob\n    };\n    // If publish_actions permission is not granted, request it\n    if (fb.permissions.indexOf('publish_actions') &lt; 0) {\n        fb.requestNewPublishPermissions(['publish_actions'], fb.AUDIENCE_FRIENDS, function(e) {\n            if (e.success) {\n                Ti.API.info('Permissions:'+fb.permissions);\n                fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n            }\n            if (e.error) {\n                Ti.API.info('Publish permission error');\n            }\n            if (e.cancelled) {\n                Ti.API.info('Publish permission cancelled');\n            }\n        });\n    } else {\n        fb.requestWithGraphPath('me/photos', data, \"POST\", showRequestResult);\n    }\n});\n</code></pre>\n\n\n\n\n<p>For more information on posting photos, see:</p>\n\n\n\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/graph-api/reference/v2.2/photo\">Photo in the Facebook Graph API Reference</a></li>\n</ul>\n\n\n<h4>Show the Share Dialog</h4>\n\n\n<p>This example shows how to use the Share Dialog.</p>\n\n\n\n\n<pre><code>var wallDialog = Ti.UI.createButton({\n    title: 'Share URL with Share Dialog',\n    top: 135, \n    left: 10, \n    right: 10, \n    height: 40\n});\n\nwallDialog.addEventListener('click', function() {\n    if (fb.getCanPresentShareDialog()) {\n        fb.presentShareDialog({\n            link: 'https://appcelerator.com/',\n            name: 'great product',\n            description: 'Titanium is a great product',\n            caption: 'it rocks too',\n            picture: 'http://www.appcelerator.com/wp-content/uploads/scale_triangle1.png'\n        });\n    } else {\n        fb.presentWebShareDialog({\n            link: 'https://appcelerator.com/',\n            name: 'great product',\n            description: 'Titanium is a great product',\n            caption: 'it rocks too',\n            picture: 'http://www.appcelerator.com/wp-content/uploads/scale_triangle1.png'\n        });\n    }\n});\n</code></pre>\n\n\n\n\n<p>For more information on Facebook Dialogs, see:</p>\n\n\n\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/sharing/reference/share-dialog\">Facebook Share Dialog Reference</a></li>\n</ul>\n\n\n<h4>Show the Invite Dialog</h4>\n\n\n<p>This example shows how to use the Invite Dialog.</p>\n\n\n\n\n<pre><code>var wallDialog = Ti.UI.createButton({\n    title: 'Invite friends!',\n    top: 135, \n    left: 10, \n    right: 10, \n    height: 40\n});\n\nwallDialog.addEventListener('click', function() {\n    FB.presentInviteDialog({\n        appLink: \"https://fb.me/xxxxxxxx\",\n        appPreviewImageLink: \"https://www.mydomain.com/my_invite_image.jpg\"\n    });\n});\n</code></pre>\n\n\n\n\n<p>For more information on Invite Dialogs, see:\n<a href=\"https://developers.facebook.com/docs/app-invites/ios\">Facebook Invite Dialog Reference</a></p>\n\n\n<h4>Share content to the Facebook Messenger</h4>\n\n\n<p>This example shows how to share images, GIF's and videos to the Facebook messenger.</p>\n\n\n\n\n<pre><code>var btn = Ti.UI.createButton({\n    title: \"Share media to messenger\"\n});\nbtn.addEventListener(\"click\", function(e) {\n    var media = [\n        Ti.UI.createView({height: 30,width:30,backgroundColor: \"#ff0\"}).toImage(), // Image blob\n        Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, \"test.gif\").read(), // GIF Blob\n        Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, \"movie.mp4\").read() // Video Blob\n    ];\n\n    var options = Ti.UI.createOptionDialog({\n        options: [\"Photo\", \"GIF\", \"Video\", \"Cancel\"],\n        cancel: 3\n    });\n    options.addEventListener(\"click\", function(e) {\n        if (e.index == 3) {\n            return;\n        }\n        FB.shareMediaToMessenger({\n            media: media[e.index],\n            metadata: \"Ti rocks!\",\n            link: \"https://appcelerator.com\",\n            //renderAsSticker: true // Only for photos e.g. selfies\n        });\n    });\n    options.show();\n});\n</code></pre>\n\n\n\n\n<p>For more information on sharing media to the Facebook Messenger, see:</p>\n\n\n\n\n<ul>\n<li><a href=\"https://developers.facebook.com/docs/messenger\">Facebook Messenger Reference</a></li>\n</ul>\n\n\n<h4>Requesting additional permissions</h4>\n\n\n<p>This example shows how to use the <code>requestNewPublishPermissions</code> method to request additional permissions\nto publish a post to the user's wall.</p>\n\n\n\n\n<pre><code>fb.requestNewPublishPermissions(['publish_actions'], fb.AUDIENCE_FRIENDS, function(e) {\n    if (e.success) {\n        fb.requestWithGraphPath('me/feed', null, \"POST\", showRequestResult);\n    } else {\n        Ti.API.debug('Failed authorization due to: ' + e.error);\n    }\n});\n</code></pre>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.1.0</li><li class='platform-iphone'\n        title='iPhone'>3.1.0</li><li class='platform-ipad'\n        title='iPad'>3.1.0</li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_TYPE_ASK_FOR' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-ACTION_TYPE_ASK_FOR' class='name not-expandable'>ACTION_TYPE_ASK_FOR</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>The user is asking for an object from friends.</p>\n\n</div><div class='long'><p>The user is asking for an object from friends.</p>\n\n<p><p>Use to set the actionType with <a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a></p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.0.0</li><li class='platform-iphone'\n        title='iPhone'>5.0.0</li><li class='platform-ipad'\n        title='iPad'>5.0.0</li></ul></div></div></div><div id='property-ACTION_TYPE_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-ACTION_TYPE_NONE' class='name not-expandable'>ACTION_TYPE_NONE</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>No action type.</p>\n\n</div><div class='long'><p>No action type.</p>\n\n<p><p>Use to set the actionType with <a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a></p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.0.0</li><li class='platform-iphone'\n        title='iPhone'>5.0.0</li><li class='platform-ipad'\n        title='iPad'>5.0.0</li></ul></div></div></div><div id='property-ACTION_TYPE_SEND' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-ACTION_TYPE_SEND' class='name not-expandable'>ACTION_TYPE_SEND</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>The user is sending an object to the friends.</p>\n\n</div><div class='long'><p>The user is sending an object to the friends.</p>\n\n<p><p>Use to set the actionType with <a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a></p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.0.0</li><li class='platform-iphone'\n        title='iPhone'>5.0.0</li><li class='platform-ipad'\n        title='iPad'>5.0.0</li></ul></div></div></div><div id='property-ACTION_TYPE_TURN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-ACTION_TYPE_TURN' class='name not-expandable'>ACTION_TYPE_TURN</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>It is the turn of the friends to play against the user in a match.</p>\n\n</div><div class='long'><p>It is the turn of the friends to play against the user in a match.</p>\n\n<p><p>Use to set the actionType with <a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a></p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.0.0</li><li class='platform-iphone'\n        title='iPhone'>5.0.0</li><li class='platform-ipad'\n        title='iPad'>5.0.0</li></ul></div></div></div><div id='property-AUDIENCE_EVERYONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-AUDIENCE_EVERYONE' class='name not-expandable'>AUDIENCE_EVERYONE</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Published content is visible to all Facebook users.</p>\n\n</div><div class='long'><p>Published content is visible to all Facebook users.</p>\n\n<p><p>Use to set the default audience with either <a href=\"#!/api/Modules.Facebook.LoginButton-property-audience\" rel=\"Modules.Facebook.LoginButton-property-audience\" class=\"docClass\">LoginButton.audience</a>\nor <a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions</a>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul></div></div></div><div id='property-AUDIENCE_FRIENDS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-AUDIENCE_FRIENDS' class='name not-expandable'>AUDIENCE_FRIENDS</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Published content is only visible to the user and user's friends.</p>\n\n</div><div class='long'><p>Published content is only visible to the user and user's friends.</p>\n\n<p><p>Use to set the default audience with either <a href=\"#!/api/Modules.Facebook.LoginButton-property-audience\" rel=\"Modules.Facebook.LoginButton-property-audience\" class=\"docClass\">LoginButton.audience</a>\nor <a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions</a>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul></div></div></div><div id='property-AUDIENCE_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-AUDIENCE_NONE' class='name not-expandable'>AUDIENCE_NONE</a><span> : Number</span><strong class='readonly signature' >readonly</strong><strong class='removed signature' >removed</strong></div><div class='description'><div class='short'><p>Invalid default audience.</p>\n\n</div><div class='long'><p>Invalid default audience.</p>\n\n        <div class='signature-box removed'>\n        <p>This property has been <strong>removed</strong> since 5.0.0</p>\n        \n\n        </div>\n<p><p>Use to set the default audience with either <a href=\"#!/api/Modules.Facebook.LoginButton-property-audience\" rel=\"Modules.Facebook.LoginButton-property-audience\" class=\"docClass\">LoginButton.audience</a>\nor <a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions</a>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul></div></div></div><div id='property-AUDIENCE_ONLY_ME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-AUDIENCE_ONLY_ME' class='name not-expandable'>AUDIENCE_ONLY_ME</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Published content is only visible to the user.</p>\n\n</div><div class='long'><p>Published content is only visible to the user.</p>\n\n<p><p>Use to set the default audience with either <a href=\"#!/api/Modules.Facebook.LoginButton-property-audience\" rel=\"Modules.Facebook.LoginButton-property-audience\" class=\"docClass\">LoginButton.audience</a>\nor <a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions</a>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul></div></div></div><div id='property-BUTTON_STYLE_NORMAL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-BUTTON_STYLE_NORMAL' class='name not-expandable'>BUTTON_STYLE_NORMAL</a><span> : Number</span><strong class='readonly signature' >readonly</strong><strong class='removed signature' >removed</strong></div><div class='description'><div class='short'><p>Use with <a href=\"#!/api/Modules.Facebook.LoginButton-property-style\" rel=\"Modules.Facebook.LoginButton-property-style\" class=\"docClass\">LoginButton.style</a> to specify\nthe default login button reading \"Connect\" or \"Login\".</p>\n\n</div><div class='long'><p>Use with <a href=\"#!/api/Modules.Facebook.LoginButton-property-style\" rel=\"Modules.Facebook.LoginButton-property-style\" class=\"docClass\">LoginButton.style</a> to specify\nthe default login button reading \"Connect\" or \"Login\".</p>\n\n        <div class='signature-box removed'>\n        <p>This property has been <strong>removed</strong> since 4.0.0</p>\n        \n\n        </div>\n</div></div></div><div id='property-BUTTON_STYLE_WIDE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-BUTTON_STYLE_WIDE' class='name not-expandable'>BUTTON_STYLE_WIDE</a><span> : Number</span><strong class='readonly signature' >readonly</strong><strong class='removed signature' >removed</strong></div><div class='description'><div class='short'><p>Use with <a href=\"#!/api/Modules.Facebook.LoginButton-property-style\" rel=\"Modules.Facebook.LoginButton-property-style\" class=\"docClass\">LoginButton.style</a> to specify\na wide login button reading \"Connect with Facebook\" or \"Login with Facebook\".</p>\n\n</div><div class='long'><p>Use with <a href=\"#!/api/Modules.Facebook.LoginButton-property-style\" rel=\"Modules.Facebook.LoginButton-property-style\" class=\"docClass\">LoginButton.style</a> to specify\na wide login button reading \"Connect with Facebook\" or \"Login with Facebook\".</p>\n\n        <div class='signature-box removed'>\n        <p>This property has been <strong>removed</strong> since 4.0.0</p>\n        \n\n        </div>\n</div></div></div><div id='property-FILTER_APP_NON_USERS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-FILTER_APP_NON_USERS' class='name not-expandable'>FILTER_APP_NON_USERS</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Friends not using the app can be displayed.</p>\n\n</div><div class='long'><p>Friends not using the app can be displayed.</p>\n\n<p><p>Use to set the filter with <a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a></p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.0.0</li><li class='platform-iphone'\n        title='iPhone'>5.0.0</li><li class='platform-ipad'\n        title='iPad'>5.0.0</li></ul></div></div></div><div id='property-FILTER_APP_USERS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-FILTER_APP_USERS' class='name not-expandable'>FILTER_APP_USERS</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Friends using the app can be displayed.</p>\n\n</div><div class='long'><p>Friends using the app can be displayed.</p>\n\n<p><p>Use to set the filter with <a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a></p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.0.0</li><li class='platform-iphone'\n        title='iPhone'>5.0.0</li><li class='platform-ipad'\n        title='iPad'>5.0.0</li></ul></div></div></div><div id='property-FILTER_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-FILTER_NONE' class='name not-expandable'>FILTER_NONE</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>No filter all friends can be displayed.</p>\n\n</div><div class='long'><p>No filter all friends can be displayed.</p>\n\n<p><p>Use to set the filter with <a href=\"#!/api/Modules.Facebook-method-presentSendRequestDialog\" rel=\"Modules.Facebook-method-presentSendRequestDialog\" class=\"docClass\">presentSendRequestDialog()</a></p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.0.0</li><li class='platform-iphone'\n        title='iPhone'>5.0.0</li><li class='platform-ipad'\n        title='iPad'>5.0.0</li></ul></div></div></div><div id='property-LOGIN_BEHAVIOR_BROWSER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-LOGIN_BEHAVIOR_BROWSER' class='name not-expandable'>LOGIN_BEHAVIOR_BROWSER</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Opens login window in the default Web Browser (Safari/Firefox etc...)</p>\n\n</div><div class='long'><p>Opens login window in the default Web Browser (Safari/Firefox etc...)</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-LOGIN_BEHAVIOR_DEVICE_AUTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-LOGIN_BEHAVIOR_DEVICE_AUTH' class='name not-expandable'>LOGIN_BEHAVIOR_DEVICE_AUTH</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Expose Facebook Login for devices such as Android TV and Fire TV.</p>\n\n</div><div class='long'><p>Expose Facebook Login for devices such as Android TV and Fire TV.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li></ul></div></div></div><div id='property-LOGIN_BEHAVIOR_NATIVE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-LOGIN_BEHAVIOR_NATIVE' class='name expandable'>LOGIN_BEHAVIOR_NATIVE</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>Opens login window with the native Facebook app. ...</div><div class='long'><p>Opens login window with the native Facebook app. On iOS it will attempt to\nfallback to <Titanium.Modules.Facebook.LOGIN_BEHAVIOR_BROWSER> if the Facebook app\nis not installed or Facebook chooses it internally. For Android use\n<Titanium.Modules.Facebook.LOGIN_BEHAVIOR_NATIVE_WITH_FALLBACK> to get this behavior.</Titanium></Titanium></p>\n\n\n\n\n<p>Note: As of today (Facebook SDK 4.11.0), Facebook seems to not allow logging in using \nthe Facebook app to login, so this constant won't work proper on iOS. This issue is \ndiscussed <a href=\"https://developers.facebook.com/bugs/786729821439894/?search_id\">here</a>.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-LOGIN_BEHAVIOR_NATIVE_WITH_FALLBACK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-LOGIN_BEHAVIOR_NATIVE_WITH_FALLBACK' class='name expandable'>LOGIN_BEHAVIOR_NATIVE_WITH_FALLBACK</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>Opens login window with the native Facebook app. ...</div><div class='long'><p>Opens login window with the native Facebook app. On Android it will attempt to\nfallback to <Titanium.Modules.Facebook.LOGIN_BEHAVIOR_BROWSER> if the Facebook app\nis not installed. For iOS use <Titanium.Modules.Facebook.NATIVE> to get this behavior.</Titanium></Titanium></p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li></ul></div></div></div><div id='property-LOGIN_BEHAVIOR_SYSTEM_ACCOUNT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-LOGIN_BEHAVIOR_SYSTEM_ACCOUNT' class='name not-expandable'>LOGIN_BEHAVIOR_SYSTEM_ACCOUNT</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Attempts to login with through the Facebook account currently signed in through\nSettings.</p>\n\n</div><div class='long'><p>Attempts to login with through the Facebook account currently signed in through\nSettings.</p>\n\n<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-LOGIN_BEHAVIOR_WEB' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-LOGIN_BEHAVIOR_WEB' class='name not-expandable'>LOGIN_BEHAVIOR_WEB</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Opens login window through a modal browser window.</p>\n\n</div><div class='long'><p>Opens login window through a modal browser window.</p>\n\n<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-MESSENGER_BUTTON_MODE_CIRCULAR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-MESSENGER_BUTTON_MODE_CIRCULAR' class='name not-expandable'>MESSENGER_BUTTON_MODE_CIRCULAR</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-mode\" rel=\"Modules.Facebook.MessengerButton-property-mode\" class=\"docClass\">MessengerButton.mode</a> to specify\nthe default send button reading \"Send\".</p>\n\n</div><div class='long'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-mode\" rel=\"Modules.Facebook.MessengerButton-property-mode\" class=\"docClass\">MessengerButton.mode</a> to specify\nthe default send button reading \"Send\".</p>\n\n<p><p>You can localize the button by localizing \"Send\" in your strings.xml. Learn more about\nthat topic <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Internationalization\">here</a>.</p>\n\n</p><ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-MESSENGER_BUTTON_MODE_RECTANGULAR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-MESSENGER_BUTTON_MODE_RECTANGULAR' class='name not-expandable'>MESSENGER_BUTTON_MODE_RECTANGULAR</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-mode\" rel=\"Modules.Facebook.MessengerButton-property-mode\" class=\"docClass\">MessengerButton.mode</a> to specify\nthe default send button reading \"Send\".</p>\n\n</div><div class='long'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-mode\" rel=\"Modules.Facebook.MessengerButton-property-mode\" class=\"docClass\">MessengerButton.mode</a> to specify\nthe default send button reading \"Send\".</p>\n\n<p><p>You can localize the button by localizing \"Send\" in your strings.xml. Learn more about\nthat topic <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Internationalization\">here</a>.</p>\n\n</p><ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-MESSENGER_BUTTON_STYLE_BLUE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-MESSENGER_BUTTON_STYLE_BLUE' class='name not-expandable'>MESSENGER_BUTTON_STYLE_BLUE</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-style\" rel=\"Modules.Facebook.MessengerButton-property-style\" class=\"docClass\">MessengerButton.style</a> to specify\nthe default send button style.</p>\n\n</div><div class='long'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-style\" rel=\"Modules.Facebook.MessengerButton-property-style\" class=\"docClass\">MessengerButton.style</a> to specify\nthe default send button style.</p>\n\n<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-MESSENGER_BUTTON_STYLE_WHITE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-MESSENGER_BUTTON_STYLE_WHITE' class='name not-expandable'>MESSENGER_BUTTON_STYLE_WHITE</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-style\" rel=\"Modules.Facebook.MessengerButton-property-style\" class=\"docClass\">MessengerButton.style</a> to specify\nthe default send button style.</p>\n\n</div><div class='long'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-style\" rel=\"Modules.Facebook.MessengerButton-property-style\" class=\"docClass\">MessengerButton.style</a> to specify\nthe default send button style.</p>\n\n<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-MESSENGER_BUTTON_STYLE_WHITE_BORDERED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-MESSENGER_BUTTON_STYLE_WHITE_BORDERED' class='name not-expandable'>MESSENGER_BUTTON_STYLE_WHITE_BORDERED</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-style\" rel=\"Modules.Facebook.MessengerButton-property-style\" class=\"docClass\">MessengerButton.style</a> to specify\nthe default send button style.</p>\n\n</div><div class='long'><p>Use with <a href=\"#!/api/Modules.Facebook.MessengerButton-property-style\" rel=\"Modules.Facebook.MessengerButton-property-style\" class=\"docClass\">MessengerButton.style</a> to specify\nthe default send button style.</p>\n\n<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-SHARE_DIALOG_MODE_AUTOMATIC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SHARE_DIALOG_MODE_AUTOMATIC' class='name not-expandable'>SHARE_DIALOG_MODE_AUTOMATIC</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Acts with the most appropriate mode that is available.</p>\n\n</div><div class='long'><p>Acts with the most appropriate mode that is available.</p>\n\n<p><p>Use with <a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>6.0.0</li><li class='platform-iphone'\n        title='iPhone'>6.0.0</li><li class='platform-ipad'\n        title='iPad'>6.0.0</li></ul></div></div></div><div id='property-SHARE_DIALOG_MODE_BROWSER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SHARE_DIALOG_MODE_BROWSER' class='name not-expandable'>SHARE_DIALOG_MODE_BROWSER</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Displays the dialog in Safari.</p>\n\n</div><div class='long'><p>Displays the dialog in Safari.</p>\n\n<p><p>Use with <a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a>.</p>\n\n</p><ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>6.0.0</li><li class='platform-ipad'\n        title='iPad'>6.0.0</li></ul></div></div></div><div id='property-SHARE_DIALOG_MODE_FEED_BROWSER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SHARE_DIALOG_MODE_FEED_BROWSER' class='name not-expandable'>SHARE_DIALOG_MODE_FEED_BROWSER</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Displays the feed dialog in Safari.</p>\n\n</div><div class='long'><p>Displays the feed dialog in Safari.</p>\n\n<p><p>Use with <a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a>.</p>\n\n</p><ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>6.0.0</li><li class='platform-ipad'\n        title='iPad'>6.0.0</li></ul></div></div></div><div id='property-SHARE_DIALOG_MODE_FEED_WEB' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SHARE_DIALOG_MODE_FEED_WEB' class='name not-expandable'>SHARE_DIALOG_MODE_FEED_WEB</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Displays the feed dialog in a webview within the app.</p>\n\n</div><div class='long'><p>Displays the feed dialog in a webview within the app.</p>\n\n<p><p>Use with <a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>6.0.0</li><li class='platform-iphone'\n        title='iPhone'>6.0.0</li><li class='platform-ipad'\n        title='iPad'>6.0.0</li></ul></div></div></div><div id='property-SHARE_DIALOG_MODE_NATIVE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SHARE_DIALOG_MODE_NATIVE' class='name not-expandable'>SHARE_DIALOG_MODE_NATIVE</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Displays the dialog in the main native Facebook app.</p>\n\n</div><div class='long'><p>Displays the dialog in the main native Facebook app.</p>\n\n<p><p>Use with <a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>6.0.0</li><li class='platform-iphone'\n        title='iPhone'>6.0.0</li><li class='platform-ipad'\n        title='iPad'>6.0.0</li></ul></div></div></div><div id='property-SHARE_DIALOG_MODE_SHARE_SHEET' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SHARE_DIALOG_MODE_SHARE_SHEET' class='name not-expandable'>SHARE_DIALOG_MODE_SHARE_SHEET</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Displays the dialog in the iOS integrated share sheet.</p>\n\n</div><div class='long'><p>Displays the dialog in the iOS integrated share sheet.</p>\n\n<p><p>Use with <a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a>.</p>\n\n</p><ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>6.0.0</li><li class='platform-ipad'\n        title='iPad'>6.0.0</li></ul></div></div></div><div id='property-SHARE_DIALOG_MODE_WEB' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SHARE_DIALOG_MODE_WEB' class='name not-expandable'>SHARE_DIALOG_MODE_WEB</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Displays the dialog in a web view within the app.</p>\n\n</div><div class='long'><p>Displays the dialog in a web view within the app.</p>\n\n<p><p>Use with <a href=\"#!/api/Modules.Facebook-method-presentShareDialog\" rel=\"Modules.Facebook-method-presentShareDialog\" class=\"docClass\">presentShareDialog()</a>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>6.0.0</li><li class='platform-iphone'\n        title='iPhone'>6.0.0</li><li class='platform-ipad'\n        title='iPad'>6.0.0</li></ul></div></div></div><div id='property-SSO_ONLY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SSO_ONLY' class='name not-expandable'>SSO_ONLY</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Only attempt single sign-on.</p>\n\n</div><div class='long'><p>Only attempt single sign-on.</p>\n\n<p><p>Use with the <a href=\"#!/api/Modules.Facebook.LoginButton-property-sessionLoginBehavior\" rel=\"Modules.Facebook.LoginButton-property-sessionLoginBehavior\" class=\"docClass\">LoginButton.sessionLoginBehavior</a> property.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li></ul></div></div></div><div id='property-SSO_WITH_FALLBACK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SSO_WITH_FALLBACK' class='name not-expandable'>SSO_WITH_FALLBACK</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Attempt single sign-on, then fallback to dialog authorization.</p>\n\n</div><div class='long'><p>Attempt single sign-on, then fallback to dialog authorization.</p>\n\n<p><p>Use with the <a href=\"#!/api/Modules.Facebook.LoginButton-property-sessionLoginBehavior\" rel=\"Modules.Facebook.LoginButton-property-sessionLoginBehavior\" class=\"docClass\">LoginButton.sessionLoginBehavior</a> property.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li></ul></div></div></div><div id='property-SUPPRESS_SSO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-SUPPRESS_SSO' class='name not-expandable'>SUPPRESS_SSO</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Do not attempt single sign-on and only use dialog authorization.</p>\n\n</div><div class='long'><p>Do not attempt single sign-on and only use dialog authorization.</p>\n\n<p><p>Use with the <a href=\"#!/api/Modules.Facebook.LoginButton-property-sessionLoginBehavior\" rel=\"Modules.Facebook.LoginButton-property-sessionLoginBehavior\" class=\"docClass\">LoginButton.sessionLoginBehavior</a> property.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li></ul></div></div></div><div id='property-accessToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-accessToken' class='name not-expandable'>accessToken</a><span> : String</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>OAuth token set after a successful <code>authorize</code>.</p>\n\n</div><div class='long'><p>OAuth token set after a successful <code>authorize</code>.</p>\n\n</div></div></div><div id='property-apiName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-apiName' class='name not-expandable'>apiName</a><span> : String</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>The name of the API that this proxy corresponds to.</p>\n\n</div><div class='long'><p>The name of the API that this proxy corresponds to.</p>\n\n<p><p>The value of this property is the fully qualified name of the API. For example, <a href=\"#!/api/Titanium.UI.Button\" rel=\"Titanium.UI.Button\" class=\"docClass\">Button</a>\nreturns <code>Ti.UI.Button</code>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.2.0</li><li class='platform-iphone'\n        title='iPhone'>3.2.0</li><li class='platform-ipad'\n        title='iPad'>3.2.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.2.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-appid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-appid' class='name expandable'>appid</a><span> : String</span><strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Your Facebook application id. ...</div><div class='long'><p>Your Facebook application id. You need to set this for anything to work.</p>\n\n        <div class='signature-box removed'>\n        <p>This property has been <strong>removed</strong> since 4.0.0</p>\n        <p>Set the Facebook App ID in the <code>tiapp.xml</code> file.  See \"Getting Started\" above for details.</p>\n\n        </div>\n</div></div></div><div id='property-bubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-bubbleParent' class='name expandable'>bubbleParent</a><span> : Boolean</span></div><div class='description'><div class='short'>Indicates if the proxy will bubble an event to its parent. ...</div><div class='long'><p>Indicates if the proxy will bubble an event to its parent.</p>\n\n<p><p>Some proxies (most commonly views) have a relationship to other proxies, often\nestablished by the add() method. For example, for a button added to a window, a\nclick event on the button would bubble up to the window. Other common parents are\ntable sections to their rows, table views to their sections, and scrollable views\nto their views. Set this property to false to disable the bubbling to the proxy's parent.</p>\n\n</p><p>Default: true</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-canPresentOpenGraphActionDialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-canPresentOpenGraphActionDialog' class='name not-expandable'>canPresentOpenGraphActionDialog</a><span> : Boolean</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Checks if the device can support the use of the Facebook Open Graph action dialog from the Facebook App.</p>\n\n</div><div class='long'><p>Checks if the device can support the use of the Facebook Open Graph action dialog from the Facebook App.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li></ul></div></div></div><div id='property-canPresentShareDialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-canPresentShareDialog' class='name not-expandable'>canPresentShareDialog</a><span> : Boolean</span><strong class='readonly signature' >readonly</strong><strong class='removed signature' >removed</strong></div><div class='description'><div class='short'><p>Checks if the device can support the use of the Facebook Share dialog from the Facebook App.</p>\n\n</div><div class='long'><p>Checks if the device can support the use of the Facebook Share dialog from the Facebook App.</p>\n\n        <div class='signature-box removed'>\n        <p>This property has been <strong>removed</strong> since 5.0.0</p>\n        \n\n        </div>\n<ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul></div></div></div><div id='property-expirationDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-expirationDate' class='name not-expandable'>expirationDate</a><span> : Date</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Time at which the <code>accessToken</code> expires.</p>\n\n</div><div class='long'><p>Time at which the <code>accessToken</code> expires.</p>\n\n</div></div></div><div id='property-forceDialogAuth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-forceDialogAuth' class='name expandable'>forceDialogAuth</a><span> : Boolean</span><strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Indicates whether the login should use the traditional dialog-based\nauthentication. ...</div><div class='long'><p>Indicates whether the login should use the traditional dialog-based\nauthentication.</p>\n\n        <div class='signature-box removed'>\n        <p>This property has been <strong>removed</strong> since 4.0.0</p>\n        \n\n        </div>\n<p><p>Set to <code>false</code> to enable Single-Sign-On (SSO) in cases where the official Facebook app is on the\ndevice.  Default is <code>true</code>, meaning the traditional, dialog-based\nauthentication is used rather than SSO. See  the\n<a href=\"http://developers.facebook.com/docs/guides/mobile\">Facebook Mobile Guide</a> for\ndetails of their Single-Sign-On scheme.</p>\n\n\n\n\n<p>To use the built-in iOS 6 login, set this property to <code>false</code>.\nThis property is read-only on Mobile Web.</p>\n\n</p><p>Default: true</p></div></div></div><div id='property-lifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-lifecycleContainer' class='name not-expandable'>lifecycleContainer</a><span> : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></span></div><div class='description'><div class='short'><p>The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.</p>\n\n</div><div class='long'><p>The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.</p>\n\n<p><p>If this property is set to a Window or TabGroup, then the corresponding Activity lifecycle event callbacks\nwill also be called on the proxy. Proxies that require the activity lifecycle will need this property set\nto the appropriate containing Window or TabGroup.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-loggedIn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-loggedIn' class='name not-expandable'>loggedIn</a><span> : Boolean</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Indicates if the user is logged in.</p>\n\n</div><div class='long'><p>Indicates if the user is logged in.</p>\n\n</div></div></div><div id='property-loginBehavior' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-loginBehavior' class='name expandable'>loginBehavior</a><span> : Number</span><strong class='creationOnly signature' >Creation-Only</strong></div><div class='description'><div class='short'>Defines the behavior that the module will attempt to use for authorize(). ...</div><div class='long'><p>Defines the behavior that the module will attempt to use for authorize().</p>\n\n<p><p>Be sure to set this before calling authorize if this is needed. It is\nrecommended to follow Facebook's <a href=\"https://developers.facebook.com/blog/post/2015/10/29/Facebook-Login-iOS9\">guidelines</a>\nfor ideal login behavior</p>\n\n</p><p>Default: Defaults to <Titanium.Modules.Facebook.LOGIN_BEHAVIOR_NATIVE_WITH_FALLBACK> on Android and <Titanium.Modules.Facebook.LOGIN_BEHAVIOR_BROWSER> on iOS (which uses the native Safari Dialog internally).</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul></div></div></div><div id='property-permissions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-permissions' class='name not-expandable'>permissions</a><span> : String[]</span></div><div class='description'><div class='short'><p>Array of permissions to request for your app.</p>\n\n</div><div class='long'><p>Array of permissions to request for your app.</p>\n\n<p><p>Be sure the permissions you want are set before calling\n<a href=\"#!/api/Modules.Facebook-method-authorize\" rel=\"Modules.Facebook-method-authorize\" class=\"docClass\">authorize</a>.</p>\n\n\n\n\n<p>For a complete list of permissions, see the\n<a href=\"https://developers.facebook.com/docs/facebook-login/permissions/v2.2\">official Facebook Permissions Reference</a></p>\n\n\n\n\n<h4>iOS Platform Notes</h4>\n\n\n\n\n<p>On iOS, do not request any write permissions before calling the <code>authorize()</code> method.  Use the\n<a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions()</a>\nto request write permissions once the user authorizes the application.</p>\n\n\n\n\n<p><strong>Prior to Release 4.0.0</strong></p>\n\n\n\n\n<p>To use the build-in iOS 6 login, this property cannot contain any of the following:\noffline_access, publish_actions, publish_stream, publish_checkins,\nads_management, create_event, rsvp_event, manage_friendlists, manage_notifications,\nor manage_pages.</p>\n\n</p></div></div></div><div id='property-uid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-property-uid' class='name not-expandable'>uid</a><span> : String</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>Unique user ID returned from Facebook.</p>\n\n</div><div class='long'><p>Unique user ID returned from Facebook.</p>\n\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addEventListener' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-addEventListener' class='name expandable'>addEventListener</a>( <span class='pre'>name, callback</span> )</div><div class='description'><div class='short'>Adds the specified callback as an event listener for the named event. ...</div><div class='long'><p>Adds the specified callback as an event listener for the named event.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;Object&gt;<div class='sub-desc'><p>Callback function to invoke when the event is fired.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-applyProperties' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-applyProperties' class='name expandable'>applyProperties</a>( <span class='pre'>props</span> )</div><div class='description'><div class='short'>Applies the properties to the proxy. ...</div><div class='long'><p>Applies the properties to the proxy.</p>\n\n<p><p>Properties are supplied as a dictionary. Each key-value pair in the object is applied to the proxy such that\nmyproxy[key] = value.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>props</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a><div class='sub-desc'><p>A dictionary of properties to apply.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-authorize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-authorize' class='name expandable'>authorize</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Prompts the user to log in (if not already logged in) and authorize your application. ...</div><div class='long'><p>Prompts the user to log in (if not already logged in) and authorize your application.\nYou can also use <a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">LoginButton</a> to log in.</p>\n\n<p><p>Be sure to set your required <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> before\ncalling <code>authorize</code>.</p>\n\n\n\n\n<p>A <a href=\"#!/api/Modules.Facebook-event-login\" rel=\"Modules.Facebook-event-login\" class=\"docClass\">login</a> event is generated to indicate a successful or\nunsuccessful login attempt.</p>\n\n\n\n\n<h4>iOS Platform Notes</h4>\n\n\n\n\n<p>On iOS, do not request any write permissions before calling this method.  Use the\n<a href=\"#!/api/Modules.Facebook-method-requestNewPublishPermissions\" rel=\"Modules.Facebook-method-requestNewPublishPermissions\" class=\"docClass\">requestNewPublishPermissions()</a>\nto request write permissions once the user authorizes the application.</p>\n\n\n\n\n<h4>Prior to Release 4.0.0</h4>\n\n\n\n\n<p>Set the <a href=\"#!/api/Modules.Facebook-property-appid\" rel=\"Modules.Facebook-property-appid\" class=\"docClass\">appid</a> property as well as the <code>permissions</code> property\nbefore calling <code>authorize()</code>.</p>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-createActivityWorker' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-createActivityWorker' class='name expandable'>createActivityWorker</a>( <span class='pre'>parameters</span> ) : <a href=\"#!/api/Titanium.Proxy\" rel=\"Titanium.Proxy\" class=\"docClass\">Titanium.Proxy</a></div><div class='description'><div class='short'>Creates a Facebook proxy to hook into the activity of either a standalone Titanium.UI.Window\n(not inside a TabGroup) ...</div><div class='long'><p>Creates a Facebook proxy to hook into the activity of either a standalone <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>\n(not inside a TabGroup) or <a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a>.</p>\n\n<p><p>Set the <code>lifecycleContainer</code> property in the dictionary passed to the method to either\nthe current active  instance of a <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a> or <a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a> in order to monitor the activity's\nlifecycle events, required by Facebook to synchronize its state between various\nactivities in the application.</p>\n\n\n\n\n<p>The proxy object must be created before calling the <code>open()</code> method on the associated Window\nor TabGroup.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameters</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a>&lt;<a href=\"#!/api/Titanium.Proxy\" rel=\"Titanium.Proxy\" class=\"docClass\">Titanium.Proxy</a>&gt;<div class='sub-desc'><p>Properties to set on a new object, including any defined by <a href=\"#!/api/Titanium.Proxy\" rel=\"Titanium.Proxy\" class=\"docClass\">Titanium.Proxy</a> except\nthose marked not-creation or read-only.</p>\n\n\n\n\n<p><strong>Note:</strong> You must set the <code>lifecycleContainer</code> property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Titanium.Proxy\" rel=\"Titanium.Proxy\" class=\"docClass\">Titanium.Proxy</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createLikeButton' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-createLikeButton' class='name expandable'>createLikeButton</a>( <span class='pre'>[parameters]</span> ) : <a href=\"#!/api/Modules.Facebook.LikeButton\" rel=\"Modules.Facebook.LikeButton\" class=\"docClass\">Modules.Facebook.LikeButton</a></div><div class='description'><div class='short'>Creates and returns an instance of Modules.Facebook.LikeButton. ...</div><div class='long'><p>Creates and returns an instance of <a href=\"#!/api/Modules.Facebook.LikeButton\" rel=\"Modules.Facebook.LikeButton\" class=\"docClass\">Modules.Facebook.LikeButton</a>.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameters</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a>&lt;<a href=\"#!/api/Modules.Facebook.LikeButton\" rel=\"Modules.Facebook.LikeButton\" class=\"docClass\">Modules.Facebook.LikeButton</a>&gt; (optional)<div class='sub-desc'><p>Properties to set on a new object, including any defined by <a href=\"#!/api/Modules.Facebook.LikeButton\" rel=\"Modules.Facebook.LikeButton\" class=\"docClass\">Modules.Facebook.LikeButton</a> except those marked not-creation or read-only.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Modules.Facebook.LikeButton\" rel=\"Modules.Facebook.LikeButton\" class=\"docClass\">Modules.Facebook.LikeButton</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createLoginButton' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-createLoginButton' class='name expandable'>createLoginButton</a>( <span class='pre'>[parameters]</span> ) : <a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">Modules.Facebook.LoginButton</a></div><div class='description'><div class='short'>Creates and returns an instance of Modules.Facebook.LoginButton. ...</div><div class='long'><p>Creates and returns an instance of <a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">Modules.Facebook.LoginButton</a>.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameters</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a>&lt;<a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">Modules.Facebook.LoginButton</a>&gt; (optional)<div class='sub-desc'><p>Properties to set on a new object, including any defined by <a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">Modules.Facebook.LoginButton</a> except those marked not-creation or read-only.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Modules.Facebook.LoginButton\" rel=\"Modules.Facebook.LoginButton\" class=\"docClass\">Modules.Facebook.LoginButton</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createMessengerButton' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-createMessengerButton' class='name expandable'>createMessengerButton</a>( <span class='pre'>[parameters]</span> ) : <a href=\"#!/api/Modules.Facebook.MessengerButton\" rel=\"Modules.Facebook.MessengerButton\" class=\"docClass\">Modules.Facebook.MessengerButton</a></div><div class='description'><div class='short'>Creates and returns an instance of Modules.Facebook.MessengerButton. ...</div><div class='long'><p>Creates and returns an instance of <a href=\"#!/api/Modules.Facebook.MessengerButton\" rel=\"Modules.Facebook.MessengerButton\" class=\"docClass\">Modules.Facebook.MessengerButton</a>.</p>\n\n<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameters</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a>&lt;<a href=\"#!/api/Modules.Facebook.MessengerButton\" rel=\"Modules.Facebook.MessengerButton\" class=\"docClass\">Modules.Facebook.MessengerButton</a>&gt; (optional)<div class='sub-desc'><p>Properties to set on a new object, including any defined by <a href=\"#!/api/Modules.Facebook.MessengerButton\" rel=\"Modules.Facebook.MessengerButton\" class=\"docClass\">Modules.Facebook.MessengerButton</a> except those marked not-creation or read-only.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Modules.Facebook.MessengerButton\" rel=\"Modules.Facebook.MessengerButton\" class=\"docClass\">Modules.Facebook.MessengerButton</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-dialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-dialog' class='name expandable'>dialog</a>( <span class='pre'>action, params, callback</span> )<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Opens a supported Facebook dialog. ...</div><div class='long'><p>Opens a supported Facebook dialog.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> since 4.0.0</p>\n        \n\n        </div>\n<p><p>For a list of dialogs, parameters, and response formats, see the\n<a href=\"https://developers.facebook.com/docs/javascript/reference/FB.ui\">official documentation for Facebook Dialogs</a>.</p>\n\n\n\n\n<p>The callback is invoked when the dialog is closed, either because the user\napproved the action, or canceled the dialog.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : String<div class='sub-desc'><p>Specifies which dialog to show, such as \"feed\".</p>\n\n</div></li><li><span class='pre'>params</span> : Object<div class='sub-desc'><p>A dictionary object for pre-filling some of the dialog's fields.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;<a href=\"#!/api/FacebookDialogResponse\" rel=\"FacebookDialogResponse\" class=\"docClass\">FacebookDialogResponse</a>&gt;<div class='sub-desc'><p>Callback to invoke  when the user completes or cancels the dialog.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-fetchDeferredAppLink' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-fetchDeferredAppLink' class='name expandable'>fetchDeferredAppLink</a>( <span class='pre'>callback</span> )</div><div class='description'><div class='short'>Fetch the deferred app link ...</div><div class='long'><p>Fetch the deferred app link</p>\n\n<p><p>Deferred deep linking allows you to send people to a custom view after they installed your app via the app store.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Callback&lt;<a href=\"#!/api/FacebookDeferredAppLinkResponse\" rel=\"FacebookDeferredAppLinkResponse\" class=\"docClass\">FacebookDeferredAppLinkResponse</a>&gt;<div class='sub-desc'><p>Callback to invoke when the request completes.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-fireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'>name, event</span> )</div><div class='description'><div class='short'>Fires a synthesized event to any registered listeners. ...</div><div class='long'><p>Fires a synthesized event to any registered listeners.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>event</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a><div class='sub-desc'><p>A dictionary of keys and values to add to the <a href=\"#!/api/Titanium.Event\" rel=\"Titanium.Event\" class=\"docClass\">Titanium.Event</a> object sent to the listeners.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-getAccessToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getAccessToken' class='name expandable'>getAccessToken</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Gets the value of the accessToken property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-accessToken\" rel=\"Modules.Facebook-property-accessToken\" class=\"docClass\">accessToken</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getApiName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getApiName' class='name expandable'>getApiName</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Gets the value of the apiName property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-apiName\" rel=\"Titanium.Proxy-property-apiName\" class=\"docClass\">apiName</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.2.0</li><li class='platform-iphone'\n        title='iPhone'>3.2.0</li><li class='platform-ipad'\n        title='iPad'>3.2.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.2.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getAppid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getAppid' class='name expandable'>getAppid</a>( <span class='pre'></span> ) : String<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Gets the value of the appid property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-appid\" rel=\"Modules.Facebook-property-appid\" class=\"docClass\">appid</a> property.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> since 4.0.0</p>\n        <p>Set the Facebook App ID in the <code>tiapp.xml</code> file.  See \"Getting Started\" above for details.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getBubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getBubbleParent' class='name expandable'>getBubbleParent</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the bubbleParent property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-bubbleParent\" rel=\"Titanium.Proxy-property-bubbleParent\" class=\"docClass\">bubbleParent</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getCanPresentOpenGraphActionDialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getCanPresentOpenGraphActionDialog' class='name expandable'>getCanPresentOpenGraphActionDialog</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the canPresentOpenGraphActionDialog property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-canPresentOpenGraphActionDialog\" rel=\"Modules.Facebook-property-canPresentOpenGraphActionDialog\" class=\"docClass\">canPresentOpenGraphActionDialog</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getCanPresentShareDialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getCanPresentShareDialog' class='name expandable'>getCanPresentShareDialog</a>( <span class='pre'></span> ) : Boolean<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Gets the value of the canPresentShareDialog property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-canPresentShareDialog\" rel=\"Modules.Facebook-property-canPresentShareDialog\" class=\"docClass\">canPresentShareDialog</a> property.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> since 5.0.0</p>\n        \n\n        </div>\n<ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getExpirationDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getExpirationDate' class='name expandable'>getExpirationDate</a>( <span class='pre'></span> ) : Date</div><div class='description'><div class='short'>Gets the value of the expirationDate property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-expirationDate\" rel=\"Modules.Facebook-property-expirationDate\" class=\"docClass\">expirationDate</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Date</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getForceDialogAuth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getForceDialogAuth' class='name expandable'>getForceDialogAuth</a>( <span class='pre'></span> ) : Boolean<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Gets the value of the forceDialogAuth property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-forceDialogAuth\" rel=\"Modules.Facebook-property-forceDialogAuth\" class=\"docClass\">forceDialogAuth</a> property.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> since 4.0.0</p>\n        \n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getLifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getLifecycleContainer' class='name expandable'>getLifecycleContainer</a>( <span class='pre'></span> ) : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></div><div class='description'><div class='short'>Gets the value of the lifecycleContainer property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getLoggedIn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getLoggedIn' class='name expandable'>getLoggedIn</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the loggedIn property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-loggedIn\" rel=\"Modules.Facebook-property-loggedIn\" class=\"docClass\">loggedIn</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getLoginBehavior' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getLoginBehavior' class='name expandable'>getLoginBehavior</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Gets the value of the loginBehavior property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-loginBehavior\" rel=\"Modules.Facebook-property-loginBehavior\" class=\"docClass\">loginBehavior</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getPermissions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getPermissions' class='name expandable'>getPermissions</a>( <span class='pre'></span> ) : String[]</div><div class='description'><div class='short'>Gets the value of the permissions property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String[]</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-getUid' class='name expandable'>getUid</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Gets the value of the uid property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.Facebook-property-uid\" rel=\"Modules.Facebook-property-uid\" class=\"docClass\">uid</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initialize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-initialize' class='name expandable'>initialize</a>( <span class='pre'>timeout</span> )<strong class='deprecated signature' >deprecated</strong></div><div class='description'><div class='short'>Loads a cached Facebook session if available, then fires the login event. ...</div><div class='long'><p>Loads a cached Facebook session if available, then fires the <code>login</code> event.</p>\n\n        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> since 5.0.0 \n</p>\n        </div>\n<p><p>Be sure to set your <a href=\"#!/api/Modules.Facebook-event-login\" rel=\"Modules.Facebook-event-login\" class=\"docClass\">login</a> and <a href=\"#!/api/Modules.Facebook-method-logout\" rel=\"Modules.Facebook-method-logout\" class=\"docClass\">logout</a>\nevent listeners before calling <code>initialize</code>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>Sets initialize timeout in milliseconds.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-logCustomEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-logCustomEvent' class='name expandable'>logCustomEvent</a>( <span class='pre'>event, [valueToSum], [params]</span> )</div><div class='description'><div class='short'>Logs a custom event to Facebook. ...</div><div class='long'><p>Logs a custom event to Facebook.</p>\n\n<p><p><strong>From the Facebook API Reference:</strong></p>\n\n\n\n\n<p>Events are not sent immediately when logged. They're cached and flushed out to the Facebook servers\nin a number of situations:</p>\n\n\n\n\n<ul>\n<li>when an event count threshold is passed (currently 100 logged events).</li>\n<li>when a time threshold is passed (currently 15 seconds).</li>\n<li>when an app has gone to background and is then brought back to the foreground.</li>\n</ul>\n\n\n\n\n<p>Some things to note when logging events:</p>\n\n\n\n\n<ul>\n<li>There is a limit on the number of unique event names an app can use, on the order of 300.</li>\n<li>Event names must be between 2 and 40 characters and must consist of alphanumeric\ncharacters, <code>_</code>, <code>-</code> or spaces.</li>\n</ul>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : String<div class='sub-desc'><p>Arbitrary string to log as an event.</p>\n\n</div></li><li><span class='pre'>valueToSum</span> : Number (optional)<div class='sub-desc'><p>An arbitrary number that can represent any value (e.g., a price or a quantity). \nWhen reported, all of the valueToSum properties will be summed together in Facebook Analytics for Apps.</p>\n\n</div></li><li><span class='pre'>params</span> : Object (optional)<div class='sub-desc'><p>A dictionary object containing optional parameters.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-logPurchase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-logPurchase' class='name expandable'>logPurchase</a>( <span class='pre'>amount, currency</span> )</div><div class='description'><div class='short'>Log a purchase of the specified amount, in the specified currency. ...</div><div class='long'><p>Log a purchase of the specified amount, in the specified currency.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>5.2.0</li><li class='platform-iphone'\n        title='iPhone'>5.2.0</li><li class='platform-ipad'\n        title='iPad'>5.2.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amount</span> : Number<div class='sub-desc'><p>Purchase amount to be logged, as expressed in the specified currency.\nThis value will be rounded to the thousandths place (e.g., 12.34567 becomes 12.346).</p>\n\n</div></li><li><span class='pre'>currency</span> : String<div class='sub-desc'><p>Currency, is denoted as, e.g. \"USD\", \"EUR\", \"GBP\".  See ISO-4217 for specific values.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-logout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-logout' class='name expandable'>logout</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Clears the OAuth accessToken and logs out the user. ...</div><div class='long'><p>Clears the OAuth <code>accessToken</code> and logs out the user.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-presentInviteDialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-presentInviteDialog' class='name expandable'>presentInviteDialog</a>( <span class='pre'>params</span> )</div><div class='description'><div class='short'>Opens a supported Facebook Invite dialog from the Facebook App. ...</div><div class='long'><p>Opens a supported Facebook Invite dialog from the Facebook App.</p>\n\n<p><p>To monitor if the share request succeeded or not, listen to the\n<a href=\"#!/api/Modules.Facebook-event-shareCompleted\" rel=\"Modules.Facebook-event-shareCompleted\" class=\"docClass\">shareCompleted</a> event.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : <a href=\"#!/api/InviteDialogParams\" rel=\"InviteDialogParams\" class=\"docClass\">InviteDialogParams</a><div class='sub-desc'><p>A dictionary object containing required and optional parameters.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-presentMessengerDialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-presentMessengerDialog' class='name expandable'>presentMessengerDialog</a>( <span class='pre'>params</span> )</div><div class='description'><div class='short'>Opens a supported Messenger dialog from the Facebook Messenger App. ...</div><div class='long'><p>Opens a supported Messenger dialog from the Facebook Messenger App.</p>\n\n<p><p>Be sure to check if the device can support this method by calling <a href=\"#!/api/Titanium.Platform-method-canOpenURL\" rel=\"Titanium.Platform-method-canOpenURL\" class=\"docClass\">canOpenURL</a> with \"fb-messenger-api://\"\nbefore using this method. If true, you can use this method. If false, the Facebook Messenger application\nis probably not installed in the device.</p>\n\n\n\n\n<p>Listen for the <a href=\"#!/api/Modules.Facebook-event-shareCompleted\" rel=\"Modules.Facebook-event-shareCompleted\" class=\"docClass\">shareCompleted</a> to be notified if the attempt was\nsuccessful or not.</p>\n\n</p><ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : <a href=\"#!/api/MessengerDialogParams\" rel=\"MessengerDialogParams\" class=\"docClass\">MessengerDialogParams</a><div class='sub-desc'><p>A dictionary object containing optional parameters.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-presentSendRequestDialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-presentSendRequestDialog' class='name expandable'>presentSendRequestDialog</a>( <span class='pre'>params</span> )</div><div class='description'><div class='short'>Opens an App Request dialog. ...</div><div class='long'><p>Opens an App Request dialog.</p>\n\n<p><p>A <code>requestDialogCompleted</code> event is generated to indicate if the request attempt was successful or unsuccessful,\nand the resultURL.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : <a href=\"#!/api/RequestDialogParams\" rel=\"RequestDialogParams\" class=\"docClass\">RequestDialogParams</a><div class='sub-desc'><p>A dictionary object containing parameters.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-presentShareDialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-presentShareDialog' class='name expandable'>presentShareDialog</a>( <span class='pre'>params</span> )</div><div class='description'><div class='short'>Opens a supported Facebook Share dialog from the Facebook App. ...</div><div class='long'><p>Opens a supported Facebook Share dialog from the Facebook App.</p>\n\n<p><p>Be sure to check if the device can support this method by calling <a href=\"#!/api/Modules.Facebook-method-getCanPresentShareDialog\" rel=\"Modules.Facebook-method-getCanPresentShareDialog\" class=\"docClass\">getCanPresentShareDialog</a>\nbefore using this method. If true, you can use this method. If false, the Facebook application\nis probably not installed in the device. In this case, use <a href=\"#!/api/Modules.Facebook-method-presentWebShareDialog\" rel=\"Modules.Facebook-method-presentWebShareDialog\" class=\"docClass\">presentWebShareDialog</a>\ninstead.</p>\n\n\n\n\n<p>Listen for the <a href=\"#!/api/Modules.Facebook-event-shareCompleted\" rel=\"Modules.Facebook-event-shareCompleted\" class=\"docClass\">shareCompleted</a> to be notified if the attempt was\nsuccessful or not.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : <a href=\"#!/api/ShareDialogParams\" rel=\"ShareDialogParams\" class=\"docClass\">ShareDialogParams</a><div class='sub-desc'><p>A dictionary object containing optional parameters.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-presentWebShareDialog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-presentWebShareDialog' class='name expandable'>presentWebShareDialog</a>( <span class='pre'>params</span> )<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Opens a web version of the Share dialog (Feed dialog). ...</div><div class='long'><p>Opens a web version of the Share dialog (Feed dialog). Does not depend on the Facebook app.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> since 5.0.0</p>\n        \n\n        </div>\n<p><p>This is a fallback for when Share dialog is not available.</p>\n\n\n\n\n<p>Listen for the <a href=\"#!/api/Modules.Facebook-event-shareCompleted\" rel=\"Modules.Facebook-event-shareCompleted\" class=\"docClass\">shareCompleted</a> to be notified if the attempt was\nsuccessful or not.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : <a href=\"#!/api/ShareDialogParams\" rel=\"ShareDialogParams\" class=\"docClass\">ShareDialogParams</a><div class='sub-desc'><p>A dictionary object containing optional parameters.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-publishInstall' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-publishInstall' class='name expandable'>publishInstall</a>( <span class='pre'></span> )<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Manually publish an attributed install to the facebook graph. ...</div><div class='long'><p>Manually publish an attributed install to the facebook graph.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> since 4.0.0</p>\n        \n\n        </div>\n<p><p>Be sure to set your <a href=\"#!/api/Modules.Facebook-property-appid\" rel=\"Modules.Facebook-property-appid\" class=\"docClass\">appid</a> before calling <code>publishInstall</code>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.4.1</li><li class='platform-iphone'\n        title='iPhone'>3.4.1</li><li class='platform-ipad'\n        title='iPad'>3.4.1</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-reauthorize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-reauthorize' class='name expandable'>reauthorize</a>( <span class='pre'>permissions, audience, callback</span> )<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Makes a request to Facebook for additional permissions. ...</div><div class='long'><p>Makes a request to Facebook for additional permissions.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> since 4.0.0</p>\n        \n\n        </div>\n<p><p>iOS 6's facebook login forbids minimum authorization to include write permissions.\nIn order to make any write actions, the app must reauthorize asking for the additional\npermissions. If the application already has these permissions, there will be no user\ninteraction.</p>\n\n</p><ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>3.1.0</li><li class='platform-ipad'\n        title='iPad'>3.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permissions</span> : Array&lt;String&gt;<div class='sub-desc'><p>Array of additional permissions to request. For a complete list of permissions, see the\n<a href=\"http://developers.facebook.com/docs/reference/api/permissions/\">official Facebook Permissions Reference</a></p>\n\n</div></li><li><span class='pre'>audience</span> : String<div class='sub-desc'><p>The extent of the visibility write permissions will have. \nThe value of audience should be one of \"me\", \"friends\", or \"everyone\"</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;<a href=\"#!/api/FacebookReauthResponse\" rel=\"FacebookReauthResponse\" class=\"docClass\">FacebookReauthResponse</a>&gt;<div class='sub-desc'><p>Callback to invoke when the request completes.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-refreshPermissionsFromServer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-refreshPermissionsFromServer' class='name expandable'>refreshPermissionsFromServer</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Makes a request to Facebook to get the latest permissions granted. ...</div><div class='long'><p>Makes a request to Facebook to get the latest permissions granted.</p>\n\n<p><p>Facebook now grants total control over granted permissions, and if the user modified the permissions\noutside of your app your cached token may not be updated.</p>\n\n\n\n\n<p>Listen for the <a href=\"#!/api/Modules.Facebook-event-tokenUpdated\" rel=\"Modules.Facebook-event-tokenUpdated\" class=\"docClass\">tokenUpdated</a> event to be notified if the attempt was\nsuccessful.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-removeEventListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-removeEventListener' class='name expandable'>removeEventListener</a>( <span class='pre'>name, callback</span> )</div><div class='description'><div class='short'>Removes the specified callback as an event listener for the named event. ...</div><div class='long'><p>Removes the specified callback as an event listener for the named event.</p>\n\n<p><p>Multiple listeners can be registered for the same event, so the \n<code>callback</code> parameter is used to determine which listener to remove. </p>\n\n\n\n\n<p>When adding a listener, you must save a reference to the callback function\nin order to remove the listener later:</p>\n\n\n\n\n<pre><code>var listener = function() { Ti.API.info(\"Event listener called.\"); }\nwindow.addEventListener('click', listener);\n</code></pre>\n\n\n\n\n<p>To remove the listener, pass in a reference to the callback function:</p>\n\n\n\n\n<pre><code>window.removeEventListener('click', listener);\n</code></pre>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;Object&gt;<div class='sub-desc'><p>Callback function to remove. Must be the same function passed to <code>addEventListener</code>.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-request' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-request' class='name expandable'>request</a>( <span class='pre'>method, params, callback</span> )<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Makes a request to the legacy Facebook REST API. ...</div><div class='long'><p>Makes a request to the legacy Facebook REST API.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> </p>\n        <p>4.0.0 As of April 30, 2014, Facebook no longer supports its version 1.0 REST API. Use the\n&lt;<a href=\"#!/api/Modules.Facebook-method-requestWithGraphPath\" rel=\"Modules.Facebook-method-requestWithGraphPath\" class=\"docClass\">Modules.Facebook.requestWithGraphPath</a>> method to make Facebook Graph API requests.</p>\n\n        </div>\n<p><p>For details on API calls and responses, see the\n<a href=\"http://developers.facebook.com/docs/reference/rest/\">offical Facebook REST API documentation</a>.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>method</span> : String<div class='sub-desc'><p>The REST API method to call.</p>\n\n</div></li><li><span class='pre'>params</span> : Object<div class='sub-desc'><p>A dictionary object for setting parameters required by the call, if any.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;<a href=\"#!/api/FacebookRESTResponse\" rel=\"FacebookRESTResponse\" class=\"docClass\">FacebookRESTResponse</a>&gt;<div class='sub-desc'><p>Callback to invoke  when the request completes.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-requestNewPublishPermissions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-requestNewPublishPermissions' class='name expandable'>requestNewPublishPermissions</a>( <span class='pre'>permissions, audience, callback</span> )</div><div class='description'><div class='short'>Makes a request to Facebook for additional write permissions. ...</div><div class='long'><p>Makes a request to Facebook for additional write permissions.</p>\n\n<p><p>Note that it is not an error for the user to 'Skip' your requested permissions,\nso you should check the module's <code>permissions</code> property following the call.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permissions</span> : Array&lt;String&gt;<div class='sub-desc'><p>Array of additional permissions to request. For a complete list of permissions, see the\n<a href=\"https://developers.facebook.com/docs/facebook-login/permissions/v2.2\">official Facebook Permissions Reference</a></p>\n\n</div></li><li><span class='pre'>audience</span> : Number<div class='sub-desc'><p>The extent of the visibility write permissions will have.</p>\n\n\n<p>This API can be assigned the following constants:<ul>\n <li> <a href=\"#!/api/Modules.Facebook-property-AUDIENCE_NONE\" rel=\"Modules.Facebook-property-AUDIENCE_NONE\" class=\"docClass\">AUDIENCE_NONE</a>\n <li> <a href=\"#!/api/Modules.Facebook-property-AUDIENCE_ONLY_ME\" rel=\"Modules.Facebook-property-AUDIENCE_ONLY_ME\" class=\"docClass\">AUDIENCE_ONLY_ME</a>\n <li> <a href=\"#!/api/Modules.Facebook-property-AUDIENCE_FRIENDS\" rel=\"Modules.Facebook-property-AUDIENCE_FRIENDS\" class=\"docClass\">AUDIENCE_FRIENDS</a>\n <li> <a href=\"#!/api/Modules.Facebook-property-AUDIENCE_EVERYONE\" rel=\"Modules.Facebook-property-AUDIENCE_EVERYONE\" class=\"docClass\">AUDIENCE_EVERYONE</a>\n</li></li></li></li></ul></p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;<a href=\"#!/api/FacebookPermissionResponse\" rel=\"FacebookPermissionResponse\" class=\"docClass\">FacebookPermissionResponse</a>&gt;<div class='sub-desc'><p>Callback to invoke when the request completes.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-requestNewReadPermissions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-requestNewReadPermissions' class='name expandable'>requestNewReadPermissions</a>( <span class='pre'>permissions, callback</span> )</div><div class='description'><div class='short'>Makes a request to Facebook for additional read permissions. ...</div><div class='long'><p>Makes a request to Facebook for additional read permissions.</p>\n\n<p><p>Note that it is not an error for the user to 'Skip' your requested permissions,\nso you should check the module's <code>permissions</code> property following the call.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permissions</span> : Array&lt;String&gt;<div class='sub-desc'><p>Array of additional permissions to request. For a complete list of permissions, see the\n<a href=\"https://developers.facebook.com/docs/facebook-login/permissions/v2.2\">official Facebook Permissions Reference</a></p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;<a href=\"#!/api/FacebookPermissionResponse\" rel=\"FacebookPermissionResponse\" class=\"docClass\">FacebookPermissionResponse</a>&gt;<div class='sub-desc'><p>Callback to invoke when the request completes.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-requestWithGraphPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-requestWithGraphPath' class='name expandable'>requestWithGraphPath</a>( <span class='pre'>path, params, httpMethod, callback</span> )</div><div class='description'><div class='short'>Makes a Facebook Graph API request. ...</div><div class='long'><p>Makes a Facebook Graph API request.</p>\n\n<p><p>If the request requires user authorization, the user must be logged in, and your app\nmust be authorized to make the request. You can check the\n<a href=\"#!/api/Modules.Facebook-property-loggedIn\" rel=\"Modules.Facebook-property-loggedIn\" class=\"docClass\">loggedIn</a> property to determine if the user is logged in.</p>\n\n\n\n\n<p>Every Facebook object has an associated path. For example, \"me\" requests information about\nthe current user.</p>\n\n\n\n\n<p>For a complete list of Graph API methods, parameters and return types, see the\n<a href=\"https://developers.facebook.com/docs/graph-api\">official Facebook Graph API documentation</a>.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : String<div class='sub-desc'><p>Graph API path to request.</p>\n\n</div></li><li><span class='pre'>params</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a><div class='sub-desc'><p>A dictionary object for setting parameters required by the call, if any.</p>\n\n</div></li><li><span class='pre'>httpMethod</span> : String<div class='sub-desc'><p>The HTTP method (GET/POST/DELETE) to use for the call.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;<a href=\"#!/api/FacebookGraphResponse\" rel=\"FacebookGraphResponse\" class=\"docClass\">FacebookGraphResponse</a>&gt;<div class='sub-desc'><p>Callback to invoke  when the request completes.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setAppid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-setAppid' class='name expandable'>setAppid</a>( <span class='pre'>appid</span> )<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Sets the value of the appid property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.Facebook-property-appid\" rel=\"Modules.Facebook-property-appid\" class=\"docClass\">appid</a> property.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> since 4.0.0</p>\n        <p>Set the Facebook App ID in the <code>tiapp.xml</code> file.  See \"Getting Started\" above for details.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>appid</span> : String<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setBubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-setBubbleParent' class='name expandable'>setBubbleParent</a>( <span class='pre'>bubbleParent</span> )</div><div class='description'><div class='short'>Sets the value of the bubbleParent property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Proxy-property-bubbleParent\" rel=\"Titanium.Proxy-property-bubbleParent\" class=\"docClass\">bubbleParent</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bubbleParent</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setForceDialogAuth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-setForceDialogAuth' class='name expandable'>setForceDialogAuth</a>( <span class='pre'>forceDialogAuth</span> )<strong class='removed signature' >removed</strong></div><div class='description'><div class='short'>Sets the value of the forceDialogAuth property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.Facebook-property-forceDialogAuth\" rel=\"Modules.Facebook-property-forceDialogAuth\" class=\"docClass\">forceDialogAuth</a> property.</p>\n\n        <div class='signature-box removed'>\n        <p>This method has been <strong>removed</strong> since 4.0.0</p>\n        \n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>forceDialogAuth</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setLifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-setLifecycleContainer' class='name expandable'>setLifecycleContainer</a>( <span class='pre'>lifecycleContainer</span> )</div><div class='description'><div class='short'>Sets the value of the lifecycleContainer property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lifecycleContainer</span> : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a><div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setLoginBehavior' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-setLoginBehavior' class='name expandable'>setLoginBehavior</a>( <span class='pre'>loginBehavior</span> )</div><div class='description'><div class='short'>Sets the value of the loginBehavior property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.Facebook-property-loginBehavior\" rel=\"Modules.Facebook-property-loginBehavior\" class=\"docClass\">loginBehavior</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>loginBehavior</span> : Number<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setPermissions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-setPermissions' class='name expandable'>setPermissions</a>( <span class='pre'>permissions</span> )</div><div class='description'><div class='short'>Sets the value of the permissions property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.Facebook-property-permissions\" rel=\"Modules.Facebook-property-permissions\" class=\"docClass\">permissions</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permissions</span> : Array&lt;String&gt;<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-shareMediaToMessenger' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-method-shareMediaToMessenger' class='name expandable'>shareMediaToMessenger</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Call this method to open Messenger and share an image, animated GIF or video. ...</div><div class='long'><p>Call this method to open Messenger and share an image, animated GIF or video.</p>\n\n<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-inviteCompleted' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-event-inviteCompleted' class='name expandable'>inviteCompleted</a></div><div class='description'><div class='short'>Fired when the Invite dialog is closed. ...</div><div class='long'><p>Fired when the Invite dialog is closed.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li><li class='platform-iphone'\n        title='iPhone'>5.4.0</li><li class='platform-ipad'\n        title='iPad'>5.4.0</li></ul><h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>success</span> : Boolean<div class='sub-desc'><p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>\n\n</div></li><li><span class='pre'>cancelled</span> : Number<div class='sub-desc'><p>Indicates if the user canceled the request by closing the dialog.</p>\n\n</div></li><li><span class='pre'>error</span> : String<div class='sub-desc'><p>Error message, if any returned.\nWill be undefined if <code>success</code> is <code>true</code>.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-login' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-event-login' class='name expandable'>login</a></div><div class='description'><div class='short'>Fired at session login. ...</div><div class='long'><p>Fired at session login.</p>\n\n<h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>success</span> : Boolean<div class='sub-desc'><p>Indicates if the user was logged in successfully.\nReturns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>\n\n</div></li><li><span class='pre'>cancelled</span> : Number<div class='sub-desc'><p>Indicates if the user canceled the login request by closing the dialog.</p>\n\n</div></li><li><span class='pre'>error</span> : String<div class='sub-desc'><p>Error message, if any returned.\nWill be undefined if <code>success</code> is <code>true</code>.</p>\n\n</div></li><li><span class='pre'>code</span> : Number<div class='sub-desc'><p>Error code.\nError code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error\nwas generated by the operating system, that system's error value is used.\nOtherwise, this value will be -1.</p>\n\n</div></li><li><span class='pre'>uid</span> : String<div class='sub-desc'><p>User ID returned by Facebook if the login was successful.</p>\n\n</div></li><li><span class='pre'>data</span> : String<div class='sub-desc'><p>Data returned by Facebook when we query for the UID (using graph path \"me\")\nafter a successful login. Data is in JSON format, and includes information\nsuch as user name, locale and gender.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-logout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-event-logout' class='name expandable'>logout</a></div><div class='description'><div class='short'>Fired at session logout. ...</div><div class='long'><p>Fired at session logout.</p>\n\n<h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-requestDialogCompleted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-event-requestDialogCompleted' class='name expandable'>requestDialogCompleted</a></div><div class='description'><div class='short'>Fired when the Send Request dialog is closed. ...</div><div class='long'><p>Fired when the Send Request dialog is closed.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.2</li><li class='platform-iphone'\n        title='iPhone'>4.0.2</li><li class='platform-ipad'\n        title='iPad'>4.0.2</li></ul><h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>success</span> : Boolean<div class='sub-desc'><p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>\n\n</div></li><li><span class='pre'>cancelled</span> : Number<div class='sub-desc'><p>Indicates if the user canceled the request by closing the dialog.</p>\n\n</div></li><li><span class='pre'>error</span> : String<div class='sub-desc'><p>Error message, if any returned.\nWill be undefined if <code>success</code> is <code>true</code>.</p>\n\n</div></li><li><span class='pre'>data</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a><div class='sub-desc'><p>data returned by Facebook. See Facebook reference for details.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-shareCompleted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-event-shareCompleted' class='name expandable'>shareCompleted</a></div><div class='description'><div class='short'>Fired when the Share dialog or Web Share dialog is closed. ...</div><div class='long'><p>Fired when the Share dialog or Web Share dialog is closed.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>success</span> : Boolean<div class='sub-desc'><p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>\n\n</div></li><li><span class='pre'>cancelled</span> : Number<div class='sub-desc'><p>Indicates if the user canceled the request by closing the dialog.</p>\n\n</div></li><li><span class='pre'>error</span> : String<div class='sub-desc'><p>Error message, if any returned.\nWill be undefined if <code>success</code> is <code>true</code>.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-tokenUpdated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.Facebook'>Modules.Facebook</span></div><a href='#!/api/Modules.Facebook-event-tokenUpdated' class='name expandable'>tokenUpdated</a></div><div class='description'><div class='short'>Fired when refreshPermissionsFromServer is completed. ...</div><div class='long'><p>Fired when <a href=\"#!/api/Modules.Facebook-method-refreshPermissionsFromServer\" rel=\"Modules.Facebook-method-refreshPermissionsFromServer\" class=\"docClass\">refreshPermissionsFromServer</a> is completed.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>4.0.0</li><li class='platform-iphone'\n        title='iPhone'>4.0.0</li><li class='platform-ipad'\n        title='iPad'>4.0.0</li></ul><h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div></div></div></div></div>"});