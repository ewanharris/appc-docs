Ext.data.JsonP['Modules_CoreMotion_DeviceMotion']({"tagname":"class","name":"Modules.CoreMotion.DeviceMotion","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"platform":["iphone 5.2.0","ipad 5.2.0"],"pseudo":[null],"editurl":"https://github.com/appcelerator-modules/ti.coremotion/edit/master/apidoc/DeviceMotion.yml"},"private":null,"id":"class-Modules.CoreMotion.DeviceMotion","members":{"cfg":[],"property":[],"method":[{"name":"availableAttitudeReferenceFrames","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{"description":["<p>A bitmask that you can bitwise-AND with the <code>ATTITUDE_REFERENCE</code> constants.</p>\n\n<p>For example to determine if <code>ATTITUDE_REFERENCE_FRAME_X_MAGNETIC_NORTH_Z_VERTICAL</code> is available on device.</p>\n\n<pre><code>var frames = CoreMotion.DeviceMotion.availableAttitudeReferenceFrames();\nif (frames &amp; CoreMotion.ATTITUDE_REFERENCE_FRAME_X_MAGNETIC_NORTH_Z_VERTICAL) {\n    // do something here\n}\n</code></pre>"]},"id":"method-availableAttitudeReferenceFrames"},{"name":"getAttitudeReferenceFrame","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{"description":["<p>If device motion is active, this property returns the reference frame currently in use. \nIf device motion is not active but has been active since the app was last launched, \nthis property returns the last frame used. If device motion has not been active since \nthe app was last launched, this property returns the default attitude reference frame \nfor the device.\nPossible reference frames include \n{@link Modules.CoreMotion#property-ATTITUDE_REFERENCE_FRAME_X_ARBITRARY_Z_VERTICAL}, \n{@link Modules.CoreMotion#property-ATTITUDE_REFERENCE_FRAME_X_ARBITRARY_CORRECTED_Z_VERTICAL}, \n{@link Modules.CoreMotion#property-ATTITUDE_REFERENCE_FRAME_X_MAGNETIC_NORTH_Z_VERTICAL}, and\n{@link Modules.CoreMotion#property-ATTITUDE_REFERENCE_FRAME_X_TRUE_NORTH_Z_VERTICAL}.</p>"]},"id":"method-getAttitudeReferenceFrame"},{"name":"getDeviceMotion","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{"description":["<p>An app that is receiving device-motion data after calling \n{@link Modules.CoreMotion.DeviceMotion#method-startDeviceMotionUpdatesUsingReferenceFrame} or\n{@link Modules.CoreMotion.DeviceMotion#method-startDeviceMotionUpdates} with no callback, need to periodically\ncheck the value returned by this method and process the device-motion data.</p>"]},"id":"method-getDeviceMotion"},{"name":"isDeviceMotionActive","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{"description":["<p>Indicates whether {@link Modules.CoreMotion.DeviceMotion#method-startDeviceMotionUpdates} or \n{@link Modules.CoreMotion.DeviceMotion#method-startDeviceMotionUpdatesUsingReferenceFrame} has been called since \n{@link Modules.CoreMotion.DeviceMotion#method-stopDeviceMotionUpdates}.</p>"]},"id":"method-isDeviceMotionActive"},{"name":"isDeviceMotionAvailable","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{},"id":"method-isDeviceMotionAvailable"},{"name":"setDeviceMotionUpdateInterval","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{"description":["<p>The system supplies device-motion updates to the callback passed to \n{@link Modules.CoreMotion.DeviceMotion#method-startDeviceMotionUpdatesUsingReferenceFrame} or\n{@link Modules.CoreMotion.DeviceMotion#method-startDeviceMotionUpdates} at regular intervals \ndetermined by the value passed to this method. The interval units \nare in milliseconds. The value of this property is capped to minimum \nand maximum values; the maximum value is determined by the maximum \nfrequency supported by the hardware. If your app is sensitive to the \nintervals of device-motion data, it should always check the timestamps \nof the delivered device-motion event to determine the true update interval.</p>"]},"id":"method-setDeviceMotionUpdateInterval"},{"name":"setShowsDeviceMovementDisplay","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{"description":["<p>When a device requires movement (for example, to calibrate the compass), the value of \nthis property indicates if the system's device-movement display should be shown. \nWhen a device requires movement, the callback for \n{@link Modules.CoreMotion.DeviceMotion#method-setDeviceMotionUpdateInterval} or \n{@link Modules.CoreMotion.DeviceMotion#method-startDeviceMotionUpdatesUsingReferenceFrame} reports \nthe {@link Modules.CoreMotion#property-ERROR_DEVICE_REQUIRES_MOVEMENT} error once. By default, \nthis is set to false.</p>"]},"id":"method-setShowsDeviceMovementDisplay"},{"name":"startDeviceMotionUpdates","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{"description":["<p>If a callback is passed to this method, it will be called whenever there is an update.\nThe frequency of these updates can be controlled using the \n{@link Modules.CoreMotion.DeviceMotion#method-setDeviceMotionUpdateInterval} method.\nIf no callback is passed, the device-motion data can be accessed using the \n{@link Modules.CoreMotion.DeviceMotion#method-getDeviceMotion} method. To stop the delivery of events, \ncall the {@link Modules.CoreMotion.DeviceMotion#method-stopDeviceMotionUpdates} method.</p>"]},"id":"method-startDeviceMotionUpdates"},{"name":"startDeviceMotionUpdatesUsingReferenceFrame","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{"description":["<p>If a callback is passed to this method, it will be called whenever there is an update.\nThe frequency of these updates can be controlled using the \n{@link Modules.CoreMotion.DeviceMotion#method-setDeviceMotionUpdateInterval} method.\nIf no callback is passed, the device-motion data can be accessed using the \n{@link Modules.CoreMotion.DeviceMotion#method-getDeviceMotion} method. To stop the delivery of events, \ncall the {@link Modules.CoreMotion.DeviceMotion#method-stopDeviceMotionUpdates} method.</p>"]},"id":"method-startDeviceMotionUpdatesUsingReferenceFrame"},{"name":"stopDeviceMotionUpdates","tagname":"method","owner":"Modules.CoreMotion.DeviceMotion","meta":{},"id":"method-stopDeviceMotionUpdates"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":27598,"files":[{"filename":"titanium.js","href":"titanium.html#Modules-CoreMotion-DeviceMotion"}],"html_meta":{"platform":"<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.2.0</li><li class='platform-ipad'\n        title='iPad'>5.2.0</li></ul>","pseudo":["<p class='private'><strong>NOTE</strong> ","This is an abstract type. Any object meeting this description can be used ","where this type is used.</p>"],"editurl":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'><ul class=\"sidebar-platforms\"><li class='platform-iphone' title='iPhone since Titanium SDK 5.2.0'>iPhone 5.2.0</li><li class='platform-ipad' title='iPad since Titanium SDK 5.2.0'>iPad 5.2.0</li></ul></div><div class='hierarchy'></div><div class='doc-contents'><p>Allows Titanium client applications to access CoreMotion's DeviceMotion APIs.</p>\n\n<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.2.0</li><li class='platform-ipad'\n        title='iPad'>5.2.0</li></ul><p class='private'><strong>NOTE</strong> This is an abstract type. Any object meeting this description can be used where this type is used.</p></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-availableAttitudeReferenceFrames' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-availableAttitudeReferenceFrames' class='name expandable'>availableAttitudeReferenceFrames</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Returns a bitmask specifying the available attitude reference frames on the device. ...</div><div class='long'><p>Returns a bitmask specifying the available attitude reference frames on the device.</p>\n\n<p><p>A bitmask that you can bitwise-AND with the <code>ATTITUDE_REFERENCE</code> constants.</p>\n\n\n\n\n<p>For example to determine if <code>ATTITUDE_REFERENCE_FRAME_X_MAGNETIC_NORTH_Z_VERTICAL</code> is available on device.</p>\n\n\n\n\n<pre><code>var frames = CoreMotion.DeviceMotion.availableAttitudeReferenceFrames();\nif (frames &amp; CoreMotion.ATTITUDE_REFERENCE_FRAME_X_MAGNETIC_NORTH_Z_VERTICAL) {\n    // do something here\n}\n</code></pre>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getAttitudeReferenceFrame' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-getAttitudeReferenceFrame' class='name expandable'>getAttitudeReferenceFrame</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Returns either the reference frame currently being used or the default \nattitude reference frame. ...</div><div class='long'><p>Returns either the reference frame currently being used or the default \nattitude reference frame.</p>\n\n<p><p>If device motion is active, this property returns the reference frame currently in use. \nIf device motion is not active but has been active since the app was last launched, \nthis property returns the last frame used. If device motion has not been active since \nthe app was last launched, this property returns the default attitude reference frame \nfor the device.\nPossible reference frames include \n<a href=\"#!/api/Modules.CoreMotion-property-ATTITUDE_REFERENCE_FRAME_X_ARBITRARY_Z_VERTICAL\" rel=\"Modules.CoreMotion-property-ATTITUDE_REFERENCE_FRAME_X_ARBITRARY_Z_VERTICAL\" class=\"docClass\">Modules.CoreMotion.ATTITUDE_REFERENCE_FRAME_X_ARBITRARY_Z_VERTICAL</a>, \n<a href=\"#!/api/Modules.CoreMotion-property-ATTITUDE_REFERENCE_FRAME_X_ARBITRARY_CORRECTED_Z_VERTICAL\" rel=\"Modules.CoreMotion-property-ATTITUDE_REFERENCE_FRAME_X_ARBITRARY_CORRECTED_Z_VERTICAL\" class=\"docClass\">Modules.CoreMotion.ATTITUDE_REFERENCE_FRAME_X_ARBITRARY_CORRECTED_Z_VERTICAL</a>, \n<a href=\"#!/api/Modules.CoreMotion-property-ATTITUDE_REFERENCE_FRAME_X_MAGNETIC_NORTH_Z_VERTICAL\" rel=\"Modules.CoreMotion-property-ATTITUDE_REFERENCE_FRAME_X_MAGNETIC_NORTH_Z_VERTICAL\" class=\"docClass\">Modules.CoreMotion.ATTITUDE_REFERENCE_FRAME_X_MAGNETIC_NORTH_Z_VERTICAL</a>, and\n<a href=\"#!/api/Modules.CoreMotion-property-ATTITUDE_REFERENCE_FRAME_X_TRUE_NORTH_Z_VERTICAL\" rel=\"Modules.CoreMotion-property-ATTITUDE_REFERENCE_FRAME_X_TRUE_NORTH_Z_VERTICAL\" class=\"docClass\">Modules.CoreMotion.ATTITUDE_REFERENCE_FRAME_X_TRUE_NORTH_Z_VERTICAL</a>.</p>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getDeviceMotion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-getDeviceMotion' class='name expandable'>getDeviceMotion</a>( <span class='pre'></span> ) : <a href=\"#!/api/CoreMotionDeviceMotionData\" rel=\"CoreMotionDeviceMotionData\" class=\"docClass\">CoreMotionDeviceMotionData</a></div><div class='description'><div class='short'>Returns the latest sample of device-motion data. ...</div><div class='long'><p>Returns the latest sample of device-motion data.</p>\n\n<p><p>An app that is receiving device-motion data after calling \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdatesUsingReferenceFrame\" rel=\"Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdatesUsingReferenceFrame\" class=\"docClass\">startDeviceMotionUpdatesUsingReferenceFrame</a> or\n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdates\" rel=\"Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdates\" class=\"docClass\">startDeviceMotionUpdates</a> with no callback, need to periodically\ncheck the value returned by this method and process the device-motion data.</p>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/CoreMotionDeviceMotionData\" rel=\"CoreMotionDeviceMotionData\" class=\"docClass\">CoreMotionDeviceMotionData</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isDeviceMotionActive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-isDeviceMotionActive' class='name expandable'>isDeviceMotionActive</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Returns a Boolean value that determines whether the app is receiving updates from the device-motion service. ...</div><div class='long'><p>Returns a Boolean value that determines whether the app is receiving updates from the device-motion service.</p>\n\n<p><p>Indicates whether <a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdates\" rel=\"Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdates\" class=\"docClass\">startDeviceMotionUpdates</a> or \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdatesUsingReferenceFrame\" rel=\"Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdatesUsingReferenceFrame\" class=\"docClass\">startDeviceMotionUpdatesUsingReferenceFrame</a> has been called since \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-stopDeviceMotionUpdates\" rel=\"Modules.CoreMotion.DeviceMotion-method-stopDeviceMotionUpdates\" class=\"docClass\">stopDeviceMotionUpdates</a>.</p>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isDeviceMotionAvailable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-isDeviceMotionAvailable' class='name expandable'>isDeviceMotionAvailable</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Returns a Boolean indicating whether device-motion is available on the device. ...</div><div class='long'><p>Returns a Boolean indicating whether device-motion is available on the device.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setDeviceMotionUpdateInterval' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-setDeviceMotionUpdateInterval' class='name expandable'>setDeviceMotionUpdateInterval</a>( <span class='pre'>interval</span> )</div><div class='description'><div class='short'>The interval in milliseconds, for providing device-motion updates to the callback. ...</div><div class='long'><p>The interval in milliseconds, for providing device-motion updates to the callback.</p>\n\n<p><p>The system supplies device-motion updates to the callback passed to \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdatesUsingReferenceFrame\" rel=\"Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdatesUsingReferenceFrame\" class=\"docClass\">startDeviceMotionUpdatesUsingReferenceFrame</a> or\n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdates\" rel=\"Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdates\" class=\"docClass\">startDeviceMotionUpdates</a> at regular intervals \ndetermined by the value passed to this method. The interval units \nare in milliseconds. The value of this property is capped to minimum \nand maximum values; the maximum value is determined by the maximum \nfrequency supported by the hardware. If your app is sensitive to the \nintervals of device-motion data, it should always check the timestamps \nof the delivered device-motion event to determine the true update interval.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>interval</span> : Number<div class='sub-desc'><p>The interval in milliseconds</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setShowsDeviceMovementDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-setShowsDeviceMovementDisplay' class='name expandable'>setShowsDeviceMovementDisplay</a>( <span class='pre'>show</span> )</div><div class='description'><div class='short'>Controls whether the device-movement display is shown. ...</div><div class='long'><p>Controls whether the device-movement display is shown.</p>\n\n<p><p>When a device requires movement (for example, to calibrate the compass), the value of \nthis property indicates if the system's device-movement display should be shown. \nWhen a device requires movement, the callback for \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-setDeviceMotionUpdateInterval\" rel=\"Modules.CoreMotion.DeviceMotion-method-setDeviceMotionUpdateInterval\" class=\"docClass\">setDeviceMotionUpdateInterval</a> or \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdatesUsingReferenceFrame\" rel=\"Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdatesUsingReferenceFrame\" class=\"docClass\">startDeviceMotionUpdatesUsingReferenceFrame</a> reports \nthe <a href=\"#!/api/Modules.CoreMotion-property-ERROR_DEVICE_REQUIRES_MOVEMENT\" rel=\"Modules.CoreMotion-property-ERROR_DEVICE_REQUIRES_MOVEMENT\" class=\"docClass\">Modules.CoreMotion.ERROR_DEVICE_REQUIRES_MOVEMENT</a> error once. By default, \nthis is set to false.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>show</span> : Boolean<div class='sub-desc'><p>Boolean indicating if the display should be shown</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-startDeviceMotionUpdates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdates' class='name expandable'>startDeviceMotionUpdates</a>( <span class='pre'>[callback]</span> )</div><div class='description'><div class='short'>Starts device-motion updates. ...</div><div class='long'><p>Starts device-motion updates.</p>\n\n<p><p>If a callback is passed to this method, it will be called whenever there is an update.\nThe frequency of these updates can be controlled using the \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-setDeviceMotionUpdateInterval\" rel=\"Modules.CoreMotion.DeviceMotion-method-setDeviceMotionUpdateInterval\" class=\"docClass\">setDeviceMotionUpdateInterval</a> method.\nIf no callback is passed, the device-motion data can be accessed using the \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-getDeviceMotion\" rel=\"Modules.CoreMotion.DeviceMotion-method-getDeviceMotion\" class=\"docClass\">getDeviceMotion</a> method. To stop the delivery of events, \ncall the <a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-stopDeviceMotionUpdates\" rel=\"Modules.CoreMotion.DeviceMotion-method-stopDeviceMotionUpdates\" class=\"docClass\">stopDeviceMotionUpdates</a> method.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Callback&lt;<a href=\"#!/api/CoreMotionDeviceMotionDataWithSuccess\" rel=\"CoreMotionDeviceMotionDataWithSuccess\" class=\"docClass\">CoreMotionDeviceMotionDataWithSuccess</a>&gt; (optional)<div class='sub-desc'><p>The method to be called when there is an update.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-startDeviceMotionUpdatesUsingReferenceFrame' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-startDeviceMotionUpdatesUsingReferenceFrame' class='name expandable'>startDeviceMotionUpdatesUsingReferenceFrame</a>( <span class='pre'>args, [callback]</span> )</div><div class='description'><div class='short'>Starts device-motion updates using a reference frame. ...</div><div class='long'><p>Starts device-motion updates using a reference frame.</p>\n\n<p><p>If a callback is passed to this method, it will be called whenever there is an update.\nThe frequency of these updates can be controlled using the \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-setDeviceMotionUpdateInterval\" rel=\"Modules.CoreMotion.DeviceMotion-method-setDeviceMotionUpdateInterval\" class=\"docClass\">setDeviceMotionUpdateInterval</a> method.\nIf no callback is passed, the device-motion data can be accessed using the \n<a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-getDeviceMotion\" rel=\"Modules.CoreMotion.DeviceMotion-method-getDeviceMotion\" class=\"docClass\">getDeviceMotion</a> method. To stop the delivery of events, \ncall the <a href=\"#!/api/Modules.CoreMotion.DeviceMotion-method-stopDeviceMotionUpdates\" rel=\"Modules.CoreMotion.DeviceMotion-method-stopDeviceMotionUpdates\" class=\"docClass\">stopDeviceMotionUpdates</a> method.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/CoreMotionReferenceFrameArgs\" rel=\"CoreMotionReferenceFrameArgs\" class=\"docClass\">CoreMotionReferenceFrameArgs</a><div class='sub-desc'><p>The arguments passed to this method</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;<a href=\"#!/api/CoreMotionDeviceMotionDataWithSuccess\" rel=\"CoreMotionDeviceMotionDataWithSuccess\" class=\"docClass\">CoreMotionDeviceMotionDataWithSuccess</a>&gt; (optional)<div class='sub-desc'><p>The method to be called when there is an update.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-stopDeviceMotionUpdates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CoreMotion.DeviceMotion'>Modules.CoreMotion.DeviceMotion</span></div><a href='#!/api/Modules.CoreMotion.DeviceMotion-method-stopDeviceMotionUpdates' class='name expandable'>stopDeviceMotionUpdates</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Stops device-motion updates. ...</div><div class='long'><p>Stops device-motion updates.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div></div></div></div></div>"});