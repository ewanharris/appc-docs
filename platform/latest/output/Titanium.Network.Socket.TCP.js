Ext.data.JsonP['Titanium_Network_Socket_TCP']({"tagname":"class","name":"Titanium.Network.Socket.TCP","extends":"Titanium.IOStream","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"platform":["android 1.7","iphone 1.7","ipad 1.7"],"editurl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/Titanium/Network/Socket/TCP.yml","description":["<p>Most socket operations are asynchronous. When you create a socket, you can define\ncallback funtions to receive the results of API calls, as well as to handle incoming\ndata.</p>\n\n<p>For example, for a client-side socket, you define \n{@link Titanium.Network.Socket.TCP#property-connected connected} and\n{@link Titanium.Network.Socket.TCP#property-error error} callback functions.</p>\n\n<p>To connect to a remote host, call the socket's\n{@link Titanium.Network.Socket.TCP#method-connect connect} method. If the socket connects\nsuccessfully, your <code>connected</code> callback is invoked, and you can send and receive data\non the socket. If the socket connection fails, your <code>error</code> callback is invoked. </p>\n\n<p>After a socket is connected, you can access it like any other {@link Titanium.IOStream}.\nNote that the socket's <code>read</code> and <code>write</code> methods may block, so in most cases\nyou should use the asynchronous {@link Titanium.Stream#method-read read}, {@link Titanium.Stream#method-write write} \nand {@link Titanium.Stream#method-pump pump} methods provided by the {@link Titanium.Stream} module,\nrather than using the socket object's <code>read</code> and <code>write</code> methods directly.</p>\n\n<p>A familiarity with the basics of BSD socket programming is a recommended before using \nsockets with Titanium.</p>\n\n<p>Use the {@link Titanium.Network.Socket#method-createTCP} method to create a TCP socket.</p> \n<h3>Examples</h3>\n<h4>Simple Socket IO using Stream.pump</h4>\n<p>The following example uses the {@link Titanium.Stream#method-pump pump} method from the {@link Titanium.Stream} \nmodule to read data from a socket. The <code>pump</code> method registers a callback that is \ncalled repeatedly to process incoming data from the socket.</p>\n\n<pre><code>var socket = Ti.Network.Socket.createTCP({\n    host: 'blog.example.com', port: 80,\n    connected: function (e) {\n        Ti.API.info('Socket opened!');\n        Ti.Stream.pump(e.socket, readCallback, 1024, true);\n        Ti.Stream.write(socket, Ti.createBuffer({\n            value: 'GET http://blog.example.com/index.html HTTP/1.1\\r\\n\\r\\n'\n        }), writeCallback);\n    },\n        error: function (e) {\n        Ti.API.info('Error (' + e.errorCode + '): ' + e.error);\n    },\n});\nsocket.connect();\n\nfunction writeCallback(e) {\n    Ti.API.info('Successfully wrote to socket.');\n}\n\nfunction readCallback(e) {\n    if (e.bytesProcessed == -1)\n    {\n        // Error / EOF on socket. Do any cleanup here.\n        ...\n    }\n    try {\n        if(e.buffer) {\n            var received = e.buffer.toString();\n            Ti.API.info('Received: ' + received);\n        } else {\n            Ti.API.error('Error: read callback called with no buffer!');\n        }\n    } catch (ex) {\n        Ti.API.error(ex);\n    }\n}\n</code></pre><h4>Listening Socket Example</h4>\n<p>The following sample shows a trivial example of using a listening \nsocket. In this case, the application simply sends messages to itself,\nusing the loopback address.</p>\n\n<pre><code>// Hostname to listen on/connect to. Here we use the loopback\n// address. iOS also supports Ti.Platform.address (the address of\n// the WiFi interface).\n// Android supports only the loopback address.\n\nvar hostname = '127.0.0.1';\n\nvar clientSocket = Ti.Network.Socket.createTCP({\n    host : hostname,\n    port : 40404,\n    connected : function(e) {\n        Ti.API.info('Client socket connected!');\n        Ti.Stream.pump(e.socket, pumpCallback, 1024, true);\n        e.socket.write(Ti.createBuffer({\n            value : 'A message from a connecting socket.'\n        }));\n    },\n    error : function(e) {\n        Ti.API.info('Error (' + e.errorCode + '): ' + e.error);\n    }\n});\n\nfunction writeCallback(e) {\n    Ti.API.info('Successfully wrote to socket.');\n}\n\nfunction pumpCallback(e) {\n    // Has the remote socket closed its end?\n    if (e.bytesProcessed &lt; 0) {\n        Ti.API.info(\"Closing client socket.\");\n        clientSocket.close();\n        return;\n    }\n    try {\n        if(e.buffer) {\n            var received = e.buffer.toString();\n            Ti.API.info('Received: ' + received);\n        } else {\n            Ti.API.error('Error: read callback called with no buffer!');\n        }\n    } catch (ex) {\n        Ti.API.error(ex);\n    }\n}\n\n//Create a socket and listen for incoming connections\nvar listenSocket = Ti.Network.Socket.createTCP({\n    host : hostname,\n    port : 40404,\n    accepted : function(e) {\n        // This where you would usually store the newly-connected socket, e.inbound\n        // so it can be used for read / write operations elsewhere in the app.\n        // In this case, we simply send a message then close the socket.\n        Ti.API.info(\"Listening socket &lt;\" + e.socket + \"&gt; accepted incoming connection &lt;\" + e.inbound + \"&gt;\");\n        e.inbound.write(Ti.createBuffer({\n            value : 'You have been connected to a listening socket.\\r\\n'\n        }));\n        e.inbound.close();\n        // close the accepted socket\n\n    },\n    error : function(e) {\n        Ti.API.error(\"Socket &lt;\" + e.socket + \"&gt; encountered error when listening\");\n        Ti.API.error(\" error code &lt;\" + e.errorCode + \"&gt;\");\n        Ti.API.error(\" error description &lt;\" + e.error + \"&gt;\");\n    }\n});\n// Starts the socket listening for connections, does not accept them\nlistenSocket.listen();\nTi.API.info(\"Listening now...\");\n\n// Tells socket to accept the next inbound connection. listenSocket.accepted gets\n// called when a connection is accepted via accept()\nTi.API.info(\"Calling accept.\");\nlistenSocket.accept({\n    timeout : 10000\n});\n\n// Call connect after a short timeout to ensure the listening socket is ready to go.\nTi.API.info(\"Setting timer to connect.\");\nsetTimeout(function(e)\n{\n    Ti.API.info(\"Calling connect on client socket.\");\n   clientSocket.connect();\n}, 500);\n</code></pre>"]},"private":null,"id":"class-Titanium.Network.Socket.TCP","members":{"cfg":[],"property":[{"name":"accepted","tagname":"property","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"property-accepted"},{"name":"apiName","tagname":"property","owner":"Titanium.Proxy","meta":{"readonly":true,"description":["<p>The value of this property is the fully qualified name of the API. For example, {@link Titanium.UI.Button Button}\nreturns <code>Ti.UI.Button</code>.</p>"],"platform":["android 3.2.0","iphone 3.2.0","ipad 3.2.0","mobileweb 3.2.0","windowsphone 4.1.0"]},"id":"property-apiName"},{"name":"bubbleParent","tagname":"property","owner":"Titanium.Proxy","meta":{"description":["<p>Some proxies (most commonly views) have a relationship to other proxies, often\nestablished by the add() method. For example, for a button added to a window, a\nclick event on the button would bubble up to the window. Other common parents are\ntable sections to their rows, table views to their sections, and scrollable views\nto their views. Set this property to false to disable the bubbling to the proxy's parent.</p>"],"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","windowsphone 4.1.0"]},"id":"property-bubbleParent"},{"name":"connected","tagname":"property","owner":"Titanium.Network.Socket.TCP","meta":{"description":["<p>Only invoked following a successful {@link Titanium.Network.Socket.TCP#method-connect connect}\ncall.</p>\n\n<p>Can only be modified when this socket is in the {@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED} state. </p>"]},"id":"property-connected"},{"name":"error","tagname":"property","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"property-error"},{"name":"host","tagname":"property","owner":"Titanium.Network.Socket.TCP","meta":{"description":["<p>Can only be modified when this socket is in the {@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED} state. </p>\n\n<p>Supports both IPv4 and IPv6 addresses.</p>"]},"id":"property-host"},{"name":"lifecycleContainer","tagname":"property","owner":"Titanium.Proxy","meta":{"description":["<p>If this property is set to a Window or TabGroup, then the corresponding Activity lifecycle event callbacks\nwill also be called on the proxy. Proxies that require the activity lifecycle will need this property set\nto the appropriate containing Window or TabGroup.</p>"],"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"property-lifecycleContainer"},{"name":"listenQueueSize","tagname":"property","owner":"Titanium.Network.Socket.TCP","meta":{"description":["<p>Any incoming connections received while the max number of pending connections has \nbeen reached will be rejected.</p>"]},"id":"property-listenQueueSize"},{"name":"port","tagname":"property","owner":"Titanium.Network.Socket.TCP","meta":{"description":["<p>Can only be modified when this socket is in the {@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED} state.</p>"]},"id":"property-port"},{"name":"state","tagname":"property","owner":"Titanium.Network.Socket.TCP","meta":{"readonly":true},"id":"property-state"},{"name":"timeout","tagname":"property","owner":"Titanium.Network.Socket.TCP","meta":{"description":["<p>Can only be modified when this socket is in the {@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED} state. </p>"]},"id":"property-timeout"}],"method":[{"name":"accept","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{"description":["<p>Nonblocking; if there are no connections in the queue, sets a flag so that \nthe socket accepts the next incoming connection immediately. </p>\n\n<p>Takes an argument, an {@link AcceptDict} object which assigns options to the new\nconnection.  If the socket is already flagged to accept the next connection, \nthe existing accept options will be updated to use the newly specified <code>options</code> \nobject. </p>\n\n<p>The <code>accepted</code> callback is called when a new connection is accepted as a result of \ncalling <code>accept</code>. The callback argument holds a reference to a new socket,\nrepresenting the accepted connection.</p>\n\n<p>Note that the connected callback is <strong>not</strong> called on the newly created socket. <br>\nThis is because the socket is created in the \n{@link Titanium.Network.Socket#property-CONNECTED CONNECTED} state, so it never transitions\nto the <code>CONNECTED</code> state.</p>\n\n<p>Throws an exception if called on a socket that is not in a \n{@link Titanium.Network.Socket#property-LISTENING LISTENING} state.</p>"]},"id":"method-accept"},{"name":"addEventListener","tagname":"method","owner":"Titanium.Proxy","meta":{},"id":"method-addEventListener"},{"name":"applyProperties","tagname":"method","owner":"Titanium.Proxy","meta":{"description":["<p>Properties are supplied as a dictionary. Each key-value pair in the object is applied to the proxy such that\nmyproxy[key] = value.</p>"],"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","mobileweb 3.0.0","windowsphone 4.1.0"]},"id":"method-applyProperties"},{"name":"close","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{"description":["<p>Throws exception if the socket is not in a {@link Titanium.Network.Socket#property-CONNECTED CONNECTED} \nor {@link Titanium.Network.Socket#property-LISTENING LISTENING} state. Blocking.</p>"]},"id":"method-close"},{"name":"connect","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{"description":["<p>Throws an exception if the socket is in a {@link Titanium.Network.Socket#property-CONNECTED CONNECTED} \nor {@link Titanium.Network.Socket#property-LISTENING LISTENING} state. \nThrows an exception if a valid host and port has not been set on this socket. </p>\n\n<p>Nonblocking; connection attempts are asynchronous.</p>"]},"id":"method-connect"},{"name":"fireEvent","tagname":"method","owner":"Titanium.Proxy","meta":{},"id":"method-fireEvent"},{"name":"getAccepted","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-getAccepted"},{"name":"getApiName","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.2.0","iphone 3.2.0","ipad 3.2.0","mobileweb 3.2.0","windowsphone 4.1.0"]},"id":"method-getApiName"},{"name":"getBubbleParent","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","windowsphone 4.1.0"]},"id":"method-getBubbleParent"},{"name":"getConnected","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-getConnected"},{"name":"getError","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-getError"},{"name":"getHost","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-getHost"},{"name":"getLifecycleContainer","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"method-getLifecycleContainer"},{"name":"getListenQueueSize","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-getListenQueueSize"},{"name":"getPort","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-getPort"},{"name":"getState","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-getState"},{"name":"getTimeout","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-getTimeout"},{"name":"isReadable","tagname":"method","owner":"Titanium.IOStream","meta":{},"id":"method-isReadable"},{"name":"isWritable","tagname":"method","owner":"Titanium.IOStream","meta":{},"id":"method-isWritable"},{"name":"listen","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{"description":["<p>The <code>listen</code> call will attempt to listen on the specified host and/or port \nproperty for the socket if they are set.  </p>\n\n<p>Nonblocking; may return before the socket is fully open and listening.</p>\n\n<p>If the socket is already in a {@link Titanium.Network.Socket#property-LISTENING LISTENING} or\n{@link Titanium.Network.Socket#property-CONNECTED CONNECTED} state, <code>listen</code> throws an exception\nand sets the socket state to {@link Titanium.Network.Socket#property-ERROR ERROR}, but does \n<strong>not</strong> fire the error callback.</p>\n\n<p>Any error encountered after the socket starts listening results in the error\ncallback being fired.</p>"]},"id":"method-listen"},{"name":"read","tagname":"method","owner":"Titanium.IOStream","meta":{"description":["<p>If <code>offset</code> and <code>length</code> are specified, data is written into the buffer starting at \nposition <code>offset</code>. Data is read from this stream until one of the following occurs:</p>\n\n<ul>\n<li>the end of this stream is reached</li>\n<li>the end of the buffer is reached</li>\n<li>a total of <code>length</code> bytes have been read from the stream</li>\n</ul>\n\n<p>If <code>offset</code> and <code>length</code> are omitted, data is written starting at the beginning\nof the buffer.</p>\n\n<p>Returns the number of bytes read, or -1 if the end of stream was reached before\nany data was read.</p>\n\n<p>Throws an exception on error. For example, if the <code>offset</code> value is past\nthe last byte of <code>buffer</code>. </p>\n\n<p>This method is synchronous. To perform an asynchronous read on an <code>IOStream</code>, use\n{@link Titanium.Stream#method-read}.</p>"]},"id":"method-read"},{"name":"removeEventListener","tagname":"method","owner":"Titanium.Proxy","meta":{"description":["<p>Multiple listeners can be registered for the same event, so the \n<code>callback</code> parameter is used to determine which listener to remove. </p>\n\n<p>When adding a listener, you must save a reference to the callback function\nin order to remove the listener later:</p>\n\n<pre><code>var listener = function() { Ti.API.info(\"Event listener called.\"); }\nwindow.addEventListener('click', listener);\n</code></pre>\n\n<p>To remove the listener, pass in a reference to the callback function:</p>\n\n<pre><code>window.removeEventListener('click', listener);\n</code></pre>"]},"id":"method-removeEventListener"},{"name":"setAccepted","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-setAccepted"},{"name":"setBubbleParent","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","windowsphone 4.1.0"]},"id":"method-setBubbleParent"},{"name":"setConnected","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-setConnected"},{"name":"setError","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-setError"},{"name":"setHost","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-setHost"},{"name":"setLifecycleContainer","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"method-setLifecycleContainer"},{"name":"setListenQueueSize","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-setListenQueueSize"},{"name":"setPort","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-setPort"},{"name":"setTimeout","tagname":"method","owner":"Titanium.Network.Socket.TCP","meta":{},"id":"method-setTimeout"},{"name":"write","tagname":"method","owner":"Titanium.IOStream","meta":{"description":["<p>If <code>offset</code> and <code>length</code> are specified, data is read from the buffer starting at\n<code>offset</code>. Bytes are read from the buffer and written to the stream until:</p>\n\n<ul>\n<li>the end of the buffer is reached</li>\n<li><code>length</code> bytes have been written</li>\n<li>the stream returns an error</li>\n</ul>\n\n<p>If <code>offset</code> and <code>length</code> are omitted, all of the data in the buffer is written to\nthis stream.</p>\n\n<p>Returns the number of bytes actually written.</p>\n\n<p>Throws an exception if an error is encountered.</p>"]},"id":"method-write"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":107734,"files":[{"filename":"titanium.js","href":"titanium.html#Titanium-Network-Socket-TCP"}],"html_meta":{"platform":"<ul class='platforms'><li class='platform-android'\n        title='Android'>1.7</li><li class='platform-iphone'\n        title='iPhone'>1.7</li><li class='platform-ipad'\n        title='iPad'>1.7</li></ul>","editurl":null,"description":"<p><p>Most socket operations are asynchronous. When you create a socket, you can define\ncallback funtions to receive the results of API calls, as well as to handle incoming\ndata.</p>\n\n\n\n\n<p>For example, for a client-side socket, you define \n<a href=\"#!/api/Titanium.Network.Socket.TCP-property-connected\" rel=\"Titanium.Network.Socket.TCP-property-connected\" class=\"docClass\">connected</a> and\n<a href=\"#!/api/Titanium.Network.Socket.TCP-property-error\" rel=\"Titanium.Network.Socket.TCP-property-error\" class=\"docClass\">error</a> callback functions.</p>\n\n\n\n\n<p>To connect to a remote host, call the socket's\n<a href=\"#!/api/Titanium.Network.Socket.TCP-method-connect\" rel=\"Titanium.Network.Socket.TCP-method-connect\" class=\"docClass\">connect</a> method. If the socket connects\nsuccessfully, your <code>connected</code> callback is invoked, and you can send and receive data\non the socket. If the socket connection fails, your <code>error</code> callback is invoked. </p>\n\n\n\n\n<p>After a socket is connected, you can access it like any other <a href=\"#!/api/Titanium.IOStream\" rel=\"Titanium.IOStream\" class=\"docClass\">Titanium.IOStream</a>.\nNote that the socket's <code>read</code> and <code>write</code> methods may block, so in most cases\nyou should use the asynchronous <a href=\"#!/api/Titanium.Stream-method-read\" rel=\"Titanium.Stream-method-read\" class=\"docClass\">read</a>, <a href=\"#!/api/Titanium.Stream-method-write\" rel=\"Titanium.Stream-method-write\" class=\"docClass\">write</a> \nand <a href=\"#!/api/Titanium.Stream-method-pump\" rel=\"Titanium.Stream-method-pump\" class=\"docClass\">pump</a> methods provided by the <a href=\"#!/api/Titanium.Stream\" rel=\"Titanium.Stream\" class=\"docClass\">Titanium.Stream</a> module,\nrather than using the socket object's <code>read</code> and <code>write</code> methods directly.</p>\n\n\n\n\n<p>A familiarity with the basics of BSD socket programming is a recommended before using \nsockets with Titanium.</p>\n\n\n\n\n<p>Use the <a href=\"#!/api/Titanium.Network.Socket-method-createTCP\" rel=\"Titanium.Network.Socket-method-createTCP\" class=\"docClass\">Titanium.Network.Socket.createTCP</a> method to create a TCP socket.</p>\n\n\n<p></p>\n\n<h3>Examples</h3>\n\n\n<h4>Simple Socket IO using Stream.pump</h4>\n\n\n<p>The following example uses the <a href=\"#!/api/Titanium.Stream-method-pump\" rel=\"Titanium.Stream-method-pump\" class=\"docClass\">pump</a> method from the <a href=\"#!/api/Titanium.Stream\" rel=\"Titanium.Stream\" class=\"docClass\">Titanium.Stream</a> \nmodule to read data from a socket. The <code>pump</code> method registers a callback that is \ncalled repeatedly to process incoming data from the socket.</p>\n\n\n\n\n<pre><code>var socket = Ti.Network.Socket.createTCP({\n    host: 'blog.example.com', port: 80,\n    connected: function (e) {\n        Ti.API.info('Socket opened!');\n        Ti.Stream.pump(e.socket, readCallback, 1024, true);\n        Ti.Stream.write(socket, Ti.createBuffer({\n            value: 'GET http://blog.example.com/index.html HTTP/1.1\\r\\n\\r\\n'\n        }), writeCallback);\n    },\n        error: function (e) {\n        Ti.API.info('Error (' + e.errorCode + '): ' + e.error);\n    },\n});\nsocket.connect();\n\nfunction writeCallback(e) {\n    Ti.API.info('Successfully wrote to socket.');\n}\n\nfunction readCallback(e) {\n    if (e.bytesProcessed == -1)\n    {\n        // Error / EOF on socket. Do any cleanup here.\n        ...\n    }\n    try {\n        if(e.buffer) {\n            var received = e.buffer.toString();\n            Ti.API.info('Received: ' + received);\n        } else {\n            Ti.API.error('Error: read callback called with no buffer!');\n        }\n    } catch (ex) {\n        Ti.API.error(ex);\n    }\n}\n</code></pre>\n\n\n<h4>Listening Socket Example</h4>\n\n\n<p>The following sample shows a trivial example of using a listening \nsocket. In this case, the application simply sends messages to itself,\nusing the loopback address.</p>\n\n\n\n\n<pre><code>// Hostname to listen on/connect to. Here we use the loopback\n// address. iOS also supports Ti.Platform.address (the address of\n// the WiFi interface).\n// Android supports only the loopback address.\n\nvar hostname = '127.0.0.1';\n\nvar clientSocket = Ti.Network.Socket.createTCP({\n    host : hostname,\n    port : 40404,\n    connected : function(e) {\n        Ti.API.info('Client socket connected!');\n        Ti.Stream.pump(e.socket, pumpCallback, 1024, true);\n        e.socket.write(Ti.createBuffer({\n            value : 'A message from a connecting socket.'\n        }));\n    },\n    error : function(e) {\n        Ti.API.info('Error (' + e.errorCode + '): ' + e.error);\n    }\n});\n\nfunction writeCallback(e) {\n    Ti.API.info('Successfully wrote to socket.');\n}\n\nfunction pumpCallback(e) {\n    // Has the remote socket closed its end?\n    if (e.bytesProcessed &lt; 0) {\n        Ti.API.info(\"Closing client socket.\");\n        clientSocket.close();\n        return;\n    }\n    try {\n        if(e.buffer) {\n            var received = e.buffer.toString();\n            Ti.API.info('Received: ' + received);\n        } else {\n            Ti.API.error('Error: read callback called with no buffer!');\n        }\n    } catch (ex) {\n        Ti.API.error(ex);\n    }\n}\n\n//Create a socket and listen for incoming connections\nvar listenSocket = Ti.Network.Socket.createTCP({\n    host : hostname,\n    port : 40404,\n    accepted : function(e) {\n        // This where you would usually store the newly-connected socket, e.inbound\n        // so it can be used for read / write operations elsewhere in the app.\n        // In this case, we simply send a message then close the socket.\n        Ti.API.info(\"Listening socket &lt;\" + e.socket + \"&gt; accepted incoming connection &lt;\" + e.inbound + \"&gt;\");\n        e.inbound.write(Ti.createBuffer({\n            value : 'You have been connected to a listening socket.\\r\\n'\n        }));\n        e.inbound.close();\n        // close the accepted socket\n\n    },\n    error : function(e) {\n        Ti.API.error(\"Socket &lt;\" + e.socket + \"&gt; encountered error when listening\");\n        Ti.API.error(\" error code &lt;\" + e.errorCode + \"&gt;\");\n        Ti.API.error(\" error description &lt;\" + e.error + \"&gt;\");\n    }\n});\n// Starts the socket listening for connections, does not accept them\nlistenSocket.listen();\nTi.API.info(\"Listening now...\");\n\n// Tells socket to accept the next inbound connection. listenSocket.accepted gets\n// called when a connection is accepted via accept()\nTi.API.info(\"Calling accept.\");\nlistenSocket.accept({\n    timeout : 10000\n});\n\n// Call connect after a short timeout to ensure the listening socket is ready to go.\nTi.API.info(\"Setting timer to connect.\");\nsetTimeout(function(e)\n{\n    Ti.API.info(\"Calling connect on client socket.\");\n   clientSocket.connect();\n}, 500);\n</code></pre>\n\n</p>"},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Titanium.Proxy","Titanium.IOStream","Titanium.Network.Socket.TCP"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'><ul class=\"sidebar-platforms\"><li class='platform-android' title='Android since Titanium SDK 1.7'>Android 1.7</li><li class='platform-iphone' title='iPhone since Titanium SDK 1.7'>iPhone 1.7</li><li class='platform-ipad' title='iPad since Titanium SDK 1.7'>iPad 1.7</li></ul></div><div class='hierarchy'><div class='classes'><div class='subclass'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='docClass'>Titanium.Proxy</a></div><div class='subclass'> &gt; <a href='#!/api/Titanium.IOStream' rel='Titanium.IOStream' class='docClass'>Titanium.IOStream</a></div><div class='subclass'> &gt; <strong>Titanium.Network.Socket.TCP</strong></div></div></div><div class='doc-contents'><p>TCP socket that implements the <code><a href=\"#!/api/Titanium.IOStream\" rel=\"Titanium.IOStream\" class=\"docClass\">Titanium.IOStream</a></code> interface.</p>\n\n<p><p>Most socket operations are asynchronous. When you create a socket, you can define\ncallback funtions to receive the results of API calls, as well as to handle incoming\ndata.</p>\n\n\n\n\n<p>For example, for a client-side socket, you define \n<a href=\"#!/api/Titanium.Network.Socket.TCP-property-connected\" rel=\"Titanium.Network.Socket.TCP-property-connected\" class=\"docClass\">connected</a> and\n<a href=\"#!/api/Titanium.Network.Socket.TCP-property-error\" rel=\"Titanium.Network.Socket.TCP-property-error\" class=\"docClass\">error</a> callback functions.</p>\n\n\n\n\n<p>To connect to a remote host, call the socket's\n<a href=\"#!/api/Titanium.Network.Socket.TCP-method-connect\" rel=\"Titanium.Network.Socket.TCP-method-connect\" class=\"docClass\">connect</a> method. If the socket connects\nsuccessfully, your <code>connected</code> callback is invoked, and you can send and receive data\non the socket. If the socket connection fails, your <code>error</code> callback is invoked. </p>\n\n\n\n\n<p>After a socket is connected, you can access it like any other <a href=\"#!/api/Titanium.IOStream\" rel=\"Titanium.IOStream\" class=\"docClass\">Titanium.IOStream</a>.\nNote that the socket's <code>read</code> and <code>write</code> methods may block, so in most cases\nyou should use the asynchronous <a href=\"#!/api/Titanium.Stream-method-read\" rel=\"Titanium.Stream-method-read\" class=\"docClass\">read</a>, <a href=\"#!/api/Titanium.Stream-method-write\" rel=\"Titanium.Stream-method-write\" class=\"docClass\">write</a> \nand <a href=\"#!/api/Titanium.Stream-method-pump\" rel=\"Titanium.Stream-method-pump\" class=\"docClass\">pump</a> methods provided by the <a href=\"#!/api/Titanium.Stream\" rel=\"Titanium.Stream\" class=\"docClass\">Titanium.Stream</a> module,\nrather than using the socket object's <code>read</code> and <code>write</code> methods directly.</p>\n\n\n\n\n<p>A familiarity with the basics of BSD socket programming is a recommended before using \nsockets with Titanium.</p>\n\n\n\n\n<p>Use the <a href=\"#!/api/Titanium.Network.Socket-method-createTCP\" rel=\"Titanium.Network.Socket-method-createTCP\" class=\"docClass\">Titanium.Network.Socket.createTCP</a> method to create a TCP socket.</p>\n\n\n<p></p>\n\n<h3>Examples</h3>\n\n\n<h4>Simple Socket IO using Stream.pump</h4>\n\n\n<p>The following example uses the <a href=\"#!/api/Titanium.Stream-method-pump\" rel=\"Titanium.Stream-method-pump\" class=\"docClass\">pump</a> method from the <a href=\"#!/api/Titanium.Stream\" rel=\"Titanium.Stream\" class=\"docClass\">Titanium.Stream</a> \nmodule to read data from a socket. The <code>pump</code> method registers a callback that is \ncalled repeatedly to process incoming data from the socket.</p>\n\n\n\n\n<pre><code>var socket = Ti.Network.Socket.createTCP({\n    host: 'blog.example.com', port: 80,\n    connected: function (e) {\n        Ti.API.info('Socket opened!');\n        Ti.Stream.pump(e.socket, readCallback, 1024, true);\n        Ti.Stream.write(socket, Ti.createBuffer({\n            value: 'GET http://blog.example.com/index.html HTTP/1.1\\r\\n\\r\\n'\n        }), writeCallback);\n    },\n        error: function (e) {\n        Ti.API.info('Error (' + e.errorCode + '): ' + e.error);\n    },\n});\nsocket.connect();\n\nfunction writeCallback(e) {\n    Ti.API.info('Successfully wrote to socket.');\n}\n\nfunction readCallback(e) {\n    if (e.bytesProcessed == -1)\n    {\n        // Error / EOF on socket. Do any cleanup here.\n        ...\n    }\n    try {\n        if(e.buffer) {\n            var received = e.buffer.toString();\n            Ti.API.info('Received: ' + received);\n        } else {\n            Ti.API.error('Error: read callback called with no buffer!');\n        }\n    } catch (ex) {\n        Ti.API.error(ex);\n    }\n}\n</code></pre>\n\n\n<h4>Listening Socket Example</h4>\n\n\n<p>The following sample shows a trivial example of using a listening \nsocket. In this case, the application simply sends messages to itself,\nusing the loopback address.</p>\n\n\n\n\n<pre><code>// Hostname to listen on/connect to. Here we use the loopback\n// address. iOS also supports Ti.Platform.address (the address of\n// the WiFi interface).\n// Android supports only the loopback address.\n\nvar hostname = '127.0.0.1';\n\nvar clientSocket = Ti.Network.Socket.createTCP({\n    host : hostname,\n    port : 40404,\n    connected : function(e) {\n        Ti.API.info('Client socket connected!');\n        Ti.Stream.pump(e.socket, pumpCallback, 1024, true);\n        e.socket.write(Ti.createBuffer({\n            value : 'A message from a connecting socket.'\n        }));\n    },\n    error : function(e) {\n        Ti.API.info('Error (' + e.errorCode + '): ' + e.error);\n    }\n});\n\nfunction writeCallback(e) {\n    Ti.API.info('Successfully wrote to socket.');\n}\n\nfunction pumpCallback(e) {\n    // Has the remote socket closed its end?\n    if (e.bytesProcessed &lt; 0) {\n        Ti.API.info(\"Closing client socket.\");\n        clientSocket.close();\n        return;\n    }\n    try {\n        if(e.buffer) {\n            var received = e.buffer.toString();\n            Ti.API.info('Received: ' + received);\n        } else {\n            Ti.API.error('Error: read callback called with no buffer!');\n        }\n    } catch (ex) {\n        Ti.API.error(ex);\n    }\n}\n\n//Create a socket and listen for incoming connections\nvar listenSocket = Ti.Network.Socket.createTCP({\n    host : hostname,\n    port : 40404,\n    accepted : function(e) {\n        // This where you would usually store the newly-connected socket, e.inbound\n        // so it can be used for read / write operations elsewhere in the app.\n        // In this case, we simply send a message then close the socket.\n        Ti.API.info(\"Listening socket &lt;\" + e.socket + \"&gt; accepted incoming connection &lt;\" + e.inbound + \"&gt;\");\n        e.inbound.write(Ti.createBuffer({\n            value : 'You have been connected to a listening socket.\\r\\n'\n        }));\n        e.inbound.close();\n        // close the accepted socket\n\n    },\n    error : function(e) {\n        Ti.API.error(\"Socket &lt;\" + e.socket + \"&gt; encountered error when listening\");\n        Ti.API.error(\" error code &lt;\" + e.errorCode + \"&gt;\");\n        Ti.API.error(\" error description &lt;\" + e.error + \"&gt;\");\n    }\n});\n// Starts the socket listening for connections, does not accept them\nlistenSocket.listen();\nTi.API.info(\"Listening now...\");\n\n// Tells socket to accept the next inbound connection. listenSocket.accepted gets\n// called when a connection is accepted via accept()\nTi.API.info(\"Calling accept.\");\nlistenSocket.accept({\n    timeout : 10000\n});\n\n// Call connect after a short timeout to ensure the listening socket is ready to go.\nTi.API.info(\"Setting timer to connect.\");\nsetTimeout(function(e)\n{\n    Ti.API.info(\"Calling connect on client socket.\");\n   clientSocket.connect();\n}, 500);\n</code></pre>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>1.7</li><li class='platform-iphone'\n        title='iPhone'>1.7</li><li class='platform-ipad'\n        title='iPad'>1.7</li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-accepted' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-property-accepted' class='name not-expandable'>accepted</a><span> : Callback&lt;<a href=\"#!/api/AcceptedCallbackArgs\" rel=\"AcceptedCallbackArgs\" class=\"docClass\">AcceptedCallbackArgs</a>&gt;</span></div><div class='description'><div class='short'><p>Callback to be fired when a listener accepts a connection.</p>\n\n</div><div class='long'><p>Callback to be fired when a listener accepts a connection.</p>\n\n</div></div></div><div id='property-apiName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-apiName' class='name not-expandable'>apiName</a><span> : String</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>The name of the API that this proxy corresponds to.</p>\n\n</div><div class='long'><p>The name of the API that this proxy corresponds to.</p>\n\n<p><p>The value of this property is the fully qualified name of the API. For example, <a href=\"#!/api/Titanium.UI.Button\" rel=\"Titanium.UI.Button\" class=\"docClass\">Button</a>\nreturns <code>Ti.UI.Button</code>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.2.0</li><li class='platform-iphone'\n        title='iPhone'>3.2.0</li><li class='platform-ipad'\n        title='iPad'>3.2.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.2.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-bubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-bubbleParent' class='name expandable'>bubbleParent</a><span> : Boolean</span></div><div class='description'><div class='short'>Indicates if the proxy will bubble an event to its parent. ...</div><div class='long'><p>Indicates if the proxy will bubble an event to its parent.</p>\n\n<p><p>Some proxies (most commonly views) have a relationship to other proxies, often\nestablished by the add() method. For example, for a button added to a window, a\nclick event on the button would bubble up to the window. Other common parents are\ntable sections to their rows, table views to their sections, and scrollable views\nto their views. Set this property to false to disable the bubbling to the proxy's parent.</p>\n\n</p><p>Default: true</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-connected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-property-connected' class='name not-expandable'>connected</a><span> : Callback&lt;<a href=\"#!/api/ConnectedCallbackArgs\" rel=\"ConnectedCallbackArgs\" class=\"docClass\">ConnectedCallbackArgs</a>&gt;</span></div><div class='description'><div class='short'><p>Callback to be fired when the socket enters the \"connected\" state.</p>\n\n</div><div class='long'><p>Callback to be fired when the socket enters the \"connected\" state.</p>\n\n<p><p>Only invoked following a successful <a href=\"#!/api/Titanium.Network.Socket.TCP-method-connect\" rel=\"Titanium.Network.Socket.TCP-method-connect\" class=\"docClass\">connect</a>\ncall.</p>\n\n\n\n\n<p>Can only be modified when this socket is in the <a href=\"#!/api/Titanium.Network.Socket-property-INITIALIZED\" rel=\"Titanium.Network.Socket-property-INITIALIZED\" class=\"docClass\">INITIALIZED</a> state. </p>\n\n</p></div></div></div><div id='property-error' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-property-error' class='name not-expandable'>error</a><span> : Callback&lt;<a href=\"#!/api/ErrorCallbackArgs\" rel=\"ErrorCallbackArgs\" class=\"docClass\">ErrorCallbackArgs</a>&gt;</span></div><div class='description'><div class='short'><p>Callback to be fired when the socket enters the <a href=\"#!/api/Titanium.Network.Socket-property-ERROR\" rel=\"Titanium.Network.Socket-property-ERROR\" class=\"docClass\">ERROR</a> state.</p>\n\n</div><div class='long'><p>Callback to be fired when the socket enters the <a href=\"#!/api/Titanium.Network.Socket-property-ERROR\" rel=\"Titanium.Network.Socket-property-ERROR\" class=\"docClass\">ERROR</a> state.</p>\n\n</div></div></div><div id='property-host' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-property-host' class='name not-expandable'>host</a><span> : String</span></div><div class='description'><div class='short'><p>The host to connect to or listen on.</p>\n\n</div><div class='long'><p>The host to connect to or listen on.</p>\n\n<p><p>Can only be modified when this socket is in the <a href=\"#!/api/Titanium.Network.Socket-property-INITIALIZED\" rel=\"Titanium.Network.Socket-property-INITIALIZED\" class=\"docClass\">INITIALIZED</a> state. </p>\n\n\n\n\n<p>Supports both IPv4 and IPv6 addresses.</p>\n\n</p></div></div></div><div id='property-lifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-lifecycleContainer' class='name not-expandable'>lifecycleContainer</a><span> : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></span></div><div class='description'><div class='short'><p>The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.</p>\n\n</div><div class='long'><p>The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.</p>\n\n<p><p>If this property is set to a Window or TabGroup, then the corresponding Activity lifecycle event callbacks\nwill also be called on the proxy. Proxies that require the activity lifecycle will need this property set\nto the appropriate containing Window or TabGroup.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-listenQueueSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-property-listenQueueSize' class='name not-expandable'>listenQueueSize</a><span> : Number</span></div><div class='description'><div class='short'><p>Max number of pending incoming connections to be allowed when the socket is in the <a href=\"#!/api/Titanium.Network.Socket-property-LISTENING\" rel=\"Titanium.Network.Socket-property-LISTENING\" class=\"docClass\">LISTENING</a> state.</p>\n\n</div><div class='long'><p>Max number of pending incoming connections to be allowed when the socket is in the <a href=\"#!/api/Titanium.Network.Socket-property-LISTENING\" rel=\"Titanium.Network.Socket-property-LISTENING\" class=\"docClass\">LISTENING</a> state.</p>\n\n<p><p>Any incoming connections received while the max number of pending connections has \nbeen reached will be rejected.</p>\n\n</p></div></div></div><div id='property-port' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-property-port' class='name not-expandable'>port</a><span> : Number</span></div><div class='description'><div class='short'><p>The port to connect to or listen on.</p>\n\n</div><div class='long'><p>The port to connect to or listen on.</p>\n\n<p><p>Can only be modified when this socket is in the <a href=\"#!/api/Titanium.Network.Socket-property-INITIALIZED\" rel=\"Titanium.Network.Socket-property-INITIALIZED\" class=\"docClass\">INITIALIZED</a> state.</p>\n\n</p></div></div></div><div id='property-state' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-property-state' class='name expandable'>state</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>Current state of the socket. ...</div><div class='long'><p>Current state of the socket.</p>\n\n\n\n\n<p>This API can be assigned the following constants:<ul>\n <li> <a href=\"#!/api/Titanium.Network.Socket-property-INITIALIZED\" rel=\"Titanium.Network.Socket-property-INITIALIZED\" class=\"docClass\">Titanium.Network.Socket.INITIALIZED</a>\n <li> <a href=\"#!/api/Titanium.Network.Socket-property-CONNECTED\" rel=\"Titanium.Network.Socket-property-CONNECTED\" class=\"docClass\">Titanium.Network.Socket.CONNECTED</a>\n <li> <a href=\"#!/api/Titanium.Network.Socket-property-LISTENING\" rel=\"Titanium.Network.Socket-property-LISTENING\" class=\"docClass\">Titanium.Network.Socket.LISTENING</a>\n <li> <a href=\"#!/api/Titanium.Network.Socket-property-CLOSED\" rel=\"Titanium.Network.Socket-property-CLOSED\" class=\"docClass\">Titanium.Network.Socket.CLOSED</a>\n <li> <a href=\"#!/api/Titanium.Network.Socket-property-ERROR\" rel=\"Titanium.Network.Socket-property-ERROR\" class=\"docClass\">Titanium.Network.Socket.ERROR</a>\n</li></li></li></li></li></ul></p>\n\n</div></div></div><div id='property-timeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-property-timeout' class='name not-expandable'>timeout</a><span> : Number</span></div><div class='description'><div class='short'><p>Timeout, in milliseconds, for <code>connect</code> and all <code>write</code> operations.</p>\n\n</div><div class='long'><p>Timeout, in milliseconds, for <code>connect</code> and all <code>write</code> operations.</p>\n\n<p><p>Can only be modified when this socket is in the <a href=\"#!/api/Titanium.Network.Socket-property-INITIALIZED\" rel=\"Titanium.Network.Socket-property-INITIALIZED\" class=\"docClass\">INITIALIZED</a> state. </p>\n\n</p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-accept' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-accept' class='name expandable'>accept</a>( <span class='pre'>options</span> )</div><div class='description'><div class='short'>Tells a LISTENING socket to accept a connection request at the top of a listener's request queue when one becomes ava...</div><div class='long'><p>Tells a <a href=\"#!/api/Titanium.Network.Socket-property-LISTENING\" rel=\"Titanium.Network.Socket-property-LISTENING\" class=\"docClass\">LISTENING</a> socket to accept a connection request at the top of a listener's request queue when one becomes available.</p>\n\n<p><p>Nonblocking; if there are no connections in the queue, sets a flag so that \nthe socket accepts the next incoming connection immediately. </p>\n\n\n\n\n<p>Takes an argument, an <a href=\"#!/api/AcceptDict\" rel=\"AcceptDict\" class=\"docClass\">AcceptDict</a> object which assigns options to the new\nconnection.  If the socket is already flagged to accept the next connection, \nthe existing accept options will be updated to use the newly specified <code>options</code> \nobject. </p>\n\n\n\n\n<p>The <code>accepted</code> callback is called when a new connection is accepted as a result of \ncalling <code>accept</code>. The callback argument holds a reference to a new socket,\nrepresenting the accepted connection.</p>\n\n\n\n\n<p>Note that the connected callback is <strong>not</strong> called on the newly created socket. <br>\nThis is because the socket is created in the \n<a href=\"#!/api/Titanium.Network.Socket-property-CONNECTED\" rel=\"Titanium.Network.Socket-property-CONNECTED\" class=\"docClass\">CONNECTED</a> state, so it never transitions\nto the <code>CONNECTED</code> state.</p>\n\n\n\n\n<p>Throws an exception if called on a socket that is not in a \n<a href=\"#!/api/Titanium.Network.Socket-property-LISTENING\" rel=\"Titanium.Network.Socket-property-LISTENING\" class=\"docClass\">LISTENING</a> state.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/AcceptDict\" rel=\"AcceptDict\" class=\"docClass\">AcceptDict</a><div class='sub-desc'><p>Options to be set on next accepted socket.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-addEventListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-addEventListener' class='name expandable'>addEventListener</a>( <span class='pre'>name, callback</span> )</div><div class='description'><div class='short'>Adds the specified callback as an event listener for the named event. ...</div><div class='long'><p>Adds the specified callback as an event listener for the named event.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;Object&gt;<div class='sub-desc'><p>Callback function to invoke when the event is fired.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-applyProperties' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-applyProperties' class='name expandable'>applyProperties</a>( <span class='pre'>props</span> )</div><div class='description'><div class='short'>Applies the properties to the proxy. ...</div><div class='long'><p>Applies the properties to the proxy.</p>\n\n<p><p>Properties are supplied as a dictionary. Each key-value pair in the object is applied to the proxy such that\nmyproxy[key] = value.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>props</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a><div class='sub-desc'><p>A dictionary of properties to apply.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-close' class='name expandable'>close</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Closes a socket. ...</div><div class='long'><p>Closes a socket.</p>\n\n<p><p>Throws exception if the socket is not in a <a href=\"#!/api/Titanium.Network.Socket-property-CONNECTED\" rel=\"Titanium.Network.Socket-property-CONNECTED\" class=\"docClass\">CONNECTED</a> \nor <a href=\"#!/api/Titanium.Network.Socket-property-LISTENING\" rel=\"Titanium.Network.Socket-property-LISTENING\" class=\"docClass\">LISTENING</a> state. Blocking.</p>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul><p>Overrides: <a href='#!/api/Titanium.IOStream-method-close' rel='Titanium.IOStream-method-close' class='docClass'>Titanium.IOStream.close</a></p></div></div></div><div id='method-connect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-connect' class='name expandable'>connect</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Attempts to connect the socket to its host/port. ...</div><div class='long'><p>Attempts to connect the socket to its host/port.</p>\n\n<p><p>Throws an exception if the socket is in a <a href=\"#!/api/Titanium.Network.Socket-property-CONNECTED\" rel=\"Titanium.Network.Socket-property-CONNECTED\" class=\"docClass\">CONNECTED</a> \nor <a href=\"#!/api/Titanium.Network.Socket-property-LISTENING\" rel=\"Titanium.Network.Socket-property-LISTENING\" class=\"docClass\">LISTENING</a> state. \nThrows an exception if a valid host and port has not been set on this socket. </p>\n\n\n\n\n<p>Nonblocking; connection attempts are asynchronous.</p>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-fireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'>name, event</span> )</div><div class='description'><div class='short'>Fires a synthesized event to any registered listeners. ...</div><div class='long'><p>Fires a synthesized event to any registered listeners.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>event</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a><div class='sub-desc'><p>A dictionary of keys and values to add to the <a href=\"#!/api/Titanium.Event\" rel=\"Titanium.Event\" class=\"docClass\">Titanium.Event</a> object sent to the listeners.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-getAccepted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-getAccepted' class='name expandable'>getAccepted</a>( <span class='pre'></span> ) : Callback&lt;<a href=\"#!/api/AcceptedCallbackArgs\" rel=\"AcceptedCallbackArgs\" class=\"docClass\">AcceptedCallbackArgs</a>&gt;</div><div class='description'><div class='short'>Gets the value of the accepted property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-accepted\" rel=\"Titanium.Network.Socket.TCP-property-accepted\" class=\"docClass\">accepted</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Callback&lt;<a href=\"#!/api/AcceptedCallbackArgs\" rel=\"AcceptedCallbackArgs\" class=\"docClass\">AcceptedCallbackArgs</a>&gt;</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getApiName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getApiName' class='name expandable'>getApiName</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Gets the value of the apiName property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-apiName\" rel=\"Titanium.Proxy-property-apiName\" class=\"docClass\">apiName</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.2.0</li><li class='platform-iphone'\n        title='iPhone'>3.2.0</li><li class='platform-ipad'\n        title='iPad'>3.2.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.2.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getBubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getBubbleParent' class='name expandable'>getBubbleParent</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the bubbleParent property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-bubbleParent\" rel=\"Titanium.Proxy-property-bubbleParent\" class=\"docClass\">bubbleParent</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getConnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-getConnected' class='name expandable'>getConnected</a>( <span class='pre'></span> ) : Callback&lt;<a href=\"#!/api/ConnectedCallbackArgs\" rel=\"ConnectedCallbackArgs\" class=\"docClass\">ConnectedCallbackArgs</a>&gt;</div><div class='description'><div class='short'>Gets the value of the connected property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-connected\" rel=\"Titanium.Network.Socket.TCP-property-connected\" class=\"docClass\">connected</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Callback&lt;<a href=\"#!/api/ConnectedCallbackArgs\" rel=\"ConnectedCallbackArgs\" class=\"docClass\">ConnectedCallbackArgs</a>&gt;</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-getError' class='name expandable'>getError</a>( <span class='pre'></span> ) : Callback&lt;<a href=\"#!/api/ErrorCallbackArgs\" rel=\"ErrorCallbackArgs\" class=\"docClass\">ErrorCallbackArgs</a>&gt;</div><div class='description'><div class='short'>Gets the value of the error property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-error\" rel=\"Titanium.Network.Socket.TCP-property-error\" class=\"docClass\">error</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Callback&lt;<a href=\"#!/api/ErrorCallbackArgs\" rel=\"ErrorCallbackArgs\" class=\"docClass\">ErrorCallbackArgs</a>&gt;</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getHost' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-getHost' class='name expandable'>getHost</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Gets the value of the host property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-host\" rel=\"Titanium.Network.Socket.TCP-property-host\" class=\"docClass\">host</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getLifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getLifecycleContainer' class='name expandable'>getLifecycleContainer</a>( <span class='pre'></span> ) : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></div><div class='description'><div class='short'>Gets the value of the lifecycleContainer property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getListenQueueSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-getListenQueueSize' class='name expandable'>getListenQueueSize</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Gets the value of the listenQueueSize property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-listenQueueSize\" rel=\"Titanium.Network.Socket.TCP-property-listenQueueSize\" class=\"docClass\">listenQueueSize</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getPort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-getPort' class='name expandable'>getPort</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Gets the value of the port property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-port\" rel=\"Titanium.Network.Socket.TCP-property-port\" class=\"docClass\">port</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Gets the value of the state property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-state\" rel=\"Titanium.Network.Socket.TCP-property-state\" class=\"docClass\">state</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-getTimeout' class='name expandable'>getTimeout</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Gets the value of the timeout property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-timeout\" rel=\"Titanium.Network.Socket.TCP-property-timeout\" class=\"docClass\">timeout</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isReadable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.IOStream' rel='Titanium.IOStream' class='defined-in docClass'>Titanium.IOStream</a></div><a href='#!/api/Titanium.IOStream-method-isReadable' class='name expandable'>isReadable</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Indicates whether this stream is readable. ...</div><div class='long'><p>Indicates whether this stream is readable.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if stream is readable, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isWritable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.IOStream' rel='Titanium.IOStream' class='defined-in docClass'>Titanium.IOStream</a></div><a href='#!/api/Titanium.IOStream-method-isWritable' class='name expandable'>isWritable</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Indicates whether this stream is writable. ...</div><div class='long'><p>Indicates whether this stream is writable.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if stream is writable, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-listen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-listen' class='name expandable'>listen</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Attempts to start listening on the socket's host/port. ...</div><div class='long'><p>Attempts to start listening on the socket's host/port.</p>\n\n<p><p>The <code>listen</code> call will attempt to listen on the specified host and/or port \nproperty for the socket if they are set.  </p>\n\n\n\n\n<p>Nonblocking; may return before the socket is fully open and listening.</p>\n\n\n\n\n<p>If the socket is already in a <a href=\"#!/api/Titanium.Network.Socket-property-LISTENING\" rel=\"Titanium.Network.Socket-property-LISTENING\" class=\"docClass\">LISTENING</a> or\n<a href=\"#!/api/Titanium.Network.Socket-property-CONNECTED\" rel=\"Titanium.Network.Socket-property-CONNECTED\" class=\"docClass\">CONNECTED</a> state, <code>listen</code> throws an exception\nand sets the socket state to <a href=\"#!/api/Titanium.Network.Socket-property-ERROR\" rel=\"Titanium.Network.Socket-property-ERROR\" class=\"docClass\">ERROR</a>, but does \n<strong>not</strong> fire the error callback.</p>\n\n\n\n\n<p>Any error encountered after the socket starts listening results in the error\ncallback being fired.</p>\n\n</p><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-read' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.IOStream' rel='Titanium.IOStream' class='defined-in docClass'>Titanium.IOStream</a></div><a href='#!/api/Titanium.IOStream-method-read' class='name expandable'>read</a>( <span class='pre'>buffer, [offset], [length]</span> ) : Number</div><div class='description'><div class='short'>Reads data from this stream into a buffer. ...</div><div class='long'><p>Reads data from this stream into a buffer.</p>\n\n<p><p>If <code>offset</code> and <code>length</code> are specified, data is written into the buffer starting at \nposition <code>offset</code>. Data is read from this stream until one of the following occurs:</p>\n\n\n\n\n<ul>\n<li>the end of this stream is reached</li>\n<li>the end of the buffer is reached</li>\n<li>a total of <code>length</code> bytes have been read from the stream</li>\n</ul>\n\n\n\n\n<p>If <code>offset</code> and <code>length</code> are omitted, data is written starting at the beginning\nof the buffer.</p>\n\n\n\n\n<p>Returns the number of bytes read, or -1 if the end of stream was reached before\nany data was read.</p>\n\n\n\n\n<p>Throws an exception on error. For example, if the <code>offset</code> value is past\nthe last byte of <code>buffer</code>. </p>\n\n\n\n\n<p>This method is synchronous. To perform an asynchronous read on an <code>IOStream</code>, use\n<a href=\"#!/api/Titanium.Stream-method-read\" rel=\"Titanium.Stream-method-read\" class=\"docClass\">Titanium.Stream.read</a>.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>buffer</span> : <a href=\"#!/api/Titanium.Buffer\" rel=\"Titanium.Buffer\" class=\"docClass\">Titanium.Buffer</a><div class='sub-desc'><p>Buffer to read stream data into.</p>\n\n</div></li><li><span class='pre'>offset</span> : Number (optional)<div class='sub-desc'><p>Offset into the buffer to start writing stream data.\nIf specified, <code>length</code> must also be specified.</p>\n\n</div></li><li><span class='pre'>length</span> : Number (optional)<div class='sub-desc'><p>Maximum number of bytes to read.\nIf specified, <code>offset</code> must also be specified.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Number of bytes read.</p>\n</div></li></ul></div></div></div><div id='method-removeEventListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-removeEventListener' class='name expandable'>removeEventListener</a>( <span class='pre'>name, callback</span> )</div><div class='description'><div class='short'>Removes the specified callback as an event listener for the named event. ...</div><div class='long'><p>Removes the specified callback as an event listener for the named event.</p>\n\n<p><p>Multiple listeners can be registered for the same event, so the \n<code>callback</code> parameter is used to determine which listener to remove. </p>\n\n\n\n\n<p>When adding a listener, you must save a reference to the callback function\nin order to remove the listener later:</p>\n\n\n\n\n<pre><code>var listener = function() { Ti.API.info(\"Event listener called.\"); }\nwindow.addEventListener('click', listener);\n</code></pre>\n\n\n\n\n<p>To remove the listener, pass in a reference to the callback function:</p>\n\n\n\n\n<pre><code>window.removeEventListener('click', listener);\n</code></pre>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;Object&gt;<div class='sub-desc'><p>Callback function to remove. Must be the same function passed to <code>addEventListener</code>.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setAccepted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-setAccepted' class='name expandable'>setAccepted</a>( <span class='pre'>accepted</span> )</div><div class='description'><div class='short'>Sets the value of the accepted property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-accepted\" rel=\"Titanium.Network.Socket.TCP-property-accepted\" class=\"docClass\">accepted</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accepted</span> : Callback&lt;<a href=\"#!/api/AcceptedCallbackArgs\" rel=\"AcceptedCallbackArgs\" class=\"docClass\">AcceptedCallbackArgs</a>&gt;<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setBubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-setBubbleParent' class='name expandable'>setBubbleParent</a>( <span class='pre'>bubbleParent</span> )</div><div class='description'><div class='short'>Sets the value of the bubbleParent property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Proxy-property-bubbleParent\" rel=\"Titanium.Proxy-property-bubbleParent\" class=\"docClass\">bubbleParent</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bubbleParent</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setConnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-setConnected' class='name expandable'>setConnected</a>( <span class='pre'>connected</span> )</div><div class='description'><div class='short'>Sets the value of the connected property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-connected\" rel=\"Titanium.Network.Socket.TCP-property-connected\" class=\"docClass\">connected</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>connected</span> : Callback&lt;<a href=\"#!/api/ConnectedCallbackArgs\" rel=\"ConnectedCallbackArgs\" class=\"docClass\">ConnectedCallbackArgs</a>&gt;<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-setError' class='name expandable'>setError</a>( <span class='pre'>error</span> )</div><div class='description'><div class='short'>Sets the value of the error property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-error\" rel=\"Titanium.Network.Socket.TCP-property-error\" class=\"docClass\">error</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>error</span> : Callback&lt;<a href=\"#!/api/ErrorCallbackArgs\" rel=\"ErrorCallbackArgs\" class=\"docClass\">ErrorCallbackArgs</a>&gt;<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setHost' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-setHost' class='name expandable'>setHost</a>( <span class='pre'>host</span> )</div><div class='description'><div class='short'>Sets the value of the host property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-host\" rel=\"Titanium.Network.Socket.TCP-property-host\" class=\"docClass\">host</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>host</span> : String<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setLifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-setLifecycleContainer' class='name expandable'>setLifecycleContainer</a>( <span class='pre'>lifecycleContainer</span> )</div><div class='description'><div class='short'>Sets the value of the lifecycleContainer property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lifecycleContainer</span> : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a><div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setListenQueueSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-setListenQueueSize' class='name expandable'>setListenQueueSize</a>( <span class='pre'>listenQueueSize</span> )</div><div class='description'><div class='short'>Sets the value of the listenQueueSize property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-listenQueueSize\" rel=\"Titanium.Network.Socket.TCP-property-listenQueueSize\" class=\"docClass\">listenQueueSize</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listenQueueSize</span> : Number<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setPort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-setPort' class='name expandable'>setPort</a>( <span class='pre'>port</span> )</div><div class='description'><div class='short'>Sets the value of the port property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-port\" rel=\"Titanium.Network.Socket.TCP-property-port\" class=\"docClass\">port</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>port</span> : Number<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Network.Socket.TCP'>Titanium.Network.Socket.TCP</span></div><a href='#!/api/Titanium.Network.Socket.TCP-method-setTimeout' class='name expandable'>setTimeout</a>( <span class='pre'>timeout</span> )</div><div class='description'><div class='short'>Sets the value of the timeout property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Network.Socket.TCP-property-timeout\" rel=\"Titanium.Network.Socket.TCP-property-timeout\" class=\"docClass\">timeout</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-write' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.IOStream' rel='Titanium.IOStream' class='defined-in docClass'>Titanium.IOStream</a></div><a href='#!/api/Titanium.IOStream-method-write' class='name expandable'>write</a>( <span class='pre'>buffer, [offset], [length]</span> ) : Number</div><div class='description'><div class='short'>Writes data from a buffer to this stream. ...</div><div class='long'><p>Writes data from a buffer to this stream.</p>\n\n<p><p>If <code>offset</code> and <code>length</code> are specified, data is read from the buffer starting at\n<code>offset</code>. Bytes are read from the buffer and written to the stream until:</p>\n\n\n\n\n<ul>\n<li>the end of the buffer is reached</li>\n<li><code>length</code> bytes have been written</li>\n<li>the stream returns an error</li>\n</ul>\n\n\n\n\n<p>If <code>offset</code> and <code>length</code> are omitted, all of the data in the buffer is written to\nthis stream.</p>\n\n\n\n\n<p>Returns the number of bytes actually written.</p>\n\n\n\n\n<p>Throws an exception if an error is encountered.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>buffer</span> : <a href=\"#!/api/Titanium.Buffer\" rel=\"Titanium.Buffer\" class=\"docClass\">Titanium.Buffer</a><div class='sub-desc'><p>Buffer to write to this stream.</p>\n\n</div></li><li><span class='pre'>offset</span> : Number (optional)<div class='sub-desc'><p>Offset in the buffer of the first byte to write to the stream.\nIf specified, <code>length</code> must also be specified.</p>\n\n</div></li><li><span class='pre'>length</span> : Number (optional)<div class='sub-desc'><p>Maximum number of bytes to write to the stream.\nIf specified, <code>offset</code> must also be specified.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Number of bytes written.</p>\n</div></li></ul></div></div></div></div></div></div></div>"});