Ext.data.JsonP['Modules_CloudPush']({"tagname":"class","name":"Modules.CloudPush","extends":"Titanium.Module","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"platform":["android 2.0.0"],"editurl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/Modules/CloudPush/CloudPush.yml","description":["<p>The CloudPush module supports Android push notifications for a device by providing a connection\nto the push notification server to the device to receive push notifications and to optionally\npresent a tray notification to the user when a new push notification is received.</p>\n\n<p>This module is only used to receive push notifications.  For information on configuring your\nproject to send push notifications, see {@link Modules.Cloud.PushNotifications}.</p>\n\n<h4>Push Protocols</h4>\n\n<p>As of Release 3.2.0, the CloudPush module only supports Google Cloud Messaging (GCM) for push\nnotifications. MQTT support is deprecated and support was removed in Release 3.2.0. Upgrade your\napplication to use the GCM protocol.</p>\n\n<p>GCM supports devices that run Android 2.2 and later, and requires that the Google Play Store\napplication be installed. For pre-4.0 devices, the user is required to set up their Google\naccount.</p>\n\n<h4>Getting Started</h4>\n\n<p>To use the CloudPush module in your JavaScript code, you need to require it in and\nget a device token with the <code>retrieveDeviceToken</code> method to enable push notifications with Arrow Push.\nIn your project's <code>tiapp.xml</code>, you need to add some keys to configure push notifications.</p>\n\n<p>Note that this module is not included in the Titanium namespace, but it is bundled with the Titanium SDK as of\nversion 2.0.0. To use it, you must require it, like this:</p>\n\n<pre><code>var CloudPush = require('ti.cloudpush');\n</code></pre>\n\n<p>Then, call the <code>retrieveDeviceToken</code> method to get a unique token specific to that device and\nArrow DB application.  This token is used with {@link Modules.Cloud.PushNotifications Arrow PushNotifications calls}\nto subscribe and unsubscribe the device to push notification channels.</p>\n\n<p>Once the device is subscribed to at least one push channel, listen to the module's <code>callback</code>,\n<code>trayClickLaunchedApp</code>, and <code>trayClickFocusedApp</code> events to monitor for incoming push notifications.</p>\n\n<p>This module must also be added to the modules section in your tiapp.xml. This can be done using the Modules list in\nthe Titanium Studio TiApp Editor, or by editing the XML directly and adding the following line to the modules\nelement:</p>\n\n<pre><code>&lt;module platform=\"android\"&gt;ti.cloudpush&lt;/module&gt;\n</code></pre>\n\n<p>Your app must prove that it is allowed to talk to Arrow. This keeps your data secure by preventing anyone from\nmaking requests to Arrow that impersonate your app.</p>\n\n<p>Titanium Studio creates a pair of keys (Development and Production) for each Titanium application depending on the\nuser preference specified during new project creation. This pair of keys will be stored in <code>tiapp.xml</code> and one of the\nkeys will be used during application build depending on the build type (development or production).</p>\n\n<p>To use push notifications, in the <code>tiapp.xml</code> file, you need to specify the Arrow Push keys and push\ntype. The supported properties in <code>tiapp.xml</code> are:</p>\n\n<pre><code>&lt;!-- Property keys for Arrow Push (required) --&gt;\n&lt;property name=\"acs-api-key-development\" type=\"string\"&gt;YOUR DEVELOPMENT API KEY HERE&lt;/property&gt;\n&lt;property name=\"acs-api-key-production\" type=\"string\"&gt;YOUR PRODUCTION API KEY HERE&lt;/property&gt;\n&lt;property name=\"acs-api-key\" type=\"string\"&gt;YOUR API KEY HERE&lt;/property&gt;\n</code></pre>\n\n<p>If a deployment-specific setting is provided (production or development) then that value will be used for the current deployment environment.</p>\n\n<p><em>WARNING</em>: The default properties of this module are used until you set a property for the first time. Because the\nproperties are persisted to the device settings (via {@link Titanium.App.Properties}), the most recent value you set will\nalways be used.</p>\n\n<h4>Virtual Private Cloud Configuration</h4>\n\n<p>If you are using a virtual private cloud (VPC), you need to configure your Arrow Push dispatcher\nURL in order to send push notifications with GCM.  In the <code>tiapp.xml</code> file, add the <code>acs-push-api-url</code>\napplication property and set the node text to the push dispatcher URL provided to you.  The URL may\nbe the same as your custom ArrowDB endpoint and have deployment-specific settings, that is, two\nURLs--one for production and another for the development environment.</p>\n\n<pre><code>&lt;ti:app&gt;\n    &lt;property name=\"acs-push-api-url-production\"&gt;https://api-prod.fooinc.com&lt;/property&gt;\n    &lt;property name=\"acs-push-api-url-development\"&gt;https://api-dev.fooinc.com&lt;/property&gt;\n&lt;/ti:app&gt;\n</code></pre>\n\n<h4>Grouped Notifications</h4>\n\n<p>If the device receives multiple push notifications from the application, Android can group these\nnotifications together as one notification.</p>\n\n<p>To use grouped notifications, add a grouped notification template to either the <code>tiapp.xml</code> file\nor the <code>i18n</code> folder for internationalized versions:</p>\n\n<p><code>tiapp.xml</code>:</p>\n\n<pre><code>&lt;property name=\"acs-grouped-notification-message-development\" type=\"string\"&gt;You have $number$ unread messages.&lt;/property&gt;\n&lt;property name=\"acs-grouped-notification-message-production\" type=\"string\"&gt;You have $number$ unread messages.&lt;/property&gt;\n-or-\n&lt;property name=\"acs-grouped-notification-message\" type=\"string\"&gt;You have $number$ unread messages.&lt;/property&gt;\n</code></pre>\n\n<p><code>i18n/es/strings.xml</code> (example for Spanish):</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources&gt;\n   &lt;string name=\"acs_grouped_notification_message\"&gt;Tienes $number$ mensajes no leidos.&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre>\n\n<p>The <code>$number$</code> variable indicates the number of unread messages.</p> \n<h3>Examples</h3>\n<h4>Listening for Push Notifications</h4>\n<p>This example lets the application retrieve the device token and listens for several events\nto monitor incoming push notifications.</p>\n\n<pre><code>var CloudPush = require('ti.cloudpush');\nCloudPush.retrieveDeviceToken({\n    success: function deviceTokenSuccess(e) {\n        // Use this device token with Ti.Cloud.PushNotifications calls\n        // to subscribe and unsubscribe to push notification channels\n        Ti.API.info('Device Token: ' + e.deviceToken);\n    },\n    error: function deviceTokenError(e) {\n        alert('Failed to register for push! ' + e.error);\n    }\n});\n// These events monitor incoming push notifications\nCloudPush.addEventListener('callback', function (evt) {\n    alert(evt.payload);\n});\nCloudPush.addEventListener('trayClickLaunchedApp', function (evt) {\n    Ti.API.info('Tray Click Launched App (app was not running)');\n});\nCloudPush.addEventListener('trayClickFocusedApp', function (evt) {\n    Ti.API.info('Tray Click Focused App (app was already running)');\n});\n</code></pre>"]},"private":null,"id":"class-Modules.CloudPush","members":{"cfg":[],"property":[{"name":"SERVICE_DISABLED","tagname":"property","owner":"Modules.CloudPush","meta":{"readonly":true,"platform":["android 3.4.1"]},"id":"property-SERVICE_DISABLED"},{"name":"SERVICE_INVALID","tagname":"property","owner":"Modules.CloudPush","meta":{"readonly":true,"platform":["android 3.4.1"]},"id":"property-SERVICE_INVALID"},{"name":"SERVICE_MISSING","tagname":"property","owner":"Modules.CloudPush","meta":{"readonly":true,"platform":["android 3.4.1"]},"id":"property-SERVICE_MISSING"},{"name":"SERVICE_VERSION_UPDATE_REQUIRED","tagname":"property","owner":"Modules.CloudPush","meta":{"readonly":true,"platform":["android 3.4.1"]},"id":"property-SERVICE_VERSION_UPDATE_REQUIRED"},{"name":"SUCCESS","tagname":"property","owner":"Modules.CloudPush","meta":{"readonly":true,"platform":["android 3.4.1"]},"id":"property-SUCCESS"},{"name":"apiName","tagname":"property","owner":"Titanium.Proxy","meta":{"readonly":true,"description":["<p>The value of this property is the fully qualified name of the API. For example, {@link Titanium.UI.Button Button}\nreturns <code>Ti.UI.Button</code>.</p>"],"platform":["android 3.2.0","iphone 3.2.0","ipad 3.2.0","mobileweb 3.2.0","windowsphone 4.1.0"]},"id":"property-apiName"},{"name":"bubbleParent","tagname":"property","owner":"Titanium.Proxy","meta":{"description":["<p>Some proxies (most commonly views) have a relationship to other proxies, often\nestablished by the add() method. For example, for a button added to a window, a\nclick event on the button would bubble up to the window. Other common parents are\ntable sections to their rows, table views to their sections, and scrollable views\nto their views. Set this property to false to disable the bubbling to the proxy's parent.</p>"],"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","windowsphone 4.1.0"]},"id":"property-bubbleParent"},{"name":"enabled","tagname":"property","owner":"Modules.CloudPush","meta":{"deprecated":{"text":"3.2.0 This property was only required to enable push notifications for the legacy MQTT\nprotocol."}},"id":"property-enabled"},{"name":"focusAppOnPush","tagname":"property","owner":"Modules.CloudPush","meta":{"description":["<p>Note that this behavior is rather disruptive to users, and is strongly discouraged.</p>"]},"id":"property-focusAppOnPush"},{"name":"lifecycleContainer","tagname":"property","owner":"Titanium.Proxy","meta":{"description":["<p>If this property is set to a Window or TabGroup, then the corresponding Activity lifecycle event callbacks\nwill also be called on the proxy. Proxies that require the activity lifecycle will need this property set\nto the appropriate containing Window or TabGroup.</p>"],"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"property-lifecycleContainer"},{"name":"showAppOnTrayClick","tagname":"property","owner":"Modules.CloudPush","meta":{"description":["<p>This is only applicable if you have set {@link Modules.CloudPush#property-showTrayNotification showTrayNotification} to true.</p>"]},"id":"property-showAppOnTrayClick"},{"name":"showTrayNotification","tagname":"property","owner":"Modules.CloudPush","meta":{"description":["<p>If your payload is only a string, it will be used as the contentText and tickerText, and your application's name\nwill be used as the contentTitle with a system icon.</p>\n\n<p>Note that in your payload, you can customize this tray notification using any of the properties of a\n{@link Titanium.Android.Notification}, except for contentIntent and deleteIntent (those are automatically set).</p>"]},"id":"property-showTrayNotification"},{"name":"showTrayNotificationsWhenFocused","tagname":"property","owner":"Modules.CloudPush","meta":{"description":["<p>Instead of showing a notification, the {@link Modules.CloudPush#event-callback callback} event will be immediately fired\ninstead.</p>\n\n<p>This is only applicable if you have set {@link Modules.CloudPush#property-showTrayNotification showTrayNotification} to true.</p>"]},"id":"property-showTrayNotificationsWhenFocused"},{"name":"singleCallback","tagname":"property","owner":"Modules.CloudPush","meta":{"description":["<p>In previous versions of the module, clicking on one of the application's push notifications triggered the callbacks for all of the application's push notifications.\nThe new module retains the same behavior by default.</p>\n\n<p>Set this property to true to receive a single callback for the push notification selected by the user, regardless of how many push notifications are displayed in the tray.</p>"]},"id":"property-singleCallback"}],"method":[{"name":"addEventListener","tagname":"method","owner":"Titanium.Proxy","meta":{},"id":"method-addEventListener"},{"name":"applyProperties","tagname":"method","owner":"Titanium.Proxy","meta":{"description":["<p>Properties are supplied as a dictionary. Each key-value pair in the object is applied to the proxy such that\nmyproxy[key] = value.</p>"],"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","mobileweb 3.0.0","windowsphone 4.1.0"]},"id":"method-applyProperties"},{"name":"clearStatus","tagname":"method","owner":"Modules.CloudPush","meta":{"description":["<p>This method is useful to transfer the push type from MQTT to GCM, or changing the GCM sender ID when needed.\nAfter calling this method, the CloudPush module is reinitialized. Use <code>retrieveDeviceToken</code> to\nget the device token again.</p>"],"platform":["android 3.1.2"]},"id":"method-clearStatus"},{"name":"fireEvent","tagname":"method","owner":"Titanium.Proxy","meta":{},"id":"method-fireEvent"},{"name":"getApiName","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.2.0","iphone 3.2.0","ipad 3.2.0","mobileweb 3.2.0","windowsphone 4.1.0"]},"id":"method-getApiName"},{"name":"getBubbleParent","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","windowsphone 4.1.0"]},"id":"method-getBubbleParent"},{"name":"getEnabled","tagname":"method","owner":"Modules.CloudPush","meta":{"deprecated":{"text":"3.2.0 This property was only required to enable push notifications for the legacy MQTT\nprotocol."}},"id":"method-getEnabled"},{"name":"getFocusAppOnPush","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-getFocusAppOnPush"},{"name":"getLifecycleContainer","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"method-getLifecycleContainer"},{"name":"getShowAppOnTrayClick","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-getShowAppOnTrayClick"},{"name":"getShowTrayNotification","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-getShowTrayNotification"},{"name":"getShowTrayNotificationsWhenFocused","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-getShowTrayNotificationsWhenFocused"},{"name":"getSingleCallback","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-getSingleCallback"},{"name":"isGooglePlayServicesAvailable","tagname":"method","owner":"Modules.CloudPush","meta":{"platform":["android 3.4.1"]},"id":"method-isGooglePlayServicesAvailable"},{"name":"removeEventListener","tagname":"method","owner":"Titanium.Proxy","meta":{"description":["<p>Multiple listeners can be registered for the same event, so the \n<code>callback</code> parameter is used to determine which listener to remove. </p>\n\n<p>When adding a listener, you must save a reference to the callback function\nin order to remove the listener later:</p>\n\n<pre><code>var listener = function() { Ti.API.info(\"Event listener called.\"); }\nwindow.addEventListener('click', listener);\n</code></pre>\n\n<p>To remove the listener, pass in a reference to the callback function:</p>\n\n<pre><code>window.removeEventListener('click', listener);\n</code></pre>"]},"id":"method-removeEventListener"},{"name":"retrieveDeviceToken","tagname":"method","owner":"Modules.CloudPush","meta":{"description":["<p>This token is used in calls to Appcelerator Cloud Services to subscribe or unsubscribe to push notification\nchannels. This token is unique to each application and device.</p>"]},"id":"method-retrieveDeviceToken"},{"name":"setBubbleParent","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.0.0","iphone 3.0.0","ipad 3.0.0","windowsphone 4.1.0"]},"id":"method-setBubbleParent"},{"name":"setEnabled","tagname":"method","owner":"Modules.CloudPush","meta":{"deprecated":{"text":"3.2.0 This property was only required to enable push notifications for the legacy MQTT\nprotocol."}},"id":"method-setEnabled"},{"name":"setFocusAppOnPush","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-setFocusAppOnPush"},{"name":"setLifecycleContainer","tagname":"method","owner":"Titanium.Proxy","meta":{"platform":["android 3.6.0","windowsphone 4.1.0"]},"id":"method-setLifecycleContainer"},{"name":"setShowAppOnTrayClick","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-setShowAppOnTrayClick"},{"name":"setShowTrayNotification","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-setShowTrayNotification"},{"name":"setShowTrayNotificationsWhenFocused","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-setShowTrayNotificationsWhenFocused"},{"name":"setSingleCallback","tagname":"method","owner":"Modules.CloudPush","meta":{},"id":"method-setSingleCallback"}],"event":[{"name":"callback","tagname":"event","owner":"Modules.CloudPush","meta":{"description":["<p>If your application is not running when a push is received, the push will be saved in a queue until the next\ntime you add an event listener for this.</p>\n\n<p>This will only be fired once per push notification.</p>\n\n<p>This event will be fired at different times depending on your settings and the application's present state\n(foreground, background, or not running at all). When {@link Modules.CloudPush#property-focusAppOnPush focusAppOnPush} is true, this\nwill fire as soon as you receive a push. When {@link Modules.CloudPush#property-showTrayNotification showTrayNotification} is true, this\nwill fire as soon as the user touches the tray notification to focus your application. Or, if\n{@link Modules.CloudPush#property-showTrayNotificationsWhenFocused showTrayNotificationsWhenFocused} is false, and your application is\nin the foreground, it will be called right away. If both {@link Modules.CloudPush#property-focusAppOnPush focusAppOnPush}\nand {@link Modules.CloudPush#property-showTrayNotification showTrayNotification} are false, this will fire the next time your\napplication is launched and you add an event listener for it.</p>\n\n<p>You can use the {@link Modules.CloudPush#event-trayClickLaunchedApp trayClickLaunchedApp} and\n{@link Modules.CloudPush#event-trayClickFocusedApp trayClickFocusedApp} events to distinguish between the various ways\na push notification can return a user to your application.</p>"]},"id":"event-callback"},{"name":"trayClickFocusedApp","tagname":"event","owner":"Modules.CloudPush","meta":{"description":["<p>Touching it focuses the app, and fires this event.</p>\n\n<p>This is only applicable if you have set {@link Modules.CloudPush#property-showTrayNotification showTrayNotification} to true.</p>"]},"id":"event-trayClickFocusedApp"},{"name":"trayClickLaunchedApp","tagname":"event","owner":"Modules.CloudPush","meta":{"description":["<p>Touching it launches the app, and fires this event.</p>\n\n<p>This is only applicable if you have set {@link Modules.CloudPush#property-showTrayNotification showTrayNotification} to true.</p>"]},"id":"event-trayClickLaunchedApp"}],"css_var":[],"css_mixin":[]},"linenr":38801,"files":[{"filename":"titanium.js","href":"titanium.html#Modules-CloudPush"}],"html_meta":{"platform":"<ul class='platforms'><li class='platform-android'\n        title='Android'>2.0.0</li></ul>","editurl":null,"description":"<p><p>The CloudPush module supports Android push notifications for a device by providing a connection\nto the push notification server to the device to receive push notifications and to optionally\npresent a tray notification to the user when a new push notification is received.</p>\n\n\n\n\n<p>This module is only used to receive push notifications.  For information on configuring your\nproject to send push notifications, see <a href=\"#!/api/Modules.Cloud.PushNotifications\" rel=\"Modules.Cloud.PushNotifications\" class=\"docClass\">Modules.Cloud.PushNotifications</a>.</p>\n\n\n\n\n<h4>Push Protocols</h4>\n\n\n\n\n<p>As of Release 3.2.0, the CloudPush module only supports Google Cloud Messaging (GCM) for push\nnotifications. MQTT support is deprecated and support was removed in Release 3.2.0. Upgrade your\napplication to use the GCM protocol.</p>\n\n\n\n\n<p>GCM supports devices that run Android 2.2 and later, and requires that the Google Play Store\napplication be installed. For pre-4.0 devices, the user is required to set up their Google\naccount.</p>\n\n\n\n\n<h4>Getting Started</h4>\n\n\n\n\n<p>To use the CloudPush module in your JavaScript code, you need to require it in and\nget a device token with the <code>retrieveDeviceToken</code> method to enable push notifications with Arrow Push.\nIn your project's <code>tiapp.xml</code>, you need to add some keys to configure push notifications.</p>\n\n\n\n\n<p>Note that this module is not included in the Titanium namespace, but it is bundled with the Titanium SDK as of\nversion 2.0.0. To use it, you must require it, like this:</p>\n\n\n\n\n<pre><code>var CloudPush = require('ti.cloudpush');\n</code></pre>\n\n\n\n\n<p>Then, call the <code>retrieveDeviceToken</code> method to get a unique token specific to that device and\nArrow DB application.  This token is used with <a href=\"#!/api/Modules.Cloud.PushNotifications\" rel=\"Modules.Cloud.PushNotifications\" class=\"docClass\">Arrow PushNotifications calls</a>\nto subscribe and unsubscribe the device to push notification channels.</p>\n\n\n\n\n<p>Once the device is subscribed to at least one push channel, listen to the module's <code>callback</code>,\n<code>trayClickLaunchedApp</code>, and <code>trayClickFocusedApp</code> events to monitor for incoming push notifications.</p>\n\n\n\n\n<p>This module must also be added to the modules section in your tiapp.xml. This can be done using the Modules list in\nthe Titanium Studio TiApp Editor, or by editing the XML directly and adding the following line to the modules\nelement:</p>\n\n\n\n\n<pre><code>&lt;module platform=\"android\"&gt;ti.cloudpush&lt;/module&gt;\n</code></pre>\n\n\n\n\n<p>Your app must prove that it is allowed to talk to Arrow. This keeps your data secure by preventing anyone from\nmaking requests to Arrow that impersonate your app.</p>\n\n\n\n\n<p>Titanium Studio creates a pair of keys (Development and Production) for each Titanium application depending on the\nuser preference specified during new project creation. This pair of keys will be stored in <code>tiapp.xml</code> and one of the\nkeys will be used during application build depending on the build type (development or production).</p>\n\n\n\n\n<p>To use push notifications, in the <code>tiapp.xml</code> file, you need to specify the Arrow Push keys and push\ntype. The supported properties in <code>tiapp.xml</code> are:</p>\n\n\n\n\n<pre><code>&lt;!-- Property keys for Arrow Push (required) --&gt;\n&lt;property name=\"acs-api-key-development\" type=\"string\"&gt;YOUR DEVELOPMENT API KEY HERE&lt;/property&gt;\n&lt;property name=\"acs-api-key-production\" type=\"string\"&gt;YOUR PRODUCTION API KEY HERE&lt;/property&gt;\n&lt;property name=\"acs-api-key\" type=\"string\"&gt;YOUR API KEY HERE&lt;/property&gt;\n</code></pre>\n\n\n\n\n<p>If a deployment-specific setting is provided (production or development) then that value will be used for the current deployment environment.</p>\n\n\n\n\n<p><em>WARNING</em>: The default properties of this module are used until you set a property for the first time. Because the\nproperties are persisted to the device settings (via <a href=\"#!/api/Titanium.App.Properties\" rel=\"Titanium.App.Properties\" class=\"docClass\">Titanium.App.Properties</a>), the most recent value you set will\nalways be used.</p>\n\n\n\n\n<h4>Virtual Private Cloud Configuration</h4>\n\n\n\n\n<p>If you are using a virtual private cloud (VPC), you need to configure your Arrow Push dispatcher\nURL in order to send push notifications with GCM.  In the <code>tiapp.xml</code> file, add the <code>acs-push-api-url</code>\napplication property and set the node text to the push dispatcher URL provided to you.  The URL may\nbe the same as your custom ArrowDB endpoint and have deployment-specific settings, that is, two\nURLs--one for production and another for the development environment.</p>\n\n\n\n\n<pre><code>&lt;ti:app&gt;\n    &lt;property name=\"acs-push-api-url-production\"&gt;https://api-prod.fooinc.com&lt;/property&gt;\n    &lt;property name=\"acs-push-api-url-development\"&gt;https://api-dev.fooinc.com&lt;/property&gt;\n&lt;/ti:app&gt;\n</code></pre>\n\n\n\n\n<h4>Grouped Notifications</h4>\n\n\n\n\n<p>If the device receives multiple push notifications from the application, Android can group these\nnotifications together as one notification.</p>\n\n\n\n\n<p>To use grouped notifications, add a grouped notification template to either the <code>tiapp.xml</code> file\nor the <code>i18n</code> folder for internationalized versions:</p>\n\n\n\n\n<p><code>tiapp.xml</code>:</p>\n\n\n\n\n<pre><code>&lt;property name=\"acs-grouped-notification-message-development\" type=\"string\"&gt;You have $number$ unread messages.&lt;/property&gt;\n&lt;property name=\"acs-grouped-notification-message-production\" type=\"string\"&gt;You have $number$ unread messages.&lt;/property&gt;\n-or-\n&lt;property name=\"acs-grouped-notification-message\" type=\"string\"&gt;You have $number$ unread messages.&lt;/property&gt;\n</code></pre>\n\n\n\n\n<p><code>i18n/es/strings.xml</code> (example for Spanish):</p>\n\n\n\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources&gt;\n   &lt;string name=\"acs_grouped_notification_message\"&gt;Tienes $number$ mensajes no leidos.&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre>\n\n\n\n\n<p>The <code>$number$</code> variable indicates the number of unread messages.</p>\n\n\n<p></p>\n\n<h3>Examples</h3>\n\n\n<h4>Listening for Push Notifications</h4>\n\n\n<p>This example lets the application retrieve the device token and listens for several events\nto monitor incoming push notifications.</p>\n\n\n\n\n<pre><code>var CloudPush = require('ti.cloudpush');\nCloudPush.retrieveDeviceToken({\n    success: function deviceTokenSuccess(e) {\n        // Use this device token with Ti.Cloud.PushNotifications calls\n        // to subscribe and unsubscribe to push notification channels\n        Ti.API.info('Device Token: ' + e.deviceToken);\n    },\n    error: function deviceTokenError(e) {\n        alert('Failed to register for push! ' + e.error);\n    }\n});\n// These events monitor incoming push notifications\nCloudPush.addEventListener('callback', function (evt) {\n    alert(evt.payload);\n});\nCloudPush.addEventListener('trayClickLaunchedApp', function (evt) {\n    Ti.API.info('Tray Click Launched App (app was not running)');\n});\nCloudPush.addEventListener('trayClickFocusedApp', function (evt) {\n    Ti.API.info('Tray Click Focused App (app was already running)');\n});\n</code></pre>\n\n</p>"},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Titanium.Proxy","Titanium.Module","Modules.CloudPush"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'><ul class=\"sidebar-platforms\"><li class='platform-android' title='Android since Titanium SDK 2.0.0'>Android 2.0.0</li></ul></div><div class='hierarchy'><div class='classes'><div class='subclass'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='docClass'>Titanium.Proxy</a></div><div class='subclass'> &gt; <a href='#!/api/Titanium.Module' rel='Titanium.Module' class='docClass'>Titanium.Module</a></div><div class='subclass'> &gt; <strong>Modules.CloudPush</strong></div></div></div><div class='doc-contents'><p>Provides support for Android push notifications.</p>\n\n<p><p>The CloudPush module supports Android push notifications for a device by providing a connection\nto the push notification server to the device to receive push notifications and to optionally\npresent a tray notification to the user when a new push notification is received.</p>\n\n\n\n\n<p>This module is only used to receive push notifications.  For information on configuring your\nproject to send push notifications, see <a href=\"#!/api/Modules.Cloud.PushNotifications\" rel=\"Modules.Cloud.PushNotifications\" class=\"docClass\">Modules.Cloud.PushNotifications</a>.</p>\n\n\n\n\n<h4>Push Protocols</h4>\n\n\n\n\n<p>As of Release 3.2.0, the CloudPush module only supports Google Cloud Messaging (GCM) for push\nnotifications. MQTT support is deprecated and support was removed in Release 3.2.0. Upgrade your\napplication to use the GCM protocol.</p>\n\n\n\n\n<p>GCM supports devices that run Android 2.2 and later, and requires that the Google Play Store\napplication be installed. For pre-4.0 devices, the user is required to set up their Google\naccount.</p>\n\n\n\n\n<h4>Getting Started</h4>\n\n\n\n\n<p>To use the CloudPush module in your JavaScript code, you need to require it in and\nget a device token with the <code>retrieveDeviceToken</code> method to enable push notifications with Arrow Push.\nIn your project's <code>tiapp.xml</code>, you need to add some keys to configure push notifications.</p>\n\n\n\n\n<p>Note that this module is not included in the Titanium namespace, but it is bundled with the Titanium SDK as of\nversion 2.0.0. To use it, you must require it, like this:</p>\n\n\n\n\n<pre><code>var CloudPush = require('ti.cloudpush');\n</code></pre>\n\n\n\n\n<p>Then, call the <code>retrieveDeviceToken</code> method to get a unique token specific to that device and\nArrow DB application.  This token is used with <a href=\"#!/api/Modules.Cloud.PushNotifications\" rel=\"Modules.Cloud.PushNotifications\" class=\"docClass\">Arrow PushNotifications calls</a>\nto subscribe and unsubscribe the device to push notification channels.</p>\n\n\n\n\n<p>Once the device is subscribed to at least one push channel, listen to the module's <code>callback</code>,\n<code>trayClickLaunchedApp</code>, and <code>trayClickFocusedApp</code> events to monitor for incoming push notifications.</p>\n\n\n\n\n<p>This module must also be added to the modules section in your tiapp.xml. This can be done using the Modules list in\nthe Titanium Studio TiApp Editor, or by editing the XML directly and adding the following line to the modules\nelement:</p>\n\n\n\n\n<pre><code>&lt;module platform=\"android\"&gt;ti.cloudpush&lt;/module&gt;\n</code></pre>\n\n\n\n\n<p>Your app must prove that it is allowed to talk to Arrow. This keeps your data secure by preventing anyone from\nmaking requests to Arrow that impersonate your app.</p>\n\n\n\n\n<p>Titanium Studio creates a pair of keys (Development and Production) for each Titanium application depending on the\nuser preference specified during new project creation. This pair of keys will be stored in <code>tiapp.xml</code> and one of the\nkeys will be used during application build depending on the build type (development or production).</p>\n\n\n\n\n<p>To use push notifications, in the <code>tiapp.xml</code> file, you need to specify the Arrow Push keys and push\ntype. The supported properties in <code>tiapp.xml</code> are:</p>\n\n\n\n\n<pre><code>&lt;!-- Property keys for Arrow Push (required) --&gt;\n&lt;property name=\"acs-api-key-development\" type=\"string\"&gt;YOUR DEVELOPMENT API KEY HERE&lt;/property&gt;\n&lt;property name=\"acs-api-key-production\" type=\"string\"&gt;YOUR PRODUCTION API KEY HERE&lt;/property&gt;\n&lt;property name=\"acs-api-key\" type=\"string\"&gt;YOUR API KEY HERE&lt;/property&gt;\n</code></pre>\n\n\n\n\n<p>If a deployment-specific setting is provided (production or development) then that value will be used for the current deployment environment.</p>\n\n\n\n\n<p><em>WARNING</em>: The default properties of this module are used until you set a property for the first time. Because the\nproperties are persisted to the device settings (via <a href=\"#!/api/Titanium.App.Properties\" rel=\"Titanium.App.Properties\" class=\"docClass\">Titanium.App.Properties</a>), the most recent value you set will\nalways be used.</p>\n\n\n\n\n<h4>Virtual Private Cloud Configuration</h4>\n\n\n\n\n<p>If you are using a virtual private cloud (VPC), you need to configure your Arrow Push dispatcher\nURL in order to send push notifications with GCM.  In the <code>tiapp.xml</code> file, add the <code>acs-push-api-url</code>\napplication property and set the node text to the push dispatcher URL provided to you.  The URL may\nbe the same as your custom ArrowDB endpoint and have deployment-specific settings, that is, two\nURLs--one for production and another for the development environment.</p>\n\n\n\n\n<pre><code>&lt;ti:app&gt;\n    &lt;property name=\"acs-push-api-url-production\"&gt;https://api-prod.fooinc.com&lt;/property&gt;\n    &lt;property name=\"acs-push-api-url-development\"&gt;https://api-dev.fooinc.com&lt;/property&gt;\n&lt;/ti:app&gt;\n</code></pre>\n\n\n\n\n<h4>Grouped Notifications</h4>\n\n\n\n\n<p>If the device receives multiple push notifications from the application, Android can group these\nnotifications together as one notification.</p>\n\n\n\n\n<p>To use grouped notifications, add a grouped notification template to either the <code>tiapp.xml</code> file\nor the <code>i18n</code> folder for internationalized versions:</p>\n\n\n\n\n<p><code>tiapp.xml</code>:</p>\n\n\n\n\n<pre><code>&lt;property name=\"acs-grouped-notification-message-development\" type=\"string\"&gt;You have $number$ unread messages.&lt;/property&gt;\n&lt;property name=\"acs-grouped-notification-message-production\" type=\"string\"&gt;You have $number$ unread messages.&lt;/property&gt;\n-or-\n&lt;property name=\"acs-grouped-notification-message\" type=\"string\"&gt;You have $number$ unread messages.&lt;/property&gt;\n</code></pre>\n\n\n\n\n<p><code>i18n/es/strings.xml</code> (example for Spanish):</p>\n\n\n\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources&gt;\n   &lt;string name=\"acs_grouped_notification_message\"&gt;Tienes $number$ mensajes no leidos.&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre>\n\n\n\n\n<p>The <code>$number$</code> variable indicates the number of unread messages.</p>\n\n\n<p></p>\n\n<h3>Examples</h3>\n\n\n<h4>Listening for Push Notifications</h4>\n\n\n<p>This example lets the application retrieve the device token and listens for several events\nto monitor incoming push notifications.</p>\n\n\n\n\n<pre><code>var CloudPush = require('ti.cloudpush');\nCloudPush.retrieveDeviceToken({\n    success: function deviceTokenSuccess(e) {\n        // Use this device token with Ti.Cloud.PushNotifications calls\n        // to subscribe and unsubscribe to push notification channels\n        Ti.API.info('Device Token: ' + e.deviceToken);\n    },\n    error: function deviceTokenError(e) {\n        alert('Failed to register for push! ' + e.error);\n    }\n});\n// These events monitor incoming push notifications\nCloudPush.addEventListener('callback', function (evt) {\n    alert(evt.payload);\n});\nCloudPush.addEventListener('trayClickLaunchedApp', function (evt) {\n    Ti.API.info('Tray Click Launched App (app was not running)');\n});\nCloudPush.addEventListener('trayClickFocusedApp', function (evt) {\n    Ti.API.info('Tray Click Focused App (app was already running)');\n});\n</code></pre>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>2.0.0</li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-SERVICE_DISABLED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-SERVICE_DISABLED' class='name expandable'>SERVICE_DISABLED</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>Code returned from isGooglePlayServicesAvailable. ...</div><div class='long'><p>Code returned from <a href=\"#!/api/Modules.CloudPush-method-isGooglePlayServicesAvailable\" rel=\"Modules.CloudPush-method-isGooglePlayServicesAvailable\" class=\"docClass\">isGooglePlayServicesAvailable</a>. Google Play services has been disabled on this device.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.4.1</li></ul></div></div></div><div id='property-SERVICE_INVALID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-SERVICE_INVALID' class='name expandable'>SERVICE_INVALID</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>Code returned from isGooglePlayServicesAvailable. ...</div><div class='long'><p>Code returned from <a href=\"#!/api/Modules.CloudPush-method-isGooglePlayServicesAvailable\" rel=\"Modules.CloudPush-method-isGooglePlayServicesAvailable\" class=\"docClass\">isGooglePlayServicesAvailable</a>. The version of Google Play services installed on this device is not authentic.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.4.1</li></ul></div></div></div><div id='property-SERVICE_MISSING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-SERVICE_MISSING' class='name expandable'>SERVICE_MISSING</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>Code returned from isGooglePlayServicesAvailable. ...</div><div class='long'><p>Code returned from <a href=\"#!/api/Modules.CloudPush-method-isGooglePlayServicesAvailable\" rel=\"Modules.CloudPush-method-isGooglePlayServicesAvailable\" class=\"docClass\">isGooglePlayServicesAvailable</a>. Google Play services is not installed on the device.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.4.1</li></ul></div></div></div><div id='property-SERVICE_VERSION_UPDATE_REQUIRED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-SERVICE_VERSION_UPDATE_REQUIRED' class='name expandable'>SERVICE_VERSION_UPDATE_REQUIRED</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>Code returned from isGooglePlayServicesAvailable. ...</div><div class='long'><p>Code returned from <a href=\"#!/api/Modules.CloudPush-method-isGooglePlayServicesAvailable\" rel=\"Modules.CloudPush-method-isGooglePlayServicesAvailable\" class=\"docClass\">isGooglePlayServicesAvailable</a>. Google Play services is out of date.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.4.1</li></ul></div></div></div><div id='property-SUCCESS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-SUCCESS' class='name expandable'>SUCCESS</a><span> : Number</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>Code returned from isGooglePlayServicesAvailable. ...</div><div class='long'><p>Code returned from <a href=\"#!/api/Modules.CloudPush-method-isGooglePlayServicesAvailable\" rel=\"Modules.CloudPush-method-isGooglePlayServicesAvailable\" class=\"docClass\">isGooglePlayServicesAvailable</a>. Google Play services is available, and the connection is successful.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.4.1</li></ul></div></div></div><div id='property-apiName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-apiName' class='name not-expandable'>apiName</a><span> : String</span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'><p>The name of the API that this proxy corresponds to.</p>\n\n</div><div class='long'><p>The name of the API that this proxy corresponds to.</p>\n\n<p><p>The value of this property is the fully qualified name of the API. For example, <a href=\"#!/api/Titanium.UI.Button\" rel=\"Titanium.UI.Button\" class=\"docClass\">Button</a>\nreturns <code>Ti.UI.Button</code>.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.2.0</li><li class='platform-iphone'\n        title='iPhone'>3.2.0</li><li class='platform-ipad'\n        title='iPad'>3.2.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.2.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-bubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-bubbleParent' class='name expandable'>bubbleParent</a><span> : Boolean</span></div><div class='description'><div class='short'>Indicates if the proxy will bubble an event to its parent. ...</div><div class='long'><p>Indicates if the proxy will bubble an event to its parent.</p>\n\n<p><p>Some proxies (most commonly views) have a relationship to other proxies, often\nestablished by the add() method. For example, for a button added to a window, a\nclick event on the button would bubble up to the window. Other common parents are\ntable sections to their rows, table views to their sections, and scrollable views\nto their views. Set this property to false to disable the bubbling to the proxy's parent.</p>\n\n</p><p>Default: true</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-enabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-enabled' class='name expandable'>enabled</a><span> : Boolean</span><strong class='deprecated signature' >deprecated</strong></div><div class='description'><div class='short'>Whether or not this device will receive push notifications. ...</div><div class='long'><p>Whether or not this device will receive push notifications.</p>\n\n        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> <p>3.2.0 This property was only required to enable push notifications for the legacy MQTT\nprotocol.</p>\n</p>\n        </div>\n<p>Default: false</p></div></div></div><div id='property-focusAppOnPush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-focusAppOnPush' class='name expandable'>focusAppOnPush</a><span> : Boolean</span></div><div class='description'><div class='short'>Whether or not your application is brought to the foreground whenever a new push is received. ...</div><div class='long'><p>Whether or not your application is brought to the foreground whenever a new push is received.</p>\n\n<p><p>Note that this behavior is rather disruptive to users, and is strongly discouraged.</p>\n\n</p><p>Default: false</p></div></div></div><div id='property-lifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-property-lifecycleContainer' class='name not-expandable'>lifecycleContainer</a><span> : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></span></div><div class='description'><div class='short'><p>The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.</p>\n\n</div><div class='long'><p>The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.</p>\n\n<p><p>If this property is set to a Window or TabGroup, then the corresponding Activity lifecycle event callbacks\nwill also be called on the proxy. Proxies that require the activity lifecycle will need this property set\nto the appropriate containing Window or TabGroup.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul></div></div></div><div id='property-showAppOnTrayClick' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-showAppOnTrayClick' class='name expandable'>showAppOnTrayClick</a><span> : Boolean</span></div><div class='description'><div class='short'>Whether or not clicking the tray notification will bring your application to the foreground. ...</div><div class='long'><p>Whether or not clicking the tray notification will bring your application to the foreground.</p>\n\n<p><p>This is only applicable if you have set <a href=\"#!/api/Modules.CloudPush-property-showTrayNotification\" rel=\"Modules.CloudPush-property-showTrayNotification\" class=\"docClass\">showTrayNotification</a> to true.</p>\n\n</p><p>Default: true</p></div></div></div><div id='property-showTrayNotification' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-showTrayNotification' class='name expandable'>showTrayNotification</a><span> : Boolean</span></div><div class='description'><div class='short'>Whether or not to show a tray notification when a new push is received. ...</div><div class='long'><p>Whether or not to show a tray notification when a new push is received.</p>\n\n<p><p>If your payload is only a string, it will be used as the contentText and tickerText, and your application's name\nwill be used as the contentTitle with a system icon.</p>\n\n\n\n\n<p>Note that in your payload, you can customize this tray notification using any of the properties of a\n<a href=\"#!/api/Titanium.Android.Notification\" rel=\"Titanium.Android.Notification\" class=\"docClass\">Titanium.Android.Notification</a>, except for contentIntent and deleteIntent (those are automatically set).</p>\n\n</p><p>Default: true</p></div></div></div><div id='property-showTrayNotificationsWhenFocused' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-showTrayNotificationsWhenFocused' class='name expandable'>showTrayNotificationsWhenFocused</a><span> : Boolean</span></div><div class='description'><div class='short'>Whether or not to show tray notifications when your application is in the foreground. ...</div><div class='long'><p>Whether or not to show tray notifications when your application is in the foreground.</p>\n\n<p><p>Instead of showing a notification, the <a href=\"#!/api/Modules.CloudPush-event-callback\" rel=\"Modules.CloudPush-event-callback\" class=\"docClass\">callback</a> event will be immediately fired\ninstead.</p>\n\n\n\n\n<p>This is only applicable if you have set <a href=\"#!/api/Modules.CloudPush-property-showTrayNotification\" rel=\"Modules.CloudPush-property-showTrayNotification\" class=\"docClass\">showTrayNotification</a> to true.</p>\n\n</p><p>Default: false</p></div></div></div><div id='property-singleCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-property-singleCallback' class='name expandable'>singleCallback</a><span> : Boolean</span></div><div class='description'><div class='short'>Set to true to trigger a single callback for the selected push notification when multiple push notifications are disp...</div><div class='long'><p>Set to true to trigger a single callback for the selected push notification when multiple push notifications are displayed in the tray.</p>\n\n<p><p>In previous versions of the module, clicking on one of the application's push notifications triggered the callbacks for all of the application's push notifications.\nThe new module retains the same behavior by default.</p>\n\n\n\n\n<p>Set this property to true to receive a single callback for the push notification selected by the user, regardless of how many push notifications are displayed in the tray.</p>\n\n</p><p>Default: false</p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addEventListener' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-addEventListener' class='name expandable'>addEventListener</a>( <span class='pre'>name, callback</span> )</div><div class='description'><div class='short'>Adds the specified callback as an event listener for the named event. ...</div><div class='long'><p>Adds the specified callback as an event listener for the named event.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;Object&gt;<div class='sub-desc'><p>Callback function to invoke when the event is fired.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-applyProperties' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-applyProperties' class='name expandable'>applyProperties</a>( <span class='pre'>props</span> )</div><div class='description'><div class='short'>Applies the properties to the proxy. ...</div><div class='long'><p>Applies the properties to the proxy.</p>\n\n<p><p>Properties are supplied as a dictionary. Each key-value pair in the object is applied to the proxy such that\nmyproxy[key] = value.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>props</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a><div class='sub-desc'><p>A dictionary of properties to apply.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-clearStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-clearStatus' class='name expandable'>clearStatus</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Clears the CloudPush module's stored status, including the push type, device token, GCM sender ID, etc. ...</div><div class='long'><p>Clears the CloudPush module's stored status, including the push type, device token, GCM sender ID, etc.</p>\n\n<p><p>This method is useful to transfer the push type from MQTT to GCM, or changing the GCM sender ID when needed.\nAfter calling this method, the CloudPush module is reinitialized. Use <code>retrieveDeviceToken</code> to\nget the device token again.</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>3.1.2</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-fireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'>name, event</span> )</div><div class='description'><div class='short'>Fires a synthesized event to any registered listeners. ...</div><div class='long'><p>Fires a synthesized event to any registered listeners.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>event</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a><div class='sub-desc'><p>A dictionary of keys and values to add to the <a href=\"#!/api/Titanium.Event\" rel=\"Titanium.Event\" class=\"docClass\">Titanium.Event</a> object sent to the listeners.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-getApiName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getApiName' class='name expandable'>getApiName</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Gets the value of the apiName property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-apiName\" rel=\"Titanium.Proxy-property-apiName\" class=\"docClass\">apiName</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.2.0</li><li class='platform-iphone'\n        title='iPhone'>3.2.0</li><li class='platform-ipad'\n        title='iPad'>3.2.0</li><li class='platform-mobileweb'\n        title='Mobile Web'>3.2.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getBubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getBubbleParent' class='name expandable'>getBubbleParent</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the bubbleParent property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-bubbleParent\" rel=\"Titanium.Proxy-property-bubbleParent\" class=\"docClass\">bubbleParent</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-getEnabled' class='name expandable'>getEnabled</a>( <span class='pre'></span> ) : Boolean<strong class='deprecated signature' >deprecated</strong></div><div class='description'><div class='short'>Gets the value of the enabled property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.CloudPush-property-enabled\" rel=\"Modules.CloudPush-property-enabled\" class=\"docClass\">enabled</a> property.</p>\n\n        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> <p>3.2.0 This property was only required to enable push notifications for the legacy MQTT\nprotocol.</p>\n</p>\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getFocusAppOnPush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-getFocusAppOnPush' class='name expandable'>getFocusAppOnPush</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the focusAppOnPush property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.CloudPush-property-focusAppOnPush\" rel=\"Modules.CloudPush-property-focusAppOnPush\" class=\"docClass\">focusAppOnPush</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getLifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-getLifecycleContainer' class='name expandable'>getLifecycleContainer</a>( <span class='pre'></span> ) : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></div><div class='description'><div class='short'>Gets the value of the lifecycleContainer property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getShowAppOnTrayClick' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-getShowAppOnTrayClick' class='name expandable'>getShowAppOnTrayClick</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the showAppOnTrayClick property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.CloudPush-property-showAppOnTrayClick\" rel=\"Modules.CloudPush-property-showAppOnTrayClick\" class=\"docClass\">showAppOnTrayClick</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getShowTrayNotification' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-getShowTrayNotification' class='name expandable'>getShowTrayNotification</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the showTrayNotification property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.CloudPush-property-showTrayNotification\" rel=\"Modules.CloudPush-property-showTrayNotification\" class=\"docClass\">showTrayNotification</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getShowTrayNotificationsWhenFocused' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-getShowTrayNotificationsWhenFocused' class='name expandable'>getShowTrayNotificationsWhenFocused</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the showTrayNotificationsWhenFocused property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.CloudPush-property-showTrayNotificationsWhenFocused\" rel=\"Modules.CloudPush-property-showTrayNotificationsWhenFocused\" class=\"docClass\">showTrayNotificationsWhenFocused</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getSingleCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-getSingleCallback' class='name expandable'>getSingleCallback</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Gets the value of the singleCallback property. ...</div><div class='long'><p>Gets the value of the <a href=\"#!/api/Modules.CloudPush-property-singleCallback\" rel=\"Modules.CloudPush-property-singleCallback\" class=\"docClass\">singleCallback</a> property.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isGooglePlayServicesAvailable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-isGooglePlayServicesAvailable' class='name expandable'>isGooglePlayServicesAvailable</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Returns a code to indicate whether Google Play Services is available on the device. ...</div><div class='long'><p>Returns a code to indicate whether Google Play Services is available on the device.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.4.1</li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>One of the following status codes:\n&lt;<a href=\"#!/api/Modules.CloudPush-property-SUCCESS\" rel=\"Modules.CloudPush-property-SUCCESS\" class=\"docClass\">Modules.CloudPush.SUCCESS</a>>, &lt;<a href=\"#!/api/Modules.CloudPush-property-SERVICE_MISSING\" rel=\"Modules.CloudPush-property-SERVICE_MISSING\" class=\"docClass\">Modules.CloudPush.SERVICE_MISSING</a>>,\n&lt;<a href=\"#!/api/Modules.CloudPush-property-SERVICE_VERSION_UPDATE_REQUIRED\" rel=\"Modules.CloudPush-property-SERVICE_VERSION_UPDATE_REQUIRED\" class=\"docClass\">Modules.CloudPush.SERVICE_VERSION_UPDATE_REQUIRED</a>>,\n&lt;<a href=\"#!/api/Modules.CloudPush-property-SERVICE_DISABLED\" rel=\"Modules.CloudPush-property-SERVICE_DISABLED\" class=\"docClass\">Modules.CloudPush.SERVICE_DISABLED</a>> or &lt;<a href=\"#!/api/Modules.CloudPush-property-SERVICE_INVALID\" rel=\"Modules.CloudPush-property-SERVICE_INVALID\" class=\"docClass\">Modules.CloudPush.SERVICE_INVALID</a>>.</p>\n</div></li></ul></div></div></div><div id='method-removeEventListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-removeEventListener' class='name expandable'>removeEventListener</a>( <span class='pre'>name, callback</span> )</div><div class='description'><div class='short'>Removes the specified callback as an event listener for the named event. ...</div><div class='long'><p>Removes the specified callback as an event listener for the named event.</p>\n\n<p><p>Multiple listeners can be registered for the same event, so the \n<code>callback</code> parameter is used to determine which listener to remove. </p>\n\n\n\n\n<p>When adding a listener, you must save a reference to the callback function\nin order to remove the listener later:</p>\n\n\n\n\n<pre><code>var listener = function() { Ti.API.info(\"Event listener called.\"); }\nwindow.addEventListener('click', listener);\n</code></pre>\n\n\n\n\n<p>To remove the listener, pass in a reference to the callback function:</p>\n\n\n\n\n<pre><code>window.removeEventListener('click', listener);\n</code></pre>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the event.</p>\n\n</div></li><li><span class='pre'>callback</span> : Callback&lt;Object&gt;<div class='sub-desc'><p>Callback function to remove. Must be the same function passed to <code>addEventListener</code>.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-retrieveDeviceToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-retrieveDeviceToken' class='name expandable'>retrieveDeviceToken</a>( <span class='pre'>config</span> )</div><div class='description'><div class='short'>Asynchronously retrieves the application specific device token. ...</div><div class='long'><p>Asynchronously retrieves the application specific device token.</p>\n\n<p><p>This token is used in calls to Appcelerator Cloud Services to subscribe or unsubscribe to push notification\nchannels. This token is unique to each application and device.</p>\n\n</p><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/CloudPushNotificationConfig\" rel=\"CloudPushNotificationConfig\" class=\"docClass\">CloudPushNotificationConfig</a><div class='sub-desc'><p>Dictionary specifying token retrieval related options.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setBubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-setBubbleParent' class='name expandable'>setBubbleParent</a>( <span class='pre'>bubbleParent</span> )</div><div class='description'><div class='short'>Sets the value of the bubbleParent property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Proxy-property-bubbleParent\" rel=\"Titanium.Proxy-property-bubbleParent\" class=\"docClass\">bubbleParent</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.0.0</li><li class='platform-iphone'\n        title='iPhone'>3.0.0</li><li class='platform-ipad'\n        title='iPad'>3.0.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bubbleParent</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-setEnabled' class='name expandable'>setEnabled</a>( <span class='pre'>enabled</span> )<strong class='deprecated signature' >deprecated</strong></div><div class='description'><div class='short'>Sets the value of the enabled property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.CloudPush-property-enabled\" rel=\"Modules.CloudPush-property-enabled\" class=\"docClass\">enabled</a> property.</p>\n\n        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> <p>3.2.0 This property was only required to enable push notifications for the legacy MQTT\nprotocol.</p>\n</p>\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setFocusAppOnPush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-setFocusAppOnPush' class='name expandable'>setFocusAppOnPush</a>( <span class='pre'>focusAppOnPush</span> )</div><div class='description'><div class='short'>Sets the value of the focusAppOnPush property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.CloudPush-property-focusAppOnPush\" rel=\"Modules.CloudPush-property-focusAppOnPush\" class=\"docClass\">focusAppOnPush</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>focusAppOnPush</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setLifecycleContainer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Titanium.Proxy' rel='Titanium.Proxy' class='defined-in docClass'>Titanium.Proxy</a></div><a href='#!/api/Titanium.Proxy-method-setLifecycleContainer' class='name expandable'>setLifecycleContainer</a>( <span class='pre'>lifecycleContainer</span> )</div><div class='description'><div class='short'>Sets the value of the lifecycleContainer property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n<ul class='platforms'><li class='platform-android'\n        title='Android'>3.6.0</li><li class='platform-windowsphone'\n        title='Window Phone'>4.1.0</li></ul><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lifecycleContainer</span> : <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Titanium.UI.Window</a>/<a href=\"#!/api/Titanium.UI.TabGroup\" rel=\"Titanium.UI.TabGroup\" class=\"docClass\">Titanium.UI.TabGroup</a><div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setShowAppOnTrayClick' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-setShowAppOnTrayClick' class='name expandable'>setShowAppOnTrayClick</a>( <span class='pre'>showAppOnTrayClick</span> )</div><div class='description'><div class='short'>Sets the value of the showAppOnTrayClick property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.CloudPush-property-showAppOnTrayClick\" rel=\"Modules.CloudPush-property-showAppOnTrayClick\" class=\"docClass\">showAppOnTrayClick</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>showAppOnTrayClick</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setShowTrayNotification' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-setShowTrayNotification' class='name expandable'>setShowTrayNotification</a>( <span class='pre'>showTrayNotification</span> )</div><div class='description'><div class='short'>Sets the value of the showTrayNotification property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.CloudPush-property-showTrayNotification\" rel=\"Modules.CloudPush-property-showTrayNotification\" class=\"docClass\">showTrayNotification</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>showTrayNotification</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setShowTrayNotificationsWhenFocused' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-setShowTrayNotificationsWhenFocused' class='name expandable'>setShowTrayNotificationsWhenFocused</a>( <span class='pre'>showTrayNotificationsWhenFocused</span> )</div><div class='description'><div class='short'>Sets the value of the showTrayNotificationsWhenFocused property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.CloudPush-property-showTrayNotificationsWhenFocused\" rel=\"Modules.CloudPush-property-showTrayNotificationsWhenFocused\" class=\"docClass\">showTrayNotificationsWhenFocused</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>showTrayNotificationsWhenFocused</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-setSingleCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-method-setSingleCallback' class='name expandable'>setSingleCallback</a>( <span class='pre'>singleCallback</span> )</div><div class='description'><div class='short'>Sets the value of the singleCallback property. ...</div><div class='long'><p>Sets the value of the <a href=\"#!/api/Modules.CloudPush-property-singleCallback\" rel=\"Modules.CloudPush-property-singleCallback\" class=\"docClass\">singleCallback</a> property.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>singleCallback</span> : Boolean<div class='sub-desc'><p>New value for the property.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-callback' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-event-callback' class='name expandable'>callback</a></div><div class='description'><div class='short'>Fired whenever a push notification is received. ...</div><div class='long'><p>Fired whenever a push notification is received.</p>\n\n<p><p>If your application is not running when a push is received, the push will be saved in a queue until the next\ntime you add an event listener for this.</p>\n\n\n\n\n<p>This will only be fired once per push notification.</p>\n\n\n\n\n<p>This event will be fired at different times depending on your settings and the application's present state\n(foreground, background, or not running at all). When <a href=\"#!/api/Modules.CloudPush-property-focusAppOnPush\" rel=\"Modules.CloudPush-property-focusAppOnPush\" class=\"docClass\">focusAppOnPush</a> is true, this\nwill fire as soon as you receive a push. When <a href=\"#!/api/Modules.CloudPush-property-showTrayNotification\" rel=\"Modules.CloudPush-property-showTrayNotification\" class=\"docClass\">showTrayNotification</a> is true, this\nwill fire as soon as the user touches the tray notification to focus your application. Or, if\n<a href=\"#!/api/Modules.CloudPush-property-showTrayNotificationsWhenFocused\" rel=\"Modules.CloudPush-property-showTrayNotificationsWhenFocused\" class=\"docClass\">showTrayNotificationsWhenFocused</a> is false, and your application is\nin the foreground, it will be called right away. If both <a href=\"#!/api/Modules.CloudPush-property-focusAppOnPush\" rel=\"Modules.CloudPush-property-focusAppOnPush\" class=\"docClass\">focusAppOnPush</a>\nand <a href=\"#!/api/Modules.CloudPush-property-showTrayNotification\" rel=\"Modules.CloudPush-property-showTrayNotification\" class=\"docClass\">showTrayNotification</a> are false, this will fire the next time your\napplication is launched and you add an event listener for it.</p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Modules.CloudPush-event-trayClickLaunchedApp\" rel=\"Modules.CloudPush-event-trayClickLaunchedApp\" class=\"docClass\">trayClickLaunchedApp</a> and\n<a href=\"#!/api/Modules.CloudPush-event-trayClickFocusedApp\" rel=\"Modules.CloudPush-event-trayClickFocusedApp\" class=\"docClass\">trayClickFocusedApp</a> events to distinguish between the various ways\na push notification can return a user to your application.</p>\n\n</p><h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>payload</span> : String<div class='sub-desc'><p>A JSON string of your data payload. Use JSON.parse to turn this into an object you can use.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-trayClickFocusedApp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-event-trayClickFocusedApp' class='name expandable'>trayClickFocusedApp</a></div><div class='description'><div class='short'>Fired when a tray notification is shown and the application is already running. ...</div><div class='long'><p>Fired when a tray notification is shown and the application is already running.</p>\n\n<p><p>Touching it focuses the app, and fires this event.</p>\n\n\n\n\n<p>This is only applicable if you have set <a href=\"#!/api/Modules.CloudPush-property-showTrayNotification\" rel=\"Modules.CloudPush-property-showTrayNotification\" class=\"docClass\">showTrayNotification</a> to true.</p>\n\n</p><h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>payload</span> : String<div class='sub-desc'><p>A JSON string of your data payload. Use JSON.parse to turn this into an object you can use.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div><div id='event-trayClickLaunchedApp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Modules.CloudPush'>Modules.CloudPush</span></div><a href='#!/api/Modules.CloudPush-event-trayClickLaunchedApp' class='name expandable'>trayClickLaunchedApp</a></div><div class='description'><div class='short'>Fired when a tray notification is shown and the application is not running. ...</div><div class='long'><p>Fired when a tray notification is shown and the application is not running.</p>\n\n<p><p>Touching it launches the app, and fires this event.</p>\n\n\n\n\n<p>This is only applicable if you have set <a href=\"#!/api/Modules.CloudPush-property-showTrayNotification\" rel=\"Modules.CloudPush-property-showTrayNotification\" class=\"docClass\">showTrayNotification</a> to true.</p>\n\n</p><h3 class=\"pa\">Properties</h3><ul><li><span class='pre'>payload</span> : String<div class='sub-desc'><p>A JSON string of your data payload. Use JSON.parse to turn this into an object you can use.</p>\n\n</div></li><li><span class='pre'>bubbles</span> : Boolean<div class='sub-desc'><p>True if the event will try to bubble up if possible.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>cancelBubble</span> : Boolean<div class='sub-desc'><p>Set to true to stop the event from bubbling.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li></ul></div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Source object that fired the event.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event fired.</p>\n\n<ul class=\"platforms\"><li class='platform-android' title='Android' >&nbsp;</li><li class='platform-iphone' title='iPhone' >&nbsp;</li><li class='platform-ipad' title='iPad' >&nbsp;</li><li class='platform-mobileweb' title='Mobile Web' >&nbsp;</li><li class='platform-windowsphone' title='Windows Phone' >&nbsp;</li></ul></div></li></ul></div></div></div></div></div></div></div>"});