Ext.data.JsonP['MessageReply']({"tagname":"class","name":"MessageReply","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"platform":["iphone 5.1.0"],"pseudo":[null],"editurl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/Titanium/WatchSession/WatchSession.yml"},"private":null,"id":"class-MessageReply","members":{"cfg":[],"property":[{"name":"code","tagname":"property","owner":"MessageReply","meta":{"description":["<p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error\nwas generated by the operating system, that system's error value is used.\nOtherwise, this value will be -1.</p>"]},"id":"property-code"},{"name":"error","tagname":"property","owner":"MessageReply","meta":{"description":["<p>Will be undefined if <code>success</code> is <code>true</code>.</p>"]},"id":"property-error"},{"name":"message","tagname":"property","owner":"MessageReply","meta":{"description":["<p>Will be undefined if <code>success</code> is <code>false</code>.</p>"]},"id":"property-message"},{"name":"success","tagname":"property","owner":"MessageReply","meta":{"description":["<p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>"]},"id":"property-success"}],"method":[],"event":[],"css_var":[],"css_mixin":[]},"linenr":239479,"files":[{"filename":"titanium.js","href":"titanium.html#MessageReply"}],"html_meta":{"platform":"<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.1.0</li></ul>","pseudo":["<p class='private'><strong>NOTE</strong> ","This is an abstract type. Any object meeting this description can be used ","where this type is used.</p>"],"editurl":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'><ul class=\"sidebar-platforms\"><li class='platform-iphone' title='iPhone since Titanium SDK 5.1.0'>iPhone 5.1.0</li></ul></div><div class='hierarchy'></div><div class='doc-contents'><p>Reply message received from watch app.</p>\n\n\n\n\n<p> <b>Requires:</b> \niOS 9.0 and later \n</p>\n\n\n\n\n<h3>Examples</h3>\n\n\n<h4>Creating a Watch Session</h4>\n\n\n<p>The following example demonstrates how to create a new watch session, and call methods to transfer\ndata to the watch. Also include event listeners for receiving data from the watch.</p>\n\n\n\n\n<p>It is important to note that this only works if there is a corresponding watchOS2 app written\nin Objective-C in the Xcode project inside the extensions folder of the Titanium Project.</p>\n\n\n\n\n<h4>app.js</h4>\n\n\n\n\n<pre><code>Ti.WatchSession.activateSession();\n\nvar win = Ti.UI.createWindow({\n    backgroundColor: 'white'\n});\n\nvar eventsArea = Ti.UI.createTextArea({\n  borderWidth: 2,\n  borderColor: '#bbb',\n  borderRadius: 5,\n  color: '#888',\n  font: {fontSize:16},\n  textAlign: 'left',\n  value: 'This is where we listen for events',\n  bottom: 10,\n  width: 300, height : 140\n});\n\nwin.add(eventsArea);\n\nvar imageView = Ti.UI.createImageView ({\n    top: 240,\n    width: 80,\n    height: 80\n});\n\nwin.add(imageView);\n\nvar statusBtn = Ti.UI.createButton({\n    title: 'status me',\n    top: 40\n});\n\nstatusBtn.addEventListener('click', function(e) {\n    eventsArea.value += '\\nbtn pressed '\n    + '\\nwatchOS2 is supported: ' + Ti.WatchSession.isSupported\n    + '\\nwatch is paired: ' + Ti.WatchSession.isPaired\n    + '\\nwatchApp is installed: ' + Ti.WatchSession.isWatchAppInstalled\n    + '\\nwatchComplication is enabled: ' + Ti.WatchSession.isComplicationEnabled\n    + '\\nwatch is reachable: ' + Ti.WatchSession.isReachable\n    + '\\nMost recent app context: ' + JSON.stringify(Ti.WatchSession.recentApplicationContext);\n})\nwin.add(statusBtn);\n\nvar sendMsgBtn = Ti.UI.createButton({\n    title: 'send Message to watch',\n    top: 80\n});\n\nsendMsgBtn.addEventListener('click', function(e) {\n    Ti.WatchSession.sendMessage({\n        message: 'Hi',\n        from: 'app',\n        type: 'message'\n    });\n});\n\nvar sendUserInfoBtn = Ti.UI.createButton({\n    title: 'send User Info to watch',\n    top: 120\n});\n\nsendUserInfoBtn.addEventListener('click', function(e) {\n    Ti.WatchSession.transferUserInfo({\n        data: 'user info from app',\n        created: '2015'\n    });\n});\n\nvar sendAppContextBtn = Ti.UI.createButton({\n    title: 'update app context to watch',\n    top: 160\n});\n\nsendAppContextBtn.addEventListener('click', function(e) {\n    Ti.WatchSession.updateApplicationContext({\n        status: 'Application Context from app',\n        updates: 2\n    });\n});\n\nvar sendFileBtn = Ti.UI.createButton({\n    title: 'send File to watch',\n    top: 200\n});\n\nsendFileBtn.addEventListener('click', function(e) {\n    Ti.WatchSession.transferFile({\n        fileURL: '/images/default_app_logo.png',\n        metaData: {\n            data: 'appcelerator logo'\n        }\n    });\n});\n\nTi.WatchSession.addEventListener('receivemessage', function(e) {\n    eventsArea.value += '\\nreceivemessage '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('receiveuserinfo', function(e) {\n    eventsArea.value += '\\nreceiveuserinfo '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('receivefile', function(e) {\n    eventsArea.value += '\\nreceivefile ' + '\\n' + JSON.stringify(e);\n    var cacheFile = e.data.getFile();\n    var downloadedFile = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory, cacheFile.getName());\n    downloadedFile.write(e.data);\n    imageView.setImage(downloadedFile);\n});\n\nTi.WatchSession.addEventListener('receiveapplicationcontext', function(e) {\n    eventsArea.value += '\\nreceiveapplicationcontext '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('watchstatechanged', function(e) {\n    eventsArea.value += '\\nwatchstatechanged '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('reachabilitychanged', function(e) {\n    eventsArea.value += '\\nreachabilitychanged '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('finishfiletransfer', function(e) {\n    eventsArea.value += '\\nfinishfiletransfer '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('finishuserinfotransfer', function(e) {\n    eventsArea.value += '\\nfinishuserinfotransfer '\n    + '\\n' + JSON.stringify(e);\n});\nwin.add(sendMsgBtn);\nwin.add(sendUserInfoBtn);\nwin.add(sendFileBtn);\nwin.add(sendAppContextBtn);\n\nwin.open();\n</code></pre>\n\n<ul class='platforms'><li class='platform-iphone'\n        title='iPhone'>5.1.0</li></ul><p class='private'><strong>NOTE</strong> This is an abstract type. Any object meeting this description can be used where this type is used.</p></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-code' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MessageReply'>MessageReply</span></div><a href='#!/api/MessageReply-property-code' class='name expandable'>code</a><span> : Number</span></div><div class='description'><div class='short'>Error code. ...</div><div class='long'><p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>\n\n<p><p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error\nwas generated by the operating system, that system's error value is used.\nOtherwise, this value will be -1.</p>\n\n</p></div></div></div><div id='property-error' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MessageReply'>MessageReply</span></div><a href='#!/api/MessageReply-property-error' class='name not-expandable'>error</a><span> : String</span></div><div class='description'><div class='short'><p>Error message, if any returned.</p>\n\n</div><div class='long'><p>Error message, if any returned.</p>\n\n<p><p>Will be undefined if <code>success</code> is <code>true</code>.</p>\n\n</p></div></div></div><div id='property-message' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MessageReply'>MessageReply</span></div><a href='#!/api/MessageReply-property-message' class='name not-expandable'>message</a><span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a></span></div><div class='description'><div class='short'><p>Reply message from watchapp.</p>\n\n</div><div class='long'><p>Reply message from watchapp.</p>\n\n<p><p>Will be undefined if <code>success</code> is <code>false</code>.</p>\n\n</p></div></div></div><div id='property-success' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MessageReply'>MessageReply</span></div><a href='#!/api/MessageReply-property-success' class='name not-expandable'>success</a><span> : Boolean</span></div><div class='description'><div class='short'><p>Indicates if the operation succeeded.</p>\n\n</div><div class='long'><p>Indicates if the operation succeeded.</p>\n\n<p><p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>\n\n</p></div></div></div></div></div></div></div>"});