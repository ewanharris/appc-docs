Ext.data.JsonP['Titanium_Android_BigPictureStyle']({"tagname":"class","name":"Titanium.Android.BigPictureStyle","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"platform":["android 5.4.0"],"pseudo":[null],"editurl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/Titanium/Android/BigPictureStyle.yml","description":["<p>If the platform does not provide large-format notifications, this style helper has no effect.\nThe user will always see the normal notification view.</p>\n\n<p>This style object attaches to a {@link Titanium.UI.Notification} object and modifies its behavior.</p> \n<h3>Examples</h3>\n<h4>Big picture style Example</h4>\n<p>// This example will be use image that placed in one of the density-specific folder\n// under <code>Resources/android/images</code></p>\n\n<p>var bigPictureStyle = Titanium.Android.createBigPictureStyle({\n    bigPicture: \"/images/bigPicture.png\",\n    bigContentTitle: \"Title for big picture\",\n    summaryText: \"Summary for big picture\"\n});</p>\n\n<p>// Create big image style notification\nvar notification = Titanium.Android.createNotification({\n    contentTitle: 'Something Happened',\n    contentText : 'Click to return to the application.',\n    style: bigPictureStyle,\n    time: Date.now()\n});</p>\n\n<p>// Send the notification.\nTitanium.Android.NotificationManager.notify(1, notification);</p>"]},"private":null,"id":"class-Titanium.Android.BigPictureStyle","members":{"cfg":[],"property":[{"name":"bigContentTitle","tagname":"property","owner":"Titanium.Android.BigPictureStyle","meta":{},"id":"property-bigContentTitle"},{"name":"bigLargeIcon","tagname":"property","owner":"Titanium.Android.BigPictureStyle","meta":{"description":["<p>If specified as a URL, the icon must be placed in one of the density-specific\nfolders under <code>Resources/android/images</code>. For example, if your icon is called\n<code>my_big_large_icon.png</code>, you would create high- and medium-density versions of the icons\nwith the following paths:</p>\n\n<pre><code>Resources/android/images/res-hdpi/my_big_large_icon.png\nResources/android/images/res-mdpi/my_big_large_icon.png\n</code></pre>\n\n<p>To access this icon, you'd use the URL '/images/my_big_large_icon.png'.</p>\n\n<p>To access the same icon using an Android resource ID, place the icon in:</p>\n\n<pre><code>platform/android/res/drawable/my_big_large_icon.png\n</code></pre>\n\n<p>This icon's resource ID can be referenced through the {@link Titanium.App.Android.R}\nobject:</p>\n\n<pre><code>icon: Ti.App.Android.R.drawable.my_big_large_icon,\n</code></pre>\n\n<p>See {@link Titanium.App.Android.R} for more information on accessing\nAndroid resources by ID.</p>"]},"id":"property-bigLargeIcon"},{"name":"bigPicture","tagname":"property","owner":"Titanium.Android.BigPictureStyle","meta":{"description":["<p>Image to display, defined using a local filesystem path, a <code>File</code> object, a remote URL,\nor a <code>Blob</code> object containing image data.</p>\n\n<p>If there is a redirect and change in protocol, it will not follow. For example,\nfrom http to https and vice versa. See <a href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4620571\">Java Bug Database</a>\nfor more information.</p>\n\n<p>If specified as a local URL, the bigPicture must be placed in one of the density-specific\nfolders under <code>Resources/android/images</code>. For example, if your bigPicture is called\n<code>my_big_picture.png</code>, you would create high- and medium-density versions of the bigPicture\nwith the following paths:</p>\n\n<pre><code>Resources/android/images/res-hdpi/my_big_picture.png\nResources/android/images/res-mdpi/my_big_picture.png\n</code></pre>\n\n<p>To access this bigPicture, you'd use the URL '/images/my_big_picture.png'.</p>\n\n<p>To access the same bigPicture using an Android resource ID, place the bigPicture in:</p>\n\n<pre><code>platform/android/res/drawable/my_big_picture.png\n</code></pre>\n\n<p>This bigPicture's resource ID can be referenced through the {@link Titanium.App.Android.R}\nobject:</p>\n\n<pre><code>bigPicture: Ti.App.Android.R.drawable.my_big_picture,\n</code></pre>\n\n<p>See {@link Titanium.App.Android.R} for more information on accessing\nAndroid resources by ID.</p>"]},"id":"property-bigPicture"},{"name":"decodeRetries","tagname":"property","owner":"Titanium.Android.BigPictureStyle","meta":{},"id":"property-decodeRetries"},{"name":"summaryText","tagname":"property","owner":"Titanium.Android.BigPictureStyle","meta":{},"id":"property-summaryText"}],"method":[],"event":[],"css_var":[],"css_mixin":[]},"linenr":46819,"files":[{"filename":"titanium.js","href":"titanium.html#Titanium-Android-BigPictureStyle"}],"html_meta":{"platform":"<ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li></ul>","pseudo":["<p class='private'><strong>NOTE</strong> ","This is an abstract type. Any object meeting this description can be used ","where this type is used.</p>"],"editurl":null,"description":"<p><p>If the platform does not provide large-format notifications, this style helper has no effect.\nThe user will always see the normal notification view.</p>\n\n\n\n\n<p>This style object attaches to a <a href=\"#!/api/Titanium.UI.Notification\" rel=\"Titanium.UI.Notification\" class=\"docClass\">Titanium.UI.Notification</a> object and modifies its behavior.</p>\n\n\n<p></p>\n\n<h3>Examples</h3>\n\n\n<h4>Big picture style Example</h4>\n\n\n<p>// This example will be use image that placed in one of the density-specific folder\n// under <code>Resources/android/images</code></p>\n\n\n\n\n<p>var bigPictureStyle = Titanium.Android.createBigPictureStyle({\n    bigPicture: \"/images/bigPicture.png\",\n    bigContentTitle: \"Title for big picture\",\n    summaryText: \"Summary for big picture\"\n});</p>\n\n\n\n\n<p>// Create big image style notification\nvar notification = <a href=\"#!/api/Titanium.Android-method-createNotification\" rel=\"Titanium.Android-method-createNotification\" class=\"docClass\">Titanium.Android.createNotification</a>({\n    contentTitle: 'Something Happened',\n    contentText : 'Click to return to the application.',\n    style: bigPictureStyle,\n    time: Date.now()\n});</p>\n\n\n\n\n<p>// Send the notification.\n<a href=\"#!/api/Titanium.Android.NotificationManager-method-notify\" rel=\"Titanium.Android.NotificationManager-method-notify\" class=\"docClass\">Titanium.Android.NotificationManager.notify</a>(1, notification);</p>\n\n</p>"},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'><ul class=\"sidebar-platforms\"><li class='platform-android' title='Android since Titanium SDK 5.4.0'>Android 5.4.0</li></ul></div><div class='hierarchy'></div><div class='doc-contents'><p>Helper object for generating large-format notifications that include a large image attachment.</p>\n\n<p><p>If the platform does not provide large-format notifications, this style helper has no effect.\nThe user will always see the normal notification view.</p>\n\n\n\n\n<p>This style object attaches to a <a href=\"#!/api/Titanium.UI.Notification\" rel=\"Titanium.UI.Notification\" class=\"docClass\">Titanium.UI.Notification</a> object and modifies its behavior.</p>\n\n\n<p></p>\n\n<h3>Examples</h3>\n\n\n<h4>Big picture style Example</h4>\n\n\n<p>// This example will be use image that placed in one of the density-specific folder\n// under <code>Resources/android/images</code></p>\n\n\n\n\n<p>var bigPictureStyle = Titanium.Android.createBigPictureStyle({\n    bigPicture: \"/images/bigPicture.png\",\n    bigContentTitle: \"Title for big picture\",\n    summaryText: \"Summary for big picture\"\n});</p>\n\n\n\n\n<p>// Create big image style notification\nvar notification = <a href=\"#!/api/Titanium.Android-method-createNotification\" rel=\"Titanium.Android-method-createNotification\" class=\"docClass\">Titanium.Android.createNotification</a>({\n    contentTitle: 'Something Happened',\n    contentText : 'Click to return to the application.',\n    style: bigPictureStyle,\n    time: Date.now()\n});</p>\n\n\n\n\n<p>// Send the notification.\n<a href=\"#!/api/Titanium.Android.NotificationManager-method-notify\" rel=\"Titanium.Android.NotificationManager-method-notify\" class=\"docClass\">Titanium.Android.NotificationManager.notify</a>(1, notification);</p>\n\n</p><ul class='platforms'><li class='platform-android'\n        title='Android'>5.4.0</li></ul><p class='private'><strong>NOTE</strong> This is an abstract type. Any object meeting this description can be used where this type is used.</p></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-bigContentTitle' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Android.BigPictureStyle'>Titanium.Android.BigPictureStyle</span></div><a href='#!/api/Titanium.Android.BigPictureStyle-property-bigContentTitle' class='name expandable'>bigContentTitle</a><span> : String</span></div><div class='description'><div class='short'>Overrides Titanium.Android.Notification.contentTitle in the big form of the notification. ...</div><div class='long'><p>Overrides <a href=\"#!/api/Titanium.Android.Notification-property-contentTitle\" rel=\"Titanium.Android.Notification-property-contentTitle\" class=\"docClass\">Titanium.Android.Notification.contentTitle</a> in the big form of the notification. This defaults to the value passed to <a href=\"#!/api/Titanium.Android.Notification-property-contentTitle\" rel=\"Titanium.Android.Notification-property-contentTitle\" class=\"docClass\">Titanium.Android.Notification.contentTitle</a>.</p>\n\n<p>Default: <a href=\"#!/api/Titanium.Android.Notification-property-contentTitle\" rel=\"Titanium.Android.Notification-property-contentTitle\" class=\"docClass\">Titanium.Android.Notification.contentTitle</a></p></div></div></div><div id='property-bigLargeIcon' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Android.BigPictureStyle'>Titanium.Android.BigPictureStyle</span></div><a href='#!/api/Titanium.Android.BigPictureStyle-property-bigLargeIcon' class='name not-expandable'>bigLargeIcon</a><span> : Number/String</span></div><div class='description'><div class='short'><p>Override the <a href=\"#!/api/Titanium.Android.Notification-property-largeIcon\" rel=\"Titanium.Android.Notification-property-largeIcon\" class=\"docClass\">Titanium.Android.Notification.largeIcon</a> when the big notification is shown.</p>\n\n</div><div class='long'><p>Override the <a href=\"#!/api/Titanium.Android.Notification-property-largeIcon\" rel=\"Titanium.Android.Notification-property-largeIcon\" class=\"docClass\">Titanium.Android.Notification.largeIcon</a> when the big notification is shown.</p>\n\n<p><p>If specified as a URL, the icon must be placed in one of the density-specific\nfolders under <code>Resources/android/images</code>. For example, if your icon is called\n<code>my_big_large_icon.png</code>, you would create high- and medium-density versions of the icons\nwith the following paths:</p>\n\n\n\n\n<pre><code>Resources/android/images/res-hdpi/my_big_large_icon.png\nResources/android/images/res-mdpi/my_big_large_icon.png\n</code></pre>\n\n\n\n\n<p>To access this icon, you'd use the URL '/images/my_big_large_icon.png'.</p>\n\n\n\n\n<p>To access the same icon using an Android resource ID, place the icon in:</p>\n\n\n\n\n<pre><code>platform/android/res/drawable/my_big_large_icon.png\n</code></pre>\n\n\n\n\n<p>This icon's resource ID can be referenced through the <a href=\"#!/api/Titanium.App.Android.R\" rel=\"Titanium.App.Android.R\" class=\"docClass\">Titanium.App.Android.R</a>\nobject:</p>\n\n\n\n\n<pre><code>icon: Ti.App.Android.R.drawable.my_big_large_icon,\n</code></pre>\n\n\n\n\n<p>See <a href=\"#!/api/Titanium.App.Android.R\" rel=\"Titanium.App.Android.R\" class=\"docClass\">Titanium.App.Android.R</a> for more information on accessing\nAndroid resources by ID.</p>\n\n</p></div></div></div><div id='property-bigPicture' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Android.BigPictureStyle'>Titanium.Android.BigPictureStyle</span></div><a href='#!/api/Titanium.Android.BigPictureStyle-property-bigPicture' class='name not-expandable'>bigPicture</a><span> : Number/String/<a href=\"#!/api/Titanium.Blob\" rel=\"Titanium.Blob\" class=\"docClass\">Titanium.Blob</a>/<a href=\"#!/api/Titanium.Filesystem.File\" rel=\"Titanium.Filesystem.File\" class=\"docClass\">Titanium.Filesystem.File</a></span></div><div class='description'><div class='short'><p>Provide the bitmap to be used as the payload for the BigPicture notification.</p>\n\n</div><div class='long'><p>Provide the bitmap to be used as the payload for the BigPicture notification.</p>\n\n<p><p>Image to display, defined using a local filesystem path, a <code>File</code> object, a remote URL,\nor a <code>Blob</code> object containing image data.</p>\n\n\n\n\n<p>If there is a redirect and change in protocol, it will not follow. For example,\nfrom http to https and vice versa. See <a href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4620571\">Java Bug Database</a>\nfor more information.</p>\n\n\n\n\n<p>If specified as a local URL, the bigPicture must be placed in one of the density-specific\nfolders under <code>Resources/android/images</code>. For example, if your bigPicture is called\n<code>my_big_picture.png</code>, you would create high- and medium-density versions of the bigPicture\nwith the following paths:</p>\n\n\n\n\n<pre><code>Resources/android/images/res-hdpi/my_big_picture.png\nResources/android/images/res-mdpi/my_big_picture.png\n</code></pre>\n\n\n\n\n<p>To access this bigPicture, you'd use the URL '/images/my_big_picture.png'.</p>\n\n\n\n\n<p>To access the same bigPicture using an Android resource ID, place the bigPicture in:</p>\n\n\n\n\n<pre><code>platform/android/res/drawable/my_big_picture.png\n</code></pre>\n\n\n\n\n<p>This bigPicture's resource ID can be referenced through the <a href=\"#!/api/Titanium.App.Android.R\" rel=\"Titanium.App.Android.R\" class=\"docClass\">Titanium.App.Android.R</a>\nobject:</p>\n\n\n\n\n<pre><code>bigPicture: Ti.App.Android.R.drawable.my_big_picture,\n</code></pre>\n\n\n\n\n<p>See <a href=\"#!/api/Titanium.App.Android.R\" rel=\"Titanium.App.Android.R\" class=\"docClass\">Titanium.App.Android.R</a> for more information on accessing\nAndroid resources by ID.</p>\n\n</p></div></div></div><div id='property-decodeRetries' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Android.BigPictureStyle'>Titanium.Android.BigPictureStyle</span></div><a href='#!/api/Titanium.Android.BigPictureStyle-property-decodeRetries' class='name expandable'>decodeRetries</a><span> : Number</span></div><div class='description'><div class='short'>Number of times to retry decoding the bitmap at bigPicture URL. ...</div><div class='long'><p>Number of times to retry decoding the bitmap at bigPicture URL.</p>\n\n<p>Default: 5</p></div></div></div><div id='property-summaryText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Titanium.Android.BigPictureStyle'>Titanium.Android.BigPictureStyle</span></div><a href='#!/api/Titanium.Android.BigPictureStyle-property-summaryText' class='name not-expandable'>summaryText</a><span> : String</span></div><div class='description'><div class='short'><p>Set the first line of text after the detail section in the big form of the notification.</p>\n\n</div><div class='long'><p>Set the first line of text after the detail section in the big form of the notification.</p>\n\n</div></div></div></div></div></div></div>"});