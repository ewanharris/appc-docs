Ext.data.JsonP['Alloy_builtins']({"tagname":"class","name":"Alloy.builtins","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"editurl":"https://github.com/appcelerator/alloy/edit/master/docs/apidoc/builtins.js"},"private":null,"id":"class-Alloy.builtins","members":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"linenr":1,"files":[{"filename":"builtins.js","href":"builtins.html#Alloy-builtins"},{"filename":"alloy.js","href":"alloy2.html#Alloy-builtins"}],"html_meta":{"editurl":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>Alloy provides some additional utility libraries that simplify certain functions,\nsuch as animations, string manipultation and display unit conversion.  These libraries\nare referred to as \"builtins.\"</p>\n\n<p>To use a builtin library, require the library name, minus the '.js' extension,\nwith <code>alloy</code> as the root directory in your <code>require</code> call.\nFor example, to use the animation builtin:</p>\n\n<pre><code>var animation = require('alloy/animation');\nanimation.crossFade(view1, view2, 500, finishCallback);\n</code></pre>\n\n<p>During the compilation process, Alloy determines which builtins are being used,\nand adds them to the generated Titanium project.</p>\n</div><div class='members'></div></div>"});