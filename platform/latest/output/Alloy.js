Ext.data.JsonP['Alloy']({"tagname":"class","name":"Alloy","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"editurl":"https://github.com/appcelerator/alloy/edit/master/Alloy/lib/alloy.js"},"private":null,"id":"class-Alloy","members":{"cfg":[],"property":[{"name":"CFG","tagname":"property","owner":"Alloy","meta":{},"id":"property-CFG"},{"name":"Collections","tagname":"property","owner":"Alloy","meta":{},"id":"property-Collections"},{"name":"Globals","tagname":"property","owner":"Alloy","meta":{},"id":"property-Globals"},{"name":"Models","tagname":"property","owner":"Alloy","meta":{},"id":"property-Models"},{"name":"isHandheld","tagname":"property","owner":"Alloy","meta":{},"id":"property-isHandheld"},{"name":"isTablet","tagname":"property","owner":"Alloy","meta":{},"id":"property-isTablet"}],"method":[{"name":"createCollection","tagname":"method","owner":"Alloy","meta":{},"id":"method-createCollection"},{"name":"createController","tagname":"method","owner":"Alloy","meta":{},"id":"method-createController"},{"name":"createModel","tagname":"method","owner":"Alloy","meta":{},"id":"method-createModel"},{"name":"createWidget","tagname":"method","owner":"Alloy","meta":{},"id":"method-createWidget"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":1,"files":[{"filename":"alloy.js","href":"alloy.html#Alloy"},{"filename":"alloy.js","href":"alloy2.html#Alloy"}],"html_meta":{"editurl":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>Top-level module for Alloy functions.</p>\n\n<p>Alloy is an application framework built on top of the Titanium SDK designed to help rapidly\ndevelop high quality applications and reduce maintenance.</p>\n\n<p>Alloy uses the model-view-controller architecture to separate the application into three\ncomponents:</p>\n\n<ul>\n<li><p><strong>Models</strong> provide the data of the application. Alloy utilizes <strong>Backbone Model and Collection</strong>\n objects for this functionality.</p></li>\n<li><p><strong>Views</strong> provide the UI components to interact with the application, written using <strong>XML markup</strong>\nand <strong>Titanium Stylesheets (TSS)</strong>, which abstracts the UI components of the Titanium API.</p></li>\n<li><p><strong>Controllers</strong> provide the glue layer between the Model and View components as well as\nadditional application logic using the <strong>Alloy API</strong> and <strong>Titanium API</strong>.</p></li>\n</ul>\n\n\n<p>The API documentation provided here is used with Alloy Controllers and Widget Controllers to\ninteract with the View and Model components of the application or widget.</p>\n\n<p>For guides on using Alloy, see\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Alloy_Framework\">Alloy Framework</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CFG' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-property-CFG' class='name expandable'>CFG</a><span> : Object</span></div><div class='description'><div class='short'>An object that stores Alloy configuration values as defined in your app's\napp/config.json file. ...</div><div class='long'><p>An object that stores Alloy configuration values as defined in your app's\napp/config.json file. Here's what a typical config.json file might look\nlike in an Alloy app.</p>\n\n<pre><code>{\n    \"global\": { \"key\": \"defaultValue\", \"anotherKey\": 12345 },\n    \"env:development\": {},\n    \"env:test\": {},\n    \"env:production\": {},\n    \"os:ios\": { \"key\": \"iosValue\" },\n    \"os:android\": { \"key\": \"androidValue\" },\n    \"dependencies\": {}\n}\n</code></pre>\n\n<p>If this app was compiled for iOS, the <a href=\"#!/api/Alloy-property-CFG\" rel=\"Alloy-property-CFG\" class=\"docClass\">Alloy.CFG</a> would look like this:</p>\n\n<pre><code><a href=\"#!/api/Alloy-property-CFG\" rel=\"Alloy-property-CFG\" class=\"docClass\">Alloy.CFG</a> = {\n    \"key\": \"iosValue\",\n    \"anotherKey\": 12345\n}\n</code></pre>\n\n<p><a href=\"#!/api/Alloy-property-CFG\" rel=\"Alloy-property-CFG\" class=\"docClass\">Alloy.CFG</a> is accessible in any controller in your app, and can be accessed\nin other non-controller Javascript files like this:</p>\n\n<pre><code>var theKey = require('/alloy').CFG.key;\n</code></pre>\n</div></div></div><div id='property-Collections' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-property-Collections' class='name expandable'>Collections</a><span> : Object</span></div><div class='description'><div class='short'>An object for storing globally accessible Alloy collections. ...</div><div class='long'><p>An object for storing globally accessible Alloy collections. Singleton collections\ncreated via markup will be stored on this object.</p>\n\n<pre><code>&lt;Collection src=\"myModel\"/&gt;\n</code></pre>\n\n<p>The above markup would effectively generate the following code:</p>\n\n<pre><code>Alloy.Collections.myModel = <a href=\"#!/api/Alloy-method-createCollection\" rel=\"Alloy-method-createCollection\" class=\"docClass\">Alloy.createCollection</a>('MyModel');\n</code></pre>\n\n<p>Alloy.Collections.myModel would then be accessible in any controller in your app.</p>\n</div></div></div><div id='property-Globals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-property-Globals' class='name expandable'>Globals</a><span> : Object</span></div><div class='description'><div class='short'>An object for storing globally accessible variables and functions. ...</div><div class='long'><p>An object for storing globally accessible variables and functions.\n<a href=\"#!/api/Alloy-property-Globals\" rel=\"Alloy-property-Globals\" class=\"docClass\">Alloy.Globals</a> is accessible in any controller in your app:</p>\n\n<pre><code>Alloy.Globals.someGlobalObject = { key: 'value' };\nAlloy.Globals.someGlobalFunction = function(){};\n</code></pre>\n\n<p><a href=\"#!/api/Alloy-property-Globals\" rel=\"Alloy-property-Globals\" class=\"docClass\">Alloy.Globals</a> can be accessed in other non-controller Javascript files\nlike this:</p>\n\n<pre><code>var theObject = require('/alloy').Globals.someGlobalObject;\n</code></pre>\n</div></div></div><div id='property-Models' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-property-Models' class='name expandable'>Models</a><span> : Object</span></div><div class='description'><div class='short'>An object for storing globally accessible Alloy models. ...</div><div class='long'><p>An object for storing globally accessible Alloy models. Singleton models\ncreated via markup will be stored on this object.</p>\n\n<pre><code>&lt;Model src=\"myModel\"/&gt;\n</code></pre>\n\n<p>The above markup would effectively generate the following code:</p>\n\n<pre><code>Alloy.Models.myModel = <a href=\"#!/api/Alloy-method-createModel\" rel=\"Alloy-method-createModel\" class=\"docClass\">Alloy.createModel</a>('MyModel');\n</code></pre>\n\n<p>Alloy.Models.myModel would then be accessible in any controller in your app.</p>\n</div></div></div><div id='property-isHandheld' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-property-isHandheld' class='name not-expandable'>isHandheld</a><span> : Boolean</span></div><div class='description'><div class='short'><p><code>true</code> if the current device is a handheld device (not a tablet).</p>\n</div><div class='long'><p><code>true</code> if the current device is a handheld device (not a tablet).</p>\n</div></div></div><div id='property-isTablet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-property-isTablet' class='name not-expandable'>isTablet</a><span> : Boolean</span></div><div class='description'><div class='short'><p><code>true</code> if the current device is a tablet.</p>\n</div><div class='long'><p><code>true</code> if the current device is a tablet.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createCollection' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-method-createCollection' class='name expandable'>createCollection</a>( <span class='pre'>name, [args]</span> ) : Backbone.Collection</div><div class='description'><div class='short'>Factory method for instantiating a Backbone collection of model objects. ...</div><div class='long'><p>Factory method for instantiating a Backbone collection of model objects. Creates and returns a\ncollection for holding the named type of model objects.</p>\n\n<p>See <a href=\"http://docs.appcelerator.com/backbone/0.9.2/#Collection\">Backbone.Collection</a> in the Backbone.js\ndocumentation for  information on the methods and  properties provided by the\nCollection object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of model to hold in this collection.</p>\n\n</div></li><li><span class='pre'>args</span> : Object (optional)<div class='sub-desc'><p>Arguments to pass to the collection.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Backbone.Collection</span><div class='sub-desc'><p>Backbone collection object.</p>\n\n</div></li></ul></div></div></div><div id='method-createController' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-method-createController' class='name expandable'>createController</a>( <span class='pre'>name, [args]</span> ) : <a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a></div><div class='description'><div class='short'>Factory method for instantiating a controller. ...</div><div class='long'><p>Factory method for instantiating a controller. Creates and returns an instance of the\nnamed controller.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of controller to instantiate.</p>\n\n</div></li><li><span class='pre'>args</span> : Object (optional)<div class='sub-desc'><p>Arguments to pass to the controller.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a></span><div class='sub-desc'><p>Alloy controller object.</p>\n\n</div></li></ul></div></div></div><div id='method-createModel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-method-createModel' class='name expandable'>createModel</a>( <span class='pre'>name, [args]</span> ) : Backbone.Model</div><div class='description'><div class='short'>Factory method for instantiating a Backbone Model object. ...</div><div class='long'><p>Factory method for instantiating a Backbone Model object. Creates and returns an instance of the\nnamed model.</p>\n\n<p>See <a href=\"http://docs.appcelerator.com/backbone/0.9.2/#Model\">Backbone.Model</a> in the Backbone.js documentation for\ninformation on the methods and properties provided by the Model object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of model to instantiate.</p>\n\n</div></li><li><span class='pre'>args</span> : Object (optional)<div class='sub-desc'><p>Arguments to pass to the model.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Backbone.Model</span><div class='sub-desc'><p>Backbone model object.</p>\n\n</div></li></ul></div></div></div><div id='method-createWidget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy'>Alloy</span></div><a href='#!/api/Alloy-method-createWidget' class='name expandable'>createWidget</a>( <span class='pre'>id, [name], [args]</span> ) : <a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a></div><div class='description'><div class='short'>Factory method for instantiating a widget controller. ...</div><div class='long'><p>Factory method for instantiating a widget controller. Creates and returns an instance of the\nnamed widget.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>Id of widget to instantiate.</p>\n\n</div></li><li><span class='pre'>name</span> : String (optional)<div class='sub-desc'><p>Name of the view within the widget to instantiate ('widget' by default)</p>\n\nDefault: \"widget\"</div></li><li><span class='pre'>args</span> : Object (optional)<div class='sub-desc'><p>Arguments to pass to the widget.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a></span><div class='sub-desc'><p>Alloy widget controller object.</p>\n\n</div></li></ul></div></div></div></div></div></div></div>"});