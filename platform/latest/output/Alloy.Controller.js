Ext.data.JsonP['Alloy_Controller']({"tagname":"class","name":"Alloy.Controller","extends":"Backbone.Events","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"editurl":"https://github.com/appcelerator/alloy/edit/master/Alloy/lib/alloy/controllers/BaseController.js"},"private":null,"id":"class-Alloy.Controller","members":{"cfg":[],"property":[],"method":[{"name":"addClass","tagname":"method","owner":"Alloy.Controller","meta":{"since":["1.2.0"]},"id":"method-addClass"},{"name":"addListener","tagname":"method","owner":"Alloy.Controller","meta":{"since":["1.7.0"]},"id":"method-addListener"},{"name":"createStyle","tagname":"method","owner":"Alloy.Controller","meta":{"since":["1.2.0"]},"id":"method-createStyle"},{"name":"destroy","tagname":"method","owner":"Alloy.Controller","meta":{},"id":"method-destroy"},{"name":"getListener","tagname":"method","owner":"Alloy.Controller","meta":{"since":["1.7.0"]},"id":"method-getListener"},{"name":"getTopLevelViews","tagname":"method","owner":"Alloy.Controller","meta":{},"id":"method-getTopLevelViews"},{"name":"getView","tagname":"method","owner":"Alloy.Controller","meta":{},"id":"method-getView"},{"name":"getViews","tagname":"method","owner":"Alloy.Controller","meta":{},"id":"method-getViews"},{"name":"removeClass","tagname":"method","owner":"Alloy.Controller","meta":{"since":["1.2.0"]},"id":"method-removeClass"},{"name":"removeListener","tagname":"method","owner":"Alloy.Controller","meta":{"since":["1.7.0"],"chainable":true},"id":"method-removeListener"},{"name":"resetClass","tagname":"method","owner":"Alloy.Controller","meta":{"since":["1.2.0"]},"id":"method-resetClass"},{"name":"updateViews","tagname":"method","owner":"Alloy.Controller","meta":{"since":["1.4.0"],"chainable":true},"id":"method-updateViews"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":5,"files":[{"filename":"BaseController.js","href":"BaseController.html#Alloy-Controller"},{"filename":"alloy.js","href":"alloy2.html#Alloy-Controller"}],"html_meta":{"editurl":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Backbone.Events","Alloy.Controller"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'><div class='classes'><div class='subclass'><a href='#!/api/Backbone.Events' rel='Backbone.Events' class='docClass'>Backbone.Events</a></div><div class='subclass'> &gt; <strong>Alloy.Controller</strong></div></div></div><div class='doc-contents'><p>The base class for Alloy controllers.</p>\n\n<p>Each controller is associated with a UI hierarchy, defined in an XML file in the\n<code>views</code> folder. Each element in the view hierarchy is either a Titanium <a href=\"#!/api/Titanium.UI.View\" rel=\"Titanium.UI.View\" class=\"docClass\">View</a>\nor another Alloy controller or widget. Each Alloy controller or widget can additionally contain\nTitanium Views and/or more controllers and widgets.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addClass' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-addClass' class='name expandable'>addClass</a>( <span class='pre'>proxy, classes, [opts]</span> )</div><div class='description'><div class='short'>Adds a TSS class to the specified view object. ...</div><div class='long'><p>Adds a TSS class to the specified view object.</p>\n\n<p>You can apply additional styles with the <code>opts</code> parameter. To use this method\neffectively you may need to enable autostyling\non the target XML view. See <a href=\"#!/guide/Dynamic_Styles-section-37530415_DynamicStyles-Autostyle\">Autostyle</a>\nin the Alloy developer guide.</p>\n\n<h4>Example</h4>\n\n<p>The following adds the TSS classes \".redbg\" and \".bigger\" to a <a href=\"#!/api/Titanium.UI.Label\" rel=\"Titanium.UI.Label\" class=\"docClass\">Titanium.UI.Label</a>\nobject proxy <code>label1</code>, and also sets the label's <code>text</code> property to \"Cancel\".</p>\n\n<pre><code>// index.js\n$.addClass($.label1, 'redbg bigger', {text: \"Cancel\"});\n</code></pre>\n\n<p>The 'redbg' and 'bigger' classes are shown below:</p>\n\n<pre><code>// index.tss\n\".redbg\" : {\n    color: 'red'\n}\n\".bigger\": {\n    font : {\n       fontSize: '36'\n    }\n}\n</code></pre>\n<h3>Since 1.2.0</h3><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : Object<div class='sub-desc'><p>View object to which to add class(es).</p>\n</div></li><li><span class='pre'>classes</span> : Array&lt;String&gt;/String<div class='sub-desc'><p>Array or space-separated list of classes to apply.</p>\n</div></li><li><span class='pre'>opts</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a> (optional)<div class='sub-desc'><p>Dictionary of properties to apply after classes have been added.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-addListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-addListener' class='name expandable'>addListener</a>( <span class='pre'>proxy, type, callback</span> ) : String</div><div class='description'><div class='short'>Adds a tracked event listeners to a view proxy object. ...</div><div class='long'><p>Adds a tracked event listeners to a view proxy object.\nBy default, any event listener declared in XML is tracked by Alloy.</p>\n\n<h4>Example</h4>\n\n<p>Add an event to the tracking target.</p>\n\n<pre><code>$.addListener($.aView, 'click', onClick);\n</code></pre>\n<h3>Since 1.7.0</h3><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : Object<div class='sub-desc'><p>Proxy view object to listen to.</p>\n</div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Name of the event.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Callback function to invoke when the event is fired.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>ID attribute of the view object.  If one does not exist, Alloy will create a unique ID.</p>\n</div></li></ul></div></div></div><div id='method-createStyle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-createStyle' class='name expandable'>createStyle</a>( <span class='pre'>opts</span> ) : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a></div><div class='description'><div class='short'>Creates a dictionary of properties based on the specified styles. ...</div><div class='long'><p>Creates a dictionary of properties based on the specified styles.</p>\n\n<p>You can use this dictionary with the view object's\n<a href=\"#!/api/Titanium.UI.View-method-applyProperties\" rel=\"Titanium.UI.View-method-applyProperties\" class=\"docClass\">applyProperties</a> method\nor a create object method, such as <a href=\"#!/api/Titanium.UI-method-createView\" rel=\"Titanium.UI-method-createView\" class=\"docClass\">Titanium.UI.createView</a>.</p>\n\n<h4>Examples</h4>\n\n<p>The following creates a new style object that is passed as a parameter\nto the <a href=\"#!/api/Titanium.UI-method-createLabel\" rel=\"Titanium.UI-method-createLabel\" class=\"docClass\">Ti.UI.createLabel()</a> method.</p>\n\n<pre><code>var styleArgs = {\napiName: 'Ti.UI.Label',\n    classes: ['blue','shadow','large'],\n    id: 'tester',\n    borderWidth: 2,\n    borderRadius: 16,\n    borderColor: '#000'\n};\nvar styleObject = $.createStyle(styleArgs);\ntestLabel = Ti.UI.createLabel(styleObject);\n</code></pre>\n\n<p>The next example uses the <a href=\"#!/api/Titanium-method-applyProperties\" rel=\"Titanium-method-applyProperties\" class=\"docClass\">applyProperties()</a> method\nto apply a style object to an existing Button control (button not shown).</p>\n\n<pre><code>var style = $.createStyle({\n    classes: args.button,\n    apiName: 'Button',\n    color: 'blue'\n});\n$.button.applyProperties(style);\n</code></pre>\n<h3>Since 1.2.0</h3><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>opts</span> : <a href=\"#!/api/AlloyStyleDict\" rel=\"AlloyStyleDict\" class=\"docClass\">AlloyStyleDict</a><div class='sub-desc'><p>Dictionary of styles to apply.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Frees binding resources associated with this controller and its\nUI components. ...</div><div class='long'><p>Frees binding resources associated with this controller and its\nUI components. It is critical that this is called when employing\nmodel/collection binding in order to avoid potential memory leaks.\n$.destroy() should be called whenever a controller's UI is to\nbe \"closed\" or removed from the app. See the <a href=\"#!/guide/Destroying_Data_Bindings\">Destroying Data Bindings</a>\ntest application for an example of this approach.</p>\n\n<h4>Example</h4>\n\n<p>In the following example the view-controller for a <a href=\"#!/api/Titanium.UI.Window\" rel=\"Titanium.UI.Window\" class=\"docClass\">Window</a> object named <code>dialog</code>\ncalls its <code>destroy()</code> method in response to the Window object being closed.</p>\n\n<pre><code>$.dialog.addEventListener('close', function() {\n    $.destroy();\n});\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-getListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-getListener' class='name expandable'>getListener</a>( <span class='pre'>[proxy], [type]</span> ) : Array&lt;<a href=\"#!/api/TrackedEventListener\" rel=\"TrackedEventListener\" class=\"docClass\">TrackedEventListener</a>&gt;</div><div class='description'><div class='short'>Gets all the tracked event listeners of the view-controller or\nonly the ones specified by the parameters. ...</div><div class='long'><p>Gets all the tracked event listeners of the view-controller or\nonly the ones specified by the parameters.  Passing no parameters,\nretrieves all tracked event listeners. Set a parameter to <code>null</code>\nif you do not want to restrict the match to that parameter.</p>\n\n<h4>Example</h4>\n\n<p>Get all events bound to the view-controller.</p>\n\n<pre><code>var listener = $.getListener();\n</code></pre>\n<h3>Since 1.7.0</h3><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : Object (optional)<div class='sub-desc'><p>Proxy view object.</p>\n</div></li><li><span class='pre'>type</span> : String (optional)<div class='sub-desc'><p>Name of the event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array&lt;<a href=\"#!/api/TrackedEventListener\" rel=\"TrackedEventListener\" class=\"docClass\">TrackedEventListener</a>&gt;</span><div class='sub-desc'><p>List of tracked event listeners.</p>\n</div></li></ul></div></div></div><div id='method-getTopLevelViews' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-getTopLevelViews' class='name expandable'>getTopLevelViews</a>( <span class='pre'></span> ) : Array.&lt;(<a href=\"#!/api/Titanium.UI.View\" rel=\"Titanium.UI.View\" class=\"docClass\">Titanium.UI.View</a>|<a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a>)&gt;</div><div class='description'><div class='short'>Returns a list of the root view elements associated with this controller. ...</div><div class='long'><p>Returns a list of the root view elements associated with this controller.</p>\n\n<h4>Example</h4>\n\n<p>The following example displays the <code>id</code> of each top-level view associated with the\ncontroller:</p>\n\n<pre><code>// index.js\nvar views = $.getTopLevelViews();\nfor (each in views) {\n    var view = views[each];\n    console.log(view.id);\n}\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array.&lt;(<a href=\"#!/api/Titanium.UI.View\" rel=\"Titanium.UI.View\" class=\"docClass\">Titanium.UI.View</a>|<a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a>)&gt;</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-getView' class='name expandable'>getView</a>( <span class='pre'>[id]</span> ) : <a href=\"#!/api/Titanium.UI.View\" rel=\"Titanium.UI.View\" class=\"docClass\">Titanium.UI.View</a>/<a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a></div><div class='description'><div class='short'>Returns the specified view associated with this controller. ...</div><div class='long'><p>Returns the specified view associated with this controller.</p>\n\n<p>If no <code>id</code> is specified, returns the first top-level view.</p>\n\n<h4>Example</h4>\n\n<p>The following example gets a reference to a <code>&lt;Window/&gt;</code> object\nwith the <code>id</code> of \"loginWin\" and then calls its <a href=\"Titanium.UI.Window\">open()</a> method.</p>\n\n<pre><code>var loginWindow = $.getView('loginWin');\nloginWindow.open();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String (optional)<div class='sub-desc'><p>ID of the view to return.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Titanium.UI.View\" rel=\"Titanium.UI.View\" class=\"docClass\">Titanium.UI.View</a>/<a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getViews' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-getViews' class='name expandable'>getViews</a>( <span class='pre'></span> ) : Array.&lt;(<a href=\"#!/api/Titanium.UI.View\" rel=\"Titanium.UI.View\" class=\"docClass\">Titanium.UI.View</a>|<a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a>)&gt;</div><div class='description'><div class='short'>Returns a list of all IDed view elements associated with this controller. ...</div><div class='long'><p>Returns a list of all IDed view elements associated with this controller.</p>\n\n<h4>Example</h4>\n\n<p>Given the following XML view:</p>\n\n<pre><code>&lt;Alloy&gt;\n    &lt;TabGroup id=\"tabs\"&gt;\n        &lt;Tab title=\"Tab 1\" icon=\"KS_nav_ui.png\" id=\"tab1\"&gt;\n            &lt;Window title=\"Tab 1\" id=\"win1\"&gt;\n                &lt;Label id=\"label1\"&gt;I am Window 1&lt;/Label&gt;\n            &lt;/Window&gt;\n        &lt;/Tab&gt;\n        &lt;Tab title=\"Tab 2\" icon=\"KS_nav_views.png\" id=\"tab2\"&gt;\n            &lt;Window title=\"Tab 2\" id=\"wind2\"&gt;\n                &lt;Label id=\"label2\"&gt;I am Window 2&lt;/Label&gt;\n            &lt;/Window&gt;\n        &lt;/Tab&gt;\n    &lt;/TabGroup&gt;\n    &lt;View id=\"otherview\"&gt;&lt;/View&gt;\n&lt;/Alloy&gt;\n</code></pre>\n\n<p>The following view-controller outputs the id of each view in the hierarchy.</p>\n\n<pre><code>var views = $.getViews();\nfor (each in views) {\n    var view = views[each];\n    console.log(view.id);\n}\n\n[INFO] :   win1\n[INFO] :   label1\n[INFO] :   tab1\n[INFO] :   wind2\n[INFO] :   label2\n[INFO] :   tab2\n[INFO] :   tabs\n[INFO] :   otherview\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array.&lt;(<a href=\"#!/api/Titanium.UI.View\" rel=\"Titanium.UI.View\" class=\"docClass\">Titanium.UI.View</a>|<a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a>)&gt;</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-removeClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-removeClass' class='name expandable'>removeClass</a>( <span class='pre'>proxy, classes, [opts]</span> )</div><div class='description'><div class='short'>Removes a TSS class from the specified view object. ...</div><div class='long'><p>Removes a TSS class from the specified view object.</p>\n\n<p>You can apply additional styles after the removal with the <code>opts</code> parameter.\nTo use this method effectively you may need to enable autostyling\non the target XML view. See <a href=\"#!/guide/Dynamic_Styles-section-37530415_DynamicStyles-Autostyle\">Autostyle</a>\nin the Alloy developer guide.</p>\n\n<h4>Example</h4>\n\n<p>The following removes the \"redbg\" and \"bigger\" TSS classes from a <a href=\"#!/api/Titanium.UI.Label\" rel=\"Titanium.UI.Label\" class=\"docClass\">Titanium.UI.Label</a>\nobject proxy <code>label1</code>, and also sets the label's <code>text</code> property to \"...\".</p>\n\n<pre><code>$.removeClass($.label1, 'redbg bigger', {text: \"...\"});\n</code></pre>\n<h3>Since 1.2.0</h3><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : Object<div class='sub-desc'><p>View object from which to remove class(es).</p>\n</div></li><li><span class='pre'>classes</span> : Array&lt;String&gt;/String<div class='sub-desc'><p>Array or space-separated list of classes to remove.</p>\n</div></li><li><span class='pre'>opts</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a> (optional)<div class='sub-desc'><p>Dictionary of properties to apply after the class removal.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-removeListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'>[proxy], [type], [callback]</span> ) : <a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Removes all tracked event listeners or only the ones\nspecified by the parameters. ...</div><div class='long'><p>Removes all tracked event listeners or only the ones\nspecified by the parameters. Passing no parameters,\nremoves all tracked event listeners.  Set a parameter to <code>null</code>\nif you do not want to restrict the match to that parameter.</p>\n\n<h4>Example</h4>\n\n<p>When the window is closed, remove all tracked event listeners.</p>\n\n<pre><code>&lt;Alloy&gt;\n    &lt;Window onOpen=\"doOpen\" onClose=\"doClose\"&gt;\n        &lt;Label id=\"label\" onClick=\"doClick\"&gt;Hello, world&lt;/Label&gt;\n    &lt;/Window&gt;\n&lt;/Alloy&gt;\n\nfunction doClose() {\n    $.removeListener();\n}\n</code></pre>\n<h3>Since 1.7.0</h3><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : Object (optional)<div class='sub-desc'><p>Proxy view object to remove event listeners from.</p>\n</div></li><li><span class='pre'>type</span> : String (optional)<div class='sub-desc'><p>Name of the event to remove.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>Callback to remove.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a></span><div class='sub-desc'><p>Controller instance.</p>\n</div></li></ul></div></div></div><div id='method-resetClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-resetClass' class='name expandable'>resetClass</a>( <span class='pre'>proxy, [classes], [opts]</span> )</div><div class='description'><div class='short'>Sets the array of TSS classes for the target View object, adding the classes specified and\nremoving any applied class...</div><div class='long'><p>Sets the array of TSS classes for the target View object, adding the classes specified and\nremoving any applied classes that are not specified.</p>\n\n<p>You can apply classes or styles after the reset using the <code>classes</code> or <code>opts</code> parameters.\nTo use this method effectively you may need to enable autostyling\non the target XML view. See <a href=\"#!/guide/Dynamic_Styles-section-37530415_DynamicStyles-Autostyle\">Autostyle</a>\nin the Alloy developer guide.</p>\n\n<h4>Example</h4>\n\n<p>The following removes all previously applied styles on <code>label1</code> and then applies\nthe TSS class 'no-style'.</p>\n\n<pre><code>$.resetClass($.label1, 'no-style');\n</code></pre>\n<h3>Since 1.2.0</h3><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : Object<div class='sub-desc'><p>View object to reset.</p>\n</div></li><li><span class='pre'>classes</span> : Array&lt;String&gt;/String (optional)<div class='sub-desc'><p>Array or space-separated list of classes to apply after the reset.</p>\n</div></li><li><span class='pre'>opts</span> : <a href=\"#!/api/Dictionary\" rel=\"Dictionary\" class=\"docClass\">Dictionary</a> (optional)<div class='sub-desc'><p>Dictionary of properties to apply after the reset.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-updateViews' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.Controller'>Alloy.Controller</span></div><a href='#!/api/Alloy.Controller-method-updateViews' class='name expandable'>updateViews</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Applies a set of properties to view elements associated with this controller. ...</div><div class='long'><p>Applies a set of properties to view elements associated with this controller.\nThis method is useful for setting properties on repeated elements such as\n<a href=\"#!/api/Titanium.UI.TableViewRow\" rel=\"Titanium.UI.TableViewRow\" class=\"docClass\">TableViewRow</a> objects, rather than needing to have a controller\nfor those child controllers.</p>\n\n<h4>Example</h4>\n\n<p>The following example uses this method to update a Label inside a TableViewRow object\nbefore adding it to a TableView.</p>\n\n<p>View-controller file: controllers/index.js</p>\n\n<pre><code>for (var i=0; i &lt; 10; i++) {\n  var row = <a href=\"#!/api/Alloy-method-createController\" rel=\"Alloy-method-createController\" class=\"docClass\">Alloy.createController</a>(\"tablerow\");\n  row.updateViews({\n    \"#theLabel\": {\n        text: \"I am row #\" + i\n    }\n  });\n  $.tableView.appendRow(row.getView());\n};\n</code></pre>\n\n<p>XML view: views/tablerow.xml</p>\n\n<pre><code>&lt;Alloy&gt;\n    &lt;TableViewRow&gt;\n        &lt;Label id=\"theLabel\"&gt;&lt;/Label&gt;\n    &lt;/TableViewRow&gt;\n&lt;/Alloy&gt;\n</code></pre>\n\n<p>XML view: views/index.xml</p>\n\n<pre><code>&lt;TableView id=\"tableView\"&gt;\n&lt;/TableView&gt;\n</code></pre>\n<h3>Since 1.4.0</h3><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Object<div class='sub-desc'><p>An object whose keys are the IDs (in form '#id') of views to which the styles will be applied.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Alloy.Controller\" rel=\"Alloy.Controller\" class=\"docClass\">Alloy.Controller</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div></div></div></div></div>"});