Ext.data.JsonP['Alloy_builtins_social']({"tagname":"class","name":"Alloy.builtins.social","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"editurl":"https://github.com/appcelerator/alloy/edit/master/Alloy/builtins/social.js"},"private":null,"id":"class-Alloy.builtins.social","members":{"cfg":[],"property":[],"method":[{"name":"authorize","tagname":"method","owner":"Alloy.builtins.social","meta":{},"id":"method-authorize"},{"name":"create","tagname":"method","owner":"Alloy.builtins.social","meta":{},"id":"method-create"},{"name":"deauthorize","tagname":"method","owner":"Alloy.builtins.social","meta":{},"id":"method-deauthorize"},{"name":"isAuthorized","tagname":"method","owner":"Alloy.builtins.social","meta":{},"id":"method-isAuthorized"},{"name":"share","tagname":"method","owner":"Alloy.builtins.social","meta":{},"id":"method-share"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":38,"files":[{"filename":"alloy.js","href":"alloy2.html#Alloy-builtins-social"},{"filename":"social.js","href":"social.html#Alloy-builtins-social"}],"html_meta":{"editurl":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>A collection of useful social media provider utilities. Currently, this module only supports\nTwitter and the following features:</p>\n\n<ul>\n<li>Logging into Twitter and authorizing the application through the OAuth protocol.</li>\n<li>Posting tweets to the user's Twitter account.</li>\n</ul>\n\n\n<p>To use the social builtin library, require it with the <code>alloy</code> root\ndirectory in your <code>require</code> call. For example:</p>\n\n<pre><code>var social = require('alloy/social').create({\n    consumerSecret: 'consumer-secret',\n    consumerKey: 'consumer-key'\n});\n</code></pre>\n\n<h2>Login and Authorization</h2>\n\n<p>To use a social media provider, a user must log in and authorize the application to perform\ncertain actions, such as accessing profile information or posting messages.</p>\n\n<p>Call <code>authorize</code> to prompt the user to login and authorize the application.  For Twitter, a\ndialog box will appear asking the user for their permission and login credentials.</p>\n\n<p>Before calling <code>authorize</code>, the application will need a consumer key and secret provided by the\nsocial media service provider for the OAuth protocol, used when calling <code>create</code>.\nFor Twitter, these are provided when registering an application:\n<a href=\"https://dev.twitter.com/apps/new\">https://dev.twitter.com/apps/new</a></p>\n\n<h2>Example</h2>\n\n<p>This example authorizes the application, posts a message to the user's Twitter account, then\ndeauthorizes the application.</p>\n\n<pre><code>// If not authorized, get authorization from the user\nif(!social.isAuthorized()) {\n    social.authorize();\n}\n\n// Post a message\n // Setup both callbacks for confirmation\n // Note: share() automatically calls authorize() so an explicit call as above is unnecessary\nsocial.share({\n    message: \"Salut, Monde!\",\n    success: function(e) {alert('Success!')},\n    error: function(e) {alert('Error!')}\n});\n\n// Deauthorize the application\nsocial.deauthorize();\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-authorize' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.builtins.social'>Alloy.builtins.social</span></div><a href='#!/api/Alloy.builtins.social-method-authorize' class='name expandable'>authorize</a>( <span class='pre'>[callback]</span> )</div><div class='description'><div class='short'>Authorizes the client to the service provider to access user data. ...</div><div class='long'><p>Authorizes the client to the service provider to access user data.\nIf successful, the client will receive an access token, which will be saved for future\nusage.\nCall this function after opening the parent view or else the authorize UI window will\nappear in the background behind the view and unusable to the user.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>Callback function executed after successfully retrieving\nan access token.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.builtins.social'>Alloy.builtins.social</span></div><a href='#!/api/Alloy.builtins.social-method-create' class='name expandable'>create</a>( <span class='pre'>settings</span> ) : Object</div><div class='description'><div class='short'>Initializes an OAuth session to the service provider. ...</div><div class='long'><p>Initializes an OAuth session to the service provider.\nIf a previous access token exists, it will be loaded.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>settings</span> : ...*<div class='sub-desc'><p>OAuth session settings.</p>\n<ul><li><span class='pre'>site</span> : String (optional)<div class='sub-desc'><p>Site to access. Only 'twitter' is working.</p>\nDefault: \"twitter\"</div></li><li><span class='pre'>consumerSecret</span> : String<div class='sub-desc'><p>Shared secret used to authenticate the key.</p>\n</div></li><li><span class='pre'>consumerKey</span> : String<div class='sub-desc'><p>Key used to identify the client to the service provider.</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Instance of social to make subsequent API calls.</p>\n</div></li></ul></div></div></div><div id='method-deauthorize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.builtins.social'>Alloy.builtins.social</span></div><a href='#!/api/Alloy.builtins.social-method-deauthorize' class='name expandable'>deauthorize</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Deauthorizes the client and clears the access token. ...</div><div class='long'><p>Deauthorizes the client and clears the access token.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div><div id='method-isAuthorized' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.builtins.social'>Alloy.builtins.social</span></div><a href='#!/api/Alloy.builtins.social-method-isAuthorized' class='name expandable'>isAuthorized</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Returns 'true' if the client is authorized by the service provider. ...</div><div class='long'><p>Returns 'true' if the client is authorized by the service provider.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns 'true' if authorized else 'false'.</p>\n</div></li></ul></div></div></div><div id='method-share' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Alloy.builtins.social'>Alloy.builtins.social</span></div><a href='#!/api/Alloy.builtins.social-method-share' class='name expandable'>share</a>( <span class='pre'>options</span> )</div><div class='description'><div class='short'>Sends an update to the service provider. ...</div><div class='long'><p>Sends an update to the service provider. Implicitly calls authorize() to authorize your app.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : ...*<div class='sub-desc'><p>Update parameters.</p>\n<ul><li><span class='pre'>message</span> : String<div class='sub-desc'><p>Message to send.</p>\n</div></li><li><span class='pre'>success</span> : Function (optional)<div class='sub-desc'><p>Callback function executed after a successful update.</p>\n</div></li><li><span class='pre'>error</span> : Function (optional)<div class='sub-desc'><p>Callback function executed after a failed update.</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span></li></ul></div></div></div></div></div></div></div>"});