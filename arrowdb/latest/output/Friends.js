Ext.data.JsonP['Friends']({"tagname":"class","name":"Friends","alternateClassNames":[],"mixins":[],"meta":{},"aliases":{},"files":[{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Friends/query.yml"},{"filename":"Friends.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Friends/Friends.yml"},{"filename":"remove.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Friends/remove.yml"},{"filename":"requests.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Friends/requests.yml"},{"filename":"add.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Friends/add.yml"},{"filename":"approve.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Friends/approve.yml"},{"filename":"search.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Friends/search.yml"}],"members":{"cfg":[],"property":[],"method":[{"name":"friends/add.json","tagname":"method","owner":"Friends","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-add"},{"name":"friends/approve.json","tagname":"method","owner":"Friends","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-approve"},{"name":"friends/query.json","tagname":"method","owner":"Friends","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-query"},{"name":"friends/remove.json","tagname":"method","owner":"Friends","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-remove"},{"name":"friends/requests.json","tagname":"method","owner":"Friends","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-requests"},{"name":"friends/search.json","tagname":"method","owner":"Friends","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-search"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>The Friends API provides methods for managing friendships between the current user and another user.</p>\n\n<p>By default, friendships are two-way (like Facebook): once a friend request\nis made and approved, both users will show up in each others' friend lists.\nThis default behavior can be changed to one-way following (like\nTwitter) in the Cloud > Settings &amp; Configuration tab in <a href=\"https://dashboard.appcelerator.com\">Appcelerator Dashboard</a>\nor the Settings tab <a href=\"https://my.appcelerator.com/apps\">My Apps</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-add' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Friends'>Friends</span></div><strong class='http-method'>POST </strong><a href='#!/api/Friends-method-add' class='name expandable'>friends/add.json</a></div><div class='description'><div class='short'>Add friends to the current user. ...</div><div class='long'><p>Add friends to the current user. By default the friend request is two-way\n(like Facebook), so after a friend request is made and approved both users\nwill show up in each others' friend lists. This default can be changed to one-\nway following (like Twitter) in the App Settings for each of your apps.</p>\n\n<p>Two-way or one-way friend requests must be approved by the recipient unless\n<code>approval_required=false</code> is also sent with the request. This allows the user\nto add any user as a friend without requiring approval.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>user_ids</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Comma-separated list consisting of IDs of one or more users to add as\nfriends to the current user. A user cannot add himself or herself as a friend.</p>\n</div></li><li><span class='pre'>approval_required</span> : Boolean<div class='sub-desc'><p>Indicates whether the friend request requires\napproval by the other users.</p>\n\n<p>Default: <code>true</code></p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example adds a friend and checks the response.</p>\n\n<pre><code>Cloud.Friends.add({\n    user_ids: checked.join(\",\")\n}, function (e) {\n    if (e.success) {\n        alert('Friend(s) added');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"user_ids=4e02e027d0afbe41ef000003\" \"https://api.cloud.appcelerator.com/v1/friends/add.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"addFriends\",\n    \"status\": \"ok\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:\n    NSDictionary <em>data = @{\n                             @\"user_ids\" : @\"userid1, userid2\"\n                          };\n    [APSFriends append:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:@\"Friend(s) Addeed\"\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }\n    }];</p>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_ids\", \"4d6e77386f70950c89000001,5f6e77386f70950c890efew01\");\n\ntry {\n    APSFriends.add(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Friend(s) added\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-approve' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Friends'>Friends</span></div><strong class='http-method'>PUT </strong><a href='#!/api/Friends-method-approve' class='name expandable'>friends/approve.json</a></div><div class='description'><div class='short'>Approve an existing friend request. ...</div><div class='long'><p>Approve an existing friend request. Each user will be added to the other's\nfriend list.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>user_ids</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Comma-separated list consisting of IDs of one or more users to approve as\nfriends to the current user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example approves pending friend requests and checks the response.</p>\n\n<pre><code>Cloud.Friends.approve({\n    user_ids: checked.join(\",\")\n}, function (e) {\n    if (e.success) {\n        alert('Friend(s) approved');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"user_ids=4e02e022d0afbe41ef000002\" \"https://api.cloud.appcelerator.com/v1/friends/approve.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"approveFriends\",\n    \"status\": \"ok\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:\n    NSDictionary <em>data = @{\n                             @\"user_ids\" : @\"userid1, userid2\"\n                          };\n    [APSFriends append:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:@\"Friend(s) Approved\"\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }\n    }];</p>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_ids\", \"4d6e77386f70950c89000001,5f6e77386f70950c890efew01\");\n\ntry {\n\n    APSFriends.approve(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray friendRequests = e.getResponse().getJSONArray(\"friend_requests\");\n                    if (friendRequests.length() &lt;= 0) {\n                        Log.i(\"APSFriends\", \"No Results!\");\n                    } else {\n                        Log.i(\"APSFriends\", \"Approve Friend Request!\");\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSFriends\", \"Exception throwm: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Friends'>Friends</span></div><strong class='http-method'>GET </strong><a href='#!/api/Friends-method-query' class='name expandable'>friends/query.json</a></div><div class='description'><div class='short'>Performs custom query of Friends objects with sorting and paginating of the current\nlogged-in user or the specified u...</div><div class='long'><p>Performs custom query of Friends objects with sorting and paginating of the current\nlogged-in user or the specified user.  Only an application admin can perform a query against\na specified user using the <code>su_id</code> field.</p>\n\n<p>If one-way friendship is enabled, the query returns the users being followed.  To return\nthe user's followers, set the <code>followers</code> field to true.</p>\n\n<p>You can query or sort based on the data in any of the standard Friend fields.\nYou can also query and sort data based on the values of any custom fields,\nif the values are simple JSON values.</p>\n\n<p>Currently you <strong>cannot</strong> sort or query based on data stored inside array or hash\nobjects in custom fields.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>ID of the user to search for friends. If friendship is set to one way, by default it\nsearches against users that the identified user is following. You can pass\n<code>followers=true</code> to search the user's followers.\nYou must be an application admin to use this field.</p>\n</div></li><li><span class='pre'>followers</span> : Boolean<div class='sub-desc'><p>If set to true and one-way friendship is enabled, returns the user's followers instead\nof the users being followed.</p>\n</div></li><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>List of users matching the query parameters.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to retrieve all of the user's friends.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"friends/query.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        var results = e.users\n        // Process the results\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>The following example queries for the user's followers.  Note that this is only relevant\nfor one-way friendships:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt  -X GET --data-urlencode \"followers=true\" \"https://api.cloud.appcelerator.com/v1/friends/query.json?key=&lt;APP_API_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryFriends\",\n    \"page\": 1,\n    \"per_page\": 10,\n    \"total_pages\": 1,\n    \"total_results\": 1\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb04ec3aafa0884000497\",\n        \"first_name\": \"Wally\",\n        \"last_name\": \"West\",\n        \"created_at\": \"2014-08-25T21:53:18+0000\",\n        \"updated_at\": \"2014-08-25T22:08:53+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:18+0000\",\n        \"username\": \"kidflash\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 0,\n          \"following\": 1,\n          \"followers\": 1\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to retrieve all of the user's friends.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"friends/query.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSArray *results = e.response[@\"users\"];\n        // Process the results\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request that queries for ACLs with the name <code>photo_acls</code>.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"friends/query.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                JSONArray results = e.getResponse().getJSONArray(\"users\");\n                // Process the results\n            } catch (Exception err) {\n                Log.e(\"APSCloud\", \"Exception thrown: \" + err.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Friends'>Friends</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Friends-method-remove' class='name expandable'>friends/remove.json</a></div><div class='description'><div class='short'>Removes one or more friends from the user's friends list. ...</div><div class='long'><p>Removes one or more friends from the user's friends list.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>user_ids</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Comma-separated list consisting of IDs of one or more users to remove from the current user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example removes friends and checks the response.</p>\n\n<pre><code>Cloud.Friends.remove({\n    user_ids: checked.join(\",\")\n}, function (e) {\n    if (e.success) {\n        alert('Friend(s) removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"user_ids=4e02e027d0afbe41ef000003\" \"https://api.cloud.appcelerator.com/v1/friends/remove.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"removeFriends\",\n    \"status\": \"ok\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:\n    NSDictionary <em>data = @{\n                             @\"user_ids\" : @\"userid1, userid2\"\n                          };\n    [APSFriends remove:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:@\"Friend(s) Removed\"\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }\n    }];</p>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_ids\", \"4d6e77386f70950c89000001,5f6e77386f70950c890efew01\");\n\ntry {\n\n    APSFriends.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Friend(s) removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-requests' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Friends'>Friends</span></div><strong class='http-method'>GET </strong><a href='#!/api/Friends-method-requests' class='name expandable'>friends/requests.json</a></div><div class='description'><div class='short'>View pending friend requests. ...</div><div class='long'><p>View pending friend requests.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requests_to</span> : Boolean<div class='sub-desc'><p>If set to true, returns the users requesting the current user as a friend\nrather than the pending friend requests that the user needs to approve.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being referred to, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>friend_requests</span> : Hash[]<div class='sub-desc'><p>A list of friend requests, where each friend request is an object with\nthe following members:</p>\n\n<ul>\n<li><p><code>id: String</code>. User ID for user making the request.</p></li>\n<li><p><code>user: Users</code>. User object for the user making the request.</p></li>\n<li><p><code>created_at: Date</code>. Timestamp when the file was created.</p></li>\n<li><p><code>updated_at: Date</code>. Timestamp when the file was last updated.</p></li>\n</ul>\n\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example shows pending friend requests and checks the response.</p>\n\n<pre><code>Cloud.Friends.requests(function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.friend_requests.length);\n        for (var i = 0; i &lt; e.friend_requests.length; i++) {\n            var user = e.friend_requests[i].user;\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/friends/requests.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"friendRequests\",\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"friend_requests\": [\n      {\n        \"created_at\": \"2011-06-23T06:41:47+0000\",\n        \"updated_at\": \"2011-06-23T06:41:47+0000\",\n        \"id\": \"4e02e02bd0afbe41ef000005\",\n        \"user\": {\n          \"created_at\": \"2011-06-23T06:41:39+0000\",\n          \"updated_at\": \"2011-06-23T06:41:44+0000\",\n          \"username\": \"bob\",\n          \"id\": \"4e02e022d0afbe41ef000002\",\n          \"last_name\": \"Dude\",\n          \"email\": \"bob@dude.com\",\n          \"first_name\": \"Bob\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:\n    [APSFriends requests:nil withBlock:^(APSResponse <em>e) {\n        if (e.success){\n            NSArray </em>friendRequests = e.response[@\"friend_requests\"];</p>\n\n<pre><code>        for (NSDictionary *friendRequest in friendRequests) {\n          NSString *message = [NSString stringWithFormat:@\"id : %@\\n First Name : %@\\nLast Name : %@\\n\",\n                                  friendRequest[@\"id\"],\n                                  friendRequest[@\"first_name\"],\n                                  friendRequest[@\"last_name\"]];\n\n\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                      message:message\n                                     delegate:nil \n                            cancelButtonTitle:@\"OK\" \n                            otherButtonTitles:nil] show];\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSFriends.requests(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray friendRequests = e.getResponse().getJSONArray(\"friend_requests\");\n                    if (friendRequests.length() &lt;= 0) {\n                        Log.i(\"APSFriends\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; friendRequests.length(); i++) {\n                            JSONObject users = friendRequests.getJSONObject(i);\n                            JSONObject user = users.getJSONObject(\"user\");\n                            Log.i(\"APSFriends\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSFriends\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e1) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-search' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Friends'>Friends</span></div><strong class='http-method'>GET </strong><a href='#!/api/Friends-method-search' class='name expandable'>friends/search.json</a></div><div class='description'><div class='short'>Performs a search for users who are friends of the currently logged-in user. ...</div><div class='long'><p>Performs a search for users who are friends of the currently logged-in user. An application admin\ncan search for friends of an arbitrary user by specifing the the <code>user_id</code> field.</p>\n\n<p>Specifying the optional <code>q</code> parameter allows searching by first name, last name, email address,\nor username. If no <code>q</code> parameter is specified, all friends of the specified user are returned.</p>\n\n<p>If one-way friendship is enabled, the search returns the users being followed. To return\nthe user's followers, set the <code>followers</code> field to true.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>user_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>ID of the user to search for friends. <strong>You must be an application admin to use this field.</strong></p>\n\n<p>If friendship is set to one way,\nby default it searches against users that the identified user is <strong>following</strong>. You can\npass <code>followers=true</code> to search the user's followers.</p>\n</div></li><li><span class='pre'>followers</span> : Boolean<div class='sub-desc'><p>If you have friends set to one way, pass <code>followers=true</code> to query user's\nfollowers.</p>\n</div></li><li><span class='pre'>q</span> : String<div class='sub-desc'><p>Space-separated list of keywords used to perform full text search on first name, last name,\nemail address, username and tags.</p>\n</div></li><li><span class='pre'>page</span> : Number<div class='sub-desc'><p>Request page number, default is 1.</p>\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p>Number of results per page, default is 10.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>List of users matching the search criteria.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests information about particular friends and checks the response.</p>\n\n<pre><code>Cloud.Friends.search({\n    user_id: searchID\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.users.length);\n        for (var i = 0; i &lt; e.users.length; i++) {\n            var user = e.users[i];\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/friends/search.json?user_id=4e02e022d0afbe41ef000002&amp;q=alice%40gal.com&amp;key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"total_pages\": 1,\n    \"code\": 200,\n    \"method_name\": \"searchFriends\",\n    \"page\": 1,\n    \"total_results\": 1,\n    \"per_page\": 10,\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"created_at\": \"2011-06-23T06:41:43+0000\",\n        \"updated_at\": \"2011-06-23T06:41:48+0000\",\n        \"username\": \"alice\",\n        \"id\": \"4e02e027d0afbe41ef000003\",\n        \"last_name\": \"Gal\",\n        \"email\": \"alice@gal.com\",\n        \"first_name\": \"Alice\"\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>  NSDictionary *data = @{\n                           @\"user_id\" : @\"searchUserid\"\n                        };\n  [APSFriends search:data withBlock:^(APSResponse *e) {\n      if (e.success){\n        NSArray *friendRequests = e.response[@\"friend_requests\"];\n        for (NSDictionary *friendRequest in friendRequests) {\n          NSString *message = [NSString stringWithFormat:@\"id : %@\\n First Name : %@\\nLast Name : %@\\n\",\n                                  friendRequest[@\"id\"],\n                                  friendRequest[@\"first_name\"],\n                                  friendRequest[@\"last_name\"]];\n\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n      }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_id\", \"4d6e77386f70950c89000001\");\n\ntry {\n    APSFriends.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray users = e.getResponse().getJSONArray(\"users\");\n                    for (int i = 0; i &lt; users.length(); i++) {\n                        JSONObject user = users.getJSONObject(i);\n                        Log.i(\"APSFriends\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSFriends\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});