Ext.data.JsonP['Files']({"tagname":"class","name":"Files","alternateClassNames":[],"mixins":[],"meta":{},"aliases":{},"files":[{"filename":"Files.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Files/Files.yml"},{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Files/query.yml"},{"filename":"batch_delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Files/batch_delete.yml"},{"filename":"show.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Files/show.yml"},{"filename":"count.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Files/count.yml"},{"filename":"create.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Files/create.yml"},{"filename":"update.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Files/update.yml"},{"filename":"delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Files/delete.yml"}],"members":{"cfg":[],"property":[{"name":"created_at","tagname":"property","owner":"Files","meta":{"[:hide]":false},"id":"property-created_at"},{"name":"id","tagname":"property","owner":"Files","meta":{"[:hide]":false},"id":"property-id"},{"name":"name","tagname":"property","owner":"Files","meta":{"[:hide]":false},"id":"property-name"},{"name":"processed","tagname":"property","owner":"Files","meta":{"[:hide]":false},"id":"property-processed"},{"name":"s3_acl","tagname":"property","owner":"Files","meta":{"[:hide]":false},"id":"property-s3_acl"},{"name":"updated_at","tagname":"property","owner":"Files","meta":{"[:hide]":false},"id":"property-updated_at"},{"name":"url","tagname":"property","owner":"Files","meta":{"[:hide]":false},"id":"property-url"},{"name":"user","tagname":"property","owner":"Files","meta":{"[:hide]":false},"id":"property-user"}],"method":[{"name":"files/batch_delete.json","tagname":"method","owner":"Files","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"id":"method-batch_delete"},{"name":"files/count.json","tagname":"method","owner":"Files","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-count"},{"name":"files/create.json","tagname":"method","owner":"Files","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-create"},{"name":"files/delete.json","tagname":"method","owner":"Files","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-delete"},{"name":"files/query.json","tagname":"method","owner":"Files","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-query"},{"name":"files/show.json","tagname":"method","owner":"Files","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-show"},{"name":"files/update.json","tagname":"method","owner":"Files","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-update"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>The Files API lets you store files up to 100MB in the ArrowDB cloud.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Fields</h3><div class='subsection'><div id='property-created_at' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><a href='#!/api/Files-property-created_at' class='name not-expandable'>created_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Creation date for this user object.</p>\n</div><div class='long'><p>Creation date for this user object.</p>\n</div></div></div><div id='property-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><a href='#!/api/Files-property-id' class='name not-expandable'>id</a><span> : String</span></div><div class='description'><div class='short'><p>Generated ID for this object.</p>\n</div><div class='long'><p>Generated ID for this object.</p>\n</div></div></div><div id='property-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><a href='#!/api/Files-property-name' class='name not-expandable'>name</a><span> : String</span></div><div class='description'><div class='short'><p>File name.</p>\n</div><div class='long'><p>File name.</p>\n</div></div></div><div id='property-processed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><a href='#!/api/Files-property-processed' class='name not-expandable'>processed</a><span> : Boolean</span></div><div class='description'><div class='short'><p>Flag indicating whether the file has finished uploading and is  available for access.</p>\n</div><div class='long'><p>Flag indicating whether the file has finished uploading and is  available for access.</p>\n</div></div></div><div id='property-s3_acl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><a href='#!/api/Files-property-s3_acl' class='name expandable'>s3_acl</a><span> : String</span></div><div class='description'><div class='short'>File permission. ...</div><div class='long'><p>File permission.  Can either by <code>private</code> or <code>public_read</code>.</p>\n</div></div></div><div id='property-updated_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><a href='#!/api/Files-property-updated_at' class='name not-expandable'>updated_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Last update time for this user object.</p>\n</div><div class='long'><p>Last update time for this user object.</p>\n</div></div></div><div id='property-url' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><a href='#!/api/Files-property-url' class='name expandable'>url</a><span> : String</span></div><div class='description'><div class='short'>URL for accessing the file. ...</div><div class='long'><p>URL for accessing the file. Only available when <code>processed</code> is <code>true</code>.\nFor private file permission, the URL is temporary and will expire. Default is five minutes.</p>\n</div></div></div><div id='property-user' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><a href='#!/api/Files-property-user' class='name not-expandable'>user</a><span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></span></div><div class='description'><div class='short'><p>Owner of this object.</p>\n</div><div class='long'><p>Owner of this object.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-batch_delete' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Files-method-batch_delete' class='name expandable'>files/batch_delete.json</a><strong class='signature'>admin-only</strong></div><div class='description'><div class='short'>Deletes Files objects that match the query constraints provided in the where parameter. ...</div><div class='long'><p>Deletes Files objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Files objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>You must be an application admin to run this command.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Encoded JSON object that specifies constraint values for Files objects to delete.\nIf not specified, all Files objects are deleted.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to delete all File objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"files/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All File objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/files/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to delete all File objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"files/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All File object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to delete all File objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"files/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All File objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-count' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><strong class='http-method'>GET </strong><a href='#!/api/Files-method-count' class='name not-expandable'>files/count.json</a></div><div class='description'><div class='short'><p>Retrieves the total number of File objects.</p>\n</div><div class='long'><p>Retrieves the total number of File objects.</p>\n<h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>Total number of File objects. Returned in the <code>meta</code> header.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to retrieve the total number of File objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"files/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/files/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"data_filesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to retrieve the total number of File objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"files/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to retrieve the total number of File objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"files/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><strong class='http-method'>POST </strong><a href='#!/api/Files-method-create' class='name expandable'>files/create.json</a></div><div class='description'><div class='short'>Creates a new file object with a binary attachment or contents of a URL. ...</div><div class='long'><p>Creates a new file object with a binary attachment or contents of a URL.\nThe size of the file can be up to 25 MB. The response includes a <code>processed</code> flag which indicates\nif the file has been stored reliably in the Appcelerator Cloud Services\nstorage engine. This will initially be <code>false</code>. Once the file is available in\nthe storage engine, the <code>processed</code> flag will be <code>true</code>, and file <code>url</code> will\nbe available.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>File name.</p>\n</div></li><li><span class='pre'>file</span> : FileUpload<div class='sub-desc'><p>The attached binary file to upload to ArrowDB. You can specify either <code>file</code> or <code>url</code>, but not both.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>URL of file to upload to ArrowDB. You can specify either <code>file</code> or <code>url</code>, but not both.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this file object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>s3_acl</span> : String<div class='sub-desc'><p>Permission level of the file.  Set to either:</p>\n\n<ul>\n<li><code>private</code>: Only a logged-in user can access the file.</li>\n<li><code>public_read</code>: Anyone can access the file (default).</li>\n</ul>\n\n\n<p>For private permission, when you retrieve the URL for the file using either the show or\nquery method, the link is temporary and will expire. The default is five minutes.\nWhen exporting data, the exported URL will be a root URL and not a direct URL to the file.</p>\n\n<p>To restrict file access to specific users, use an ACL.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this file object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to create the file on behalf of.</p>\n\n<p>The current login user must be an application admin to create a file on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>files</span> : <a href=\"#!/api/Files\" rel=\"Files\" class=\"docClass\">Files</a>[]<div class='sub-desc'><p>Single-element array containing the newly-created file.</p>\n\n<p>Note that the file URL isn't available immediately.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example creates a new file and checks the response.</p>\n\n<pre><code>Cloud.Files.create({\n    name: 'test.dat',\n    file: Titanium.Filesystem.getFile('test.dat')\n}, function (e) {\n    if (e.success) {\n        var file = e.files[0];\n        alert('Success:\\n' +\n            'id: ' + file.id + '\\n' +\n            'name: ' + file.name + '\\n' +\n            'updated_at: ' + file.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request that creates a new file object from a binary attachment:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=my_file\" -F \"file=@resume.pdf\" http://api.cloud.appcelerator.com/v1/files/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"stat\":\"ok\",\n    \"code\":200,\n    \"method\":\"createFile\"\n  },\n  \"response\": {\n    \"files\": [\n      {\n        \"id\": \"4f05446bc3666eb7ba000001\",\n        \"name\": \"my_file\",\n        \"processed\": false,\n        \"created_at\": \"2012-01-05T06:34:19+0000\",\n        \"updated_at\": \"2012-01-05T06:34:19+0000\",\n        \"user\": {\n          \"id\": \"4f0fe764d9ca72833d000002\",\n          \"first_name\": \"Abe\",\n          \"last_name\": \"Bob\",\n          \"created_at\": \"2012-01-13T08:12:20+0000\",\n          \"updated_at\": \"2012-01-13T08:12:43+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"email\": \"a@mike.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Example cURL request that creates a new file from a URL:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=my_file\" -F \"url=http://www.appcelerator.com/wp-content/uploads/blog-traditional-companies.png\" http://api.cloud.appcelerator.com/v1/files/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>The JSON response is identical.</p>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSError* error = nil;\nNSData *fileData = [NSData dataWithContentsOfFile:@\"Test.txt\"\n                              options:0\n                                error: &amp;error];\nif (fileData == nil) {\n  // handle error\n  NSLog(@\"Failed to read file, error %@\", error);\n  return;\n}\nNSDictionary *data = @{\n                         @\"name\" : @\"Test.txt\",\n                         @\"file\" : fileData\n                      };\n[APSFiles create:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *files = e.response[@\"files\"];\n      NSDictionary *file = files[0];\n      NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                              file[@\"id\"],\n                              file[@\"name\"],\n                              file[@\"updated_at\"]];\n\n\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:message\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"my_file\");\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSFiles.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"File Uploaded!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Files-method-delete' class='name expandable'>files/delete.json</a></div><div class='description'><div class='short'>Deletes the file. ...</div><div class='long'><p>Deletes the file. To delete a file, the current user must be one of the following:</p>\n\n<ul>\n<li>The file's owner</li>\n<li>A user with write priviledges granted by the file's ACL</li>\n<li>An application admin</li>\n</ul>\n\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>file_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the file to delete.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User to delete the File object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to delete the File object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example deletes a file and checks the response.</p>\n\n<pre><code>Cloud.Files.remove({\n    file_id: savedFileId\n}, function (e) {\n    if (e.success) {\n        alert('Removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/files/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;file_id=4f05446bc3666eb7ba000001\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteFile\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"file_id\" : @\"savedFileId\"\n                      };\n[APSFiles remove:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:@\"File Removed\"\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"file_id\", \"4f05446bc3666eb7ba000001\");\n\ntry {\n    APSFiles.remove(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><strong class='http-method'>GET </strong><a href='#!/api/Files-method-query' class='name expandable'>files/query.json</a></div><div class='description'><div class='short'>Perform custom query of files with sorting and paginating. ...</div><div class='long'><p>Perform custom query of files with sorting and paginating. Currently you can\nnot query or sort data stored inside custom fields that have Hash values.</p>\n\n<p>In addition to custom fields, here is a list of pre-defined fields in the File\nobject that can be queried and sorted:</p>\n\n<ul>\n<li><p><code>user_id: String</code>.  User ID of the File's owner.</p></li>\n<li><p><code>created_at: Date</code>. Timestamp when the file was created.</p></li>\n<li><p><code>updated_at: Date</code>. Timestamp when the file was last updated.</p></li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>expires</span> : Number<div class='sub-desc'><p>For private file permission, sets the expiration time in seconds for the temporary link\nreferencing the location to access the file. By default, the link expires in five minutes.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>files</span> : <a href=\"#!/api/Files\" rel=\"Files\" class=\"docClass\">Files</a>[]<div class='sub-desc'><p>Array of file objects matching the search criteria.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests a list of files and checks the response.</p>\n\n<pre><code>Cloud.Files.query({\n    page: 1,\n    per_page: 20\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.files.length);\n        for (var i = 0; i &lt; e.files.length; i++) {\n            var file = e.files[i];\n            alert('id: ' + file.id + '\\n' +\n                'name: ' + file.name + '\\n' +\n                'updated_at: ' + file.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request that queries files with name \"Appcelerator Cloud Services\":</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"name\":\"Appcelerator Cloud Services\"}' \"https://api.cloud.appcelerator.com/v1/files/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -X GET --data-urlencode  'where=[\"user_id\":\"4f0fe764d9ca72833d000002\", \"name\":\"my_file\"] \"https://localhost/v1/files/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;order=-created_at&amp;per_page=3\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryFiles\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"files\": [\n      {\n        \"id\": \"4f0fe787d9ca72833d000041\",\n        \"name\": \"my_file\",\n        \"processed\": true,\n        \"created_at\": \"2012-01-13T08:12:55+0000\",\n        \"updated_at\": \"2012-01-13T08:12:59+0000\",\n        \"url\": \"http://storage.appcelerator.comtest.cocoafish.com/Z6F6oHfp3IqPMT54XDbdo6KA/files/2a/26/4f0fe787d9ca72833d000041/cocoafish.pdf\",\n        \"user\": {\n          \"id\": \"4f0fe764d9ca72833d000002\",\n          \"first_name\": \"Abe\",\n          \"last_name\": \"Bob\",\n          \"created_at\": \"2012-01-13T08:12:20+0000\",\n          \"updated_at\": \"2012-01-13T08:12:43+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"email\": \"a@mike.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"page\"    : @1,\n                         @\"per_page\": @20\n                      };\n[APSFiles query:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *files = e.response[@\"files\"];\n      for (NSDictionary *file in files) {\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                file[@\"id\"],\n                                file[@\"name\"],\n                                file[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n      }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"{'name': 'Appcelerator Cloud Services'}\");\ndata.put(\"where\", params);\n\ntry {\n    APSFiles.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray files = e.getResponse().getJSONArray(\"files\");\n                    if (files.length() &lt;= 0) {\n                        Log.i(\"APSFiles\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; files.length(); i++) {\n                            JSONObject file = files.getJSONObject(i);\n                            Log.i(\"APSFiles\", \"File name: \" + file.getString(\"name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSFiles\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-show' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><strong class='http-method'>GET </strong><a href='#!/api/Files-method-show' class='name expandable'>files/show.json</a></div><div class='description'><div class='short'>Returns information associated with the file. ...</div><div class='long'><p>Returns information associated with the file.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>file_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the file to retrieve information for.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>expires</span> : Number<div class='sub-desc'><p>For private file permission, sets the expiration time in seconds for the temporary link\nreferencing the location to access the file. By default, the link expires in five minutes.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>files</span> : <a href=\"#!/api/Files\" rel=\"Files\" class=\"docClass\">Files</a>[]<div class='sub-desc'><p>Single-element array containing the requested file object.</p>\n\n<p>Note that the file URL may not be available if the file hasn't finished\nprocessing.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example retrieves information about a file and checks the response.</p>\n\n<pre><code>Cloud.Files.show({\n    file_id: savedFileId\n}, function (e) {\n    if (e.success) {\n        var file = e.files[0];\n        alert('Success:\\n' +\n            'id: ' + file.id + '\\n' +\n            'name: ' + file.name + '\\n' +\n            'updated_at: ' + file.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/files/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;file_id=4f05446bc3666eb7ba000001\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showFile\"\n  },\n  \"response\": {\n    \"files\": [\n      {\n        \"id\": \"4f05446bc3666eb7ba000001\",\n        \"name\": \"my_file\",\n        \"processed\": true,\n        \"created_at\": \"2012-01-05T06:34:19+0000\",\n        \"updated_at\": \"2012-01-05T06:34:41+0000\",\n        \"url\": \"http://storage.appcelerator.com/KTSfOLVbzHx3R8s4hRiPvSfS1agjrkb0/files/c9/39/4f05489bc3666eb7aa000001/resume.pdf\"\n        \"user\": {\n          \"id\": \"4f0fe764d9ca72833d000002\",\n          \"first_name\": \"Abe\",\n          \"last_name\": \"Bob\",\n          \"created_at\": \"2012-01-13T08:12:20+0000\",\n          \"updated_at\": \"2012-01-13T08:12:43+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"email\": \"a@mike.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"file_id\" : @\"savedFileId\"\n                      };\n[APSFiles show:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *files = e.response[@\"files\"];\n      NSDictionary *file = files[0];\n      NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                              file[@\"id\"],\n                              file[@\"name\"],\n                              file[@\"updated_at\"]];\n\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:message\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"file_id\", \"4f05446bc3666eb7ba000001\");\n\ntry {\n    APSFiles.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSFiles\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Files'>Files</span></div><strong class='http-method'>PUT </strong><a href='#!/api/Files-method-update' class='name expandable'>files/update.json</a></div><div class='description'><div class='short'>Updates an existing file object with a binary attachment, or contents of a URL. ...</div><div class='long'><p>Updates an existing file object with a binary attachment, or contents of a URL. When replacing the existing file with a\nnew one, the object's <code>processing</code> flag is set to <code>false</code>, and its <code>url</code> property will not be valid\nuntil the new file has been processed and uploaded to the Appcelerator Cloud\nServices storage cloud.</p>\n\n<p>Application administrators can update any File object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>file_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the file to update.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>File name.</p>\n</div></li><li><span class='pre'>file</span> : FileUpload<div class='sub-desc'><p>The attached binary file to upload to ArrowDB. You can specify either <code>file</code> or <code>url</code>, but not both.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>URL of file to upload to ArrowDB. You can specify either <code>file</code> or <code>url</code>, but not both.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this file object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this file object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>s3_acl</span> : String<div class='sub-desc'><p>Permission level of the file.  Set to either:</p>\n\n<ul>\n<li><code>private</code>: Only a logged-in user can access the file.</li>\n<li><code>public_read</code>: Anyone can access the file (default).</li>\n</ul>\n\n\n<p>This can only be set if you also update the <code>file</code> or <code>url</code>.</p>\n\n<p>For private permission, when you retrieve the URL for the file using either the show or\nquery method, the link is temporary and will expire. The default is five minutes.\nWhen exporting data, the exported URL will be a root URL and not a direct URL to the file.</p>\n\n<p>To restrict file access to specific users, use an ACL.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User to update the File object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to update a File object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>files</span> : <a href=\"#!/api/Files\" rel=\"Files\" class=\"docClass\">Files</a>[]<div class='sub-desc'><p>Single-element array containing the updated file object.</p>\n\n<p>Note that the file URL may not be available if the file hasn't finished\nprocessing.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example updates a file and checks the response.</p>\n\n<pre><code>Cloud.Files.update({\n    file_id: savedFileId,\n    name: 'Notice'\n}, function (e) {\n    if (e.success) {\n        var file = e.files[0];\n        alert('Success:\\n' +\n            'id: ' + file.id + '\\n' +\n            'name: ' + file.name + '\\n' +\n            'updated_at: ' + file.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request that updates an existing file object with a new binary attachment:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -X PUT -F \"file=@newresume.pdf\" -F \"name=new_file_name\" -F \"file_id=4f05446bc3666eb7ba000001\" https://api.cloud.appcelerator.com/v1/files/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"updateFile\"\n  },\n  \"response\": {\n    \"files\": [\n      {\n        \"id\": \"4f05446bc3666eb7ba000001\",\n        \"name\": \"new_file_name\",\n        \"processed\": false,\n        \"created_at\": \"2012-01-05T06:34:19+0000\",\n        \"updated_at\": \"2012-01-05T06:34:19+0000\",\n        \"user\": {\n          \"id\": \"4f0fe764d9ca72833d000002\",\n          \"first_name\": \"Abe\",\n          \"last_name\": \"Bob\",\n          \"created_at\": \"2012-01-13T08:12:20+0000\",\n          \"updated_at\": \"2012-01-13T08:12:43+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"email\": \"a@mike.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Example cURL request that updates an existing file object with the contents of a remote URL:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -X PUT -F \"url=http://www.appcelerator.com/wp-content/uploads/blog-traditional-companies.png\" -F \"name=new_file_name\" -F \"file_id=4f05446bc3666eb7ba000001\" https://api.cloud.appcelerator.com/v1/files/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>The JSON response is identical.</p>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"file_id\" : @\"savedFileId\",\n                         @\"name\"    : @\"Notice\"\n                      };\n[APSFiles update:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *files = e.response[@\"files\"];\n      NSDictionary *file = files[0];\n      NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                              file[@\"id\"],\n                              file[@\"name\"],\n                              file[@\"updated_at\"]];\n\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:message\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"file_id\", \"4f05446bc3666eb7ba000001\");\ndata.put(\"name\", \"new_file_name\");\ndata.put(\"file\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSFiles.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});