Ext.data.JsonP['Photos']({"tagname":"class","name":"Photos","alternateClassNames":[],"mixins":["Reviewable"],"meta":{},"aliases":{},"files":[{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Photos/query.yml"},{"filename":"batch_delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Photos/batch_delete.yml"},{"filename":"Photos.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Photos/Photos.yml"},{"filename":"show.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Photos/show.yml"},{"filename":"count.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Photos/count.yml"},{"filename":"create.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Photos/create.yml"},{"filename":"update.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Photos/update.yml"},{"filename":"search.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Photos/search.yml"},{"filename":"delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Photos/delete.yml"}],"members":{"cfg":[],"property":[{"name":"acls","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-acls"},{"name":"collections","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-collections"},{"name":"content_type","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-content_type"},{"name":"created_at","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-created_at"},{"name":"custom_fields","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-custom_fields"},{"name":"filename","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-filename"},{"name":"id","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-id"},{"name":"md5","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-md5"},{"name":"processed","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-processed"},{"name":"ratings_average","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-ratings_average"},{"name":"ratings_count","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-ratings_count"},{"name":"ratings_summary","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-ratings_summary"},{"name":"reviews","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-reviews"},{"name":"reviews_count","tagname":"property","owner":"Reviewable","meta":{"[:hide]":false},"id":"property-reviews_count"},{"name":"size","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-size"},{"name":"tags","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-tags"},{"name":"title","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-title"},{"name":"updated_at","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-updated_at"},{"name":"urls","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-urls"},{"name":"user","tagname":"property","owner":"Photos","meta":{"[:hide]":false},"id":"property-user"}],"method":[{"name":"photos/batch_delete.json","tagname":"method","owner":"Photos","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"id":"method-batch_delete"},{"name":"photos/count.json","tagname":"method","owner":"Photos","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-count"},{"name":"photos/create.json","tagname":"method","owner":"Photos","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-create"},{"name":"photos/delete.json","tagname":"method","owner":"Photos","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-delete"},{"name":"photos/query.json","tagname":"method","owner":"Photos","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-query"},{"name":"photos/search.json","tagname":"method","owner":"Photos","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-search"},{"name":"photos/show.json","tagname":"method","owner":"Photos","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-show"},{"name":"photos/update.json","tagname":"method","owner":"Photos","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-update"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>The Photos API lets you upload, resize and manage photos for your application. The current file store limit is 100MB in the ArrowDB cloud.</p>\n\n<p class=\"note\">\nArrowDB applications no longer create the default photo sizes. Only the original photo size is shown. To create different photo sizes when creating or updating a photo, see <a href=\"#!/guide/photosizes\">Photo Uploading & Resizing</a> guide.\n</p>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Fields</h3><div class='subsection'><div id='property-acls' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-acls' class='name not-expandable'>acls</a><span> : String</span></div><div class='description'><div class='short'><p>Single-element array containing the <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> associated with this photo object, if any.</p>\n</div><div class='long'><p>Single-element array containing the <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> associated with this photo object, if any.</p>\n</div></div></div><div id='property-collections' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-collections' class='name not-expandable'>collections</a><span> : <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a>[]</span></div><div class='description'><div class='short'><p>Single-element array containing the collection this photo is a part of, if any.</p>\n</div><div class='long'><p>Single-element array containing the collection this photo is a part of, if any.</p>\n</div></div></div><div id='property-content_type' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-content_type' class='name not-expandable'>content_type</a><span> : String</span></div><div class='description'><div class='short'><p>MIME content-type for this photo.</p>\n</div><div class='long'><p>MIME content-type for this photo.</p>\n</div></div></div><div id='property-created_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-created_at' class='name not-expandable'>created_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Creation date for this photo object.</p>\n</div><div class='long'><p>Creation date for this photo object.</p>\n</div></div></div><div id='property-custom_fields' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-custom_fields' class='name expandable'>custom_fields</a><span> : Hash</span></div><div class='description'><div class='short'>User defined fields. ...</div><div class='long'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></div></div><div id='property-filename' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-filename' class='name not-expandable'>filename</a><span> : String</span></div><div class='description'><div class='short'><p>Filename of the original photo.</p>\n</div><div class='long'><p>Filename of the original photo.</p>\n</div></div></div><div id='property-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-id' class='name not-expandable'>id</a><span> : String</span></div><div class='description'><div class='short'><p>Generated ID for this photo.</p>\n</div><div class='long'><p>Generated ID for this photo.</p>\n</div></div></div><div id='property-md5' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-md5' class='name not-expandable'>md5</a><span> : String</span></div><div class='description'><div class='short'><p>MD5 hash of the original image data.</p>\n</div><div class='long'><p>MD5 hash of the original image data.</p>\n</div></div></div><div id='property-processed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-processed' class='name not-expandable'>processed</a><span> : Boolean</span></div><div class='description'><div class='short'><p>True if this photo has been processed and is available for download.</p>\n</div><div class='long'><p>True if this photo has been processed and is available for download.</p>\n</div></div></div><div id='property-ratings_average' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-ratings_average' class='name expandable'>ratings_average</a><span> : Number</span></div><div class='description'><div class='short'>Average rating for this object. ...</div><div class='long'><p>Average rating for this object.\nOnly present if the object has been reviewed.</p>\n</div></div></div><div id='property-ratings_count' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-ratings_count' class='name expandable'>ratings_count</a><span> : Number</span></div><div class='description'><div class='short'>Total number of reviews for this object that include a rating. ...</div><div class='long'><p>Total number of reviews for this object that include a rating.</p>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-ratings_summary' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-ratings_summary' class='name expandable'>ratings_summary</a><span> : Hash</span></div><div class='description'><div class='short'>Breakdown of the number of reviews that specified a given rating value. ...</div><div class='long'><p>Breakdown of the number of reviews that specified a given rating value. For\nexample, if your ratings range from 1-5, the ratings summary might look like this:</p>\n\n<pre><code>ratings_summary: {\n    \"1\" : 1,\n    \"2\" : 0,\n    \"3\" : 5,\n    \"4\" : 50,\n    \"5\" : 12\n}\n</code></pre>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-reviews' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-reviews' class='name expandable'>reviews</a><span> : <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>[]</span></div><div class='description'><div class='short'>List of reviews for this object. ...</div><div class='long'><p>List of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-reviews_count' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Reviewable' rel='Reviewable' class='defined-in docClass'>Reviewable</a></div><a href='#!/api/Reviewable-property-reviews_count' class='name expandable'>reviews_count</a><span> : Number</span></div><div class='description'><div class='short'>Total number of reviews for this object. ...</div><div class='long'><p>Total number of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n</div></div></div><div id='property-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-size' class='name not-expandable'>size</a><span> : Number</span></div><div class='description'><div class='short'><p>Original image size in bytes.</p>\n</div><div class='long'><p>Original image size in bytes.</p>\n</div></div></div><div id='property-tags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-tags' class='name not-expandable'>tags</a><span> : String[]</span></div><div class='description'><div class='short'><p>List of tags for this photo.</p>\n</div><div class='long'><p>List of tags for this photo.</p>\n</div></div></div><div id='property-title' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-title' class='name not-expandable'>title</a><span> : String</span></div><div class='description'><div class='short'><p>Photo title, if specified.</p>\n</div><div class='long'><p>Photo title, if specified.</p>\n</div></div></div><div id='property-updated_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-updated_at' class='name not-expandable'>updated_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Last update time for this photo object.</p>\n</div><div class='long'><p>Last update time for this photo object.</p>\n</div></div></div><div id='property-urls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-urls' class='name expandable'>urls</a><span> : Hash</span></div><div class='description'><div class='short'>A hash containing image URLs for the photo at different sizes. ...</div><div class='long'><p>A hash containing image URLs for the photo at different sizes.</p>\n\n<p>The URLs are only available after the photo has been processed (<code>processed</code> is\n<code>true</code>).</p>\n</div></div></div><div id='property-user' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><a href='#!/api/Photos-property-user' class='name not-expandable'>user</a><span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></span></div><div class='description'><div class='short'><p>User object for the photo's owner.</p>\n</div><div class='long'><p>User object for the photo's owner.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-batch_delete' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Photos-method-batch_delete' class='name expandable'>photos/batch_delete.json</a><strong class='signature'>admin-only</strong></div><div class='description'><div class='short'>Deletes Photos objects that match the query constraints provided in the where parameter. ...</div><div class='long'><p>Deletes Photos objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Photos objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>You must be an application admin to run this command.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Encoded JSON object that specifies constraint values for Photos objects to delete.\nIf not specified, all Photos objects are deleted.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to delete all Photo objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"photos/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Photo objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/photos/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to delete all Photo objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"photos/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Photo object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to delete all Photo objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"photos/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Photo objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-count' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><strong class='http-method'>GET </strong><a href='#!/api/Photos-method-count' class='name not-expandable'>photos/count.json</a></div><div class='description'><div class='short'><p>Retrieves the total number of Photo objects.</p>\n</div><div class='long'><p>Retrieves the total number of Photo objects.</p>\n<h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>Total number of Photo objects. Returned in the <code>meta</code> header.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to retrieve the total number of Photo objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"photos/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/photos/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"photosCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to retrieve the total number of Photo objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"photos/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to retrieve the total number of Photo objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"photos/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><strong class='http-method'>POST </strong><a href='#!/api/Photos-method-create' class='name expandable'>photos/create.json</a></div><div class='description'><div class='short'>Create a photo using the given photo binary attachment. ...</div><div class='long'><p>Create a photo using the given <code>photo</code> binary attachment. A <code>collection_name</code>\nor <code>collection_id</code> is optional. The response includes a <code>processed</code> flag which\nindicates if the photo has been resized and stored reliably in the\nArrowDB storage engine. This will initially be <code>false</code>.\nThe <code>md5</code> field gives the md5 sum of the file which can be used to verify file\nintegrity.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>photo</span> : FileUpload <strong class=\"required signature\">required</strong><div class='sub-desc'><p>The attached binary file.</p>\n</div></li><li><span class='pre'>title</span> : String<div class='sub-desc'><p>Photo title.</p>\n</div></li><li><span class='pre'>collection_name</span> : String<div class='sub-desc'><p>Name of the <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a> to add this photo to.</p>\n</div></li><li><span class='pre'>collection_id</span> : String<div class='sub-desc'><p>ID of the <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a> to add this photo to.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma separated list of tags to associate with this photo.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User-defined fields to add to this photo. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this photo object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this photo object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to create the photo on behalf of.</p>\n\n<p>The current login user must be an application admin to create a photo on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>photo_sizes</span> : String/Hash<div class='sub-desc'><p>User-defined photo sizes. See <a href=\"#!/guide/photosizes#custom\">Photo Uploading &amp;\nSizes</a>.  Sizes be specified as a JSON object, or using a separate parameter for each\nsize. To specify a photo size called \"preview\" using JSON:</p>\n\n<pre><code>photo_size : { \"preview\" : \"120x120#\" }\n</code></pre>\n\n<p>To pass each size as a separate parameter, do <em>not</em> use the literal parameter name <code>photo_sizes</code>,\nbut add a parameter named <code>photo_sizes[</code><em>sizeName</em><code>]</code> for each custom photo\nsize. The previous example in this format looks like this:</p>\n\n<pre><code>\"photo_size[preview]\" : \"120x120#\"\n</code></pre>\n</div></li><li><span class='pre'>photo_sync_sizes[]</span> : String<div class='sub-desc'><p>Synchronous photo sizes to upload. See <a href=\"#!/guide/photosizes\">Photo Uploading &amp; Resizing</a>.</p>\n\n<p>The literal name for this parameter is <code>photo_sync_sizes[]</code>. This parameter can be specified\nmultiple times, once for each photo size that must be created before the request returns.</p>\n\n<p>For example:</p>\n\n<pre><code>\"photo_sync_sizes[]=preview\"\n</code></pre>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>photos</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>[]<div class='sub-desc'><p>Single-element array containing the newly-created photo object.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example creates a new photo and checks the response.</p>\n\n<pre><code>Cloud.Photos.create({\n    photo: Titanium.Filesystem.getFile('photo.jpg')\n}, function (e) {\n    if (e.success) {\n        var photo = e.photos[0];\n        alert('Success:\\n' +\n            'id: ' + photo.id + '\\n' +\n            'filename: ' + photo.filename + '\\n' +\n            'size: ' + photo.size,\n            'updated_at: ' + photo.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt  -F \"file=@photo.jpg\" https://api.cloud.appcelerator.com/v1/photos/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"createPhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\":\"4d51d4186f70952d4c000006\",\n        \"filename\":\"photo.jpg\",\n        \"size\":584344,\n        \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\":\"2011-02-08T23:39:04+0000\",\n        \"updated_at\":\"2011-02-08T23:39:04+0000\",\n        \"processed\":false\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSError* error = nil;\nNSData *fileData = [NSData dataWithContentsOfFile:@\"profile.png\" options:0 error: &amp;error];\nif (fileData == nil) {\n    // handle error\n    NSLog(@\"Failed to read file, error %@\", error);\n    return;\n}\n\n// Put photo data in a dictionary:\nNSDictionary *data = @{\n    @\"photo\": fileData,\n    @\"collection_name\": @\"profile_photos\"\n};\n\n[APSPhotos create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Uploaded!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];                        \n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];                        \n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSPhotos.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Uploaded!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Photos-method-delete' class='name expandable'>photos/delete.json</a></div><div class='description'><div class='short'>Deletes a photo to which you have update access. ...</div><div class='long'><p>Deletes a photo to which you have update access.</p>\n\n<p>An application admin can delete any photo object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>photo_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the photo to delete.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to delete the Photo object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to delete a Photo object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example deletes a photo and checks the response.</p>\n\n<pre><code>Cloud.Photos.remove({\n    photo_id: savedPhotoId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/photos/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;photo_id=4d8971236f7095514800000a\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deletePhoto\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{@\"photo_id\": @\"4d8971236f7095514800000a\"};\n\n[APSPhotos remove:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Photo deleted!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"photo_id\", \"4d8971236f7095514800000a\");\n\ntry {\n    APSPhotos.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Toast.makeText(currentActivity, \"Photo removed!\", Toast.LENGTH_SHORT).show();\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><strong class='http-method'>GET </strong><a href='#!/api/Photos-method-query' class='name expandable'>photos/query.json</a></div><div class='description'><div class='short'>Perform custom query of photos with sorting and paginating. ...</div><div class='long'><p>Perform custom query of photos with sorting and paginating. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>In addition to custom fields, here is a list of pre-defined fields\nthat can be queried and sorted:</p>\n\n<ul>\n<li><code>user_id: String</code>. Photo owner's user ID.</li>\n<li><code>title:  String</code>.  Photo title.</li>\n<li><code>tags_array: String</code>. Photo tags.</li>\n<li><code>ratings_average:  Number</code>.  Photo's average rating (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>ratings_count: Number</code>. Photo's total number of ratings (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>reviews_count: Number</code>. Photo's total number of reviews (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>created_at: Date</code>. Timestamp when the photo was created.</li>\n<li><code>updated_at: Date</code>. Timestamp when the photo was updated.</li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong>, each Photo object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>photos</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>[]<div class='sub-desc'><p>List of photos matching the query parameters.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests a list of photos and checks the response.</p>\n\n<pre><code>Cloud.Photos.query({\n    page: 1,\n    per_page: 20,\n    where: {\n        coordinates: {\n            '$nearSphere': [-122.23,37.12],\n            '$maxDistance': 0.00126\n        }\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.photos.length);\n        for (var i = 0; i &lt; e.photos.length; i++) {\n            var photo = e.photos[i];\n            alert('id: ' + photo.id + '\\n' +\n                  'name: ' + photo.name + '\\n' +\n                  'filename: ' + photo.filename + '\\n' +\n                  'updated_at: ' + photo.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request -- If your app assigns a geo location to each photo, query photos with tag \"Appcelerator Cloud Services\" near latitude 37.12, longitude -122.23 within 5 miles</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where={\"tags_array\":\"Appcelerator Cloud Services\",\"coordinates\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/photos/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryPhotos\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\":\"4d51d4186f70952d4c000006\",\n        \"filename\":\"photo.jpg\",\n        \"title\": \"Appcelerator Cloud Services\",\n        \"size\":584344,\n        \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\":\"2011-02-08T23:39:04+0000\",\n        \"updated_at\":\"2011-02-08T23:39:08+0000\",\n        \"processed\":true,\n        \"content_type\":\"image/jpeg\",\n        \"urls\": {\n          \"square\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_square.jpg\",\n          \"thumb\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_thumb.jpg\",\n          \"small\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_small.jpg\",\n          \"medium_500\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_medium_500.jpg\",\n          \"medium_640\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_medium_640.jpg\",\n          \"large\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_large.jpg\",\n          \"original\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_original.jpg\"\n        },\n        \"custom_fields\": {\n          \"coordinates\": [-122.23, 37.12] }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"where\": @{\n        @\"tags_array\":@\"Appcelerator Cloud Services\"\n    }\n};\n\n[APSPhotos query:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu photos\", (unsigned long)((NSArray *)e.response[@\"photos\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];                        \n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\n    JSONObject params = new JSONObject(\"{'tags_array': 'Appcelerator Cloud Services','coordinates': {'$nearSphere': [-122.23,37.12], '$maxDistance': 0.126}}\");\n    data.put(\"where\", params);\n\n    APSPhotos.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray photos = e.getResponse().getJSONArray(\"photos\");\n                    if (photos.length() &lt;= 0) {\n                        Log.i(\"APSPhotos\", \"No results!\");\n                    } else {\n                        for (int i = 0; i &lt; photos.length(); i++) {\n                            JSONObject photo = photos.getJSONObject(i);\n                            Log.i(\"APSPhotos\", photo.getString(\"filename\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPhotos\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n} catch (JSONException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-search' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><strong class='http-method'>GET </strong><a href='#!/api/Photos-method-search' class='name expandable'>photos/search.json</a></div><div class='description'><div class='short'>Searches for photos with sorting and paginating. ...</div><div class='long'><p>Searches for photos with sorting and paginating.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p>Request page number, default is 1.</p>\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p>Number of results per page, default is 10.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>photos</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>[]<div class='sub-desc'><p>List of photos matching the search parameters.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example searches for photos and checks the response.</p>\n\n<pre><code>Cloud.Photos.search({\n    user_id: savedUserId\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.photos.length);\n        for (var i = 0; i &lt; e.photos.length; i++) {\n            var photo = e.photos[i];\n            alert('id: ' + photo.id + '\\n' +\n                  'name: ' + photo.name + '\\n' +\n                  'filename: ' + photo.filename + '\\n' +\n                  'updated_at: ' + photo.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/photos/search.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"searchPhotos\",\n    \"page\": 1,\n    \"per_page\": 10,\n    \"total_pages\": 1,\n    \"total_results\": 1\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\": \"506f8146b8811092c3000294\",\n        \"filename\": \"Screen Shot 2012-10-05 at 5.09.38 PM.png\",\n        \"size\": 24915,\n        \"md5\": \"3fd3ac2d17b39ce7bfc42a730b2b5b5c\",\n        \"created_at\": \"2012-10-06T00:54:32+0000\",\n        \"updated_at\": \"2012-10-06T00:54:37+0000\",\n        \"processed\": true,\n        \"user\": {\n          \"id\": \"5012ffd4b881100692000947\",\n          \"first_name\": \"a\",\n          \"last_name\": \"aa\",\n          \"created_at\": \"2012-07-27T20:53:42+0000\",\n          \"updated_at\": \"2012-09-13T21:13:49+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2012-07-27T20:53:40+0000\",\n          \"username\": \"aaa\",\n          \"email\": \"aaa@cocoafish.com\",\n          \"admin\": \"false\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>[APSPhotos search:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu photos\", (unsigned long)((NSArray *)e.response[@\"photos\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];                        \n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSPhotos.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray photos = e.getResponse().getJSONArray(\"photos\");\n                    if (photos.length() &lt;= 0) {\n                        Log.i(\"APSPhotos\", \"No results!\");\n                    } else {\n                        for (int i = 0; i &lt; photos.length(); i++) {\n                            JSONObject photo = photos.getJSONObject(i);\n                            Log.i(\"APSPhotos\", photo.getString(\"filename\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPhotos\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-show' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><strong class='http-method'>GET </strong><a href='#!/api/Photos-method-show' class='name expandable'>photos/show.json</a></div><div class='description'><div class='short'>Returns the information for the identified photo. ...</div><div class='long'><p>Returns the information for the identified photo.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>photo_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the photo to show.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong> the Photo object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>photos</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>[]<div class='sub-desc'><p>Single-element array containing the identified photo.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example retrieves information about a photo and checks the response.</p>\n\n<pre><code>Cloud.Photos.show({\n    photo_id: savedPhotoId\n}, function (e) {\n    if (e.success) {\n        var photo = e.photos[0];\n        alert('Success:\\n' +\n            'id: ' + photo.id + '\\n' +\n            'filename: ' + photo.filename + '\\n' +\n            'updated_at: ' + photo.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/photos/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;photo_id=4d8971236f7095514800000a\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showPhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\":\"4d51d4186f70952d4c000006\",\n        \"filename\":\"photo.jpg\",\n        \"size\":584344,\n        \"collection_name\":\"default\",\n        \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\":\"2011-02-08T23:39:04+0000\",\n        \"updated_at\":\"2011-02-08T23:39:08+0000\",\n        \"processed\":true,\n        \"content_type\":\"image/jpeg\",\n        \"urls\": {\n          \"square\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_square.jpg\",\n          \"thumb\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_thumb.jpg\",\n          \"small\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_small.jpg\",\n          \"medium_500\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_medium_500.jpg\",\n          \"medium_640\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_medium_640.jpg\",\n          \"large\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_large.jpg\",\n          \"original\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_original.jpg\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{@\"photo_id\": @\"4d8971236f7095514800000a\"};\n\n[APSPhotos show:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSArray *photos = e.response[@\"photos\"];\n        NSDictionary *photo = photos[0];\n        NSString *message = [NSString stringWithFormat:@\"filename: %@\", photo[@\"filename\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];                        \n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSPhotos.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray photos = e.getResponse().getJSONArray(\"photos\");\n                    if (photos.length() &lt;= 0) {\n                        Log.i(\"APSPhotos\", \"No results!\");\n                    } else {\n                        JSONObject photo = photos.getJSONObject(0);\n                        Log.i(\"APSPhotos\", photo.getString(\"filename\"));\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPhotos\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e1) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Photos'>Photos</span></div><strong class='http-method'>PUT </strong><a href='#!/api/Photos-method-update' class='name expandable'>photos/update.json</a></div><div class='description'><div class='short'>Updates the photo attachment, the collection that the photo belongs to, or\nother photo properties. ...</div><div class='long'><p>Updates the photo attachment, the collection that the photo belongs to, or\nother photo properties. When replacing the existing photo attachment with a\nnew one, <code>processing</code> will be set to <code>false</code>. However the existig URLs will\nremain valid until the new photo has been processed and uploaded to the\nAppcelerator Cloud Services storage cloud. At this time, the old URLs will be\nreplaced with the URLs of the newly processed photo.</p>\n\n<p>An application admin can update any Photo object.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>photo_id</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>ID of the photo to update.</p>\n</div></li><li><span class='pre'>photo</span> : FileUpload <strong class=\"required signature\">required</strong><div class='sub-desc'><p>New photo to associate with this object, attached as a binary file.</p>\n</div></li><li><span class='pre'>title</span> : String<div class='sub-desc'><p>Photo title.</p>\n</div></li><li><span class='pre'>collection_name</span> : String<div class='sub-desc'><p>Name of the <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a> to add this photo to. Replaces the\nexisting collection, if any.</p>\n</div></li><li><span class='pre'>collection_id</span> : String<div class='sub-desc'><p>ID of the <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a> to add this photo to. Replaces the existing\ncollection, if any.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma separated list of tags to associate with this photo. Overwrites any\nexisting tags.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User-defined fields to add to this photo. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this photo object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n\n<p>To delete an ACL, set <code>acl_name</code> or <code>acl_id</code> to the empty string.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this photo object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>photo_sizes</span> : String/Hash<div class='sub-desc'><p>User-defined photo sizes. See <a href=\"#!/guide/photosizes\">Photo Uploading &amp; Resizings</a>.\nSizes be specified as a JSON object, or using a separate parameter for each\nsize. To specify a photo size called \"preview\" using JSON:</p>\n\n<pre><code>photo_size : { \"preview\" : \"120x120#\" }\n</code></pre>\n\n<p>To pass each size as a separate parameter, do <em>not</em> use the literal parameter name <code>photo_sizes</code>,\nbut add a parameter named <code>photo_sizes[</code><em>sizeName</em><code>]</code> for each custom photo\nsize. The previous example in this format looks like this:</p>\n\n<pre><code>\"photo_size[preview]\" : \"120x120#\"\n</code></pre>\n</div></li><li><span class='pre'>photo_sync_sizes</span> : String<div class='sub-desc'><p>Synchronous photo sizes to upload. See <a href=\"#!/guide/photosizes\">Photo Uploading &amp; Resizings</a>.</p>\n\n<p>The literal name for this parameter is <code>photo_sync_sizes[]</code>. This parameter can be specified\nmultiple times, once for each photo size that must be created before the request returns.</p>\n\n<p>For example:</p>\n\n<pre><code>\"photo_sync_sizes[]=preview\"\n</code></pre>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to update the Photo object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to update a Photo object on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>photos</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>[]<div class='sub-desc'><p>Single-element array containing the updated  photo.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example updates a photo and checks the response.</p>\n\n<pre><code>Cloud.Photos.update({\n    photo_id: savedPhotoId,\n    photo: Titanium.Filesystem.getFile('newphoto.jpg'),\n    tags: 'mountains'\n}, function (e) {\n    if (e.success) {\n        var photo = e.photos[0];\n        alert('Success:\\n' +\n            'id: ' + photo.id + '\\n' +\n            'filename: ' + photo.filename + '\\n' +\n            'updated_at: ' + photo.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt  -X PUT -F \"photo=@photo.jpg\" -F \"photo_id=4d7e62d6d0afbe04170000a4\" https://api.cloud.appcelerator.com/v1/photos/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"updatePhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\": \"4e382fbed0afbe2495000006\",\n        \"filename\": \"photo.jpg\",\n        \"size\": 584344,\n        \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\": \"2011-08-02T17:11:26+0000\",\n        \"updated_at\": \"2011-08-02T17:11:40+0000\",\n        \"processed\": false,\n        \"content_type\": \"image/jpeg\",\n        \"urls\": {\n          \"square_75\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_square_75.jpg\",\n          \"thumb_100\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_thumb_100.jpg\",\n          \"small_240\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_small_240.jpg\",\n          \"medium_500\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_medium_500.jpg\",\n          \"medium_640\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_medium_640.jpg\",\n          \"large_1024\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_large_1024.jpg\",\n          \"original\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_original.jpg\"\n        },\n        \"exif\": {\n          \"create_date\": \"2010-06-21T02:19:20+0000\",\n          \"width\": 1600,\n          \"height\": 1067,\n          \"shutter_speed\": \"1/60\",\n          \"make\": \"Canon\",\n          \"model\": \"Canon EOS 5D Mark II\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSError* error = nil;\nNSData *fileData = [NSData dataWithContentsOfFile:@\"profile2.png\" options:0 error:&amp;error];\nif (fileData == nil) {\n    // handle error\n    NSLog(@\"Failed to read file, error %@\", error);\n    return;\n}\n\nNSDictionary *data = @{\n    @\"photo_id\": @\"4d7e62d6d0afbe04170000a4\",\n    @\"photo\": fileData\n};\n\n[APSPhotos update:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Updated!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"photo_id\", \"4d7e62d6d0afbe04170000a4\");\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSPhotos.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Uploaded!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});