Ext.data.JsonP['Users']({"tagname":"class","name":"Users","alternateClassNames":[],"mixins":[],"meta":{},"aliases":{},"files":[{"filename":"query.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/query.yml"},{"filename":"batch_delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/batch_delete.yml"},{"filename":"logout.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/logout.yml"},{"filename":"show.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/show.yml"},{"filename":"Users.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/Users.yml"},{"filename":"count.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/count.yml"},{"filename":"login.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/login.yml"},{"filename":"create.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/create.yml"},{"filename":"update.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/update.yml"},{"filename":"user_verification.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/user_verification.yml"},{"filename":"showme.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/showme.yml"},{"filename":"reset_password.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/reset_password.yml"},{"filename":"search.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/search.yml"},{"filename":"delete.yml","href":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/apidoc/Users/delete.yml"}],"members":{"cfg":[],"property":[{"name":"admin","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-admin"},{"name":"created_at","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-created_at"},{"name":"custom_fields","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-custom_fields"},{"name":"email","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-email"},{"name":"external_accounts","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-external_accounts"},{"name":"first_name","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-first_name"},{"name":"friend_counts","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-friend_counts"},{"name":"id","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-id"},{"name":"last_name","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-last_name"},{"name":"photo","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-photo"},{"name":"role","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-role"},{"name":"updated_at","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-updated_at"},{"name":"username","tagname":"property","owner":"Users","meta":{"[:hide]":false},"id":"property-username"}],"method":[{"name":"users/batch_delete.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"id":"method-batch_delete"},{"name":"users/count.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-count"},{"name":"users/create.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-create"},{"name":"users/delete.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-delete"},{"name":"users/login.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-login"},{"name":"users/logout.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-logout"},{"name":"users/query.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-query"},{"name":"users/request_reset_password.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-request_reset_password"},{"name":"users/resend_confirmation.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-resend_confirmation"},{"name":"users/search.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-search"},{"name":"users/show.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"id":"method-show"},{"name":"users/show/me.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-show_me"},{"name":"users/update.json","tagname":"method","owner":"Users","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"id":"method-update"}],"event":[],"css_var":[],"css_mixin":[]},"extends":null,"singleton":null,"private":null,"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='sidebar'></div><div class='hierarchy'></div><div class='doc-contents'><p>Represents a user account.</p>\n\n<p>By default, new user accounts are activated as soon as they are created. You can enable new user\naccount email verification in the <strong>Cloud > Settings &amp; Configuration > Settings</strong> tab in <a href=\"https://dashboard.appcelerator.com\">Appcelerator Dashboard</a>\nor the Settings tab in <a href=\"https://my.appcelerator.com/apps\">My Apps</a>. Once enabled, new users will receive an email\nwith instructions to activate their account. This setting doesn't apply when a new user\nis created by logging in with an external account (see <a href=\"#!/api/SocialIntegrations\" rel=\"SocialIntegrations\" class=\"docClass\">SocialIntegrations</a>).</p>\n\n<p>A new user must specify at least one of the following when creating an account:</p>\n\n<ul>\n<li> username</li>\n<li> email address, first_name <strong>and</strong> last_name.</li>\n</ul>\n\n\n<p><strong>Note:</strong> both the <code>username</code> and <code>email</code> fields are stored as lowercase strings.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Fields</h3><div class='subsection'><div id='property-admin' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-admin' class='name not-expandable'>admin</a><span> : Boolean</span></div><div class='description'><div class='short'><p>Set to true if the user is an application admin.</p>\n</div><div class='long'><p>Set to true if the user is an application admin.</p>\n</div></div></div><div id='property-created_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-created_at' class='name not-expandable'>created_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Creation date for this user object.</p>\n</div><div class='long'><p>Creation date for this user object.</p>\n</div></div></div><div id='property-custom_fields' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-custom_fields' class='name expandable'>custom_fields</a><span> : String/Hash</span></div><div class='description'><div class='short'>User defined fields. ...</div><div class='long'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></div></div><div id='property-email' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-email' class='name expandable'>email</a><span> : String</span></div><div class='description'><div class='short'>User's email address. ...</div><div class='long'><p>User's email address. Stored as a lowercase string.</p>\n\n<p>For security, this field is not shown unless you have admin access.</p>\n</div></div></div><div id='property-external_accounts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-external_accounts' class='name expandable'>external_accounts</a><span> : Hash[]</span></div><div class='description'><div class='short'>List of external accounts associated with this user. ...</div><div class='long'><p>List of external accounts associated with this user. Each account is represented\nby a Hash with the following properties:</p>\n\n<ul>\n<li><code>external_id: String</code>. External account ID.</li>\n<li><code>external_type: String</code>. Account type, for example, \"facebook\".</li>\n<li><code>token: String</code>. External account login token.</li>\n</ul>\n\n</div></div></div><div id='property-first_name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-first_name' class='name not-expandable'>first_name</a><span> : String</span></div><div class='description'><div class='short'><p>User's first name.</p>\n</div><div class='long'><p>User's first name.</p>\n</div></div></div><div id='property-friend_counts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-friend_counts' class='name expandable'>friend_counts</a><span> : Hash</span></div><div class='description'><div class='short'>Dictionary describing the number of friends the user has. ...</div><div class='long'><p>Dictionary describing the number of friends the user has.  Possible keys returned are:</p>\n\n<ul>\n<li><code>requests</code>: number of pending friend requests.</li>\n<li><code>friends</code>: number of friends if two-way friendship is enabled.</li>\n<li><code>following</code>: number of friends being followed by the user if one-way friendship is enabled.</li>\n<li><code>follows</code>: number of friends following the user if one-way friendship is enabled.</li>\n</ul>\n\n</div></div></div><div id='property-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-id' class='name not-expandable'>id</a><span> : String</span></div><div class='description'><div class='short'><p>User's ID, generated by ArrowDB.</p>\n</div><div class='long'><p>User's ID, generated by ArrowDB.</p>\n</div></div></div><div id='property-last_name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-last_name' class='name not-expandable'>last_name</a><span> : String</span></div><div class='description'><div class='short'><p>User's last name</p>\n</div><div class='long'><p>User's last name</p>\n</div></div></div><div id='property-photo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-photo' class='name not-expandable'>photo</a><span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></span></div><div class='description'><div class='short'><p>Primary photo for this user.</p>\n</div><div class='long'><p>Primary photo for this user.</p>\n</div></div></div><div id='property-role' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-role' class='name not-expandable'>role</a><span> : String</span></div><div class='description'><div class='short'><p>User's role.</p>\n</div><div class='long'><p>User's role.</p>\n</div></div></div><div id='property-updated_at' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-updated_at' class='name not-expandable'>updated_at</a><span> : Date</span></div><div class='description'><div class='short'><p>Last update time for this user object.</p>\n</div><div class='long'><p>Last update time for this user object.</p>\n</div></div></div><div id='property-username' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><a href='#!/api/Users-property-username' class='name expandable'>username</a><span> : String</span></div><div class='description'><div class='short'>User's login name. ...</div><div class='long'><p>User's login name. Stored as a lowercase string.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-batch_delete' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Users-method-batch_delete' class='name expandable'>users/batch_delete.json</a><strong class='signature'>admin-only</strong></div><div class='description'><div class='short'>Deletes Users objects that match the query constraints provided in the where parameter. ...</div><div class='long'><p>Deletes Users objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Users objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>The <a href=\"#!/api/Users-property-photo\" rel=\"Users-property-photo\" class=\"docClass\">primary photos</a> associated with the matched objects are\nnot deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Encoded JSON object that specifies constraint values for Users objects to delete.\nIf not specified, all Users objects are deleted.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to delete all User objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"users/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All users have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/users/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to delete all User objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"users/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All users have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to delete all User objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"users/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All users have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-count' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>GET </strong><a href='#!/api/Users-method-count' class='name not-expandable'>users/count.json</a></div><div class='description'><div class='short'><p>Retrieves the total number of User objects.</p>\n</div><div class='long'><p>Retrieves the total number of User objects.</p>\n<h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>Total number of User objects. Returned in the <code>meta</code> header.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>Example request to retrieve the total number of User objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"users/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/users/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"usersCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example request to retrieve the total number of User objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"users/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example request to retrieve the total number of User objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"users/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n</div></div></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>POST </strong><a href='#!/api/Users-method-create' class='name expandable'>users/create.json</a></div><div class='description'><div class='short'>Creates a new user. ...</div><div class='long'><p>Creates a new user.</p>\n\n<p>When creating a user, you must specify either:</p>\n\n<ul>\n<li>username</li>\n<li>email address, first name, and last name</li>\n</ul>\n\n\n<p>A user can have both an email address and username specified. However, if username\nis omitted, email address, first name and last name are required.</p>\n\n<p>For regular users (non-admin users), after successully executing this command, you will be logged\nin as the new user and the session ID will be associated with the newly created user.  For\nexample, when user A creates user B, user A is now logged in as user B and user A's session\nID belongs to user B.</p>\n\n<p>For admin users, you will still be logged in as the admin user.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>email</span> : String<div class='sub-desc'><p>User's email address. Required if <code>username</code> is not specified.</p>\n</div></li><li><span class='pre'>username</span> : String<div class='sub-desc'><p>User's login name. Required if <code>email</code> is not specified.</p>\n\n<p>If <code>username</code> is not specified, <code>email</code>, <code>first_name</code>, and <code>last_name</code> must be included.</p>\n</div></li><li><span class='pre'>password</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>User's password.</p>\n</div></li><li><span class='pre'>password_confirmation</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Copy of user's password for confirmation.</p>\n</div></li><li><span class='pre'>first_name</span> : String<div class='sub-desc'><p>User's first name. Required when <code>username</code> is not provided.</p>\n</div></li><li><span class='pre'>last_name</span> : String<div class='sub-desc'><p>User's last name. Required when <code>username</code> is not provided.</p>\n</div></li><li><span class='pre'>photo</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a><div class='sub-desc'><p>New photo to attach as the primary photo for the user.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>ID of an existing photo to attach as the primary photo for the user.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma separated list of tags for this user.</p>\n</div></li><li><span class='pre'>custom_fields</span> : String/Hash<div class='sub-desc'><p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to create this user on behalf of.</p>\n\n<p>The current login user must be an application admin to create a user on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>role</span> : String<div class='sub-desc'><p>String representation of user role, for example, \"teacher\".</p>\n</div></li><li><span class='pre'>template</span> : String<div class='sub-desc'><p>Send a congratulation email to notify that the user has been created successfully.</p>\n\n<p>You need to create an email template and pass the template name.</p>\n</div></li><li><span class='pre'>confirmation_template</span> : String<div class='sub-desc'><p>If \"New User Email Verification\" is enabled for the application, ArrowDB sends a confirmation email to\nthe user.</p>\n\n<p>If you don't pass the <code>confirmation_template</code> parameter, then ArrowDB sends a default\nconfirmation email.</p>\n\n<p>If you wish to use your custom email body, you can create a email template and pass\nthe template name. Your email template must contain the following URL to allow users\nto be redirected to Appcelerator Cloud Services email verification page:</p>\n\n<pre><code> https://cloud.appcelerator.com/users/confirmation?key={{key}}&amp;confirmation_token={{confirmation_token}}\n</code></pre>\n\n<p>If you have your own website that talks to Appcelerator Cloud Services backend and\nwish to use custom URL, you must provide a URL with the following format:</p>\n\n<pre><code> https://&lt;your_url.com&gt;/&lt;your_method&gt;?key={{key}}&amp;confirmation_token={{confirmation_token}}\n</code></pre>\n\n<p>When a user visits the above URL, you call the ArrowDB <code>users/confirm_user.json</code> method to\nconfirm the user internally from your web server and you must append the query parameter <code>&amp;ct=enterprise</code>\nto the end of the URL:</p>\n\n<pre><code> GET https://api.cloud.appcelerator.com/v1/users/confirm_user.json?confirmation_token={{confirmation_token}}&amp;key=&lt;Your App Key&gt;&amp;ct=enterprise\n</code></pre>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>Single-element array containing user record for the new user.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example creates a new user and checks the response.</p>\n\n<pre><code>Cloud.Users.create({\n    email: 'test@mycompany.com',\n    first_name: 'test_firstname',\n    last_name: 'test_lastname',\n    password: 'test_password',\n    password_confirmation: 'test_password'\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'sessionId: ' + Cloud.sessionId + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X POST --data-urlencode \"email=john.smith@company.com\" --data-urlencode \"role=teacher\" --data-urlencode \"first_name=John\" --data-urlencode \"last_name=Smith\" --data-urlencode \"password=pass\" --data-urlencode \"password_confirmation=pass\" --data-urlencode 'custom_fields={\"age\":28, \"favorite_color\":\"blue\"}' \"https://api.cloud.appcelerator.com/v1/users/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"stat\":\"ok\",\n    \"code\":200,\n    \"method\":\"createUser\",\n    \"session_id\": \"abcDe0fGHijklenmU6xrdR9123-0\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\":\"4d6e77386f70950c89000001\",\n        \"first_name\":\"John\",\n        \"last_name\":\"Smith\",\n        \"role\": \"teacher\",\n        \"created_at\":\"2011-03-02T16:58:32+0000\",\n        \"updated_at\":\"2011-03-02T16:58:32+0000\",\n        \"facebook_authorized\":false,\n        \"email\":\"john.smith@company.com\",\n        \"photo\": {\n          \"id\":\"4d882896d0afbe0a3600000d\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-03-22T04:41:58+0000\",\n          \"updated_at\":\"2011-03-22T04:42:07+0000\",\n          \"processed\":false\n        },\n        \"custom_fields\": {\n          \"age\":28,\n          \"favorite_color\":\"blue\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>The User object is defined in <code>ACSClient/Models/CCUser.h</code> The Appcelerator\nCloud Services SDK automatically stores a logged in user’s session in memory\nand on disk. So once a user is logged in, you can access the current user info\nanytime by calling:</p>\n\n<pre><code>[[ACSClient defaultACSClient] getCurrentUser]\n</code></pre>\n\n<p>It will work after the app is restarted since the session is persisted on disk\nas well.</p>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"email\": @\"foo@foo.com\",\n    @\"password\": @\"pass\",\n    @\"password_confirmation\": @\"pass\",\n    @\"first_name\": @\"John\",\n    @\"last_name\": @\"Woo\",\n};\n\n[APSUsers create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *userId = [[[e.response objectForKey:@\"users\"] objectAtIndex:0] objectForKey:@\"id\"];\n        NSString *msg = [NSString stringWithFormat:@\"Created! You are now logged in as %@\", userId];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"email\", \"test@appcelerator.com\");\ndata.put(\"first_name\", \"test_firstname\");\ndata.put(\"last_name\", \"test_lastname\");\ndata.put(\"password\", \"test_password\");\ndata.put(\"password_confirmation\", \"test_password\");\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSUsers.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    String userId = e.getResponse().getJSONArray(\"users\").getJSONObject(0).getString(\"id\");\n                    new AlertDialog.Builder(currentActivity)\n                    .setTitle(\"Success!\").setMessage(\"Created! You are now logged in as \" + userId)\n                    .setPositiveButton(android.R.string.ok, null)\n                    .setIcon(android.R.drawable.ic_dialog_info)\n                    .show();\n                } catch (JSONException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>DELETE </strong><a href='#!/api/Users-method-delete' class='name expandable'>users/delete.json</a></div><div class='description'><div class='short'>A user must already be logged in to their account to delete it. ...</div><div class='long'><p>A user must already be logged in to their account to delete it. Any <a href=\"#!/api/Friends\" rel=\"Friends\" class=\"docClass\">Friends</a>-related\ndata and push notification subscriptions associated with the user are also deleted.</p>\n\n<p>The user's associated <a href=\"#!/api/Users-property-photo\" rel=\"Users-property-photo\" class=\"docClass\">primary photo</a> is not deleted.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to delete this user on behalf of.</p>\n\n<p>The current login user must be an application admin to delete a user on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example deletes the current user and checks the response.</p>\n\n<pre><code>Cloud.Users.remove(function (e) {\n    if (e.success) {\n        alert('Success: Removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE https://api.cloud.appcelerator.com/v1/users/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n \"meta\": {\n   \"status\":\"ok\",\n   \"code\":200,\n   \"method_name\":\"deleteUser\"\n }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>[APSUsers remove:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Removed!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\ntry {\n    APSUsers.remove(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-login' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>POST </strong><a href='#!/api/Users-method-login' class='name expandable'>users/login.json</a></div><div class='description'><div class='short'>Log a user in using their ArrowDB credentials. ...</div><div class='long'><p>Log a user in using their ArrowDB credentials.</p>\n\n<p>To log a user in using an external account, see <a href=\"#!/api/SocialIntegrations-method-external_account_login\" rel=\"SocialIntegrations-method-external_account_login\" class=\"docClass\">External Account Login</a>.</p>\n\n<p>To log a user out, see <a href=\"#!/api/Users-method-logout\" rel=\"Users-method-logout\" class=\"docClass\">logout</a>.</p>\n\n<p>User login sessions expire after they have been unused for three months.\nIf the application saves and uses a persistent reference to the user login session, and the\nuser session expires, any ArrowDB call that requires a user login will return a 404 error.\nYour application needs to handle an invalid user session error, such as prompting the user\nto log in.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>login</span> : String<div class='sub-desc'><p>Email address or username of the user to login.</p>\n</div></li><li><span class='pre'>password</span> : String<div class='sub-desc'><p>User's password.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example logs a user in and checks the response.</p>\n\n<pre><code>Cloud.Users.login({\n    login: 'test@mycompany.com',\n    password: 'test_password'\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'sessionId: ' + Cloud.sessionId + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"login=mgoff@appcelerator.com\" -F \"password=food\" https://api.cloud.appcelerator.com/v1/users/login.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"loginUser\",\n    \"session_id\": \"abcDe0fGHijklenmU6xrdR9t0Z-0\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\":\"4d6e77386f70950c89000001\",\n        \"first_name\":\"Michael\",\n        \"last_name\":\"Goff\",\n        \"created_at\":\"2011-03-02T16:58:32+0000\",\n        \"updated_at\":\"2011-03-02T17:18:44+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2012-03-05T20:56:14+0000\",\n        \"username\": \"mgoff\",\n        \"role\": \"\",\n        \"email\": \"mgoff@appcelerator.com\",\n        \"admin\": \"true\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"reviews_count\": 1,\n        \"ratings_count\": 1,\n        \"ratings_average\": 122.0,\n        \"ratings_summary\": {\n          \"122\": 1\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n   @\"login\":@\"foo@foo.com\",\n   @\"password\":\"@password\"\n};\n\n[APSUsers login:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *userId = [[[e.response objectForKey:@\"users\"] objectAtIndex:0] objectForKey:@\"id\"];\n        NSString *msg = [NSString stringWithFormat:@\"Logged in! You are now logged in as %@\", userId];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"login\", \"test@appcelerator.com\");\ndata.put(\"password\", \"test_password\");\n\ntry {\n    APSUsers.login(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    String userId = e.getResponse().getJSONArray(\"users\").getJSONObject(0).getString(\"id\");\n                    new AlertDialog.Builder(currentActivity)\n                    .setTitle(\"Success!\").setMessage(\"Logged in! You are now logged in as \" + userId)\n                    .setPositiveButton(android.R.string.ok, null)\n                    .setIcon(android.R.drawable.ic_dialog_info)\n                    .show();\n                } catch (JSONException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-logout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>GET </strong><a href='#!/api/Users-method-logout' class='name expandable'>users/logout.json</a></div><div class='description'><div class='short'>Log out a user. ...</div><div class='long'><p>Log out a user.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>device_token</span> : String<div class='sub-desc'><p>If specified, all push subscriptions associated with this device token are\ncanceled. See the \"Push Notifications\" section in the\n<a href=\"#!/guide/sdks/android\">Android SDK guide</a> for more information.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example logs out the current user and checks the response.</p>\n\n<pre><code>Cloud.Users.logout(function (e) {\n    if (e.success) {\n        alert('Success: Logged out');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/users/logout.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"logoutUser\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSUsers logout:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Logged out!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\ntry {\n    APSUsers.logout(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Toast.makeText(currentActivity, \"Logged out!\", Toast.LENGTH_SHORT);\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>GET </strong><a href='#!/api/Users-method-query' class='name expandable'>users/query.json</a></div><div class='description'><div class='short'>Custom query of Users objects with sorting and paginating. ...</div><div class='long'><p>Custom query of Users objects with sorting and paginating. You can query on sort\nbased on the data in any of the standard User fields. You can also query and\nsort data based on the values of any custom fields, if the values are simple JSON\nvalues.</p>\n\n<p>For security reasons, when querying for <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> the <a href=\"#!/api/Users-property-email\" rel=\"Users-property-email\" class=\"docClass\">email</a> field is not returned\nin each Users object unless you have <a href=\"#!/guide/admin_access\">admin access</a>.</p>\n\n<p>Currently you <strong>cannot</strong> sort or query based on data stored inside array or hash\nobjects in custom fields.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n</div></li><li><span class='pre'>skip</span> : Number<div class='sub-desc'><p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n</div></li><li><span class='pre'>where</span> : Hash<div class='sub-desc'><p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n</div></li><li><span class='pre'>order</span> : String<div class='sub-desc'><p>Sort results by one or more fields.</p>\n</div></li><li><span class='pre'>sel</span> : Hash<div class='sub-desc'><p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong>, each User object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>unsel</span> : Hash<div class='sub-desc'><p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>List of users matching the query parameters.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests information about specific users and checks the response.</p>\n\n<pre><code>Cloud.Users.query({\n    page: 1,\n    per_page: 10,\n    where: {\n        age: { '$gt': 28 },\n        favorite_color: 'blue',\n        first_name: 'joe'\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.users.length);\n        for (var i = 0; i &lt; e.users.length; i++) {\n            var user = e.users[i];\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n         }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where={\"first_name\":\"joe\",\"coordinates\":{\"$nearSphere\":[-122.1,37.1], \"$maxDistance\" : 0.00126}}' --data-urlencode 'order=created_at' \"https://api.cloud.appcelerator.com/v1/users/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryUsers\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb057c3aafa087a000400\",\n        \"first_name\": \"joe\",\n        \"last_name\": \"smith\",\n        \"created_at\": \"2014-08-25T21:53:27+0000\",\n        \"updated_at\": \"2014-08-26T18:43:22+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:27+0000\",\n        \"username\": \"jsmith\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 1,\n          \"friends\": 0\n        }\n      }\n    ]\n  }\n}\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSUsers query:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu statuses\", (unsigned long)((NSArray *)e.response[@\"statuses\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"{'first_name': 'joe', 'coordinates': {'$nearSphere': [-122.1,37.1], '$maxDistance': 0.00126}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSUsers.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray users = e.getResponse().getJSONArray(\"users\");\n                    if (users.length() &lt;= 0) {\n                        Log.i(\"APSUsers\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; users.length(); i++) {\n                            JSONObject user = users.getJSONObject(i);\n                            Log.i(\"APSUsers\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-request_reset_password' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>GET </strong><a href='#!/api/Users-method-request_reset_password' class='name expandable'>users/request_reset_password.json</a></div><div class='description'><div class='short'>Sends an email to a user containing a link to recover a lost password. ...</div><div class='long'><p>Sends an email to a user containing a link to recover a lost password. You can use the default\nemail template provided by ACS, or specify a <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Managing_Email_Templates-section-37548619_ManagingEmailTemplates-Creatinganemailtemplate\">custom email template</a>\nthat you have created. When using a custom email template, the email must contain a properly\nformatted URL, as explained in the <code>template</code> method parameter documentation below.</p>\n\n<p>You must also have configured your application's <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_Cloud_Services-section-39683049_ConfiguringCloudServices-Email\">email settings</a>\nin Appcelerator Dashboard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>email</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Email address. Must match the user's registered email address.</p>\n</div></li><li><span class='pre'>subject</span> : String<div class='sub-desc'><p>The default subject of the password reset email is \"Password reset request for\n{{your app name}}\". If you wish to have your custom email subject, you can\nprovide it by setting the subject parameter</p>\n</div></li><li><span class='pre'>template</span> : String<div class='sub-desc'><p>If you wish to use your custom email body. You can create a email template and\npass the template name. The email must contain a properly formatted link to the password\nreset URL on appcelerator.com, or a link on your own site, as follows:</p>\n\n<p><p></p>\n\n<p>To link directly to the password page, your email template must contain a link to the following\nURL:</p>\n\n<pre><code>https://platform.appcelerator.com/#/users/reset_password/{{key}}/{{reset_password_token}}\n</code></pre>\n\n<p>If you prefer the user to reset their password on your own website, rather than on appcelerator.com,\nyou must provide a URL with the following format:</p>\n\n<pre><code>https://[your_url.com]/[your_method]?reset_password_token={{reset_password_token}}\n</code></pre>\n\n<p>This page must cache the value of the <code>reset_password_token</code> parameter and present a form\nthat allows the user to enter a new password and password confirmation.\nWhen the user submits the form, the app server must make the following call to Appcelerator Cloud Services API to reset the\npassword, passing the original password reset token, the user's new password, and the password confirmation:</p>\n\n<pre><code>GET https://api.cloud.appcelerator.com/v1/users/reset_password.json?key=&lt;Your App Key&gt;&amp;reset_password_token={{reset_password_token}}&amp;password={{password}} &amp;password_confirmation={{password_confirmation}}\n</code></pre>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests a password reset for a user and checks the response.</p>\n\n<pre><code>Cloud.Users.requestResetPassword({\n    email: 'joeuser@mycompany.com'\n}, function (e) {\n    if (e.success) {\n        alert('Success: Reset Request Sent');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/users/request_reset_password.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;email=foo@foo.com\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"RequestResetPassword\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>The following example creates an NSDictionary of parameters to be passed with the request.\nThe object <code>emailField</code> is a UITextField (not shown).</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"email\":@\"foo@foo.com\"\n};\n\n[APSUsers requestResetPassword:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Please check your email!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }                    \n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"email\", \"foo@foo.com\");\n\ntry {\n    APSUsers.requestResetPassword(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Please check your email!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-resend_confirmation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>GET </strong><a href='#!/api/Users-method-resend_confirmation' class='name expandable'>users/resend_confirmation.json</a></div><div class='description'><div class='short'>If you enabled new user account email verification in your App settings, all\nnew users will receive an email containi...</div><div class='long'><p>If you enabled new user account email verification in your App settings, all\nnew users will receive an email containing instructions to activate their\naccount. You can use this API to re-send user verification email.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>email</span> : String <strong class=\"required signature\">required</strong><div class='sub-desc'><p>Email must match user's registered email.</p>\n</div></li><li><span class='pre'>confirmation_subject</span> : String<div class='sub-desc'><p>The default subject of the email verification is \"Email Verification\nInstructions for {{your app name}}\". If you wish to have your custom email\nsubject, you can provide it by setting the <code>confirmation_subject</code> parameter.</p>\n</div></li><li><span class='pre'>confirmation_template</span> : String<div class='sub-desc'><p>If you wish to use your custom email body. You can create a email template and\npass the template name. Your email template must contain the following URL to\nallow users to be redirected to Appcelerator Cloud Services email verification page:</p>\n\n<pre><code>https://cloud.appcelerator.com/users/confirmation?key={{key}}&amp;confirmation_token={{confirmation_token}}\n</code></pre>\n\n<p>If you have your own website that talks to Appcelerator Cloud Services backend\nand wish to use custom URL, you must provide a URL with the following format:</p>\n\n<pre><code>https://[your_url.com]/[your_method]?key={{key}}&amp;confirmation_token={{confirmation_token}}\n</code></pre>\n\n<p>When a user visits the above URL, you make a call to Appcelerator Cloud\nServices to confirm the user internally from your web server:</p>\n\n<pre><code>GET https://api.cloud.appcelerator.com/v1/users/confirm_user.json?confirmation_token={{confirmation_token}}&amp;key=&lt;Your App Key&gt;\n</code></pre>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>The following example re-sends a verification email to the user's registered email.\nIf the reset request is successful, an alert dialog is displayed asking the user to check their email; otherwise, an error is generated.  Available as a Titanium API since release 3.2.0.</p>\n\n<pre><code>Cloud.Users.resendConfirmation({\n    email: email.value\n}, function (e) {\n    if (e.success) {\n        alert('Please check your email!');\n        email.value = '';\n    }\n    else {\n        error(e);\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/users/resend_confirmation.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;email=foo@foo.com\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"resendConfirmation\"\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"email\": @\"foo@foo.com\"\n};\n\n[APSUsers resendConfirmation:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Please check your email!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"email\", \"foo@foo.com\");\n\ntry {\n    APSUsers.resendConfirmation(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Please check your email!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-search' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>GET </strong><a href='#!/api/Users-method-search' class='name expandable'>users/search.json</a></div><div class='description'><div class='short'>Returns the list of users that have been added to the app, sorted by search\nrelevancy. ...</div><div class='long'><p>Returns the list of users that have been added to the app, sorted by search\nrelevancy.</p>\n\n<p>Optionally, <code>q</code> can be given to perform full text search on user's first name,\nlast name, email address, username and tags. For security reasons, when searching for <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>\nthe <a href=\"#!/api/Users-property-email\" rel=\"Users-property-email\" class=\"docClass\">email</a> field is not returned in each Users object unless you have\n<a href=\"#!/guide/admin_access\">admin access</a>.</p>\n\n<p>For advanced custom search, see <a href=\"#!/api/Users-method-query\" rel=\"Users-method-query\" class=\"docClass\">query</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : Number<div class='sub-desc'><p>Request page number, default is 1.</p>\n</div></li><li><span class='pre'>per_page</span> : Number<div class='sub-desc'><p>Number of results per page, default is 10.</p>\n</div></li><li><span class='pre'>q</span> : String<div class='sub-desc'><p>Space-separated list of keywords, used to perform full text search on first name, last name, email address,\nusername and tags fields.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests information about particular users and checks the response.</p>\n\n<pre><code>Cloud.Users.search({\n    q: 'test'\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.users.length);\n        for (var i = 0; i &lt; e.users.length; i++) {\n            var user = e.users[i];\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n         }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/users/search.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchUsers\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":1\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb057c3aafa087a000400\",\n        \"first_name\": \"Roy\",\n        \"last_name\": \"Harper\",\n        \"created_at\": \"2014-08-25T21:53:27+0000\",\n        \"updated_at\": \"2014-08-26T18:43:22+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:27+0000\",\n        \"username\": \"speedy\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 1,\n          \"friends\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{@\"q\":@\"John\"};\n\n[APSUsers search:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu users\", (unsigned long)((NSArray *)e.response[@\"users\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:e.responseString delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"q\", \"Peter,Paul,Mary\");\n\ntry {\n    APSUsers.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray users = e.getResponse().getJSONArray(\"users\");\n                    if (users.length() &lt;= 0) {\n                        Log.i(\"APSUsers\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; users.length(); i++) {\n                            JSONObject user = users.getJSONObject(i);\n                            Log.i(\"APSUsers\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-show' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>GET </strong><a href='#!/api/Users-method-show' class='name expandable'>users/show.json</a></div><div class='description'><div class='short'>Shows public user information. ...</div><div class='long'><p>Shows public user information. For private information about the currently\nlogged in user, see <a href=\"#!/api/Users-method-show_me\" rel=\"Users-method-show_me\" class=\"docClass\">Show Logged In User Info</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>user_id</span> : String<div class='sub-desc'><p>User ID of the user to show. Either <code>user_id</code> or <code>user_ids</code> must be specified.</p>\n</div></li><li><span class='pre'>user_ids</span> : String<div class='sub-desc'><p>Comma-separated list of user IDs to show. Either <code>user_id</code> or <code>user_ids</code> must be specified.</p>\n</div></li><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.</p>\n\n<p>In order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>show_user_like</span> : Boolean<div class='sub-desc'><p>If set to <strong>true</strong> the User object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>List of user profiles.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests information about a user and checks the response.</p>\n\n<pre><code>Cloud.Users.show({\n    user_id: savedUserInfo.id\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/users/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;user_id=4d6e77386f70950c89000001\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showUsers\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb057c3aafa087a000400\",\n        \"first_name\": \"Victor\",\n        \"last_name\": \"Stone\",\n        \"created_at\": \"2014-08-25T21:53:27+0000\",\n        \"updated_at\": \"2014-08-26T18:43:22+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:27+0000\",\n        \"username\": \"cyborg\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 1,\n          \"friends\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{@\"user_id\": @\"4d6e77386f70950c89000001\"};\n[APSUsers show:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSArray *users = e.response[@\"users\"];\n        NSDictionary *user = files[0];\n        NSString *message = [NSString stringWithFormat:@\"username: %@\", user[@\"username\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_id\", \"4d6e77386f70950c89000001\");\n\ntry {\n    APSUsers.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-show_me' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>GET </strong><a href='#!/api/Users-method-show_me' class='name expandable'>users/show/me.json</a></div><div class='description'><div class='short'>Shows both public and private user information about the user who is\ncurrently logged in. ...</div><div class='long'><p>Shows both public and private user information about the user who is\ncurrently logged in.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response_json_depth</span> : Number<div class='sub-desc'><p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example requests information about the currently logged in user and checks the response.</p>\n\n<pre><code>Cloud.Users.showMe(function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt  https://api.cloud.appcelerator.com/v1/users/show/me.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showMe\",\n    \"session_id\": \"xxfbb057xxaafaxx7a0xx400\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb057c3aafa087a000400\",\n        \"first_name\": \"Donna\",\n        \"last_name\": \"Troy\",\n        \"created_at\": \"2014-08-25T21:53:27+0000\",\n        \"updated_at\": \"2014-08-26T18:43:22+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:27+0000\",\n        \"username\": \"wondergirl\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 1,\n          \"friends\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>[APSUsers showMe:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSArray *users = e.response[@\"users\"];\n        NSDictionary *user = files[0];\n        NSString *message = [NSString stringWithFormat:@\"I am %@ %@\", user[@\"first_name\"], user[@\"last_name\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\ntry {\n    APSUsers.showMe(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Users'>Users</span></div><strong class='http-method'>PUT </strong><a href='#!/api/Users-method-update' class='name expandable'>users/update.json</a></div><div class='description'><div class='short'>Any of the same parameters as create can be\nused to update the current user. ...</div><div class='long'><p>Any of the same parameters as <a href=\"#!/api/Users-method-create\" rel=\"Users-method-create\" class=\"docClass\">create</a> can be\nused to update the current user. If <code>password</code> is updated then\n<code>password_confirmation</code> must be sent as well.</p>\n<strong>User Login Required: Yes</strong><h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>email</span> : String<div class='sub-desc'><p>Email address.</p>\n</div></li><li><span class='pre'>username</span> : String<div class='sub-desc'><p>User name.</p>\n</div></li><li><span class='pre'>password</span> : String<div class='sub-desc'><p>Password.</p>\n</div></li><li><span class='pre'>password_confirmation</span> : String<div class='sub-desc'><p>Password.</p>\n</div></li><li><span class='pre'>first_name</span> : String<div class='sub-desc'><p>First name.</p>\n</div></li><li><span class='pre'>last_name</span> : String<div class='sub-desc'><p>First name.</p>\n</div></li><li><span class='pre'>photo</span> : <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a><div class='sub-desc'><p>New photo to assign as the user's primary photo.</p>\n\n<p>When you use <code>photo</code> parameter to attach a new photo, you can use it with\n<a href=\"/docs/photosizes\">custom resize and sync options</a></p>\n\n<p>To remove primary photo, simply set \"photo=\" or \"photo_id=\". If the original\nphoto was created by using <code>photo</code> parameter, the photo will be deleted.</p>\n</div></li><li><span class='pre'>photo_id</span> : String<div class='sub-desc'><p>ID of an existing photo to use as the user's primary photo.</p>\n\n<p>To remove primary photo, simply set \"photo=\" or \"photo_id=\". If the original\nphoto was created by using <code>photo</code> parameter, the photo will be deleted.</p>\n</div></li><li><span class='pre'>tags</span> : String<div class='sub-desc'><p>Comma separated tags, overwrites the existing tags. For example, \"hiking,swimming\".</p>\n</div></li><li><span class='pre'>custom_fields</span> : String<div class='sub-desc'><p>User-defined data. See <a href=\"/docs/customfields\">Custom Data Fields</a>.</p>\n</div></li><li><span class='pre'>acl_name</span> : String<div class='sub-desc'><p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>acl_id</span> : String<div class='sub-desc'><p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n</div></li><li><span class='pre'>su_id</span> : String <strong class=\"signature\">admin-only</strong><div class='sub-desc'><p>User ID to update this user on behalf of.</p>\n\n<p>The current login user must be an application admin to update a user on\nbehalf of another user.</p>\n</div></li><li><span class='pre'>pretty_json</span> : Boolean<div class='sub-desc'><p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n</div></li></ul><h3 class=\"pa\">Response Parameters</h3><ul><li><span class='pre'>users</span> : <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>[]<div class='sub-desc'><p>Single-element array containing the updated user object.</p>\n</div></li></ul><div class='examples-section'><h3 class='examples-title icon-examples'>Examples</h3><div class='example example-titanium' platform='titanium' platform_name='Titanium SDK'><p>This example updates information about the currently logged in user and checks the response.</p>\n\n<pre><code>Cloud.Users.update({\n    email: 'joeuser@mycompany.com',\n    first_name: 'joe',\n    last_name: 'user',\n    custom_fields: {\n        favorite_color: 'blue',\n        age: 25\n    }\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n</div><div class='example example-rest' platform='rest' platform_name='REST API'><p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -d \"email=mike@appcelerator.com\" https://api.cloud.appcelerator.com/v1/users/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"updateUser\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\":\"4d7eb865d0afbe2399000001\",\n        \"first_name\":\"Michael\",\n        \"last_name\":\"Goff\",\n        \"created_at\":\"2011-03-15T00:52:53+0000\",\n        \"updated_at\":\"2011-03-24T17:50:28+0000\",\n        \"facebook_authorized\":false,\n        \"email\":\"mike@appcelerator.com\"\n      }\n    ]\n  }\n}\n</code></pre>\n</div><div class='example example-ios' platform='ios' platform_name='iOS SDK'><p>Example iOS call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"first_name\": @\"Joe\"\n};\n\n[APSUsers update:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Updated!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n</div><div class='example example-android' platform='android' platform_name='Android SDK'><p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"email\", \"test@appcelerator.com\");\ndata.put(\"first_name\", \"test_firstname\");\ndata.put(\"last_name\", \"test_lastname\");\ndata.put(\"password\", \"test_password\");\ndata.put(\"password_confirmation\", \"test_password\");\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSUsers.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n</div></div></div></div></div></div></div></div></div>"});