Docs = {"data":{"classes":[{"name":"Emails","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Emails.email_from_template","url":"Emails-method-email_from_template","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Emails.count","url":"Emails-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Statuses","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Statuses.query","url":"Statuses-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Statuses.batch_delete","url":"Statuses-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Statuses.show","url":"Statuses-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Statuses.count","url":"Statuses-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Statuses.create","url":"Statuses-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Statuses.update","url":"Statuses-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Statuses.delete","url":"Statuses-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"KeyValues","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"KeyValues.query","url":"KeyValues-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"KeyValues.get","url":"KeyValues-method-get","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"KeyValues.count","url":"KeyValues-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"KeyValues.append","url":"KeyValues-method-append","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"KeyValues.incrby","url":"KeyValues-method-incrby","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"KeyValues.set","url":"KeyValues-method-set","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"KeyValues.delete","url":"KeyValues-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Clients","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Clients.geolocate","url":"Clients-method-geolocate","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Chats","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Chats.query","url":"Chats-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Chats.count","url":"Chats-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Chats.get_chat_groups","url":"Chats-method-get_chat_groups","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Chats.create","url":"Chats-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Chats.delete","url":"Chats-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"SocialIntegrations","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"SocialIntegrations.external_account_login","url":"SocialIntegrations-method-external_account_login","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"SocialIntegrations.facebook_search_friends","url":"SocialIntegrations-method-facebook_search_friends","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"SocialIntegrations.external_account_link","url":"SocialIntegrations-method-external_account_link","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"SocialIntegrations.external_account_unlink","url":"SocialIntegrations-method-external_account_unlink","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushLogs","extends":null,"private":true,"icon":"icon-class","isObject":null},{"name":"PushNotifications","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"PushNotifications.query","url":"PushNotifications-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.channels_query","url":"PushNotifications-method-channels_query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.set_badge","url":"PushNotifications-method-set_badge","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.notify_tokens","url":"PushNotifications-method-notify_tokens","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.unsubscribe","url":"PushNotifications-method-unsubscribe","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.subscribe_token","url":"PushNotifications-method-subscribe_token","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.count","url":"PushNotifications-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.reset_badge","url":"PushNotifications-method-reset_badge","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.unsubscribe_token","url":"PushNotifications-method-unsubscribe_token","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.notify","url":"PushNotifications-method-notify","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.subscribe","url":"PushNotifications-method-subscribe","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.subscription_update","url":"PushNotifications-method-subscription_update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushNotifications.channels_show","url":"PushNotifications-method-channels_show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushPayload","extends":null,"private":true,"icon":"icon-class","isObject":null},{"name":"Friends","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Friends.query","url":"Friends-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Friends.remove","url":"Friends-method-remove","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Friends.requests","url":"Friends-method-requests","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Friends.add","url":"Friends-method-add","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Friends.approve","url":"Friends-method-approve","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Friends.search","url":"Friends-method-search","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Reviewable","extends":null,"private":true,"icon":"icon-class","isObject":null},{"name":"PhotoCollections","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"PhotoCollections.show_photos","url":"PhotoCollections-method-show_photos","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PhotoCollections.batch_delete","url":"PhotoCollections-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PhotoCollections.show","url":"PhotoCollections-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PhotoCollections.count","url":"PhotoCollections-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PhotoCollections.create","url":"PhotoCollections-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PhotoCollections.update","url":"PhotoCollections-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PhotoCollections.show_subcollections","url":"PhotoCollections-method-show_subcollections","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PhotoCollections.search","url":"PhotoCollections-method-search","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PhotoCollections.delete","url":"PhotoCollections-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Reviews","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Reviews.query","url":"Reviews-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Reviews.batch_delete","url":"Reviews-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Reviews.show","url":"Reviews-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Reviews.count","url":"Reviews-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Reviews.create","url":"Reviews-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Reviews.update","url":"Reviews-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Reviews.delete","url":"Reviews-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Places","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Places.query","url":"Places-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Places.batch_delete","url":"Places-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Places.show","url":"Places-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Places.count","url":"Places-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Places.create","url":"Places-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Places.update","url":"Places-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Places.search","url":"Places-method-search","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Places.delete","url":"Places-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushSchedules","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"PushSchedules.query","url":"PushSchedules-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushSchedules.create","url":"PushSchedules-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushSchedules.update","url":"PushSchedules-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushSchedules.delete","url":"PushSchedules-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushSchedulePayload","extends":null,"private":true,"icon":"icon-class","isObject":null},{"name":"Files","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Files.query","url":"Files-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Files.batch_delete","url":"Files-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Files.show","url":"Files-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Files.count","url":"Files-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Files.create","url":"Files-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Files.update","url":"Files-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Files.delete","url":"Files-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"CustomObjects","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"CustomObjects.query","url":"CustomObjects-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"CustomObjects.batch_delete","url":"CustomObjects-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"CustomObjects.show","url":"CustomObjects-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"CustomObjects.count","url":"CustomObjects-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"CustomObjects.batch_create","url":"CustomObjects-method-batch_create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"CustomObjects.create","url":"CustomObjects-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"CustomObjects.update","url":"CustomObjects-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"CustomObjects.admin_drop_collection","url":"CustomObjects-method-admin_drop_collection","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"CustomObjects.delete","url":"CustomObjects-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Messages.query","url":"Messages-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.show_threads","url":"Messages-method-show_threads","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.show","url":"Messages-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.count","url":"Messages-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.show_inbox","url":"Messages-method-show_inbox","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.create","url":"Messages-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.show_thread","url":"Messages-method-show_thread","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.reply","url":"Messages-method-reply","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.delete","url":"Messages-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.delete_thread","url":"Messages-method-delete_thread","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Messages.show_sent","url":"Messages-method-show_sent","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Logs","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Logs.querypushlogs","url":"Logs-method-querypushlogs","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Logs.querypushlogdetails","url":"Logs-method-querypushlogdetails","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Users.query","url":"Users-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.batch_delete","url":"Users-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.logout","url":"Users-method-logout","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.show","url":"Users-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.count","url":"Users-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.login","url":"Users-method-login","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.create","url":"Users-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.update","url":"Users-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.resend_confirmation","url":"Users-method-resend_confirmation","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.show_me","url":"Users-method-show_me","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.request_reset_password","url":"Users-method-request_reset_password","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.search","url":"Users-method-search","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Users.delete","url":"Users-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Posts","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Posts.query","url":"Posts-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Posts.batch_delete","url":"Posts-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Posts.show","url":"Posts-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Posts.count","url":"Posts-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Posts.create","url":"Posts-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Posts.update","url":"Posts-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Posts.delete","url":"Posts-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"ACLs","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"ACLs.query","url":"ACLs-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"ACLs.show","url":"ACLs-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"ACLs.check","url":"ACLs-method-check","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"ACLs.count","url":"ACLs-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"ACLs.remove","url":"ACLs-method-remove","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"ACLs.create","url":"ACLs-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"ACLs.update","url":"ACLs-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"ACLs.add","url":"ACLs-method-add","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"ACLs.delete","url":"ACLs-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Likes","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Likes.query","url":"Likes-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Likes.create","url":"Likes-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Likes.delete","url":"Likes-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Events.query","url":"Events-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.batch_delete","url":"Events-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.show","url":"Events-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.count","url":"Events-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.create","url":"Events-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.update","url":"Events-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.query_occurrences","url":"Events-method-query_occurrences","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.show_occurrences","url":"Events-method-show_occurrences","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.search_occurrences","url":"Events-method-search_occurrences","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.search","url":"Events-method-search","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Events.delete","url":"Events-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Checkins","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Checkins.query","url":"Checkins-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Checkins.batch_delete","url":"Checkins-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Checkins.show","url":"Checkins-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Checkins.count","url":"Checkins-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Checkins.create","url":"Checkins-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Checkins.update","url":"Checkins-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Checkins.delete","url":"Checkins-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Photos","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"Photos.query","url":"Photos-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Photos.batch_delete","url":"Photos-method-batch_delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Photos.show","url":"Photos-method-show","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Photos.count","url":"Photos-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Photos.create","url":"Photos-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Photos.update","url":"Photos-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Photos.search","url":"Photos-method-search","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"Photos.delete","url":"Photos-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"PushLogDetails","extends":null,"private":true,"icon":"icon-class","isObject":null},{"name":"GeoFences","extends":null,"private":null,"icon":"icon-class","isObject":null},{"name":"GeoFences.query","url":"GeoFences-method-query","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"GeoFences.count","url":"GeoFences-method-count","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"GeoFences.create","url":"GeoFences-method-create","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"GeoFences.update","url":"GeoFences-method-update","extends":null,"private":null,"icon":"icon-component","isObject":"false"},{"name":"GeoFences.delete","url":"GeoFences-method-delete","extends":null,"private":null,"icon":"icon-component","isObject":"false"}],"guides":[{"name":"guides","title":"ArrowDB and Arrow Push Guides","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/home","items":[{"name":"quickstart","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/quickstart","title":"Getting Started with ArrowDB","description":"This introduction to Appcelerator ArrowDB and Arrow Push explains how you can get started.","html":"<h1 id='quickstart-section-getting-started-quickstart-guide'>Getting Started: QuickStart Guide</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/quickstart-section-create-an-arrowdb-datasource'>Create an ArrowDB Datasource</a><ul><li><a href='#!/guide/quickstart-section-standalone-arrowdb-datasource'>Standalone ArrowDB Datasource</a><li><a href='#!/guide/quickstart-section-arrowdb-with-titanium'>ArrowDB with Titanium</a><li><a href='#!/guide/quickstart-section-arrowdb-with-android-or-ios'>ArrowDB with Android or iOS</a></ul><li><a href='#!/guide/quickstart-section-make-calls-to-arrowdb'>Make Calls to ArrowDB</a><li><a href='#!/guide/quickstart-section-next-steps'>Next Steps</a></ul>\n</div>\n\n<p>Appcelerator ArrowDB provides a set of REST APIs for creating, managing, and\naccessing different types of data in your cloud datasoucrce, such as\n<a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>, <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>, and <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a> over HTTP or HTTPS. You can integrate ArrowDB into\nyour application using the <a href=\"#!/guide/titanium\">Titanium</a>, <a href=\"#!/guide/ios\">iOS</a>,\n<a href=\"#!/guide/android\">Android</a> or <a href=\"#!/guide/nodejs\">Node.js</a> SDKs, or by calling the\n<a href=\"#!/guide/rest\">REST APIs</a> directly.</p>\n\n<p>To manage your application and its data&mdash;for example, to create or edit <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> or manage\n<a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>&mdash;you use <a href=\"https://platform.appcelerator.com\">Appcelerator Dashboard</a>.</p>\n\n<p>This guide explains how to create a standalone ArrowDB datasource and make API calls to the\ndatasource using the REST APIs.  For intergrating ArrowDB with a specific platform,\nsee the following SDK guides:</p>\n\n<ul>\n<li><a href=\"#!/guide/titanium\">Titanium SDK</a></li>\n<li><a href=\"#!/guide/android\">Android SDK</a></li>\n<li><a href=\"#!/guide/ios\">iOS SDK</a></li>\n<li><a href=\"#!/guide/nodejs\">Node.js SDK</a></li>\n</ul>\n\n\n<h2 id='quickstart-section-create-an-arrowdb-datasource'>Create an ArrowDB Datasource</h2>\n\n<p>You can create either a standalone ArrowDB datasource or create an ArrowDB datasource associated\nwith a Titanium, Android or iOS application.</p>\n\n<h3 id='quickstart-section-standalone-arrowdb-datasource'>Standalone ArrowDB Datasource</h3>\n\n<p>A standalone ArrowDB datasource does not have a specific client application associated with it.\nUse a standalone ArrowDB source if you want multiple applications to access the same datasource,\nor if your client application is not Titanium, Android or iOS.</p>\n\n<ol>\n<li>Log into <a href=\"https://platform.appcelerator.com\">Appcelerator Dashboard</a>.</li>\n<li>Click the Add menu (+) in the top navigation bar.</li>\n<li>Select <strong>Create ArrowDB Datasource</strong>.</li>\n<li>Enter a name for the datasource.</li>\n<li>If you have multiple environments, select the environments to enable for the datasource.</li>\n<li>Click <strong>OK</strong>.</li>\n</ol>\n\n\n<p> To make calls to ArrowDB, you will need your ArrowDB applications key.  After Dashboard\n creates the datasource, click <strong>Configuration</strong> in the left navigation, then click the <strong>Show</strong> link\n next to <strong>App Key</strong>.  Use the ArrowDB application key to make requests to ArrowDB. Note that you have\n a key for each deployment environment.</p>\n\n<p><p><img src=\"guides/quickstart/addarrowdb.gif\" alt=\"\" width=\"748\" height=\"480\"></p></p>\n\n<h3 id='quickstart-section-arrowdb-with-titanium'>ArrowDB with Titanium</h3>\n\n<p>Use Appcelerator Studio or the CLI to enable platform services and create an ArrowDB datasource\nassociated with a Titanium application.  After creating the application, load the <code>ti.cloud</code> module\nto make requests to ArrowDB.</p>\n\n<p>For directions, see the <a href=\"#!/guide/titanium\">Titanium SDK guide</a>.</p>\n\n<h3 id='quickstart-section-arrowdb-with-android-or-ios'>ArrowDB with Android or iOS</h3>\n\n<p>Use Dashboard to register an Android application built with Java or iOS application built with\nObjective-C or Swift.  The registration process creates a new ArrowDB datasource associated with the\napplication. Then, use the APS SDKs to integrate ArrowDB services with the application.</p>\n\n<p>For directions, see:</p>\n\n<ul>\n<li><a href=\"#!/guide/android\">Android SDK</a></li>\n<li><a href=\"#!/guide/ios\">iOS SDK</a></li>\n</ul>\n\n\n<h2 id='quickstart-section-make-calls-to-arrowdb'>Make Calls to ArrowDB</h2>\n\n<p>You can make calls to ArrowDB using the following SDKs and modules, or by making HTTP requests directly to ArrowDB.</p>\n\n<ul>\n<li><a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.Cloud\">Titanium Cloud Module</a></li>\n<li><a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/\">Appcelerator Platform Services API Reference for Android</a></li>\n<li><a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/\">Appcelerator Platform Services API Reference for iOS</a></li>\n<li><a href=\"#!/guide/nodejs-section-standard-arrowdb-apis\">Node.js SDK</a></li>\n<li><a href=\"#!/api\">ArrowDB API docs</a></li>\n</ul>\n\n\n<p>To make ArrowDB calls from other applications, you need to use the platform's native HTTP client\nto make HTTP requests directly.  You will need to pass the ArrowDB application key in the URL as the <code>key</code>\nparameter with each request.</p>\n\n<p>For example, the following Ruby code uses the <code>Net::HTTP</code> library to make an ArrowDB request:</p>\n\n<pre><code>require 'net/http'\nrequire 'json'\n\nbase_url = 'https://api.cloud.appcelerator.com/v1/'\nkey_param = 'key=&lt;APP_KEY&gt;'\nurl = URI(base_url + 'users/create.json?' + key_param)\nreq = Net::HTTP::Post.new(url)\nreq.set_form_data(:username =&gt; 'user1', :password =&gt; 'pass1', :password_confirmation =&gt; 'pass1'))\nres = Net::HTTP.start(url.host, url.port, :use_ssl =&gt; true) do |http|\n  http.request(req)\nend\nresponse = JSON.parse(res.body)\nputs \"You are now logged in as \" + response[\"response\"][\"users\"][0][\"username\"]\n</code></pre>\n\n<p>For requests that require a user to be logged in, you will need retrieve the <code>session_id</code> from\nthe meta header of the response from either the <a href=\"#!/api/Users-method-login\">users/login.json</a>\nor <a href=\"#!/api/Users-method-create\">users/create.json</a> method, then\npass the <code>session_id</code> in the URL as the <code>_session_id</code> parameter with the request.</p>\n\n<pre><code>session_id_param = '_session_id=' + response[\"meta\"][\"session_id\"]\nurl = URI(base_url + 'posts/create.json?' + key_param + '&amp;' + session_id_param)\nreq = Net::HTTP::Post.new(url)\nreq.set_form_data(:content =&gt; 'Calling ArrowDB from Ruby')\nres = Net::HTTP.start(url.host, url.port, :use_ssl =&gt; true) do |http|\n  http.request(req)\nend\nputs res.body\n</code></pre>\n\n<p>The SDKs and modules provided by Appcelerator abstract the HTTP request and will automatically\nhandle passing the application key and session ID between the client application and ArrowDB datasource.\nFor example, the following is an equivalent call using the Titanium Cloud module:</p>\n\n<pre><code>var Cloud = require('ti.cloud');\nCloud.Users.create({\n    username: 'user1',\n    password: 'pass1',\n    password_confirmation: 'pass1'\n }, function (e) {\n    if (e.success) {\n        alert('You are now logged in as ' + e.users[0].username);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\nCloud.Posts.create({\n    content: 'Calling ArrowDB from Titanium'\n}, function (e) {\n    if (e.success) {\n        alert('Post succeeded!');\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n\n<h2 id='quickstart-section-next-steps'>Next Steps</h2>\n\n<p>Review the <a href=\"#!/guide/rest\">REST Guide</a> if you are making HTTP requests directly to ArrowDB,\nand the <a href=\"#!/api\">ArrowDB API reference</a>, which contains Titanium, REST, Android, iOS and Node.js examples.\nTo setup a specfic type of client application, see the following SDK guides:</p>\n\n<ul>\n<li><a href=\"#!/guide/titanium\">Titanium SDK</a></li>\n<li><a href=\"#!/guide/android\">Android SDK</a></li>\n<li><a href=\"#!/guide/ios\">iOS SDK</a></li>\n<li><a href=\"#!/guide/nodejs\">Node.js SDK</a></li>\n</ul>\n\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/quickstart/README.md"},{"name":"rest","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/rest","title":"Using the REST API","description":"Basics of the ArrowDB REST API.","html":"<h1 id='rest-section-using-the-rest-api'>Using the REST API</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/rest-section-rest-api-basics'>REST API Basics</a><li><a href='#!/guide/rest-section-authentication'>Authentication</a><li><a href='#!/guide/rest-section-user-sessions-and-cookies'>User Sessions and Cookies</a><li><a href='#!/guide/rest-section-testing-with-curl-and-wget'>Testing with cURL and wget</a><li><a href='#!/guide/rest-section-uploading-photos'>Uploading Photos</a><li><a href='#!/guide/rest-section-object-ids'>Object IDs</a><li><a href='#!/guide/rest-section-response-paging'>Response Paging</a></ul>\n</div>\n\n<p>ArrowDB provides a REST API accessible from any networked client\ndevice for creating, querying, updating, and deleting ArrowDB objects.</p>\n\n<p>Each ArrowDB object supports a set of methods, which are documented in the <a href=\"#!/api\">API reference</a>.</p>\n\n<h2 id='rest-section-rest-api-basics'>REST API Basics</h2>\n\n<p>Each of the REST API methods has its own URL and HTTP method (GET, POST, PUT, or DELETE).</p>\n\n<p>To make an API call, you make an HTTP request. Method parameters are passed in the URL query string or in the\nmessage body, depending on the HTTP method.</p>\n\n<p>For GET and DELETE requests, send the parameters in the URL itself as part of the URL query\nstring. For example:</p>\n\n<pre><code>https://api.cloud.appcelerator.com/v1/checkins/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;checkin_id=4d8bc645d0afbe0363000013\n</code></pre>\n\n<p>For POST and PUT requests, you send an HTTP request with the <code>multipart/form-data</code> media\ntype, where each parameter is sent as a separate form field.</p>\n\n<p>API responses are returned as JSON objects. In most cases, the response JSON includes two objects:</p>\n\n<ul>\n<li><p><code>meta</code>. Object containing response metadata, including the response status code and error message,\nif any.</p></li>\n<li><p><code>response</code>. Object containing the actual data for the request. The <code>response</code> object is\nomitted for some requests, such as delete requests, that return no data.</p></li>\n</ul>\n\n\n<h2 id='rest-section-authentication'>Authentication</h2>\n\n<p>All API calls must contain a valid App Key  or 2-Legged OAuth signature and request header for the ArrowDB\nserver to process and respond to them. See the <a href=\"#!/guide/authentication\">authentication page</a>\nfor more information.</p>\n\n<h2 id='rest-section-user-sessions-and-cookies'>User Sessions and Cookies</h2>\n\n<p>To create a user and perform actions which require a logged-in user,\nthe <code>session_id</code> cookie must be saved and reused with each API call.</p>\n\n<p>To get a session ID, use the <code>users/login.json</code> method to login in to the application.  If the API\ncall is successful, the <code>session_id</code> field is returned in the <code>meta</code> object of the response.\nFor example:</p>\n\n<pre><code>curl -F \"login=admin\" -F \"password=admin\" \"https://api.cloud.appcelerator.com/v1/users/login.json?key=&lt;API_KEY&gt;\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"loginUser\",\n    \"session_id\": \"sjuvQqSEYTD3DekMCrUHcCTf7GU\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"526edc0d294e712499000004\",\n        \"created_at\": \"2013-10-28T21:50:05+0000\",\n        \"updated_at\": \"2013-12-05T01:02:32+0000\",\n        \"external_accounts\": [\n        ],\n        \"confirmed_at\": \"2013-10-28T21:50:05+0000\",\n        \"username\": \"admin\",\n        \"role\": \"\",\n        \"admin\": \"true\",\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Pass the <code>session_id</code> value to the <code>_session_id</code> parameter in the URL, for example:</p>\n\n<pre><code>https://api.cloud.appcelerator.com/v1/reviews/create.json?key=&lt;API_KEY&gt;&amp;_session_id=&lt;SESSION_ID&gt;\n</code></pre>\n\n<p>With the cURL command, use the <code>-b</code> and <code>-c</code> options to read and write cookies to store your session\nID. Many of the REST examples in the documentation use these options.</p>\n\n<p>User login sessions expire after they have been unused for three months.\nIf the application saves and uses a persistent reference to the user login session, and the\nuser session expires, any ArrowDB call that requires a user login will return a 404 error.\nYour application needs to handle an invalid user session error, such as prompting the user\nto log in.</p>\n\n<h2 id='rest-section-testing-with-curl-and-wget'>Testing with cURL and wget</h2>\n\n<p><a href=\"http://curl.haxx.se\">cURL</a> and <a href=\"https://www.gnu.org/software/wget\">wget</a> are\nboth excellent tools for quickly testing ArrowDB API calls from\nthe command line. Using these commands can help you determine what calls to make\nand show you the JSON output that your app receives. cURL is included with\nOS X, and can easily be used from the Terminal application:</p>\n\n<pre><code>$ curl --verbose -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/places/search.json?key=vvCNPSh1cd0Gb5A6tWZAIC4MngO95mGs\n</code></pre>\n\n<p>Use the <code>-b cookies.txt</code> and <code>-c cookies.txt</code> options to save and reuse the\n<code>_session_id</code> cookie sent from the ArrowDB server. The <code>--verbose</code>\noption is useful for seeing all of the HTTP header and cookie information sent\nand received by the ArrowDB server.</p>\n\n<pre><code>$ curl --verbose -b cookies.txt -c cookies.txt -F \"login=mike@appcelerator.com\" -F \"password=food\" https://api.cloud.appcelerator.com/v1/users/login.json?key=vjCQ6KRqplmkektlpbEjiDQ2nYReubkP\n* About to connect() to host (#0)\n*   Trying 1.2.3.4... connected\n* Connected to host (1.2.3.4) (#0)\n&gt; POST /v1/users/login.json?key=vjCQ6KRqplmkektlpbEjiDQ2nYReubkP HTTP/1.1\n&gt; User-Agent: curl/7.19.7 (universal-apple-darwin10.0) libcurl/7.19.7 OpenSSL/0.9.8l zlib/1.2.3\n&gt; Host: &lt;%= \"#{@api_url}\"%&gt;\n&gt; Accept: */*\n&gt; Content-Length: 259\n&gt; Expect: 100-continue\n&gt; Content-Type: multipart/form-data; boundary=----------------------------e6e42e31228c\n&gt; \n* Done waiting for 100-continue\n&lt; HTTP/1.1 200 OK \n&lt; X-Ua-Compatible: IE=Edge\n&lt; Access-Control-Allow-Headers: x-requested-with\n&lt; Etag: \"9eeb8ecc4fd905ab6b340c290f24ea0f\"\n&lt; Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS\n&lt; Connection: Keep-Alive\n&lt; Content-Type: application/json; charset=utf-8\n&lt; Date: Mon, 16 May 2011 04:56:58 GMT\n&lt; Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)\n&lt; X-Runtime: 1.681994\n&lt; Content-Length: 480\n&lt; Cache-Control: max-age=0, private, must-revalidate\n&lt; Access-Control-Allow-Credentials: true\n* Added cookie _session_id=\"4dd0ae9ad0afbe183300001c\" for domain localhost, path /, expire 0\n&lt; Set-Cookie: _session_id=4dd0ae9ad0afbe183300001c; path=/; HttpOnly\n&lt; \n{\n  \"meta\": {\n    \"stat\":\"ok\",\n    \"code\":200,\n    \"method\":\"loginUser\",\n    \"session_id\":\"4dd0ae9ad0afbe183300001c\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\":\"4dc6334fd0afbe3700000001\",\n        \"first_name\":\"Mike\",\n        \"last_name\":\"Goff\",\n        \"created_at\":\"2011-05-08T06:08:15+0000\",\n        \"updated_at\":\"2011-05-16T04:56:58+0000\",\n        \"facebook_authorized\":false,\n        \"email\":\"mike@appcelerator.com\"\n      }\n    ]\n  } \n}\n</code></pre>\n\n<h2 id='rest-section-uploading-photos'>Uploading Photos</h2>\n\n<p>The <code>create</code> (POST) and <code>update</code> (PUT) methods for many objects such as\n<code>Users</code>, <code>Checkins</code>, and <code>Photos</code> take an optional <code>photo</code> or <code>file</code> parameter\nto send a photo. The binary data must be sent in a form with Content-Type\n<code>multipart/form-data</code>, and the content type of the <code>photo</code> or <code>file</code> must be\n<code>image/jpeg</code>, <code>image/png</code>, or <code>image/gif</code>.</p>\n\n<p>When using cURL, uploading a photo can be done easily by using <code>@</code> in front of\nthe filename, such as <code>@photo.jpg</code>, to specify that the file should be\nattached.</p>\n\n<pre><code>$ curl --verbose -b cookies.txt -c cookies.txt -F \"photo=@photo.jpg\" -F \"message=At the beach\" https://api.cloud.appcelerator.com/v1/statuses/create.json?key=&lt;API_KEY&gt;\n</code></pre>\n\n<h2 id='rest-section-object-ids'>Object IDs</h2>\n\n<p>All returned data objects contain unique IDs which are 24-digit hexadecimal\nstrings. These IDs may be use to efficiently return data for a single object:</p>\n\n<pre><code>GET https://api.cloud.appcelerator.com/v1/places/show/**4d6f13e96f70953608000012**.json?key=&lt;API_KEY&gt;\n\n{\n  \"meta\": {\n    \"stat\":\"ok\",\n    \"code\":200,\n    \"method\":\"showPlace\"\n  },\n  \"response\": {\n    \"places\": [\n      {\n          \"id\":\"4d6f13e96f70953608000012\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-03T04:07:05+0000\",\n          \"updated_at\":\"2011-03-03T04:07:05+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"lat\":37.784732,\n          \"lng\":-122.395441 \n      }\n    ]\n  } \n}\n</code></pre>\n\n<h2 id='rest-section-response-paging'>Response Paging</h2>\n\n<p class=\"note\">For <a href=\"#!/guide/search_query\">query</a> operations, the\n  <code>page</code> and <code>per_page</code> paging mechanism described below\n  only applies to applications created before ArrowDB 1.1.5. For applications\n  created with ArrowDB 1.1.5 and later, you must use range-based queries, as\n  discussed in <a href=\"#!/guide/search_query-section-query-pagination\">Query\n  Pagination</a>. </p>\n\n\n<p>API calls which return arrays of objects take optional <code>page</code> and <code>per_page</code>\narguments to specify the number of objects to return. By default, ten objects\nare returned on each page, and the request may specify up to 20 results per\npage. Page numbers start at 1; if unspecified, the page defaults to page 1.</p>\n\n<p>Data about the current page is included in the <code>meta</code> object. For paged responses,\nthe <code>meta</code> object includes the <code>page</code>, <code>per_page</code>, <code>total_pages</code> and <code>total_results</code> keys:</p>\n\n<pre><code>\"meta\": {\n  \"status\":\"ok\",\n  \"code\":200,\n  \"method_name\":\"showThreadMessages\",\n  \"page\":1,\n  \"per_page\":10,\n  \"total_pages\":1,\n  \"total_results\":3\n},\n</code></pre>\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/rest/README.md"},{"name":"authentication","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/authentication","title":"Authentication","description":"Authenticating your application with ArrowDB.","html":"<h1 id='authentication-section-authentication'>Authentication</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/authentication-section-application-key-over-ssl'>Application Key over SSL</a><li><a href='#!/guide/authentication-section-2-legged-oauth'>2-Legged OAuth</a><ul><li><a href='#!/guide/authentication-section-oauth-example'>OAuth example</a></ul><li><a href='#!/guide/authentication-section-access-control-lists-acls-'>Access Control Lists (ACLs)</a></ul>\n</div>\n\n<p>To keep your application data secure from unauthorized access, your application must prove that it\nis allowed to communicate with ArrowDB in each HTTP request. There are two ways your application can do this:</p>\n\n<ul>\n<li>Application key over SSL</li>\n<li>2-Legged OAuth</li>\n</ul>\n\n\n<p>To authenticate user access to individual ArrowDB data objects within your application, such as <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>\nor <a href=\"#!/api/Files\" rel=\"Files\" class=\"docClass\">Files</a>, you can use access control lists (ACLs). See <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">Access Control Lists</a> for more information.</p>\n\n<h2 id='authentication-section-application-key-over-ssl'>Application Key over SSL</h2>\n\n<p>The easiest way to authenticate API requests to ArrowDB is to supply an ArrowDB app key with each request\nas a URL parameter, for example:</p>\n\n<pre class=\"prettyprint\">GET https://api.cloud.appcelerator.com/v1/places/search.json?<b>key=<span class=\"display_key\">&lt;YOUR_APP_KEY&gt;</span></b></pre>\n\n\n<p>ArrowDB defaults to using application key over SSL.</p>\n\n<p><strong>To locate your application key in Dashboard</strong>:</p>\n\n<ol>\n<li>Open <a href=\"https://platform.appcelerator.com\">Dashboard</a> in your browser and select your ArrowDB\napplication from the App menu. You may need to click <strong>All Projects</strong> to find your application.</li>\n<li>From the left-hand navigation, select <strong>Configuration</strong>.</li>\n<li>On the <strong>Keys</strong> tab, click <strong>Show</strong> next to the <strong>App Key</strong> label to show your app key.\n<p><img src=\"guides/authentication/appkey.png\" alt=\"\" width=\"524\" height=\"303\"></p></li>\n</ol>\n\n\n<h2 id='authentication-section-2-legged-oauth'>2-Legged OAuth</h2>\n\n<p>If SSL is not available to the client application, ArrowDB also provides secure authentication via 2-Legged OAuth.\nIn this process, an authentication key and secret are used to sign each request made\nby your application to ArrowDB. When the ArrowDB server receives the request, the secret and the data\nsent in the request are used to calculate another signature. If the received and calculated signatures match,\nthe request is processed.</p>\n\n<p>Over a non-SSL connection, OAuth is more secure than the application key approach, as\nthe secret used to generate the signature is known only by the app and the ArrowDB server; it is never\nsent over the network.</p>\n\n<p>Below is an example of an OAuth HTTP header:</p>\n\n<pre class=\"prettyprint\">\nAuthorization: OAuth oauth_consumer_key=\"0685bd9184jfhq22\",\n        oauth_token=\"\",\n        oauth_signature_method=\"HMAC-SHA1\",\n        oauth_signature=\"wOJIO9A2W5mFwDgiDvZbTSMK%2FPY%3D\",\n        oauth_timestamp=\"137131200\",\n        oauth_nonce=\"4572616e48616d6d65724c61686176\",\n        oauth_version=\"1.0\"\n</pre>\n\n\n<p><strong>To locate your OAuth consumer key and secret in Dashboard</strong>:</p>\n\n<ol>\n<li>Open <a href=\"https://platform.appcelerator.com\">Dashboard</a> and select your application\nfrom the App menu.</li>\n<li>From the left-hand navigation, select <strong>Cloud > Configuration</strong>.</li>\n<li>On the <strong>Keys</strong> tab, click <strong>Show</strong> next to the <strong>OAuth Consumer Key</strong> and <strong>OAuth Secret</strong> labels.\n<p><img src=\"guides/authentication/oauthkeysecret.png\" alt=\"\" width=\"506\" height=\"299\"></p></li>\n</ol>\n\n\n<h3 id='authentication-section-oauth-example'>OAuth example</h3>\n\n<p>Most OAuth libraries that support standard (3-Legged) OAuth&mdash;such as those used by Facebook, Twitter,\nand others&mdash;also supports 2-legged OAuth. The following is an example of making a 2-Legged\nOAuth request using Ruby. Provide your ArrowDB OAuth consumer key and secret for the <code>consumer_key</code> and\n<code>consumer_secret</code> fields. Use an empty string (\"\") as both the Access Token and Secret.</p>\n\n<pre class=\"prettyprint\">\nrequire 'rubygems'\nrequire 'oauth'\n\n# make the consumer out of your secret and key\nconsumer_key = \"<ArrowDB OAuth Consumer Key>\"\nconsumer_secret = \"<ArrowDB OAuth Secret>\"\nconsumer = OAuth::Consumer.new(consumer_key, consumer_secret, :site => \"http://api.cloud.appcelerator.com\")\n\n# make the access token from your consumer\naccess_token = OAuth::AccessToken.new consumer\n\n# make a signed request!\nresponse = access_token.get(\"/v1/places/search.json\")\n\n# show the response\nputs response.body\n</ArrowDB></ArrowDB></pre>\n\n\n<h2 id='authentication-section-access-control-lists-acls-'>Access Control Lists (ACLs)</h2>\n\n<p>Access Control Lists (ACLs) provide several APIs to implement access control lists for ArrowDB\nobjects. An access control list controls read and write access to ArrowDB objects it's\nattached to. Please refer to <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">Access Control Lists</a> for more information.</p>\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/authentication/README.md"},{"name":"sdks","title":"SDKs","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/overview","items":[{"name":"titanium","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/titanium","title":"Titanium SDK","description":"Using ArrowDB in a Titanium application.","html":"<h1 id='titanium-section-titanium-sdk-and-arrowdb'>Titanium SDK and ArrowDB</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/titanium-section-adding-arrowdb-to-your-titanium-project'>Adding ArrowDB to your Titanium Project</a><ul><li><a href='#!/guide/titanium-section-adding-arrowdb-to-a-new-titanium-application'>Adding ArrowDB to a New Titanium Application</a><li><a href='#!/guide/titanium-section-adding-arrowdb-to-an-existing-titanium-application'>Adding ArrowDB to an Existing Titanium Application</a><li><a href='#!/guide/titanium-section-adding-an-existing-arrowdb-application-to-a-titanium-project'>Adding an Existing ArrowDB Application to a Titanium Project</a><li><a href='#!/guide/titanium-section-virtual-private-cloud-configuration'>Virtual Private Cloud Configuration</a></ul><li><a href='#!/guide/titanium-section-importing-the-module'>Importing the Module</a><li><a href='#!/guide/titanium-section-authenticating-your-application'>Authenticating your Application</a><li><a href='#!/guide/titanium-section-push-notifications'>Push Notifications</a><li><a href='#!/guide/titanium-section-using-the-arrowdb-apis'>Using the ArrowDB APIs</a><li><a href='#!/guide/titanium-section-examples'>Examples</a><li><a href='#!/guide/titanium-section-importing-and-running-the-ti-cloud-sample-application'>Importing and running the Ti.Cloud Sample application</a><li><a href='#!/guide/titanium-section-references'>References</a></ul>\n</div>\n\n<p>The ArrowDB APIs are supported in Titanium using the <code>ti.cloud</code>\nmodule, an optional module which is packaged with the Titanium SDK.</p>\n\n<p>When new APIs are added to ArrowDB, they may not be immediately\navailable in the Cloud module. See the\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.Cloud\">module API reference</a>\nfor a list of supported objects and methods.</p>\n\n<h2 id='titanium-section-adding-arrowdb-to-your-titanium-project'>Adding ArrowDB to your Titanium Project</h2>\n\n<p>This section describes how to add ArrowDB to a Titanium application. If you don't have an\nexisting ArrowDB datasource, Studio can create one for you.</p>\n\n<p>If you are using the CLI, the CLI automatically creates an ArrowDB datasource for you.</p>\n\n<h3 id='titanium-section-adding-arrowdb-to-a-new-titanium-application'>Adding ArrowDB to a New Titanium Application</h3>\n\n<p>If you are using Studio to create a new Titanium application, you can create a new ArrowDB\ndatasource at the same time:</p>\n\n<ol>\n<li>Click <strong>File</strong> > <strong>New</strong> > <strong>Mobile Project</strong> to start the new project wizard.</li>\n<li>Choose a template and click <strong>Next</strong>.</li>\n<li>On the next screen, make sure <strong>Enable Appcelerator Platform Services</strong> checked.</li>\n<li>Enter the project name and ID and click <strong>Finish</strong>.</li>\n</ol>\n\n\n<p><p><img src=\"guides/titanium/studio-enable-new.png\" alt=\"\" width=\"553\" height=\"132\"></p></p>\n\n<p>This creates a new Titanium application and a new ArrowDB datasource, and configures the\nTitanium project to access ArrowDB.</p>\n\n<h3 id='titanium-section-adding-arrowdb-to-an-existing-titanium-application'>Adding ArrowDB to an Existing Titanium Application</h3>\n\n<p>If you have an existing Titanium project in Studio, and want to create a new ArrowDB\ndatasource for it:</p>\n\n<ol>\n<li>Open the project's <code>tiapp.xml</code> and switch to the <strong>Overview</strong> tab.</li>\n<li>Click to <strong>Enable Services</strong>.</li>\n</ol>\n\n\n<p><p><img src=\"guides/titanium/studio-enable-existing.png\" alt=\"\" width=\"445\" height=\"104\"></p></p>\n\n<h3 id='titanium-section-adding-an-existing-arrowdb-application-to-a-titanium-project'>Adding an Existing ArrowDB Application to a Titanium Project</h3>\n\n<p>If you have already created an ArrowDB datasource, you can add it to a Titanium project by\nediting the <code>tiapp.xml</code> file. You'll need the application key generated when you created the ArrowDB datasource.</p>\n\n<ol>\n<li><p>Open the project's <code>tiapp.xml</code> and switch to the <strong>tiapp.xml</strong> (source view) tab.</p></li>\n<li><p>Add the following entries to the file:</p>\n\n<pre><code>&lt;property name=\"acs-api-key-development\" type=\"string\"&gt;YOUR DEVELOPMENT APP KEY HERE&lt;/property&gt;\n&lt;property name=\"acs-api-key-production\" type=\"string\"&gt;YOUR PRODUCTION APP KEY HERE&lt;/property&gt;\n</code></pre></li>\n<li><p>Find the <code>&lt;modules&gt;</code> element in the file, and add the following:</p>\n\n<pre><code>&lt;module platform=\"commonjs\"&gt;ti.cloud&lt;/module&gt;\n</code></pre>\n\n<p>If there is no <code>&lt;modules&gt;</code> element, add the following inside the <code>&lt;ti:app&gt;</code>\nelement:</p>\n\n<pre><code>&lt;modules&gt;\n    &lt;module platform=\"commonjs\"&gt;ti.cloud&lt;/module&gt;\n&lt;/modules&gt;\n</code></pre>\n\n<p>(This element is usually placed just above the <code>&lt;deployment-targets&gt;</code> element.)</p></li>\n</ol>\n\n\n<h3 id='titanium-section-virtual-private-cloud-configuration'>Virtual Private Cloud Configuration</h3>\n\n<p>If you are using a virtual private cloud (VPC), you need to configure your Arrow Push dispatcher\nURL in order to send push notifications with GCM.  In the <code>tiapp.xml</code> file, add the <code>acs-push-api-url</code>\napplication property and set the node text to the push dispatcher URL provided to you.  The URL may\nbe the same as your custom ArrowDB endpoint and have deployment-specific settings, that is, two\nURLs--one for production and another for the development environment.</p>\n\n<pre><code>&lt;ti:app&gt;\n    &lt;property name=\"acs-push-api-url-production\"&gt;YOUR PRODUCTION PUSH DISPATCHER URL HERE&lt;/property&gt;\n    &lt;property name=\"acs-push-api-url-development\"&gt;YOUR DEVELOPMENT PUSH DISPATCHER URL HERE&lt;/property&gt;\n&lt;/ti:app&gt;\n</code></pre>\n\n<h2 id='titanium-section-importing-the-module'>Importing the Module</h2>\n\n<p>ArrowDB support is baked into Titanium. However, you must include the cloud\nservices module into your project to use ArrowDB functionality. In your <code>app.js</code> (or\nother suitable file), include the <code>require()</code> statement as shown here:</p>\n\n<pre><code>var Cloud = require('ti.cloud');\nCloud.debug = true;  // optional; if you add this line, set it to false for production\n</code></pre>\n\n<h2 id='titanium-section-authenticating-your-application'>Authenticating your Application</h2>\n\n<p>To keep your ArrowDB data secure from unauthorized access, your application must prove that\nit is allowed to communicate with ArrowDB in each HTTP request. The Titanium Cloud module passes\nthe ArrowDB application key, configured in the project's <code>tiapp.xml</code> file, with each request over SSL.</p>\n\n<p>For more information, see <a href=\"#!/guide/acs/authentication\">Authentication</a>.</p>\n\n<h2 id='titanium-section-push-notifications'>Push Notifications</h2>\n\n<p>To setup your Titanium application to use push notifications, see\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Push_Notifications\">Push Notification guide</a>.</p>\n\n<h2 id='titanium-section-using-the-arrowdb-apis'>Using the ArrowDB APIs</h2>\n\n<p>The <code>ti.cloud</code> module APIs follow the same basic pattern. For each ArrowDB method supported by\nthe API, the module supplies a JavaScript method that takes two arguments: a <em>parameters</em>\ndictionary, which holds the parameters passed to the method, and a callback to be invoked\nwhen the method completes.</p>\n\n<p>The response callback receives a single object, which is a slightly modified version of\nthe REST response object. The REST response contains two objects:</p>\n\n<ul>\n<li><code>meta : Object</code>. Response metadata, such as success or failure, error messages, pagination\ninformation.</li>\n<li><code>response : Object</code>. Response data specific to the call. For example, if you search for places,\nthe response object contains an array of places.</li>\n</ul>\n\n\n<p>The module's response object includes any properties from <code>response</code> at the top level of the\nobject. For example, if the REST response includes <code>response.places</code>, this is included as\n<code>places</code>.</p>\n\n<p>The module's response object also includes the following fields:</p>\n\n<ul>\n<li><code>meta : Object</code>. Metadata from the REST response.</li>\n<li><code>success : Boolean</code>. True if the request succeeded (that is, <code>meta.status == \"ok\"</code>).</li>\n<li><code>error : Boolean</code>. True if the request failed (<code>meta.status != \"ok\"</code>).</li>\n<li><code>message : String</code>. Error message, if available.</li>\n<li><code>code : Number</code>. Error code, if available.</li>\n</ul>\n\n\n<h2 id='titanium-section-examples'>Examples</h2>\n\n<p>With over 25 APIs available for you to use, we obviously can't\ncover them all here. But let's take a look at a couple of examples.</p>\n\n<p>Create a user</p>\n\n<pre><code>// example assumes you have a set of text fields named username, password, etc.\nCloud.Users.create({\n    username: username.value,\n    password: password.value,\n    password_confirmation: confirmPassword.value,\n    first_name: firstName.value,\n    last_name: lastName.value\n}, function (e) {\n    if (e.success) {\n        // user created successfully\n    } else {\n        // oops, something went wrong\n    }\n});\n</code></pre>\n\n<p>Post a photo to a photo collection. To post a photo to a collection, you need to create the collection first using\n<a href=\"#!/api/PhotoCollections-method-create\" rel=\"PhotoCollections-method-create\" class=\"docClass\">PhotoCollections.create</a>.</p>\n\n<pre><code>// assumes you've obtained a photo from the camera or gallery, with blob data stored in an object named photo,\n// and that collectionID contains the ID of an existing photo collection.\nCloud.Photos.create({\n    photo: photo,\n    collection_id: collectionID,\n    'photo_sync_sizes[]': 'small_240'\n}, function (e) {\n    if (e.success) {\n        // null out our photo objects to clean up memory\n        photo = null;\n        collectionID = null;\n    } else {\n        // oops, something went wrong\n    }\n});\n</code></pre>\n\n<p>Linking a Facebook login with your app. You must already be logged in using the\nTitanium <a href=\"http://docs.appcelerator.com//platform/latest/#!/api/Modules.Facebook\">Facebook module</a> before\ncalling the <code>externalAccountLogin</code> method.</p>\n\n<pre><code>// Not shown is the code to implement the Facebook module in your app\nvar Facebook = require('facebook');\n\n// call the ArrowDB Facebook SocialIntegrations API to link logged in states\nfunction updateLoginStatus() {\n    if (Facebook.loggedIn) {\n        label.text = 'Logging in to ArrowDB as well, please wait...';\n        Cloud.SocialIntegrations.externalAccountLogin({\n            type: 'facebook',\n            token: Facebook.accessToken\n        }, function (e) {\n            if (e.success) {\n                var user = e.users[0];\n                alert('Logged in! You are now logged in as ' + user.id);\n            }\n            else {\n                error(e);\n            }\n        });\n    }\n    else {\n        label.text = 'Please login to Facebook.';\n    }\n}\n\n// when the user logs into or out of Facebook, link their login state with ArrowDB\nFacebook.addEventListener('login', updateLoginStatus);\nFacebook.addEventListener('logout', updateLoginStatus);\n\n// add the Facebook login button\nwin.add(Facebook.createLoginButton({\n    top: 10\n}));\n</code></pre>\n\n<p>For more examples, see the <a href=\"#!/api\">ArrowDB API documentation</a>.</p>\n\n<h2 id='titanium-section-importing-and-running-the-ti-cloud-sample-application'>Importing and running the Ti.Cloud Sample application</h2>\n\n<p>The Titanium Cloud module also includes a sample application that demonstrates each of the ArrowDB request\ntypes.</p>\n\n<p><strong>To import and run the Ti.Cloud sample application</strong>:</p>\n\n<ol>\n<li>In Studio, select <strong>File</strong> > <strong>New</strong> > <strong>Mobile App Project</strong>.</li>\n<li>Select the Classic application type with the Default Project template. <p><img src=\"guides/titanium/classic.png\" alt=\"\" width=\"521\" height=\"522\"></p></li>\n<li>In the New Mobile App Project dialog, enter values for the <strong>Project Name</strong> and <strong>App ID</strong> fields, and check\nthe option to <strong>Enable Appcelerator Platform Services</strong>. <p><img src=\"guides/titanium/enableservices.png\" alt=\"\" width=\"420\" height=\"183\"></p></li>\n<li>Click <strong>Finish</strong>.</li>\n<li><p>From your desktop, navigate to the following folder, where <code>&lt;latest_version&gt;</code> is the folder containing\nthe latest SDK version:</p>\n\n<ul>\n<li><strong>Mac</strong>: <code>~Library/Application Support/Titanium/modules/commonjs/ti.cloud/&lt;latest_version&gt;/example</code></li>\n<li><strong>Windows 7</strong>: <code>%ProgramData%\\Titanium\\modules\\commonjs\\ti.cloud\\&lt;latest_version&gt;\\example</code></li>\n<li><strong>Windows 8</strong>: <code>%AppData%\\Titanium\\modules\\commonjs\\ti.cloud\\&lt;latest_version&gt;\\example</code></li>\n<li><strong>Linux</strong>: <code>~/titaniumsdk/modules/commonjs/ti.cloud/&lt;latest_version&gt;\\example</code></li>\n</ul>\n</li>\n<li><p>Select all the folders and files in the <strong>example</strong> folder and drag them to your project's <strong>Resources</strong> folder. <p><img src=\"guides/titanium/dragfiles.png\" alt=\"\" width=\"449\" height=\"243\"></p></p>\n\n<ul>\n<li>If prompted, select the option to <strong>Copy Files and Folders</strong> and click <strong>OK</strong>.</li>\n<li>Click <strong>Yes to All</strong> when asked if you want to overwrite files.</li>\n</ul>\n</li>\n<li><p>Open the project's <code>tiapp.xml</code> file and, in the <strong>Modules</strong> section, add the <strong>facebook</strong>\nand <strong>ti.cloudpush</strong> modules. <p><img src=\"guides/titanium/modules.png\" alt=\"\" width=\"430\" height=\"394\"></p></p></li>\n<li>Save <code>tiapp.xml</code> and run the project on the desired device or emulator/simulator.</li>\n</ol>\n\n\n<p>Once the application is running, try the following:</p>\n\n<ul>\n<li><p>Create a new user by selecting <strong>Users > Create User</strong>. Enter a username, password and password\nconfirmation, first name, and last name, then click <strong>Create</strong>. If the user is created successfully, the following dialog is shown:\n<p><img src=\"guides/titanium/new_user_success.png\" alt=\"\" width=\"300\" height=\"184\"></p></p></li>\n<li><p>View the newly created user in Dashboard:</p>\n\n<ol>\n<li>Open <a href=\"https://platform.appcelerator.com\">Dashboard</a> and select your application from the <strong>Apps</strong> menu.</li>\n<li>Select <strong>Cloud > Manage Data</strong>, then click <strong>Users</strong> in the Manage Data Object table. You\nshould see the user you created listed in the Users table.\n<p><img src=\"guides/titanium/verify_new_user.png\" alt=\"\" width=\"570\" height=\"219\"></p></li>\n</ol>\n</li>\n</ul>\n\n\n<h2 id='titanium-section-references'>References</h2>\n\n<ul>\n<li><a href=\"#!/api\">ArrowDB API Reference</a></li>\n<li><a href=\"http://docs.appcelerator.com/platform/latest/#!api/Modules.Cloud\">Modules.Cloud Module Reference</a></li>\n</ul>\n\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/titanium/README.md"},{"name":"android","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/android","title":"Android SDK","description":"Using ArrowDB and Arrow Push in native Android apps with the APS Android SDK.","html":"<h1 id='android-section-appcelerator-platform-services-sdk-for-android-appcelerator-arrowdb-and-arrow-push'>Appcelerator Platform Services SDK for Android -- Appcelerator ArrowDB and Arrow Push</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/android-section-getting-the-sdk'>Getting the SDK</a><li><a href='#!/guide/android-section-running-the-apscloudexample-application'>Running the APSCloudExample Application</a><li><a href='#!/guide/android-section-enabling-cloud-services-in-a-new-project'>Enabling Cloud services in a new Project</a><li><a href='#!/guide/android-section-making-api-calls-and-handling-responses'>Making API Calls and Handling Responses</a><ul><li><a href='#!/guide/android-section-building-request-parameters'>Building Request Parameters</a><li><a href='#!/guide/android-section-handling-responses'>Handling Responses</a><ul><li><a href='#!/guide/android-section-example-apsusers-login-call-with-response-handler'>Example: APSUsers Login Call with Response Handler</a></ul><li><a href='#!/guide/android-section-monitoring-request-progress'>Monitoring Request Progress</a><ul><li><a href='#!/guide/android-section-example-apsfiles-create-call-with-progress-handler'>Example: APSFiles Create Call with Progress Handler</a></ul></ul><li><a href='#!/guide/android-section-making-generic-rest-apis-method-calls'>Making Generic REST APIs Method Calls</a><li><a href='#!/guide/android-section-working-with-push-notifications'>Working with Push Notifications</a><ul><li><a href='#!/guide/android-section-android-project-requirements-for-using-apscloudpush'>Android Project Requirements for using APSCloudPush</a><ul><li><a href='#!/guide/android-section-add-google-play-services'>Add Google Play services</a><li><a href='#!/guide/android-section-androidmanifest-changes'>AndroidManifest changes</a></ul><li><a href='#!/guide/android-section-subscribe-to-push-notifications'>Subscribe to push notifications</a><li><a href='#!/guide/android-section-cloudpush-sample-application'>CloudPush sample application</a></ul>\n</div>\n\n<p>The Appcelerator Platform Services (APS) SDK for Android provides APIs for your Android\napplication built with Java to access ArrowDB and Arrow Push.</p>\n\n<h2 id='android-section-getting-the-sdk'>Getting the SDK</h2>\n\n<p>To download and start using the SDK, you first need to register your Android application in\n<a href=\"https://platform.appcelerator.com\">Dashboard</a>. See\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Managing_Non-Titanium_Client_Applications_in_Dashboard\">Managing Non-Titanium Client Applications in Dashboard</a>\nfor details on registering a new application. After you register the application, a service\nkey is generated that associates your application with all the Platform services. Dashboard also provides\nfull instructions for enabling all Platform Services in your application. This guide will deal specifically\nwith enabling and using ArrowDB and Arrow Push in an Android application.</p>\n\n<p><p><img src=\"guides/android/dashboard.png\" alt=\"\" width=\"671\" height=\"278\"></p></p>\n\n<h2 id='android-section-running-the-apscloudexample-application'>Running the APSCloudExample Application</h2>\n\n<p>The SDK ZIP file includes an Android sample project that demonstrates basic usage of each of the Cloud APIs.\nTo run the sample you first need to register a new application in Dashboard to obtain the necessary\nservice key. You will then copy the key into the imported sample project's main Activity\nand then run the application.</p>\n\n<p><strong>To create the APSCloudExample application in Dashboard:</strong></p>\n\n<ol>\n<li>Login to <a href=\"https://platform.appcelerator.com\">Appcelerator Dashboard</a>.</li>\n<li>From the <strong>Orgs</strong> menu, select the organization to associate with the application.\nNote that the Orgs menu will not appear if you are not a member of multiple organizations.</li>\n<li>Click the Add menu (+) and select <strong>Register App for Services</strong>.</li>\n<li>In the dialog:\n\n<ul>\n<li>Type <strong>APSCloudExampleApp</strong> (or other name) in the <strong>Name</strong> field.</li>\n<li>Select <strong>Android</strong> from the <strong>Platform</strong> menu.</li>\n<li>Select any cateogory from the <strong>Category</strong> menu.</li>\n</ul>\n</li>\n<li>Click <strong>Next</strong> and then click the <strong>Overview</strong> tab.</li>\n<li>Click the <strong>Services</strong> tab, then click <strong>Show Key</strong> under <strong>Cloud /  Performance /  Analytics</strong>.</li>\n<li>Select <strong>Development</strong> from the Environment menu, then click the clipboard icon to copy the key\nto your clipboard.</li>\n</ol>\n\n\n<p>Next, import the APSCloudExample project into Eclipse, copy the key from your clipboard\ninto the application's main activity, and run the application.</p>\n\n<p><strong>To import the completed APSCloudExample project:</strong></p>\n\n<ol>\n<li>In Eclipse, select <strong>File > Import > General > Existing Code into Workspace</strong>, then click <strong>Next</strong>.</li>\n<li>Click <strong>Browse</strong> and navigate to the <strong><code>appcelerator-sdk-android-&lt;VERSION&gt;/examples/APSCloudExample</code></strong> folder, and click <strong>Open</strong>.</li>\n<li>Click <strong>Finish</strong>.</li>\n<li>Open <strong><code>src/main/java/com/appcelerator/apscloudexample/MainActivity.java</code></strong>.</li>\n<li><p>Locate the following line of code and replace <strong>&lt;&lt; YOUR APP KEY >></strong> with the application key you\ncopied to your clipboard previously.</p>\n\n<pre><code>  APSServiceManager.getInstance().enable(getApplicationContext(), \"&lt;&lt; YOUR APP KEY &gt;&gt;\");;\n</code></pre></li>\n<li><p>Run the application on an Android device or emulator.</p></li>\n</ol>\n\n\n<p>Once the application is running, try the following:</p>\n\n<ul>\n<li>Create a new user by selecting <strong>Users > Create User</strong>. Enter a username, password and password confirmation,\nthen click <strong>Create</strong>. If the user is created successfully, the following dialog is shown:</li>\n</ul>\n\n\n<p><p><img src=\"guides/android/new_user_success.png\" alt=\"\" width=\"300\" height=\"184\"></p></p>\n\n<ul>\n<li>View the newly created user in Dashboard:\n\n<ol>\n<li>Open <a href=\"https://platform.appcelerator.com\">Dashboard</a> and select your application from the <strong>Apps</strong> menu.</li>\n<li>Select <strong>Cloud > Manage Data</strong>, then click <strong>Users</strong> in the Manage Data Object table. You\nshould see the user you created listed in the Users table.</li>\n</ol>\n</li>\n</ul>\n\n\n<p><p><img src=\"guides/android/verify_new_user.png\" alt=\"\" width=\"570\" height=\"219\"></p></p>\n\n<h2 id='android-section-enabling-cloud-services-in-a-new-project'>Enabling Cloud services in a new Project</h2>\n\n<p>Once you've\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Managing_Non-Titanium_Client_Applications_in_Dashboard\">registered an application in Dashboard</a>,\ndownloaded the SDK and obtained your application service key, there are few steps to enable Cloud services in your Android project.</p>\n\n<p><strong>To enable the Cloud services in your project</strong>:</p>\n\n<ol>\n<li>Copy <strong><code>appcelerator-sdk-android-&lt;VERSION&gt;.jar</code></strong> to your project's <code>libs</code> folder.</li>\n<li><p>Add the following permission to your project's <code>AndroidManifest.xml</code> file:</p>\n\n<pre><code> &lt;uses-permission android:name=\"android.permission.INTERNET\"/&gt;`\n</code></pre></li>\n<li><p>Import the APSServiceManager class into the project's main Activity:</p>\n\n<pre><code> import com.appcelerator.aps.APSServiceManager;\n</code></pre></li>\n<li><p>Call <code>APSServiceManager.getInstance().enable()</code>, passing it the application context and the application\nkey provided by Dashboard:</p>\n\n<pre><code>  APSServiceManager.getInstance().enable(getApplicationContext(), \"&lt;&lt;YOUR APP KEY&gt;&gt;\");\n</code></pre>\n\n<p>At this point, your application can begin making API calls.  Note that the application will need to import additional\nclasses, depending on which APS APIs it uses.</p></li>\n</ol>\n\n\n<h2 id='android-section-making-api-calls-and-handling-responses'>Making API Calls and Handling Responses</h2>\n\n<p>The\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/index.html?com/appcelerator/aps/package-summary.html\">com.appcelerator.aps</a>\npackage contains a collection of classes whose methods map to individual REST API method endpoints.\nFor example, the <code>APSUsers.create()</code> method corresponds to the\n<a href=\"#!/api/Users-method-create\"><code>/users/create.json</code></a> method endpoint.</p>\n\n<p>Alternatively, you can use the generic\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSCloud.html#sendRequest%28java.lang.String%2C%20java.lang.String%2C%20java.util.Map%2C%20com.appcelerator.aps.APSResponseHandler%29\">APSCloud.sendRequest()</a>\nmethod to make REST calls directly\nagainst the Cloud APIs. For more information, see\n<a href=\"#!/guide/android-section-making-generic-rest-apis-method-calls\">Making Generic REST API Calls</a>.</p>\n\n<p><strong>Note</strong>: All Cloud API calls must be made on the UI (main) thread, and callbacks are executed\non the UI thread.</p>\n\n<h3 id='android-section-building-request-parameters'>Building Request Parameters</h3>\n\n<p>The first parameter of each Cloud API method is a <code>HashMap</code> object that contains the\nparameters to send with the request. For example, the <code>APSPhotos.show()</code> method takes a <code>photo_id</code> parameter\nwhose value is, naturally, the ID of the photo to show.</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"photo_id\", photoId);\n\nAPSPhotos.show(data, new APSResponseHandler() {\n     ...\n});\n</code></pre>\n\n<h3 id='android-section-handling-responses'>Handling Responses</h3>\n\n<p>The second parameter of each method call is an instance of\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSResponseHandler.html\">APSResponseHandler</a>,\nan interface that has the following signature:</p>\n\n<pre><code>public interface APSResponseHandler {\n    void onResponse(final APSResponse e);\n    void onException(final APSCloudException e);\n}\n</code></pre>\n\n<p>The instance you specify must override the <code>onResponse</code> and <code>onException</code> methods. The <code>onResponse</code> method is\ninvoked upon completion of a Cloud API call, and the <code>onException</code> handler is invoked if there is\nan exception while communicating with the ArrowDB server.</p>\n\n<p>The\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSResponse.html\">APSResponse</a>\nobject provides getter methods to access information about the response. For instance,\nthe <code>getSuccess()</code> method returns a boolean indicating if the method call was successful or not;\nthe <code>getResponse()</code> method returns a JSON-encoded object with the results of the method call.</p>\n\n<pre><code>@Override\npublic void onResponse(final APSResponse e) {\n    if (e.getSuccess()) {\n        // Read JSON response\n        JSONObject res = e.getResponse();\n    } else {\n        // Log error message:\n        Log.e(\"LOGIN\", e.getMessage());\n    }\n}\n</code></pre>\n\n<p>The <code>onException()</code> handler is invoked for any exceptions that occur during communication with\nthe ArrowDB server.</p>\n\n<pre><code>@Override\npublic void onException(APSCloudException e) {\n    // Handle exception\n    Log(e.getErrorType(), e.getErrorCode());\n}\n</code></pre>\n\n<h4 id='android-section-example-apsusers-login-call-with-response-handler'>Example: APSUsers Login Call with Response Handler</h4>\n\n<p>The following example logs in an existing ArrowDB user by their username and password. After a successful\nlogin, the application updates a TextView object with the user's ArrowDB username.</p>\n\n<pre><code>HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"login\", \"username\");\ndata.put(\"password\", \"password\");\n\ntry {\n    APSUsers.login(data, new APSResponseHandler() {\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONObject res = e.getResponse();\n                    // Response returns an array containing a single user\n                    JSONArray payload = res.getJSONArray(\"users\");\n                    res = payload.getJSONObject(0);\n                    loginTextView.setText(res.getString(\"username\"));\n                } catch (Exception e) {\n                    Log.e(\"LOGIN\", \"Error parsing JSON object: \" + e.toString());\n                }\n            }\n            else {\n                Log.e(\"LOGIN\", e.getMessage());\n            }\n\n        }\n        @Override\n        public void onException(APSCloudException e) {\n            // Handle exception that occured\n        }\n    });\n} catch (APSClientError e) {\n    Log.e(\"LOGIN\", e.getErrorType());\n}\n</code></pre>\n\n<h3 id='android-section-monitoring-request-progress'>Monitoring Request Progress</h3>\n\n<p>For Cloud API methods that involve uploading large files, such as <code>APSPhotos.create()</code> or <code>APSFiles.create()</code>,\nthere is an overloaded version that takes an optional <code>progressHandler</code> parameter. This parameter takes\na <a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSProgressHandler.html\">APSProgressHandler</a>\ninstance, which must provide an <code>onProgress</code> handler. This handler is periodically triggered as the file\ntransfer continues, and is passed an integer between 0-100 indicating the current upload progress.</p>\n\n<h4 id='android-section-example-apsfiles-create-call-with-progress-handler'>Example: APSFiles Create Call with Progress Handler</h4>\n\n<p>The following example uploads a file from the device (<code>/res/raw/reference.pdf</code>) to the ArrowDB storage server.\nSince the method call requires that uploaded data be an instance of <code>java.io.File</code>, the application needs to copy the\nresource to a read-write directory before uploading it. Storing the file locally requires that the\n<a href=\"http://developer.android.com/reference/android/Manifest.permission.html#WRITE_EXTERNAL_STORAGE\">WRITE_EXTERNAL_STORAGE</a>\npermission be included in your AndroidManifest.xml file.</p>\n\n<p>The progress callback calls the <code>setProgress()</code> method on a <code>ProgressBar</code> object, displaying the\nstatus of the upload. After the request successfully completes, the application displays a toast notification.</p>\n\n<pre><code>HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\nString filename = \"reference.pdf\";\n\n// Need to copy the resource to a read-write directory to upload it\nif (!createExternalStoragePrivateFile(R.raw.reference, filename)) return;\n\nFile file = new File(currentActivity.getExternalFilesDir(null), filename);\ndata.put(\"file\", file);\ndata.put(\"name\", \"Reference Manual\");\n\ntry {\n    APSFiles.create(data, new APSClient.APSResponseHandler() {\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                APSCloud.log(\"PUSH\", \"Successfully subscribed to push!\");\n                progressBar.setVisibility(View.GONE);\n                Toast.makeText(currentActivity, \"File uploaded!\", Toast.LENGTH_SHORT).show();\n            }\n            else {\n                Log.e(\"UPLOAD\", e.getMessage());\n            }\n        }\n    },\n    new APSClient.APSProgressHandler() {\n        @Override\n        public void onProgress(final int percentProgress, final boolean upload) {\n            if (currentActivity != null) {\n                progressBar.setProgress(percentProgress);\n        }\n    });\n} catch (APSClientError e) {\n    Log.e(\"UPLOAD\", e.getMessage());\n}\n\n// Helper function to copy a resource to external storage, modified from:\n// http://developer.android.com/reference/android/content/Context.html#getExternalFilesDir(java.lang.String)\n\npublic static boolean createExternalStoragePrivateFile(int inputResource, String filename) {\n    File file = new File(currentActivity.getExternalFilesDir(null), filename);\n    try {\n        InputStream is = currentActivity.getResources().openRawResource(inputResource);\n        OutputStream os = new FileOutputStream(file);\n        byte[] data = new byte[is.available()];\n        is.read(data);\n        os.write(data);\n        is.close();\n        os.close();\n        return true;\n    } catch (IOException e) {\n        Log.w(\"ExternalStorage\", \"Error writing \" + file, e);\n        return false;\n    }\n}\n</code></pre>\n\n<h2 id='android-section-making-generic-rest-apis-method-calls'>Making Generic REST APIs Method Calls</h2>\n\n<p>The\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSCloud.html#sendRequest%28java.lang.String%2C%20java.lang.String%2C%20java.util.Map%2C%20com.appcelerator.aps.APSResponseHandler%29\"><code>APSCloud.sendRequest()</code></a>\nmethod lets you easily make REST API calls directly against\nArrowDB, rather than using the specialized classes (like <code>APSUsers</code>). In general, you\nshould use the specialized classes as they provide an easier API. However, if new REST methods\nare deployed to the APS Cloud backend, this approach lets you immediately start\nusing those methods without waiting for an update to the SDK.</p>\n\n<p>To make a generic request, you call <code>APSCloud.getInstance()</code> to get a reference to the shared APSCloud\nobject and call its <code>sendRequest()</code> method. For each call, you must specify the following:</p>\n\n<ul>\n<li>REST API method endpoint relative to \"api.cloud.appcelerator.com/v1\". Method endpoints are listed in the corresponding entries in the\n<a href=\"#!/api\">REST API documentation</a>.</li>\n<li>The HTTP method to use.</li>\n<li>Data to send with the request.</li>\n</ul>\n\n\n<p>For example, to <a href=\"#!/api/Posts-method-create\">create a post</a>,\npass the <code>sendRequest()</code> method the following information:</p>\n\n<ul>\n<li>REST API method endpoint: <code>posts/create.json</code></li>\n<li>The HTTP method to use: <code>POST</code></li>\n<li>Data to send with the request: at minimum, you must specify the <code>content</code> property.</li>\n</ul>\n\n\n<p>The following uses the <code>sendRequest()</code> API to create a new Post object.</p>\n\n<pre><code>HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"title\", \"What's up?\");\ndata.put(\"content\", \"The sun, the cloud, space...\");\n\ntry {\n    APSCloud.getInstance().sendRequest(\"posts/create.json\", \"POST\", data, new APSClient.APSResponseHandler() {\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONObject res = e.getResponse();\n                    JSONArray payload = res.getJSONArray(\"posts\");\n                    res = payload.getJSONObject(0);\n                    latestPost.setText(res.getString(\"title\"));\n                } catch (Exception err) {\n                    Log.e(\"REST\", \"JSON Error: \" + err.getMessage());\n                }\n            }\n            else {\n                Log.e(\"REST\", e.getMessage());\n            }\n        }\n    });\n} catch (APSClientError e) {\n    Log.e(\"REST\", \"Error: \" + e.getMessage());\n}\n</code></pre>\n\n<h2 id='android-section-working-with-push-notifications'>Working with Push Notifications</h2>\n\n<p>The  <a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSPushNotifications.html\"><code>APSPushNotifications</code></a>\nclass lets your application subscribe, send and receive push notifications. To use the class, you also need the\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSCloudPush.html\"><code>APSCloudPush</code></a>\nclass, which provides the underlying services to handle incoming push notifications.</p>\n\n<p>To use these classes:</p>\n\n<ul>\n<li><a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_push_services-section-37551713_Configuringpushservices-ConfiguringpushservicesforAndroiddevices\">Configure push services</a>\nfor your application.</li>\n<li>Add Google Play services as a depedency to your project and update the project's <code>AndroidManifest.xml</code> file.\nSee the <a href=\"#!/guide/android-section-android-project-requirements-for-using-apscloudpush\">Android Project Requirements section below</a>.</li>\n<li>Retrieve the device token and subscribe to push notifications with Arrow Push.\nSee the <a href=\"#!/guide/android-section-subscribe-to-push-notifications\">Subscribe to push notifications section below</a>.</li>\n</ul>\n\n\n<h3 id='android-section-android-project-requirements-for-using-apscloudpush'>Android Project Requirements for using APSCloudPush</h3>\n\n<p>Once you have configured your GCM settings in Dashboard, there are some required configuration changes\nto your Android project to use <code>APSCloudPush</code>.</p>\n\n<h4 id='android-section-add-google-play-services'>Add Google Play services</h4>\n\n<p><code>APSCloudPush</code> requires that Google Play services be included in your application.</p>\n\n<ol>\n<li>Download the Google Play services SDK using the Android SDK Manager.</li>\n<li>Copy the  <code>&lt;android-sdk&gt;/extras/google/google_play_services/libproject/google-play-services_lib</code> folder\nto the same workspace folder as your Android projects (not into your Android project).</li>\n<li><p>Add the following inside the <strong><code>&lt;application/&gt;</code></strong> element of your <code>AndroidManifest.xml</code> file:</p>\n\n<pre><code> &lt;meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" /&gt;\n</code></pre></li>\n</ol>\n\n\n<p>For <strong>Android Studio</strong> projects, update the <code>dependencies</code> field of the <code>build.gradle</code> file,\nthen save and sync the gradle file.</p>\n\n<pre><code>...\ndependencies {\n    ...\n    compile 'com.google.android.gms:play-services:6.5.87'\n}\n</code></pre>\n\n<p>For <strong>Eclipse</strong> projects:</p>\n\n<ol>\n<li>Import the library project into Eclipse. (From the menu, click <strong>File</strong> > <strong>Import</strong>, then select\n<strong>Android</strong> > <strong>Existing Android Code into Workspace</strong>, and browse to the copy of the library project to import it.)</li>\n<li>In the application project, reference the Google Play services library project. (Right-click the\nproject folder and select <strong>Properties</strong>, then select <strong>Android</strong>, click <strong>Add..</strong> and select the\nlibrary project.)</li>\n</ol>\n\n\n<p>For other projects, update the <code>project.properties</code> file to reference the library project:</p>\n\n<pre><code>android.library.reference.1=../google-play-services_lib\n</code></pre>\n\n<p>For detailed directions, see\n<a href=\"http://developer.android.com/google/play-services/setup.html\">Android Developer: Setting Up Google Play Services</a>.</p>\n\n<h4 id='android-section-androidmanifest-changes'>AndroidManifest changes</h4>\n\n<p>The following changes must be added to your project's\n<code>AndroidManifest.xml</code> to use <code>APSCloudPush</code>. Replace each occurence of <em>\"YOURAPPSPACKAGENAME\"</em>\nwith the actual package name of your application.</p>\n\n<ul>\n<li><p>Inside the <code>&lt;manifest/&gt;</code> element:</p>\n\n<pre><code>  &lt;uses-permission android:name=\"android.permission.INTERNET\"/&gt;\n  &lt;uses-permission android:name=\"android.permission.GET_ACCOUNTS\"/&gt;\n  &lt;uses-permission android:name=\"android.permission.WAKE_LOCK\"/&gt;\n  &lt;uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\"/&gt;\n  &lt;uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/&gt;\n  &lt;uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"/&gt;\n  &lt;uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/&gt;\n  &lt;uses-permission android:name=\"android.permission.VIBRATE\"/&gt;\n  &lt;uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\n           android:maxSdkVersion=\"18\" /&gt;\n  &lt;permission android:name=\"YOURAPPSPACKAGENAME.permission.C2D_MESSAGE\"\n              android:protectionLevel=\"signature\"/&gt;\n  &lt;uses-permission android:name=\"YOURAPPSPACKAGENAME.permission.C2D_MESSAGE\"/&gt;\n</code></pre></li>\n<li><p>Inside the <code>&lt;application/&gt;</code> element:</p>\n\n<pre><code>  &lt;receiver android:name=\"com.appcelerator.aps.IntentReceiver\"/&gt;\n  &lt;receiver\n          android:name=\"com.appcelerator.aps.GCMReceiver\"\n          android:permission=\"com.google.android.c2dm.permission.SEND\"&gt;\n      &lt;intent-filter&gt;\n          &lt;action android:name=\"com.google.android.c2dm.intent.RECEIVE\"/&gt;\n          &lt;category android:name=\"YOURAPPSPACKAGENAME\"/&gt;\n      &lt;/intent-filter&gt;\n  &lt;/receiver&gt;\n  &lt;receiver android:name=\"com.appcelerator.aps.PushBroadcastReceiver\"\n          android:permission=\"com.google.android.c2dm.permission.SEND\"&gt;\n      &lt;intent-filter&gt;\n          &lt;action android:name=\"android.intent.action.BOOT_COMPLETED\"/&gt;\n          &lt;action android:name=\"com.google.android.c2dm.intent.REGISTRATION\" /&gt;\n          &lt;action android:name=\"com.appcelerator.aps.intent.DEL_GROUPED_MSG\" /&gt;\n          &lt;category android:name=\"YOURAPPSPACKAGENAME\" /&gt;\n      &lt;/intent-filter&gt;\n  &lt;/receiver&gt;\n  &lt;receiver android:name=\"com.appcelerator.aps.PushBroadcastReceiver\"&gt;\n      &lt;intent-filter&gt;\n          &lt;action android:name=\"android.intent.action.PACKAGE_ADDED\"/&gt;\n          &lt;action android:name=\"android.intent.action.PACKAGE_REPLACED\"/&gt;\n          &lt;data android:scheme=\"package\" android:path=\"YOURAPPSPACKAGENAME\" /&gt;\n      &lt;/intent-filter&gt;\n  &lt;/receiver&gt;\n</code></pre></li>\n</ul>\n\n\n<h3 id='android-section-subscribe-to-push-notifications'>Subscribe to push notifications</h3>\n\n<p>Once the project is setup, the application needs to register with Arrow Push to receive push\nnotifications. The application should do this once the application starts, for example, in the\n<code>onCreate()</code> method of the application's main activity.</p>\n\n<p>To register for push notifications, the application needs to retrieve the device token using the\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSCloudPush.html#retrieveDeviceToken%28com.appcelerator.aps.APSRetrieveDeviceTokenHandler%29\"><code>APSCloudPush.getInstance.retrieveDeviceToken()</code></a>\nmethod, then pass the token to either the\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSPushNotifications.html#subscribe%28java.util.Map%2Ccom.appcelerator.aps.APSResponseHandler%29\"><code>APSPushNotifications.subscribe()</code></a>\nor\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSPushNotifications.html#subscribeToken%28java.util.Map%2Ccom.appcelerator.aps.APSResponseHandler%29\"><code>APSPushNotifications.subscribeToken()</code></a>\nmethod to subscribe to a push channel.</p>\n\n<p><strong>Note:</strong> Call <a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSServiceManager.html#getInstance%28%29\"><code>APSServiceManager.getInstance()</code></a>\nbefore calling any methods on <code>APSCloudPush</code>, otherwise an exception will be thrown.</p>\n\n<p>For example, the code below can be added to the main activity's <code>onCreate()</code> method to subscribe the\ndevice to the <code>friend_channel</code>:</p>\n\n<pre><code>APSCloudPush.getInstance().retrieveDeviceToken(new APSRetrieveDeviceTokenHandler() {\n    @Override\n    public void onError(String message) {\n        Log.e(\"APSCloudPush\", \"Could not retrieve device token: \" + message);\n    }\n\n    @Override\n    public void onSuccess(String deviceToken) {\n        HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\n        data.put(\"type\", \"android\");\n        data.put(\"channel\", \"friend_channel\");\n        data.put(\"device_token\", deviceToken);\n        try {\n            APSPushNotifications.subscribeToken(data, new APSResponseHandler() {\n\n                @Override\n                public void onResponse(final APSResponse e) {\n                    if (e.getSuccess()) {\n                        Log.i(\"APSPushNotifications\", \"Subscribed!\");\n                    } else {\n                        Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n                    }\n                }\n\n                @Override\n                public void onException(final APSCloudException e) {\n                    Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n                }\n            });\n        } catch (APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n        }\n    }\n});\n</code></pre>\n\n<p>Once push services have been configured, and you've obtained a device token by registering your\napplication to receive push notifications, you can start calling methods of the\n<code>APSCloudPush</code> and <code>APSPushNotifications</code> classes.</p>\n\n<h3 id='android-section-cloudpush-sample-application'>CloudPush sample application</h3>\n\n<p>The SDK includes the <code>APSCloudPushExample</code> application that demonstrates use of the <code>APSPushNotifications</code>\nand <code>APSCloudPush</code> APIs. To run the sample application, you'll first need to create an Android application\nin Dashboard (or use an existing application), and configure its push notification\nsettings to include a GCM sender ID and application key. <code>APSCloudPush</code> requires Google Play services,\nso you'll also need to add that library as a dependency to your project.</p>\n\n<p><strong>To import and run the APSCloudPushExample application</strong>:</p>\n\n<ol>\n<li>In Eclipse, select <strong>File > Import > General > Existing Projects into Workspace</strong> and click <strong>Browse</strong>.</li>\n<li>Navigate to the <strong><code>appcelerator-sdk-android-&lt;VERSION&gt;/examples/APSCloudPushExample</code></strong> folder and click <strong>Open</strong>.</li>\n<li>Click <strong>Finish</strong> to import the project.</li>\n<li>Add the Google Play services to your project (see <a href=\"#!/guide/android-section-android-project-requirements-for-using-apscloudpush\">Android Project Requirements</a> for instructions).</li>\n<li><p>In MainActivity.java, locate the following line and replace <strong>&lt;&lt; YOUR APP KEY >></strong> with the application\nkey generated by Dashboard (see <a href=\"http://docs.appcelerator.com/platform/redirects/aps_key.html\">instructions</a>):</p>\n\n<pre><code>  String appKey = \"&lt;&lt; YOUR APP KEY &gt;&gt;\";\n</code></pre></li>\n<li>Run the application in an Android device or emulator.</li>\n</ol>\n\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/android/README.md"},{"name":"ios","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/ios","title":"iOS SDK","description":"Using ArrowDB and Arrow Push in native iOS apps with the APS iOS SDK.","html":"<h1 id='ios-section-appcelerator-platform-services-sdk-for-ios-arrowdb-and-arrow-push'>Appcelerator Platform Services SDK for iOS -- ArrowDB and Arrow Push</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/ios-section-getting-the-sdk'>Getting the SDK</a><li><a href='#!/guide/ios-section-running-the-apscloudexample-application'>Running the APSCloudExample Application</a><li><a href='#!/guide/ios-section-enabling-cloud-services-in-a-new-project'>Enabling Cloud services in a new Project</a><li><a href='#!/guide/ios-section-making-api-calls-and-handling-responses'>Making API Calls and Handling Responses</a><ul><li><a href='#!/guide/ios-section-building-request-parameters'>Building Request Parameters</a><li><a href='#!/guide/ios-section-handling-responses'>Handling Responses</a><ul><li><a href='#!/guide/ios-section-example-apsusers-login-call-with-response-handler'>Example: APSUsers Login Call with Response Handler</a></ul><li><a href='#!/guide/ios-section-monitoring-request-progress'>Monitoring Request Progress</a><ul><li><a href='#!/guide/ios-section-example-apsphotos-create-call-with-progress-handler'>Example: APSPhotos Create Call with Progress Handler</a></ul></ul><li><a href='#!/guide/ios-section-making-generic-rest-apis-method-calls'>Making Generic REST APIs Method Calls</a><li><a href='#!/guide/ios-section-working-with-push-notifications'>Working with Push Notifications</a></ul>\n</div>\n\n<p>The Appcelerator Platform Services (APS) SDK for iOS provides APIs for your iOS\napplication built with Objective-C to access ArrowDB and Arrow Push.</p>\n\n<h2 id='ios-section-getting-the-sdk'>Getting the SDK</h2>\n\n<p>To download and start using the SDK, you first need to register a new iOS application in\n<a href=\"https://platform.appcelerator.com\">Dashboard</a>. See\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Managing_Non-Titanium_Client_Applications_in_Dashboard\">Managing Non-Titanium Client Applications in Dashboard</a>\nfor details on registering a new application. After you register an application, a service\nkey is generated that associates your application with all the Platform services. Dashboard also provides\nfull instructions for enabling all Platform Services in your application. This guide will deal specifically\nwith enabling and using ArrowDB and Arrow Push in an iOS application.</p>\n\n<p><p><img src=\"guides/ios/instrux.png\" alt=\"\" width=\"781\" height=\"248\"></p></p>\n\n<h2 id='ios-section-running-the-apscloudexample-application'>Running the APSCloudExample Application</h2>\n\n<p>The SDK ZIP file includes an iOS sample project that demonstrates basic usage of each of the Cloud APIs.\nTo run the sample, register a new application in Dashboard to obtain the necessary\nservice application. You will then copy the key into the imported sample project's application delegate,\nthen run the application.</p>\n\n<p><strong>To create the APSCloudExample application in Dashboard:</strong></p>\n\n<ol>\n<li>Login to <a href=\"https://platform.appcelerator.com\">Appcelerator Dashboard</a>.</li>\n<li>From the <strong>Orgs</strong> menu, select the organization to associate with the application.\nNote that the Orgs menu will not appear if you are not a member of multiple organizations.</li>\n<li>Click the Add menu (+) and select <strong>Register App for Services</strong>.</li>\n<li>In the dialog:\n\n<ul>\n<li>Enter <strong>APSCloudExampleApp</strong> (or other name) in the <strong>Name</strong> field.</li>\n<li>Select <strong>iOS</strong> from the <strong>Platform</strong> menu.</li>\n<li>Select any category from the <strong>Category</strong> menu.\n<p><img src=\"guides/ios/create_app.png\" alt=\"\" width=\"368\" height=\"285\"></p></li>\n</ul>\n</li>\n<li>Click <strong>Next</strong> and then click the <strong>Overview</strong> tab.</li>\n<li>Click the <strong>Services</strong> tab, then click <strong>Show Key</strong> under <strong>Cloud /  Performance /  Analytics</strong>.</li>\n<li>Select <strong>Development</strong> from the Environment menu, then click the clipboard icon to copy the key to your clipboard.\n<p><img src=\"guides/ios/copy_key.png\" alt=\"\" width=\"447\" height=\"178\"></p></li>\n</ol>\n\n\n<p>Next, import the APSCloudExample project into Xcode, copy the key from your clipboard into the\napplication delegate, and run the application.</p>\n\n<p><strong>To import the completed APSCloudExample project:</strong></p>\n\n<ol>\n<li>In Xcode, open the <strong><code>appcelerator-sdk-ios-&lt;VERSION&gt;/examples/APSCloudExample.xcodeproj</code></strong>.</li>\n<li><p>Open <strong><code>AppDelegate.m</code></strong>, add the code below to your application delegate's <code>application:didFinishLaunchingWithOptions</code> method,\nand replace <strong>&lt;&lt; YOUR APP KEY >></strong> with the application key you copied to your clipboard previously.</p>\n\n<pre><code> [[APSServiceManager sharedInstance] enableWithAppKey:@\"&lt;&lt; YOUR APP KEY &gt;&gt;\"];\n</code></pre></li>\n<li><p>Run the application on an iOS device or simulator.</p></li>\n</ol>\n\n\n<p>Once the application is running, try the following:</p>\n\n<ul>\n<li><p>Create a new user by selecting <strong>Users > Create User</strong>. Enter a username, password and password confirmation\nand then click <strong>Create</strong>. If the user is created successfully, the following dialog is shown:\n<p><img src=\"guides/ios/new_user_success.png\" alt=\"\" width=\"300\" height=\"184\"></p></p></li>\n<li><p>View the newly created user in Dashboard:</p>\n\n<ol>\n<li>Open <a href=\"https://platform.appcelerator.com\">Dashboard</a> and select your application from the Apps menu.</li>\n<li>Select <strong>Cloud > Manage Data</strong>, then click <strong>Users</strong> in the Manage Data Object table. You\nshould see the user you created listed in the Users table.\n<p><img src=\"guides/ios/verify_new_user.png\" alt=\"\" width=\"570\" height=\"219\"></p></li>\n</ol>\n</li>\n</ul>\n\n\n<h2 id='ios-section-enabling-cloud-services-in-a-new-project'>Enabling Cloud services in a new Project</h2>\n\n<p>Once you've\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Managing_Non-Titanium_Client_Applications_in_Dashboard\">registered an application in Dashboard</a>,\ndownloaded the SDK, and obtained your application service key,\nthere are few steps to enable Cloud services in your iOS project.\nThe steps are slightly different if you are using Xcode 6 or 5.</p>\n\n<p><strong>To enable the Cloud service in an existing Xcode project</strong>:</p>\n\n<ol>\n<li>Add the <strong><code>appcelerator-sdk-ios-&lt;VERSION&gt;/Appcelerator.framework</code></strong> folder to your project:\n\n<ul>\n<li>For Xcode 5 projects, drag the <strong>Appcelerator.framework</strong> folder to your project's Frameworks folder,\nmaking sure <strong>Copy items into destination group's folder</strong> is checked, and click <strong>Finish</strong>.</li>\n<li>For Xcode 6 projects, drag the <strong>Appcelerator.framework</strong> folder to the project's root folder,\nmaking sure <strong>Copy Items if Needed</strong> is checked, and click <strong>Finish</strong>.</li>\n</ul>\n</li>\n<li>On your project's <strong>Build Phases</strong> tab, expand the <strong>Link Binary With Libraries</strong> section and add\nthe <strong>libsqlite3.dylib</strong> and <strong>libz.dylib</strong> frameworks.</li>\n<li>On your project's <strong>Build Settings</strong> tab, click <strong>All</strong> in the top-left corner, then expand the <strong>Linking</strong> section.</li>\n<li>In the <strong>Other Linker Flags</strong> field, enter <strong>-ObjC</strong>. <p><img src=\"guides/ios/otherlinker.png\" alt=\"\" width=\"386\" height=\"144\"></p></li>\n<li><p>Import <code>Appcelerator.h</code> into your application delegate:</p>\n\n<pre><code> #import &lt;Appcelerator/Appcelerator.h&gt;\n</code></pre></li>\n<li><p>Lastly, initialize Platform services by calling the <code>[APSServiceManager enableWithAppKey]</code> method,\nreplacing <strong>&lt;&lt; YOUR APP KEY >></strong> with the service key\ngenerated by Dashboard when you created your application. (See\n<a href=\"http://docs.appcelerator.com/platform/redirects/aps_key.html\">View Application Information</a> for how to\nlocate your application key.)</p>\n\n<pre><code>  [[APSServiceManager sharedInstance] enableWithAppKey:@\"&lt;&lt;YOUR APP KEY&gt;&gt;\"];\n</code></pre></li>\n</ol>\n\n\n<p>At this point, your application can begin making API calls.</p>\n\n<h2 id='ios-section-making-api-calls-and-handling-responses'>Making API Calls and Handling Responses</h2>\n\n<p>The iOS framework includes a collection of classes whose methods map to\nindividual REST API method endpoints. For example, the\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSUsers.html#//api/name/create:withBlock:\">[APSUsers create]</a>\nmethod corresponds to the <a href=\"#!/api/Users-method-create\"><code>/users/create.json</code></a> method\nendpoint.</p>\n\n<p>Alternatively, you can use the generic\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSCloud.html#//api/name/sendRequest:method:data:handler:\">[APSCloud sendRequest]</a>\nmethod to make REST calls directly\nagainst the Cloud APIs. For more information, see\n<a href=\"#!/guide/ios-section-making-generic-rest-apis-method-calls\">Making Generic REST API Calls</a>.</p>\n\n<h3 id='ios-section-building-request-parameters'>Building Request Parameters</h3>\n\n<p>The first parameter of each Cloud API method is a <code>NSDictionary</code> object that contains the of\nparameters to send with the request. For example, the\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSPhotos.html#//api/name/show:withBlock:\">[APSPhotos show]</a>\nmethod takes a <code>photo_id</code> parameter whose value is, naturally, the ID of the photo to show.</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{@\"photo_id\": self.photoId};\n[APSPhotos show:data withBlock:^(APSResponse *e) {\n    // Handle response\n}];\n</code></pre>\n\n<h3 id='ios-section-handling-responses'>Handling Responses</h3>\n\n<p>The second parameter of each method call is a block that is passed an\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSResponse.html\">APSResponse</a>\nwhose properties contain information about the response. For instance,\nthe <code>success</code> property contains a boolean indicating if the method call was successful or not;\nthe <code>response</code> property returns a JSON-encoded object with the results of the method call.</p>\n\n<pre><code>NSDictionary *data = @{@\"photo_id\": self.photoId};\n[APSPhotos show:data withBlock:^(APSResponse *e) {\n    // The block will be called on the thread the request was started on\n    if (e.success) {\n        // Remove the backslashes from URLs in the JSON\n        self.textView.text = [e.responseString stringByReplacingOccurrencesOfString:@\"\\\\\" withString:@\"\"];\n    } else {\n        [Utils handleErrorInResponse:e];\n    }\n}];\n</code></pre>\n\n<p>Note that the block will be called on the thread that the request was started on.</p>\n\n<h4 id='ios-section-example-apsusers-login-call-with-response-handler'>Example: APSUsers Login Call with Response Handler</h4>\n\n<p>The following example logs in an existing ArrowDB user by their username and password. After a successful\nlogin, the application displays an alert indicating a successful login.</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n   @\"login\": self.usernameField.text,\n   @\"password\": self.passwordField.text\n};\n\n[APSUsers login:data withBlock:^(APSResponse *e) {\n    // The block will be called on the thread the request was started on\n    if (e.success) {\n        NSString *userId = [[[e.response objectForKey:@\"users\"] objectAtIndex:0] objectForKey:@\"id\"];\n        NSString *msg = [NSString stringWithFormat:@\"Logged in! You are now logged in as %@\", userId];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [Utils handleErrorInResponse:e];\n    }\n}];\n</code></pre>\n\n<h3 id='ios-section-monitoring-request-progress'>Monitoring Request Progress</h3>\n\n<p>For Cloud API methods that involve uploading large files, such as\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSPhotos.html#//api/name/create:withBlock:progressBlock:\">[APSPhotos create]</a>\nor [APSFiles create],\nthere is an overloaded version that takes an additional <code>progressBlock</code> parameter. This parameter\nis a code block that is periodically invoked and passed a float value indicating the progress of the request,\nand a boolean indicating if the request is for an upload (YES) or download (NO).</p>\n\n<h4 id='ios-section-example-apsphotos-create-call-with-progress-handler'>Example: APSPhotos Create Call with Progress Handler</h4>\n\n<p>The following example creates a new Photo object from a binary photo attachment. The <code>progressBlock</code>\ncode block sets the <code>progress</code> property on a <code>ProgressBar</code> object, displaying the status of the upload.</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"photo\": self.photoData,\n    @\"photo_sync_sizes[]\": @\"small_240\"\n};\n[APSPhotos create:data withBlock:^(APSResponse *e) {\n    // The block will be called on the thread the request was started on\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Uploaded!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n        self.photoData = nil;\n    } else {\n        [Utils handleErrorInResponse:e];\n    }\n    self.createButton.hidden = NO;\n} progressBlock:^(float progress, BOOL upload) {\n    // The block will be called on the thread the request was started on\n    self.progressBar.progress = progress;\n}];\n</code></pre>\n\n<h2 id='ios-section-making-generic-rest-apis-method-calls'>Making Generic REST APIs Method Calls</h2>\n\n<p>The <a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSCloud.html#//api/name/sendRequest:method:data:handler:\">[APSCloud sendRequest]</a>\nmethod lets you easily make REST API calls directly against ArrowDB, rather than using the specialized classes. In general, you\nshould use the specialized classes as they provide an easier API. However, if new REST methods\nare deployed to the APS Cloud backend, this approach lets you immediately start using those methods\nwithout waiting for an update to the SDK.</p>\n\n<p>To make a generic request, you call\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSCloud.html#//api/name/sharedInstance\">[APSCloud sharedInstance]</a>\nto get a reference to the shared APSCloud object, and then call its\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSCloud.html#//api/name/sendRequest:method:data:handler:\">sendRequest</a>\nmethod. For each call, you must specify the following:</p>\n\n<ul>\n<li>REST API method endpoint relative to \"api.cloud.appcelerator.com/v1\". Method endpoints are listed in the corresponding entries in the\n<a href=\"#!/api\">REST API documentation</a>.</li>\n<li>The HTTP method to use.</li>\n<li>Data to send with the request.</li>\n</ul>\n\n\n<p>For example, to <a href=\"#!/api/Posts-method-create\">create a post</a>,\npass the <code>sendRequest()</code> method the following information:</p>\n\n<ul>\n<li>REST API method endpoint: <code>posts/create.json</code></li>\n<li>The HTTP method to use: <code>POST</code></li>\n<li>Data to send with the request: at minimum, you must specify the <code>content</code> property.</li>\n</ul>\n\n\n<p>The following example calls <a href=\"#!/api/Users-method-login\">users/login.json</a>\nREST method directly and logs the result to the console.</p>\n\n<pre><code>NSDictionary *data = [NSDictionary dictionaryWithObjectsAndKeys:\n                                    @\"jalter\", @\"login\",\n                                    @\"pass\", @\"password\",\n                                    nil];\n[[APSCloud sharedInstance] sendRequest:@\"users/login.json\" method:@\"POST\" data:datahandler:^(APSResponse *e) {\n    NSLog(@\"SUCCESS: %hhd\", e.success);\n    NSLog(@\"ERROR: %hhd\", e.error);\n    NSLog(@\"MESSAGE: %@\", e.message);\n}];\n</code></pre>\n\n<h2 id='ios-section-working-with-push-notifications'>Working with Push Notifications</h2>\n\n<p>The  <a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSPushNotifications.html\"><code>APSPushNotifications</code></a>\nclass lets your application subscribe, send and receive push notifications. To use the class:</p>\n\n<ul>\n<li><a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_push_services-section-37551713_Configuringpushservices-ConfiguringpushservicesforiOSdevices\">Configure push notification services</a> for your application.</li>\n<li><a href=\"https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/IPhoneOSClientImp.html#//apple_ref/doc/uid/TP40008194-CH103-SW2\">Register your application</a> to obtain the necessary device token.</li>\n</ul>\n\n\n<p>Once push services have been configured, the application needs to register with iOS to receive push\nnotifications.  For example, you can add the following code to the application delegate\nimplementation file in the <code>application:didFinishLaunchingWithOptions:</code> method:</p>\n\n<pre><code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [[APSServiceManager sharedInstance] enableWithAppKey:@\"APS_APP_KEY\"];\n\n    // Add this code to register for remote notifications\n    UIUserNotificationType types = UIUserNotificationTypeBadge |\n    UIUserNotificationTypeSound | UIUserNotificationTypeAlert;\n\n    UIUserNotificationSettings *mySettings =\n    [UIUserNotificationSettings settingsForTypes:types categories:nil];\n\n    [[UIApplication sharedApplication] registerUserNotificationSettings:mySettings];\n    [[UIApplication sharedApplication] registerForRemoteNotifications];\n\n    return YES;\n}\n</code></pre>\n\n<p>After the application registers with iOS to receive push notifications, the application needs to\nregister the device with Appcelerator Cloud.  Call the\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSPushNotifications.html#//api/name/subscribe:withBlock:\">subscribe</a>\nor\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSPushNotifications.html#//api/name/subscribeToken:withBlock:\">subscribeToken</a>\nmethod inside the application delegate's <code>application:didRegisterForRemoteNotificationsWithDeviceToken:</code> method.\nNote that you will need to convert the NSData parameter to a hex string before passing it to either\nthe <code>subscribe</code> or <code>subscribeToken</code> method.</p>\n\n<pre><code>- (void)application:(UIApplication *)app\n  didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)devToken {\n\n    // Convert the token to a string\n    const unsigned *tokenBytes = [devToken bytes];\n    NSString *hexToken = [NSString stringWithFormat:@\"%08x%08x%08x%08x%08x%08x%08x%08x\",\n                          ntohl(tokenBytes[0]), ntohl(tokenBytes[1]), ntohl(tokenBytes[2]),\n                          ntohl(tokenBytes[3]), ntohl(tokenBytes[4]), ntohl(tokenBytes[5]),\n                          ntohl(tokenBytes[6]), ntohl(tokenBytes[7])];\n\n    NSDictionary *subscribeData = @{\n                                    @\"device_token\": hexToken,\n                                    @\"channel\": @\"friend_channel\",\n                                    @\"type\": @\"ios\"\n                                    };\n    [APSPushNotifications subscribeToken:subscribeData withBlock:^(APSResponse *e) {\n        if (e.success) {\n            NSLog(@\"Successfully subscribed to push: %@\", e.responseString);\n        } else {\n            NSLog(@\"Error in registration. Error: %@\", e.errorMessage);\n        }\n    }];\n}\n</code></pre>\n\n<p>Once push services have been configured, and you've obtained a device token by registering your application\nto receive remote notifications, you can start calling methods of the <code>APSPushNotifications</code> class.</p>\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/ios/README.md"},{"name":"nodejs","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/nodejs","title":"Node SDK","description":"Using ArrowDB and Arrow Push in Node.js apps with the Arrow DB Node SDK.","html":"<h1 id='nodejs-section-arrowdb-sdk-for-node-js'>ArrowDB SDK for Node.js</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/nodejs-section-installation'>Installation</a><li><a href='#!/guide/nodejs-section-api-usage'>API Usage</a><ul><li><a href='#!/guide/nodejs-section-setup'>Setup</a><li><a href='#!/guide/nodejs-section-standard-arrowdb-apis'>Standard ArrowDB APIs</a><li><a href='#!/guide/nodejs-section-generic-arrowdb-apis'>Generic ArrowDB APIs</a></ul><li><a href='#!/guide/nodejs-section-user-login-session-management'>User Login Session Management</a><ul><li><a href='#!/guide/nodejs-section-cookie-based-session-management'>Cookie-Based Session Management</a><li><a href='#!/guide/nodejs-section-manual-session-management'>Manual Session Management</a></ul>\n</div>\n\n<p>The ArrowDB Node SDK lets you easily integrate ArrowDB services with your Node.js application.\nThe SDK provides two APIs:</p>\n\n<ul>\n<li>An API for each class and method.</li>\n<li>A set of generic REST APIs.</li>\n</ul>\n\n\n<p>Your Node application can optionally handle session data itself. For more information see,\n<a href=\"#!/guide/nodejs-section-user-login-session-management\">User Login Session Management</a>.</p>\n\n<h2 id='nodejs-section-installation'>Installation</h2>\n\n<p>To use the module within your Node application, add the <code>arrowdb</code> module to the <code>dependencies</code>\nsection of your <code>package.json</code> file, as follows:</p>\n\n<pre><code>\"dependencies\": {\n  \"arrowdb\": \"&gt;=1.0.6\"\n}\n</code></pre>\n\n<p>You can then run <code>npm install</code> from your application folder to install the module and its dependencies.</p>\n\n<p>You can also install the module directly using <code>npm</code>:</p>\n\n<pre><code>[sudo] npm install arrowdb\n</code></pre>\n\n<p>As of this writing, the latest version is <strong>1.0.6</strong>.</p>\n\n<h2 id='nodejs-section-api-usage'>API Usage</h2>\n\n<h3 id='nodejs-section-setup'>Setup</h3>\n\n<p>To use the ArrowDB APIs, load the <code>arrowdb</code> module, then create an instance with the <code>new</code> constructor,\npassing it your ArrowDB application key. Invoke API calls on the instance.</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersLogin(params, callback);\n</code></pre>\n\n<p>This only needs to be done once, typically in the main <code>app.js</code> script file.</p>\n\n<p>You may optionally pass the constructor an object as the second argument.\nYou may set the following properties on the object:</p>\n\n<ul>\n<li><code>apiEntryPoint</code>: Base URL of the ArrowDB server.  By default, it is <code>https://api.cloud.appcelerator.com</code>.</li>\n<li><code>autoSessionManagement</code>: Set to <code>false</code> to manually manage the session cookie or session ID.\nBy default, it is <code>true</code> and the SDK automatically handles the sessions.</li>\n<li><code>prettyJson</code>: Set to <code>true</code> to enable the <code>pretty_json</code> parameter for all API calls.\nBy default, the value is undefined and behaves as false.</li>\n<li><code>responseJsonDepth</code>: Sets the <code>response_json_depth</code> parameter for all API calls. By default, the\nvalue is <code>1</code>. You may the set value from 1 to 8.</li>\n</ul>\n\n\n<p>For example:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;', {\n        apiEntryPoint: 'https://api.cloud.appcelerator.com'\n        autoSessionManagement: false,\n        prettyJson: true,\n        responseJsonDepth: 3\n    });\n</code></pre>\n\n<h3 id='nodejs-section-standard-arrowdb-apis'>Standard ArrowDB APIs</h3>\n\n<p>The standard ArrowDB APIs provide a standardized API name for each REST object and method.\nInvoke the method on the ArrowDB SDK instance.</p>\n\n<p>The API name of most of the standard ArrowDB Node API calls is the concatenation of the\nREST class name and method in lower camel case notation.  For example, the Users object login\nmethod will be <code>usersLogin</code>.  Check the Node example of the method to see its exact name.</p>\n\n<p>Pass each method an optional parameters object and a required callback.</p>\n\n<p>Set any method parameters on the parameters object. The parameters object may be omitted.\nFor middleware calls, such as Express, you may optionally pass the request and response objects to the\nparameters object using the <code>req</code> and <code>res</code> keys, respectively.</p>\n\n<p>The callback is passed an Error object (or null if successful) and the results of the method call.\nThe results object contains the following properties:</p>\n\n<ul>\n<li><code>body</code>: HTTP response body as a JSON object.</li>\n<li><code>cookieString</code>: Session cookie string if the API returns a session ID else it will be an empty string.</li>\n<li><code>reason</code>: HTTP error message.</li>\n<li><code>response</code>: <a href=\"https://nodejs.org/docs/latest/api/http.html#http_class_http_serverresponse\">Node.js http.ServerResponse object</a>.</li>\n<li><code>statusCode</code>: HTTP status code.</li>\n</ul>\n\n\n<p>To access the results from the returned object, use the object's <code>body</code> property\nto access the HTTP response body. The body object will contain a <code>meta</code> object,\nwhich contains the metadata of the response, and a <code>response</code> object, which contains the\nresults of the method call.</p>\n\n<p>Below is a more complete example that uses the standard ArrowDB APIs to\nlogin a user. It defines a custom <code>login()</code> function that takes the <code>username</code> and <code>password</code>\nproperties from the HTTP request body, and in turn, passes those values as input to the\n<a href=\"http://docs.appcelerator.com/arrowdb/latest/#!/api/Users-method-login\"><code>Users.login()</code></a> method. On\nsuccessful login, the user's information is displayed in the console or, in case of an error, the\nerror response is displayed.</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\nfunction login(req, res) {\n    var data = {\n        login: req.body.username,\n        password: req.body.password,\n        // the req and res parameters are optional\n        req: req,\n        res: res\n    };\n    arrowDBApp.usersLogin(data, function(err, result) {\n        if (err) {\n            console.error(\"Login error:\" + (err.message || result.reason));\n        } else {\n            console.log(\"Login successful!\");\n            console.log(\"UserInfo: \" + JSON.stringify(result.body.response.users[0]));\n        }\n    });\n}\n</code></pre>\n\n<h3 id='nodejs-section-generic-arrowdb-apis'>Generic ArrowDB APIs</h3>\n\n<p>The ArrowDB Node SDK provides the following four methods to make generic calls to ArrowDB:</p>\n\n<ul>\n<li><code><em>sdkObject</em>.post(<em>path</em>, <em>parameters</em>, <em>callback</em>)</code></li>\n<li><code><em>sdkObject</em>.put(<em>path</em>, <em>parameters</em>, <em>callback</em>)</code></li>\n<li><code><em>sdkObject</em>.get(<em>path</em>, <em>parameters</em>, <em>callback</em>)</code></li>\n<li><code><em>sdkObject</em>.delete(<em>path</em>, <em>parameters</em>, <em>callback</em>)</code></li>\n</ul>\n\n\n<p>Each method is passed the following parameters:</p>\n\n<ul>\n<li><code>path</code> -- The path of the REST resource to call relative to the base URL (by default, it is <code>https://api.cloud.appcelerator.com</code>).</li>\n<li><code>parameters</code> -- The parameters to pass to the method. May be omitted.</li>\n<li><code>callback</code> -- The function to call when the request completes.\nThe callback is passed an Error object (or null if successful) and the results of the method call.</li>\n</ul>\n\n\n<p>Below is a complete REST example that is functionally equivalent to the previous version\nthat used the standard ArrowDB APIs.</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\nfunction login(req, res) {\n    var data = {\n        login: req.body.username,\n        password: req.body.password\n    };\n    arrowDBApp.post('/v1/users/login.json', data, function(err, result) {\n        if (err) {\n            console.error(\"Login error:\" + (err.message || result.reason));\n        } else {\n            console.log(\"Login successful!\");\n            console.log(\"UserInfo: \" + JSON.stringify(result.body.response.users[0]));\n        }\n    });\n}\n</code></pre>\n\n<h2 id='nodejs-section-user-login-session-management'>User Login Session Management</h2>\n\n<p>Most of the ArrowDB APIs require a user to be logged in, so it is important to have a\nway to manage user sessions in your Node.js application. The ArrowDB Node SDK provides\ntwo ways of managing ArrowDB login sessions in a Node.js application:</p>\n\n<ul>\n<li><strong>Cookie-based</strong>. Cookies are used to store session information, and passed between the client and server.</li>\n<li><strong>Session ID</strong>. Must pass a session ID with every API call.</li>\n</ul>\n\n\n<p>These methods are described in the following sections.</p>\n\n<h3 id='nodejs-section-cookie-based-session-management'>Cookie-Based Session Management</h3>\n\n<p>Cookies are frequently used by ArrowDB applications to store session information\nand are passed between the client and server.</p>\n\n<p>The ArrowDB Node SDK retrieves the session ID from the request's cookies. If a\n<code>_session_id</code> cookie is present, it uses that session ID to make the ArrowDB API\ncall. If not, it performs a regular API call without session information.</p>\n\n<p>If a session ID is returned in the API response (for example,\n<code>users/login.json</code>), the session information is added into the response\nobject. Specifically, it adds a <code>Set-Cookie</code> header to pass back to the client.</p>\n\n<p>To manually manage cookie sessions, disable automatic session management by passing an object as the\nsecond parameter to the constructor with the <code>autoSessionManagement</code> property set to <code>false</code>.\nArrowDB will no longer automatically retrieve and set the session cookie.  You must manually set\nthe ArrowDB instance's <code>sessionCookieString</code> property once you retrieve a cookie string.\nThe cookie string will be available as the <code>cookieString</code> property in the callback's result object\nif the API response returns a session ID.</p>\n\n<p>The example below retrieves and sets the cookie string:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;', {autoSessionManagement: false});\nfunction login(req, res) {\n    var data = {\n        login: req.body.username,\n        password: req.body.password\n    };\n    arrowDBApp.post('/v1/users/login.json', data, function(err, result){\n        if (err) {\n            console.error(\"Login error:\" + (err.message || result.reason));\n        } else {\n            console.log(\"Login successful!\");\n            arrowDBApp.sessionCookieString = result.cookieString;\n        }\n    });\n}\n</code></pre>\n\n<p><strong>Important</strong></p>\n\n<ul>\n<li><p>The ArrowDB Node SDK sets the cookie header in the response object, which must be done <em>before</em>\nsending any response data (for example, by calling the response object's <code>send</code> method). If you\nsend any response data <em>before</em> the API callback function is invoked, the ArrowDB Node SDK will\nthrow an exception when it tries to set the cookie headers, with a message like, \"Can't render\nheaders after they are sent to the client.\"</p></li>\n<li><p>Session information is stored in a cookie named <code>_session_id</code>. You can also manually set this\nsession ID cookie on the client side. For example, if you are calling your Arrow Cloud service from\na Titanium application that uses ArrowDB directly, you can retrieve the active session ID from the\n<a href=\"http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.Cloud-%0Aproperty-sessionId\">Titanium.Cloud.sessionId</a> property, and adding a <code>Set-Cookie</code> header when making a request to the\nArrow Cloud service.</p></li>\n</ul>\n\n\n<h3 id='nodejs-section-manual-session-management'>Manual Session Management</h3>\n\n<p>An ArrowDB user login session is identified by a <code>session_id</code> parameter in the\nrequest or response data. When logging in to a user account or creating a new\nuser, the <code>session_id</code> is returned in the response data of the API calls. It\ncan be retrieved from the response data by using the <code>body.meta.session_id</code> property of the callback's\nresult object. For example:</p>\n\n<pre><code>function loginUser(req, res) {\n    arrowDBApp.usersLogin({\n        login: 'test',\n        password: 'test'\n    }, function(err, result) {\n        console.log('Login session is: ' + result.body.meta.session_id);\n    });\n}\n</code></pre>\n\n<p>To reuse this session for making other API calls, pass it in as part of the\nrequest parameters (<code>session_id: _stored_session_id_</code>). This gives you full control\nof the sessions. You can store the session in any ways and reuse them anytime\n(as long as the session is not expired on the ArrowDB server) later for making API\ncalls. For example:</p>\n\n<pre><code>function createPlace(req, res) {\n    arrowDBApp.placesCreate({\n        name: 'test',\n        city: 'city_name',\n        session_id: '&lt;stored session_id&gt;'\n    }, function(err, result) {\n        console.log('New place created!');\n    });\n}\n</code></pre>\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/nodejs/README.md"}],"html":"<h1 id='sdks-section-arrowdb-sdks'>ArrowDB SDKs</h1>\n\n<p>In addition to the REST APIs, ArrowDB provides several SDKs you can use to integrate ArrowDB into\nyour own native applications.</p>\n\n<ul>\n<li><a href=\"#!/guide/titanium\">Titanium</a>. Titanium applications can easily integrate with ArrowDB using\nthe <code>ti.cloud</code> module, which ships with the Titanium SDK.</li>\n<li><a href=\"#!/guide/android\">Android</a>. Android applications can use the ArrowDB Android SDK to\nintegrate with ArrowDB.</li>\n<li><a href=\"#!/guide/ios\">iOS</a>. iOS applications can the use ArrowDB iOS SDK to integrate with ArrowDB.</li>\n<li><a href=\"#!/guide/nodejs\">Node.js</a>. Node.js applications can the use ArrowDB Node SDK to integrate with ArrowDB.</li>\n</ul>\n\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/sdks/overview/README.md"},{"name":"customfields","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/customfields","title":"Custom Objects and Fields","description":"Using custom fields and custom objects.","html":"<h1 id='customfields-section-custom-objects-amp-fields'>Custom Objects &amp; Fields</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/customfields-section-custom-objects-and-custom-fields'>Custom Objects and Custom Fields</a><li><a href='#!/guide/customfields-section-creating-custom-objects'>Creating Custom Objects</a><li><a href='#!/guide/customfields-section-adding-custom-fields-to-predefined-objects'>Adding Custom Fields to Predefined Objects</a><li><a href='#!/guide/customfields-section-supported-data-types'>Supported Data Types</a><li><a href='#!/guide/customfields-section-indexing-size-limit-for-custom-objects-and-fields'>Indexing Size Limit for Custom Objects and Fields</a><li><a href='#!/guide/customfields-section-geographic-coordinates-in-custom-fields'>Geographic Coordinates in Custom Fields</a><li><a href='#!/guide/customfields-section-remove-a-field'>Remove a Field</a><li><a href='#!/guide/customfields-section-querying-custom-fields'>Querying Custom Fields</a><li><a href='#!/guide/customfields-section-availability'>Availability</a><li><a href='#!/guide/customfields-section-ios'>iOS</a></ul>\n</div>\n\n<h2 id='customfields-section-custom-objects-and-custom-fields'>Custom Objects and Custom Fields</h2>\n\n<p>ArrowDB provides many types of commonly used predefined\nobjects such as <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> and <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>. However, you may want to create\ncustom data types, or store custom fields on predefined ArrowDB objects. Custom Objects and\nCustom Data Fields provide your application with this ability.</p>\n\n<h2 id='customfields-section-creating-custom-objects'>Creating Custom Objects</h2>\n\n<p>If you would like to create custom objects with a custom object type, please\nrefer to <a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a> to get a list of API calls that can be used to create and access\ncustom objects.</p>\n\n<h2 id='customfields-section-adding-custom-fields-to-predefined-objects'>Adding Custom Fields to Predefined Objects</h2>\n\n<p>If you would like to store additional custom data into any predefined\nArrowDB objects, you can simply pass in JSON encoded\ncustom_fields. Any number of custom fields can be specified for an instance of\na predefined object.</p>\n\n<p>For example, if you are using the Users API and want to store the age and\nfavorite color of each user, simply include JSON encoding of custom_fields</p>\n\n<pre><code>custom_fields='{\n  \"age\": 23,\n  \"favorite_color\": \"blue\"\n}'\n</code></pre>\n\n<p>For example, to associate the above custom fields in user create</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X POST --data-urlencode \"email=john.smith@company.com\" --data-urlencode \"role=teacher\" --data-urlencode \"first_name=John\" --data-urlencode \"last_name=Smith\" --data-urlencode \"password=pass\" --data-urlencode \"password_confirmation=pass\" --data-urlencode 'custom_fields={\"age\":23, \"favorite_color\":\"blue\"}' https://api.cloud.appcelerator.com/v1/users/create.json?key=&lt;YOUR APP APP KEY&gt;\n{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"createUser\",\n    \"session_id\": \"xdqCplQqcXBq8WW1ir9nzq5U4nE\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"4ec5907bd9ca72020c000005\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"created_at\": \"2011-11-17T22:53:48+0000\",\n        \"updated_at\": \"2011-11-17T22:53:48+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"role\": \"teacher\",\n        \"email\": \"john.smith@company.com\",\n        \"custom_fields\": {\n          \"age\": 23,\n          \"favorite_color\": \"blue\"\n        },\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Custom Data are returned in the <code>custom_fields</code> JSON response field in the\ntype that was specified. Attempting to define custom fields using invalid\ntypes or an incorrect naming convention will be silently ignored.</p>\n\n<h2 id='customfields-section-supported-data-types'>Supported Data Types</h2>\n\n<table class=\"doc-table\">\n  <tr><th>Type</th><th>Example</th>\n  <tr>\n    <td>Boolean&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td>true or false</td>\n  </tr>\n  <tr>\n    <td>String&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td>\"blue\"</td>\n  </tr>\n  <tr>\n    <td>Number&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td>23 or 1.234</td>\n  </tr>\n  <tr>\n    <td>Date&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td>\"2011-11-02 17:07:37 -0700\". If a string value matches date format \"yyyy-mm-dd hh:mm:ss+zzzz\" or \"yyyy-mm-ddThh:mm:ss+zzzz\", it will be converted to Date type on the Arrow backend</td>\n  </tr>\n</tr></table>\n\n\n<p>You could also store more complex data types such as Array and Hash. Hash and Array can be embedded into each other. Currently, data stored inside a Hash is not queryable.</p>\n\n<table class=\"doc-table\">\n<tr><th>Type</th><th>Example</th>\n<tr>\n  <td>Hash&nbsp;&nbsp;</td>\n  <td>{\"age\":23,\"scores\":{\"math\":90, \"physics\":100}, \"my_favorite_colors\":[\"blue\",\"red\"]}</td>\n</tr>\n<tr>\n  <td>Array&nbsp;&nbsp;</td>\n  <td>[\"nissan\", \"honda\"] or [2006, 2008], [{\"age\":28}, {\"color\":\"blue\"}]</td>\n</tr>\n</tr></table>\n\n\n<h2 id='customfields-section-indexing-size-limit-for-custom-objects-and-fields'>Indexing Size Limit for Custom Objects and Fields</h2>\n\n<p>To support efficient data query operations, ArrowDB indexes the\nfield names and values of each custom object, or custom fields you add to a predefined object. For example,\nsuppose you create a custom object, <code>cars</code>, with the fields <code>make</code> and <code>model</code>. ArrowDB will create\ntwo index entries in the MongoDB database, one for each field. The total size of an index entry,\nincluding meta-data added by ArrowDB, must be less than <strong>1024 bytes</strong> (1KB).</p>\n\n<p>If a custom field's name or value exceeds this size, then no index entry for that field is created.\nConsequently, if you run a custom <a href=\"#!/guide/search_query-section-query-overview\">query</a> against that field,\nnothing will be returned.</p>\n\n<p>For instance, in the previous example, suppose the string value assigned to <code>model</code>\nwas greater than 1KB. If you queried the <code>cars</code> collection for objects whose <code>model</code>\nmatched that value, no objects would be returned:</p>\n\n<pre><code>Cloud.Objects.query({\n    classname: 'cars',\n    where: {\n        make: {\n          $regex:\"^That Really Long Model Name*\"\n        }\n    }\n}, function (e) {\n      if (e.success) {\n        console.log(e.cars.length); // 0\n      }\n});\n</code></pre>\n\n<h2 id='customfields-section-geographic-coordinates-in-custom-fields'>Geographic Coordinates in Custom Fields</h2>\n\n<p>To enable geographical search, there is a predefined custom field,\n<code>coordinates</code>, for optionally storing geographic coordinates. The <code>coordinates</code> field can\nstore a single location as an array ( <code>[longitude, latitude]</code> ) or multiple\nlocations as an array of arrays ( <code>[[longitude1,latitude1], [longitude2, latitude2]]</code> ). So for the\nabove example, to store location information about the user, we might have:</p>\n\n<pre><code>custom_fields = '{ \"color\": \"blue\",\n    \"age\": 23,\n    \"coordinates\": [-122.1, 37.1] \n}'\n</code></pre>\n\n<h2 id='customfields-section-remove-a-field'>Remove a Field</h2>\n\n<p>If you wish to remove a custom field during update, simply set the field value\nto null.</p>\n\n<pre><code>{\n  \"age\": null\n}\n</code></pre>\n\n<h2 id='customfields-section-querying-custom-fields'>Querying Custom Fields</h2>\n\n<p>Data stored in custom fields other than Array and Hash can be queried together\nwith predefined fields. Please refer to <a href=\"#!/guide/search_query-section-query-overview\">Query</a>\nfor more information. If you define a\ncustom field name that is the same as one of predefined fields, you will be\nable to store and retrieve it but you won't be able to query on it since the\nquery action would be performed on the predefined field instead. For example,\n<a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> has a predefined field called <code>first_name</code>,\nif you define a custom field also called <code>first_name</code>, when you try to query\nfirst_name. it will only query against the predefined <code>first_name</code> field.</p>\n\n<h2 id='customfields-section-availability'>Availability</h2>\n\n<p>The following ArrowDB objects allow you to add one or more\nextra data fields during <code>create</code> and <code>update</code> actions:</p>\n\n<ul>\n<li><a href=\"#!/api/Chats-method-create\" rel=\"Chats-method-create\" class=\"docClass\">Chats.create</a></li>\n<li><a href=\"#!/api/Checkins-method-create\" rel=\"Checkins-method-create\" class=\"docClass\">Checkins.create</a></li>\n<li><a href=\"#!/api/PhotoCollections-method-create\" rel=\"PhotoCollections-method-create\" class=\"docClass\">PhotoCollections.create</a> and <a href=\"#!/api/PhotoCollections-method-update\" rel=\"PhotoCollections-method-update\" class=\"docClass\">update</a></li>\n<li><a href=\"#!/api/Events-method-create\" rel=\"Events-method-create\" class=\"docClass\">Events.create</a> and <a href=\"#!/api/Events-method-update\" rel=\"Events-method-update\" class=\"docClass\">update</a></li>\n<li><a href=\"#!/api/Files-method-create\" rel=\"Files-method-create\" class=\"docClass\">Files.create</a> and <a href=\"#!/api/Files-method-update\" rel=\"Files-method-update\" class=\"docClass\">update</a></li>\n<li><a href=\"#!/api/Messages-method-create\" rel=\"Messages-method-create\" class=\"docClass\">Messages.create</a></li>\n<li><a href=\"#!/api/Photos-method-create\" rel=\"Photos-method-create\" class=\"docClass\">Photos.create</a> and <a href=\"#!/api/Photos-method-update\" rel=\"Photos-method-update\" class=\"docClass\">update</a></li>\n<li><a href=\"#!/api/Places-method-create\" rel=\"Places-method-create\" class=\"docClass\">Places.create</a> and <a href=\"#!/api/Places-method-update\" rel=\"Places-method-update\" class=\"docClass\">update</a></li>\n<li><a href=\"#!/api/Posts-method-create\" rel=\"Posts-method-create\" class=\"docClass\">Posts.create</a> and <a href=\"#!/api/Posts-method-update\" rel=\"Posts-method-update\" class=\"docClass\">update</a></li>\n<li><a href=\"#!/api/Reviews-method-create\" rel=\"Reviews-method-create\" class=\"docClass\">Reviews.create</a> and <a href=\"#!/api/Reviews-method-update\" rel=\"Reviews-method-update\" class=\"docClass\">update</a></li>\n<li><a href=\"#!/api/Statuses-method-create\" rel=\"Statuses-method-create\" class=\"docClass\">Statuses.create</a></li>\n<li><a href=\"#!/api/Users-method-create\" rel=\"Users-method-create\" class=\"docClass\">Users.create</a> and <a href=\"#!/api/Users-method-update\" rel=\"Users-method-update\" class=\"docClass\">update</a></li>\n</ul>\n\n\n<h2 id='customfields-section-ios'>iOS</h2>\n\n<p>If you are using the <a href=\"#!/guide/ios\">iOS APS SDK</a>, to create an object's custom fields use a\nNSDictionary to construct the custom data you want to associate with the object.</p>\n\n<p>The following table lists the data types you can define with the iOS APS SDK:</p>\n\n<table class=\"doc-table\">\n    <tr><th>Type</th><th>Example</th><th>iOS Class</th>\n    <tr>\n      <td>String&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>\"blue\"&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>NString</td>\n    </tr>\n    <tr>\n      <td>Number&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>123 or 1.234</td>\n      <td>[NSNumber numberWithInt:] or [NSNumber numberWithDouble:]&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    </tr>\n    <tr>\n      <td>Boolean&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>true or false</td>\n      <td>[NSNumber numberWithBool:]&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    </tr>\n    <tr>\n      <td>Date&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>\"2011-11-02 17:07:37 -0700\"&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>NSString</td>\n    </tr>\n    <tr>\n      <td>Hash&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>{\"age\": 23, \"color\": \"blue\"}&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>NSDictionary</td>\n    </tr>\n    <tr>\n      <td>Array&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>[123, 234] or [\"mike\", \"joe\"]&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>NSArray</td>\n    </tr>\n    <tr>\n      <td>Geo coordinates&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>[lng, lat], e.g. [122.33, 37.48]&nbsp;&nbsp;&nbsp;&nbsp;</td>\n      <td>NSArray with two NSNumber elements</td>\n    </tr>\n</tr></table>\n\n\n<p>For example, if you want to create a user with custom fields, such as\neye_color, enrolled_at, etc., you can put all the custom fields in a\nNSDictionary.</p>\n\n<pre><code>NSMutableDictionary *customFields = [NSMutableDictionary dictionary];\n[customFields setObject:@\"brown\" forKey:@\"eye_color\"]; // set a string\n[customFields setObject:@\"2011-11-02 17:07:37 -0700\" forKey:@\"enrolled_at\"]; // set a date\n[customFields setObject:[NSNumber numberWithInt:23] forKey:@\"age\"]; // set a number\n[customFields setObject:[NSNumber numberWithBool:true] forKey:@\"student\"]; // set a boolean\n[customFields setObject:[NSArray arrayWithObjects:@\"hiking\", @\"reading\", nil] forKey:@\"hobby\"]; // set an array\n[customFields setObject:[NSDictionary dictionaryWithObjectsAndKeys:@\"cookies\", @\"favorite\", nil] forKey:@\"others\"];\n\nNSMutableDictionary *params = [NSMutableDictionary dictionary];\n[params setObject:@\"john@usc.com\" forKey:@\"email\"];\n[params setObject:@\"John\" forKey:@\"first_name\"];\n[params setObject:@\"Woo\" forKey:@\"last_name\"];\n[params setObject:@\"pass\" forKey:@\"password\"];\n[params setObject:@\"pass\" forKey:@\"password_confirmation\"];\n[params setObject:customFields forKey:@\"custom_fields\"]; // add custom fields\n\n[APSUsers create:params withBlock:^(APSResponse *e){\n    if (e.success) {\n        NSArray *users = [e.response valueForKey:@\"users\"];\n        if ([users count] == 1) {\n            NSDictionary *user = users[0];\n            NSLog(@\"Successfully registered user %@\", [user valueForKey:@\"email\"]);\n            NSLog(@\"custom fields are %@\", [user valueForKey:@\"custom_fields\"]);\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n</code></pre>\n\n<p>If you would like to use your own custom data type, you need to provide a class method to JSON encode the\ndata of your object.</p>\n\n<pre><code>@interface MyObject : NSObject\n  @property NSString *color;\n  @property NSNumber *mileage;\n@end\n\n@implementation MyObject\n/*!\n Converts the object to an encodable JSON object.\n @return Object encodable as JSON, such as a NSDictionary or NSArray.\n */\n- (id)toJSON\n{\n    return [NSDictionary dictionaryWithObjectsAndKeys:self.color, @\"color\", self.mileage, @\"mileage\", nil];\n}\n@end\n\nMyObject *object = [[MyObject alloc] init];\nobject.color = @\"green\";\nobject.mileage = [NSNumber numberWithDouble:23.3];\nNSMutableDictionary *customFields = [NSMutableDictionary dictionary];\n[customFields setObject:[object toJSON] forKey:@\"MyObject\"];\n</code></pre>\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/customfields/README.md"},{"name":"relationalfields","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/relationalfields","title":"Relational Fields","description":"Linking objects with relational fields.","html":"<h1 id='relationalfields-section-relational-fields'>Relational Fields</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/relationalfields-section-create-a-relational-field'>Create a Relational Field</a><ul><li><a href='#!/guide/relationalfields-section-show-a-relational-field'>Show a Relational Field</a><li><a href='#!/guide/relationalfields-section-query-a-relational-field'>Query a Relational Field</a><li><a href='#!/guide/relationalfields-section-remove-a-relational-field'>Remove a Relational Field</a></ul>\n</div>\n\n<p>Relational Fields provide a simple way for users to define relations between\nany ArrowDB objects.</p>\n\n<h2 id='relationalfields-section-create-a-relational-field'>Create a Relational Field</h2>\n\n<p>To add or update a relation, you must provide an ArrowDB object ID and an ArrowDB\nobject type. These values together identify a unique ArrowDB object. The relation\nis specified using one of these formats:</p>\n\n<pre><code>[ACS_&lt;TYPENAME&gt;]&lt;fieldname_id&gt;\n[ACS_&lt;TYPENAME&gt;]&lt;fieldname_ids&gt;\n[CUSTOM_&lt;TYPENAME&gt;]&lt;fieldname_id&gt;\n[CUSTOM_&lt;TYPENAME&gt;]&lt;fieldname_ids&gt;\n</code></pre>\n\n<p>Where <em>TYPENAME</em> indicates ArrowDB type or ArrowDB custom object type of the object\npointed to. For example, ArrowDB_User represents an ArrowDB User object, ArrowDB_Photo\nrepresents an ArrowDB Photo object, and CUSTOM_car represents an ArrowDB custom object\nof class <code>car</code>.</p>\n\n<p>To create the relation, create a custom field using one of the relational\nfield name formats shown above. For example, in the following custom fields,\nwe add two relations :</p>\n\n<pre><code>Custom_fields = {\n    \"[ACS_User]owner_id\":\"4d6e77386f70950c89000001\",\n    \"[CUSTOM_car]mycar_id\":\"4d51d4186f70952d4c000006\"\n}\n</code></pre>\n\n<p>For example, when creating a custom <code>car</code> object, we can specify an owner and\npicture for the car:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -F \"key=sesObkV0qTaPSEwcHc6DGcR21EWN9HT0\" -F \"id=506e4c775554f7470b00001d\" -F \"fields={\"[ACS_User]owner_id\":\"506e4c735554f7470b000003\", \"[ACS_Photo]picture_id\":\"506e4c755554f7470b00000a\"}\" \"https://api.cloud.appcelerator.com/v1/objects/car/create.json?key=\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updateCustomObject\"\n  },\n  \"response\": {\n    \"car\": [\n      {\n        \"[ACS_Photo]picture_id\": [\n          {\n            \"id\": \"506e4c755554f7470b00000a\",\n            \"filename\": \"photo.jpg\",\n            \"size\": 584344,\n            \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n            \"created_at\": \"2012-10-05T02:56:53+0000\",\n            \"updated_at\": \"2012-10-05T02:56:53+0000\",\n            \"processed\": false,\n            \"user\": {\n              \"id\": \"506e4c735554f7470b000005\",\n              \"first_name\": \"Frank\",\n              \"last_name\": \"Jobs\",\n              \"created_at\": \"2012-10-05T02:56:51+0000\",\n              \"updated_at\": \"2012-10-05T02:56:55+0000\",\n              \"external_accounts\": [\n\n              ],\n              \"confirmed_at\": \"2012-10-05T02:56:51+0000\",\n              \"email\": \"frank@guy.com\",\n              \"admin\": \"false\"\n            },\n            \"content_type\": \"image/jpeg\",\n            \"likes_count\": 1\n          }\n        ],\n        \"color\": \"blue\",\n        \"model\": \"nissan\",\n        \"mileage\": 1000,\n        \"purchased_date\": \"2011-11-01 17:08:36 -0700\",\n        \"[ACS_User]owner_id\": [\n          {\n            \"id\": \"506e4c735554f7470b000003\",\n            \"first_name\": \"Alice\",\n            \"last_name\": \"Gal\",\n            \"created_at\": \"2012-10-05T02:56:51+0000\",\n            \"updated_at\": \"2012-10-05T02:56:51+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"confirmed_at\": \"2012-10-05T02:56:51+0000\",\n            \"username\": \"alice\",\n            \"email\": \"alice@gal.com\",\n            \"admin\": \"false\"\n          }\n        ],\n        \"id\": \"506e4c775554f7470b00001d\",\n        \"created_at\": \"2012-10-05T02:56:55+0000\",\n        \"updated_at\": \"2012-10-05T02:56:56+0000\",\n        \"user\": {\n          \"id\": \"506e4c735554f7470b000005\",\n          \"first_name\": \"Frank\",\n          \"last_name\": \"Jobs\",\n          \"created_at\": \"2012-10-05T02:56:51+0000\",\n          \"updated_at\": \"2012-10-05T02:56:55+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2012-10-05T02:56:51+0000\",\n          \"email\": \"frank@guy.com\",\n          \"admin\": \"false\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h3 id='relationalfields-section-show-a-relational-field'>Show a Relational Field</h3>\n\n<p>When you show an ArrowDB object, if the ArrowDB object has a relation to another ArrowDB\nobject, ArrowDB includes the referenced ArrowDB object. For example, suppose a Custom object\nof type <code>car</code> has two relations: an owner and a picture. When you call <code>show</code> on the object,\nthe user and photo object are included in the response. Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createObject\"\n  },\n  \"response\": {\n    \"car\": [\n      {\n        \"color\": \"blue\",\n        \"make\": \"nissan\",\n        \"purchased_at\": \"2011-11-03T00:07:37+0000\",\n        \"year\": 2005,\n        \"used\": false,\n        \"coordinates\": [\n          [\n            -122.1,\n            37.1\n          ]\n        ],\n        “[ACS_User]owner_id” : {\n            \"id\":\"4d6e77386f70950c89000001\",\n            \"first_name\":\"John\",\n            \"last_name\":\"Smith\",\n            \"role\": \"teacher\",\n            \"created_at\":\"2011-03-02T16:58:32+0000\",\n            \"updated_at\":\"2011-03-02T16:58:32+0000\",\n            \"facebook_authorized\":false,\n            \"email\":\"john.smith@company.com\",\n            \"photo\": {\n                \"id\":\"4d882896d0afbe0a3600000d\",\n                \"filename\":\"photo.jpg\",\n                \"size\":584344,\n                \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n                \"created_at\":\"2011-03-22T04:41:58+0000\",\n                \"updated_at\":\"2011-03-22T04:42:07+0000\",\n                \"processed\":false\n            },\n            \"custom_fields\": {\n                \"age\":28,\n                \"favorite_color\":\"blue\"\n            }\n        },\n        “[ACS_Photo]picture_id”:{\n            \"id\":\"4d51d4186f70952d4c000006\",\n            \"filename\":\"photo.jpg\",\n            \"size\":584344,\n            \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n            \"created_at\":\"2011-02-08T23:39:04+0000\",\n            \"updated_at\":\"2011-02-08T23:39:04+0000\",\n            \"processed\":false\n        },\n        \"id\": \"4ec42de1d9ca72c50700000d\",\n        \"created_at\": \"2011-11-16T21:40:49+0000\",\n        \"updated_at\": \"2011-11-16T21:40:49+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h3 id='relationalfields-section-query-a-relational-field'>Query a Relational Field</h3>\n\n<p>A relation points to an ArrowDB object, so to query a relation, you must first\nget the ArrowDB object pointed by the relation. For example, if you want to\nquery cars whose owner is “John Smith”, you first need to find the <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>\nobject whose full name is “John Smith”:</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where={\"first_name\":\"John\",\"last_name\":”Smith”}' --data-urlencode 'order=created_at' \"https://api.cloud.appcelerator.com/v1/users/query.json?key={YOUR APP APP KEY}\"\n</code></pre>\n\n<p>If the user exists, use the user ID to query the custom objects collection\nfor cars that have a <code>[ACS_User]owner_id</code> property with the specified value.</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where= {\"[ACS_User]owner_id\":\"the user’s object id\"}' --data-urlencode 'order=-purchased_at' \"https://api.cloud.appcelerator.com/v1/objects/car/query.json?key={YOUR APP APP KEY}\"\n</code></pre>\n\n<h3 id='relationalfields-section-remove-a-relational-field'>Remove a Relational Field</h3>\n\n<p>To remove a relational field from an ArrowDB object, set the field's value to null. For\nexample, remove to picture from a Custom object:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT --data-urlencode 'fields={“[ACS_Photo]picture_id”:null}' \"https://api.cloud.appcelerator.com/v1/objects/car/update.json?key={YOUR APP APP KEY}\"\n</code></pre>\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/relationalfields/README.md"},{"name":"search_query","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/search_query","title":"Search and Query Operations","description":"Searching for ArrowDB objects.","html":"<h1 id='search_query-section-search-and-query-apis'>Search and Query APIs</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/search_query-section-query-api-overview'>Query API Overview</a><ul><li><a href='#!/guide/search_query-section-query-api-availability'>Query API Availability</a><li><a href='#!/guide/search_query-section-query-parameters'>Query parameters</a><ul><li><a href='#!/guide/search_query-section-count'>count</a><li><a href='#!/guide/search_query-section-page'>page</a><li><a href='#!/guide/search_query-section-per_page'>per_page</a><li><a href='#!/guide/search_query-section-limit'>limit</a><li><a href='#!/guide/search_query-section-id-and-_id'>id and _id</a><li><a href='#!/guide/search_query-section-new_pagination'>new_pagination</a><li><a href='#!/guide/search_query-section-skip'>skip</a><li><a href='#!/guide/search_query-section-where'>where</a><ul><li><a href='#!/guide/search_query-section-geographic-coordinates'>Geographic coordinates</a></ul><li><a href='#!/guide/search_query-section-order'>order</a><li><a href='#!/guide/search_query-section-sel'>sel</a><li><a href='#!/guide/search_query-section-unsel'>unsel</a></ul></ul><li><a href='#!/guide/search_query-section-query-pagination'>Query Pagination</a><ul><li><a href='#!/guide/search_query-section-range-based-query-pagination-examples'>Range-based Query Pagination Examples</a><ul><li><a href='#!/guide/search_query-section-query-on-custom-field-results-in-ascending-order'>Query on Custom Field, Results in Ascending Order</a><li><a href='#!/guide/search_query-section-query-on-custom-field-results-in-descending-order'>Query on Custom Field, Results in Descending Order</a><li><a href='#!/guide/search_query-section-query-for-next-page-of-results-results-in-ascending-order'>Query for Next Page of Results, Results in Ascending Order</a><li><a href='#!/guide/search_query-section-query-for-previous-page-of-results'>Query for Previous Page of Results</a></ul></ul><li><a href='#!/guide/search_query-section-search-api-overview'>Search API Overview</a><ul><li><a href='#!/guide/search_query-section-search-api-parameters'>Search API Parameters</a><ul><li><a href='#!/guide/search_query-section-page'>page</a><li><a href='#!/guide/search_query-section-per_page'>per_page</a><li><a href='#!/guide/search_query-section-q'>q</a></ul><li><a href='#!/guide/search_query-section-search-api-availability'>Search API Availability</a></ul>\n</div>\n\n<p>ArrowDB provides APIs for querying and searching ArrowDB objects.\nThe query APIs allow you to perform custom database-style searches, while search APIs perform a full text search using the ArrowDB search engine.</p>\n\n<p class=\"note\">The search API is deprecated since Release 1.3.0. Applications created before Arrow\nCloud Release 1.3.0 can continue to use the deprecated search API, but new applications will need to use\nthe query API with the <code>$text</code> query operator.</p>\n\n\n<h2 id='search_query-section-query-api-overview'>Query API Overview</h2>\n\n<p>The query API provides an interface for applying database-style query constraints on predefined objects\nand <a href=\"#!/guide/customfields\">custom fields</a>.</p>\n\n<p>When no query parameters are provided, all objects of the specified type are returned with\ndefault pagination. You can control pagination of queries with the <code>skip</code> and <code>limit</code> parameters, or by\nusing a custom <code>where</code> clause. See <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>\nfor more information.</p>\n\n<p>You can also control the sort order of query results using the <code>order</code> parameter,\nand specify the fields you want to include (or exclude) from results using the <code>sel</code> and\n<code>unsel</code> query parameters.</p>\n\n<h3 id='search_query-section-query-api-availability'>Query API Availability</h3>\n\n<p>The following ArrowDB object provide query methods: <a href=\"#!/api/ACLs-method-query\" rel=\"ACLs-method-query\" class=\"docClass\">ACLs</a>, <a href=\"#!/api/Chats-method-query\" rel=\"Chats-method-query\" class=\"docClass\">Chats</a>,\n<a href=\"#!/api/Checkins-method-query\" rel=\"Checkins-method-query\" class=\"docClass\">Checkins</a>, <a href=\"#!/api/CustomObjects-method-query\" rel=\"CustomObjects-method-query\" class=\"docClass\">CustomObjects</a>, <a href=\"#!/api/Events-method-query\" rel=\"Events-method-query\" class=\"docClass\">Events</a>,\n<a href=\"#!/api/Files-method-query\" rel=\"Files-method-query\" class=\"docClass\">Files</a>, <a href=\"#!/api/GeoFences-method-query\" rel=\"GeoFences-method-query\" class=\"docClass\">GeoFences</a>,\n<a href=\"#!/api/KeyValues-method-query\" rel=\"KeyValues-method-query\" class=\"docClass\">KeyValues</a>, <a href=\"#!/api/Likes-method-query\" rel=\"Likes-method-query\" class=\"docClass\">Likes</a>, <a href=\"#!/api/Logs\" rel=\"Logs\" class=\"docClass\">Logs</a>,\n<a href=\"#!/api/Messages-method-query\" rel=\"Messages-method-query\" class=\"docClass\">Messages</a>, <a href=\"#!/api/Photos-method-query\" rel=\"Photos-method-query\" class=\"docClass\">Photos</a>, <a href=\"#!/api/Places-method-query\" rel=\"Places-method-query\" class=\"docClass\">Places</a>,\n<a href=\"#!/api/Posts-method-query\" rel=\"Posts-method-query\" class=\"docClass\">Posts</a>, <a href=\"#!/api/PushNotifications-method-query\" rel=\"PushNotifications-method-query\" class=\"docClass\">PushNotifications</a>,\n<a href=\"#!/api/PushSchedules-method-query\" rel=\"PushSchedules-method-query\" class=\"docClass\">PushSchedules</a>, <a href=\"#!/api/Reviews-method-query\" rel=\"Reviews-method-query\" class=\"docClass\">Reviews</a>, <a href=\"#!/api/Statuses-method-query\" rel=\"Statuses-method-query\" class=\"docClass\">Statuses</a>,\n and <a href=\"#!/api/Users-method-query\" rel=\"Users-method-query\" class=\"docClass\">Users</a>.</p>\n\n<p>For security reasons, when querying for <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> the <a href=\"#!/api/Users-property-email\" rel=\"Users-property-email\" class=\"docClass\">email</a> field is not returned\nin the User object unless you have <a href=\"#!/guide/admin_access\">admin access</a>.</p>\n\n<h3 id='search_query-section-query-parameters'>Query parameters</h3>\n\n<p>The following parameters are available for query operations:</p>\n\n<ul>\n<li><code>count</code></li>\n<li><code>limit</code> and <code>skip</code></li>\n<li><code>id</code> and <code>_id</code></li>\n<li><code>where</code></li>\n<li><code>order</code></li>\n<li><code>sel</code></li>\n<li><code>unsel</code></li>\n<li><code>page</code></li>\n<li><code>per_page</code></li>\n</ul>\n\n\n<h4 id='search_query-section-count'>count</h4>\n\n<p>If the query includes <code>count=true</code>, the response's meta object contains a <code>count</code> field\nwhose value is the total number of objects that matched the query criteria.\nIf the query matches more than 5000 objects, the count field contains the value \"5000+\". For more information, see\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<h4 id='search_query-section-page'>page</h4>\n\n<p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong> \nquery parameters.\n</p>\n\n\n<h4 id='search_query-section-per_page'>per_page</h4>\n\n<p class=\"note\">\nStarting in ArrowDB 1.1.5, page and per_page are no longer supported in query operations. \nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n\n<h4 id='search_query-section-limit'>limit</h4>\n\n<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n\n<h4 id='search_query-section-id-and-_id'>id and _id</h4>\n\n<p>query by id or _id:</p>\n\n<pre><code>~ curl -d 'where={\"id\":\"54517c49dda09594270002da\"}' -X GET \"localhost:8082/v1/users/query.json?key=l1J36VuGo2eFMJ\n~ curl -d 'where={\"id\":\"54517c49dda09594270002da\"}' -X GET \"localhost:8082/v1/users/query.json?key=l1J36VuGo2eFMJKELNXdxAq8Z4MQIbYr&amp;pretty_json=true\"\n{\n    \"meta\": {\n        \"code\": 200,\n        \"status\": \"ok\",\n        \"method_name\": \"queryUsers\"\n    },\n    \"response\": {\n        \"users\": [{\n            \"id\": \"54517c49dda09594270002da\",\n            \"created_at\": \"2014-10-29T23:46:17+0000\",\n            \"updated_at\": \"2014-10-29T23:46:17+0000\",\n            \"external_accounts\": [],\n            \"confirmed_at\": \"2014-10-29T23:46:17+0000\",\n            \"username\": \"hmm\",\n            \"email\": \"\",\n            \"admin\": \"false\",\n            \"stats\": {\n                \"photos\": {\n                    \"total_count\": 0\n                },\n                \"storage\": {\n                    \"used\": 0\n                }\n            },\n            \"custom_fields\": {}\n        }]\n    }\n}\n\n~ curl -d 'where={\"_id\":\"54517c49dda09594270002da\"}' -X GET \"localhost:8082/v1/users/query.json?key=l1J36VuGo2eFMJKELNXdxAq8Z4MQIbYr&amp;pretty_json=true\"\n{\n    \"meta\": {\n        \"code\": 200,\n        \"status\": \"ok\",\n        \"method_name\": \"queryUsers\"\n    },\n    \"response\": {\n        \"users\": [{\n            \"id\": \"54517c49dda09594270002da\",\n            \"created_at\": \"2014-10-29T23:46:17+0000\",\n            \"updated_at\": \"2014-10-29T23:46:17+0000\",\n            \"external_accounts\": [],\n            \"confirmed_at\": \"2014-10-29T23:46:17+0000\",\n            \"username\": \"hmm\",\n            \"email\": \"\",\n            \"admin\": \"false\",\n            \"stats\": {\n                \"photos\": {\n                    \"total_count\": 0\n                },\n                \"storage\": {\n                    \"used\": 0\n                }\n            },\n            \"custom_fields\": {}\n        }]\n    }\n}\n</code></pre>\n\n<p>Query multiple objects by using $in:</p>\n\n<pre><code>~ curl -d 'where={\"_id\":{\"$in\":[\"54517c49dda09594270002da\",\"54517c33dda09594270002d5\"]}}' -X GET \"localhost:8082/v1/users/query.json?key=l1J36VuGo2eFMJKELNXdxAq8Z4MQIbYr&amp;pretty_json=true\"\n{\n    \"meta\": {\n        \"code\": 200,\n        \"status\": \"ok\",\n        \"method_name\": \"queryUsers\"\n    },\n    \"response\": {\n        \"users\": [{\n            \"id\": \"54517c49dda09594270002da\",\n            \"created_at\": \"2014-10-29T23:46:17+0000\",\n            \"updated_at\": \"2014-10-29T23:46:17+0000\",\n            \"external_accounts\": [],\n            \"confirmed_at\": \"2014-10-29T23:46:17+0000\",\n            \"username\": \"hmm\",\n            \"email\": \"\",\n            \"admin\": \"false\",\n            \"stats\": {\n                \"photos\": {\n                    \"total_count\": 0\n                },\n                \"storage\": {\n                    \"used\": 0\n                }\n            },\n            \"custom_fields\": {}\n        }, {\n            \"id\": \"54517c33dda09594270002d5\",\n            \"created_at\": \"2014-10-29T23:45:55+0000\",\n            \"updated_at\": \"2014-10-29T23:45:55+0000\",\n            \"external_accounts\": [],\n            \"confirmed_at\": \"2014-10-29T23:45:55+0000\",\n            \"username\": \"test\",\n            \"email\": \"\",\n            \"admin\": \"false\",\n            \"stats\": {\n                \"photos\": {\n                    \"total_count\": 0\n                },\n                \"storage\": {\n                    \"used\": 0\n                }\n            },\n            \"custom_fields\": {}\n        }]\n    }\n}\n</code></pre>\n\n<h4 id='search_query-section-new_pagination'>new_pagination</h4>\n\n<p>When <code>new_pagination=true</code> is included in a query, the number of records evaluated in the database is limited to 5000.</p>\n\n<p>By default, ArrowDB puts no limit on the number of records that are evaluated\nin the database. This means, for example, that if you execute an open-ended query for all ArrowDB objects of some type, and apply a sort and filter on the results, all records in the database are evaluated, sorted and filtered in memory.</p>\n\n<p>For applications that have relatively small numbers of total\nrecords (&lt; 5000) this operation can by completed efficiently with no\nnoticeable impact on your application's performance. However, if a table\nhas a very large number (>= 1 million) records these kinds of operations are\nvery inefficient, and your users will notice a performance hit.</p>\n\n<h4 id='search_query-section-skip'>skip</h4>\n\n<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n\n<h4 id='search_query-section-where'>where</h4>\n\n<p>Constrains values for fields. The value should be encoded JSON. Each value in the search query needs\nto be less that 1024 bytes.  If the value is larger than 1024 bytes, the query does not return any\nresults.</p>\n\n<p>Each type of ArrowDB object has a set of predefined fields that can be queried with the <code>where</code> operator.\nSee each object's individual <code>query</code> method for details.</p>\n\n<p>In addition, you can query the <a href=\"#!/guide/customfields\">custom fields</a> on any object. Note, however,\nthat you can only query simple values, such as Strings, Dates, Numbers, or Booleans.\nIf a custom field takes an array or object as a value, you can't query any of the values stored inside the array or object.</p>\n\n<p>For more information, see <a href=\"#!/guide/customfields-section-supported-data-types\">Supported Data Types</a>.</p>\n\n<p>Currently, ArrowDB does not support case insensitive query. To perform case insensitive query\non a field, save an additional normalized copy of the original field and perform the query on the\nnormalized field instead.</p>\n\n<p>To perform an exact match on a field, for example, to  search for users with <code>first_name</code>\nmatching \"joe\", use:</p>\n\n<pre><code>where={\"first_name\": \"joe\"}\n</code></pre>\n\n<p>You can add more search criteria by adding them together. For example, to search for\nusers with <code>first_name</code> matching \"joe\", <code>favorite_color</code> matching \"blue\" and <code>age</code> of\n28, use the following query:</p>\n\n<pre><code>where={\"age\": 28, \"favorite_color\": \"blue\", \"first_name\" : \"joe\"}\n</code></pre>\n\n<p>For non-exact matches, <code>where</code> supports these options:</p>\n\n<table class=\"doc-table\">\n    <tr>\n        <th>Operator</th><th>Summary</th>\n    </tr>\n    <tr>\n        <td><code>$lt</code></td>\n        <td>Less than</td>\n    </tr>\n    <tr>\n        <td><code>$lte</code></td>\n        <td>Less than or equal to</td>\n     </tr>\n    <tr>\n        <td><code>$gt</code></td>\n        <td>Greater than</td>\n     </tr>\n    <tr>\n        <td><code>$gte</code></td>\n        <td>Greater than or equal to</td>\n     </tr>\n    <tr>\n        <td><code>$ne</code></td>\n        <td>Not equal to</td>\n     </tr>\n    <tr>\n        <td><code>$in</code></td>\n        <td>Contained in, allows you to specify an array of possible matches</td>\n     </tr>\n    <tr>\n        <td><code>$nin</code></td>\n        <td>Not contained in, it selects objects for which the specified field does not have any value in the specified array </td>\n     </tr>\n    <tr>\n        <td><code>$or</code></td>\n        <td>Use boolean or in a query ,an array of expressions, any of which can match</td>\n     </tr>\n    <tr>\n        <td><code>$nor</code></td>\n        <td>A boolean or expression to do queries, you give $nor a list of expressions, none of which can match the query </td>\n     </tr>\n    <tr>\n        <td><code>$and</code></td>\n        <td>Give $and an array of expressions, all of which must match the query </td>\n     </tr>\n    <tr>\n        <td><code>$all</code></td>\n        <td>The $all operator is similar to $in, but instead of matching any value in the specified array all values in the array must be matched </td>\n     </tr>\n    <tr>\n        <td><code>$elemMatch</code></td>\n        <td>Give $elemMatch an expression to match against elements in an array</td>\n     </tr>\n    <tr>\n        <td><code>$exists</code></td>\n        <td>Check for existence of a field </td>\n     </tr>\n    <tr>\n        <td><code>$regex</code></td>\n        <td>Regex match on a string. Currently, only prefix matches are supported: the\n        regular expression must begin with an anchor (^) followed by a letter or digit. For\n        example, '^a', '^a.*', and '^a.*$' are allowed, but not '^.*a*'.</td>\n    </tr>\n    <tr>\n        <td><code>$text</code></td>\n        <td>Perform a text search on the contents of the field. A <b>$text</b> expression has the\n            following syntax: <br/>\n            <code> { \"$text\": { \"$search\": &lt;string&gt; }} </code><br/>\n            Most punctuation marks and spaces are treated as delimiters allowing you to search for\n            multiple keywords, excluding escaped double quotes (\\&quot;) and hypens (-).  Escaped\n            double quotes are used for phrase searches and hyphens are used to negate searches.\n            Sorting does not work with the $text operator, that is, using the\n            <code>order</code> field will have no effect when using the $text operator.\n        </td>\n    </tr>\n</table>\n\n\n<h5 id='search_query-section-geographic-coordinates'>Geographic coordinates</h5>\n\n<p>For querying geographic coordinates, the following operators are supported:</p>\n\n<table class=\"doc-table\">\n    <tr>\n        <th>Operator</th><th>Summary</th>\n    </tr>\n    <tr>\n        <td><code>$nearSphere&nbsp&nbsp</code></td>\n        <td>Search near geographic coordinates, format is <code>[longitude, latitude]</code></td>\n    </tr>\n    <tr>\n        <td><code>$maxDistance</code></td>\n        <td>used with $nearSphere to limit maximum search distance. All distances use radians. This allows you to easily multiply by the radius of the earth (about 6371 km or 3959 miles) to get the distance in your choice of units. Conversely, divide by the radius of the earth when doing queries</td>\n    </tr>\n</table>\n\n\n<p>You can combine any of the above to build a more complex query.</p>\n\n<p>For more information on constructing geographic coordinate queries, see <a href=\"#!/guide/customfields-section-geographic-coordinates-in-custom-fields\">Geographic Coordinates in Custom Fields</a> and <a href=\"#!/guide/customfields\">Custom Objects &amp; Fields</a> for general creation of custom objects and field queries.</p>\n\n<p>If you want to find users with age older than 28:</p>\n\n<pre><code>where={\"age\": {\"$gt\":28}}\n</code></pre>\n\n<p>If you want to find users at age 28 or 38:</p>\n\n<pre><code>where = {\"age\": {\"$in\":[28,38]}}\n</code></pre>\n\n<p>If you want to find users at age neither 28 nor 38:</p>\n\n<pre><code>where = {\"age\": {\"$nin\":[28,38]}}\n</code></pre>\n\n<p>If you want to find a user whose email is \"john@example.com\" and type is User:</p>\n\n<pre><code>where={\"$and\": [ {\"email\" : \"john@example.com\"}, { \"_type\" : \"User\" } ] }\n</code></pre>\n\n<p>If you want to find users who have options are 2,3</p>\n\n<pre><code>where={\"options\": {\"$all\" : [2,3] } }\n</code></pre>\n\n<p>If you want to find users who have location information.</p>\n\n<pre><code>where={\"location\": {\"$exists\" : true} }\n</code></pre>\n\n<p>If you want to find users who haven't location information</p>\n\n<pre><code>where={\"location\": {\"$exists\" : false} }\n</code></pre>\n\n<p>If you have a custom array with your user object, such as a list of scores\n(scores: <code>[65, 86, 92'</code>), you can search the elements in the array. For example,\nif you want to search for scores within a certain range:</p>\n\n<pre><code>where={\"scores\":{ \"$elemMatch\": { \"$gte\": 70, \"$lt\": 90 } }}\n</code></pre>\n\n<p>If you have a custom array of tags, such as <code>tags: [ 'employee', 'manager' ]</code>,\nyou can use the $all operator to return objects that contain all the specified elements.</p>\n\n<pre><code>where={\"tags\":{ \"$all\": [ 'employee', 'manager' ] } }\n</code></pre>\n\n<p>If you have assigned custom coordinates to your user objects, you can search\nby users' coordinates. For example, if you want to find users named joe near\nlongitude -122.1 and latitude 37.1.</p>\n\n<pre><code>where={\"first_name\":\"joe\", \"coordinates\":{\"$nearSphere\":[-122.1, 37.1]}}\n</code></pre>\n\n<p>To find users named joe near longitude -122.1 and latitude 37.1 with maximum\ndistance of 5 miles (convert 5 miles to radians, 5/3959 = 0.00126)</p>\n\n<pre><code>where={\"first_name\":\"joe\", \"coordinates\":{\"$nearSphere\":[-122.1,37.1], \"$maxDistance\" : 0.00126}}\n</code></pre>\n\n<p>To search for the keywords <code>javascript</code>, <code>ruby</code> or <code>python</code>, but not <code>php</code>:</p>\n\n<pre><code>where={\"$text\": { \"$search\": \"javascript,ruby,python,-php\" }}\n</code></pre>\n\n<h4 id='search_query-section-order'>order</h4>\n\n<p>Sort results by one or more fields. In general, you can sort based on any predefined field that you can query using\nthe <code>where</code> operator, as well as on custom fields. Any exceptions to this rule are noted in API reference for the\nindividual <code>query</code> methods.</p>\n\n<p>To reverse the sorting order, simply add <code>-</code> in front of a field. For example,\nto sort results by first_name in ascending order then created_at in descending\norder:</p>\n\n<pre><code>order=first_name,-created_at\n</code></pre>\n\n<h4 id='search_query-section-sel'>sel</h4>\n\n<p>Selects which fields to return from the query. Do not use this parameter if you are using the\n<code>unsel</code> parameter.</p>\n\n<p>Assign an array of field names to filter to the <code>all</code> field to search all JSON fields including\nfields in nested objects.  Currently, this is the only supported option.</p>\n\n<p>If you want to display a field from the <code>custom_field</code> object, simply pass the field name of the\n<code>custom_field</code> object.</p>\n\n<p>If you want to display a field from a nested object, then both the name of the nested object and\nfield need to be specified.</p>\n\n<p>For example, if you want to only return the <code>first_name</code> field:</p>\n\n<pre><code>sel={\"all\":[\"first_name\"]}\n</code></pre>\n\n<h4 id='search_query-section-unsel'>unsel</h4>\n\n<p>Selects which fields to not return from the query. Do not use this parameter if you are using the\n<code>sel</code> parameter.</p>\n\n<p>Assign an array of field names to filter to the <code>all</code> field to search all JSON fields including\nfields in nested objects.  Currently, this is the only supported option.</p>\n\n<p>If you want to hide displaying a field from the <code>custom_field</code> object, simply pass the field name of the\n<code>custom_field</code> object.</p>\n\n<p>If you want to hide displaying a field from a nested object, then both the name of the nested object and\nfield need to be specified.</p>\n\n<p>For example, if you want to return all fields except <code>first_name</code>:</p>\n\n<pre><code>unsel={\"all\":[\"first_name\"]}\n</code></pre>\n\n<h2 id='search_query-section-query-pagination'>Query Pagination</h2>\n\n<p>Starting with ArrowDB 1.1.5, we have made the following changes:</p>\n\n<ul>\n<li>Skip is limited to 0-4999; as a result you can not skip beyond 5000 records.</li>\n<li>If the query includes <code>count=true</code>, the query response's <code>meta</code> object contains a <code>count</code>\nfield whose value is the total number of objects that match the query criteria.\nIf the query matches more than 5000 objects, the <code>count</code> field contains the value \"5000+\".\nIf your query result set includes more than 5000 records,\nyou should perform range-based queries for pagination. This is done by including\na where parameter on a object field using the <code>$gt</code> or <code>$lt</code> operators, as discussed\nbelow.</li>\n</ul>\n\n\n<p>For example, the following cURL uses a range-based query for Statuses whose custom field named <code>score</code> is less than\n100, and sorts the results in ascending order on the <code>score</code> field:</p>\n\n<pre><code>$ curl -d 'where={\"score\":{\"$lt\":100}}&amp;order=score' -X GET \"http://&lt;HOST&gt;/v1/statuses/query.json?key=&lt;KEY&gt;&amp;count=true&amp;pretty_json=true\"\n</code></pre>\n\n<p>ArrowDB object IDs, represented by the <code>_id</code> field, are based on object timestamps and machine IDs, which allows for range-based pagination. For\nexample, suppose an application performs a query that whose last object\nreturned has an ID of <code>\"5418a8815a6919fde8cf1e4d\"</code>. To get the\nset of objects created before that particular object, the application would query for those objects whose <code>_id</code> field is less than that value:</p>\n\n<pre><code>$ curl -X GET -d 'where={\"_id\":{\"$lt\":\"5418a8815a6919fde8cf1e4d\"}}' \"http://&lt;HOST&gt;/v1/statuses/query.json?key=&lt;KEY&gt;&amp;count=true&amp;pretty_json=t&amp;_session_id=&lt;SESSION_ID&gt;\"\n</code></pre>\n\n<p>Similarly, if the ID of the first object returned in a query was\n<code>\"5418a87f5a6919fde8cee391\"</code> the application would query on objects whose <code>_id</code>\nfield is greater than that value to retrieve the previous set of data:</p>\n\n<pre><code>$ curl -X GET -d 'where={\"_id\":{\"$gt\":\"5418a87f5a6919fde8cee391\"}}' \"http://&lt;HOST&gt;/v1/statuses/query.json?key=&lt;KEY&gt;&amp;count=true&amp;pretty_json=t&amp;_session_id=&lt;SESSION_ID&gt;\"\n</code></pre>\n\n<p>To query objects between a range of object IDs, use together <code>$gt</code> and <code>$lt</code> together:</p>\n\n<pre><code>curl -X GET -d 'where={\"_id\":{\"$gt\":\"5418a87f5a6919fde8cee38f\", \"$lt\":\"5418a8815a6919fde8cf1e4d\"}}'  \"http://&lt;HOST&gt;/v1/statuses/query.json?key=&lt;KEY&gt;&amp;count=true&amp;pretty_json=t&amp;_session_id=&lt;SESSION_ID&gt;\"    \n</code></pre>\n\n<p>For additional examples, see <a href=\"#!/guide/search_query-section-range-based-query-pagination-examples\">Range-based Query Pagination Examples</a>.</p>\n\n<h3 id='search_query-section-range-based-query-pagination-examples'>Range-based Query Pagination Examples</h3>\n\n<ul>\n<li><a href=\"#!/guide/search_query-section-query-on-custom-field-results-in-ascending-order\">Query on Custom Field, Results in Ascending Order</a></li>\n<li><a href=\"#!/guide/search_query-section-query-on-custom-field-results-in-descending-order\">Query on Custom Field, Results in Descending Order</a></li>\n<li><a href=\"#!/guide/search_query-section-query-for-next-page-of-results-results-in-ascending-order\">Query for Next Page of Results, Results in Ascending Order</a></li>\n<li><a href=\"#!/guide/search_query-section-query-for-previous-page-of-results\">Query for Previous Page of Results</a></li>\n</ul>\n\n\n<h4 id='search_query-section-query-on-custom-field-results-in-ascending-order'>Query on Custom Field, Results in Ascending Order</h4>\n\n<p>In this example, the query returns Statuses objects whose custom <code>score</code> field\nis less than 100, and sorts results on the <code>score</code> in ascending order\n(<code>&amp;order=score</code>). The query matches 100 total records.</p>\n\n<pre><code>~ curl -d 'where={\"score\":{\"$lt\":100}}&amp;order=score' -X GET \"http://&lt;HOST&gt;:8082/v1/statuses/query.json?key=&lt;KEY&gt;&amp;count=true&amp;pretty_json=true\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryStatuses\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\": \"53fe1c25759220e9f675413a\",\n        \"custom_fields\": {\n          \"score\": 0.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675413b\",\n        \"message\": \"status\",\n        \"custom_fields\": {\n          \"score\": 1.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675413c\",\n        \"custom_fields\": {\n          \"score\": 2.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675413d\",\n        \"custom_fields\": {\n          \"score\": 3.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675413e\",\n        \"custom_fields\": {\n          \"score\": 4.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675413f\",\n        \"custom_fields\": {\n          \"score\": 5.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754140\",\n        \"custom_fields\": {\n          \"score\": 6.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754141\",\n        \"custom_fields\": {\n          \"score\": 7.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754142\",\n        \"custom_fields\": {\n          \"score\": 8.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754143\",\n        \"custom_fields\": {\n          \"score\": 9.0\n        }, ...\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h4 id='search_query-section-query-on-custom-field-results-in-descending-order'>Query on Custom Field, Results in Descending Order</h4>\n\n<p>In this example, Statuses objects are queried whose custom <code>score</code> field is less\nthan 100, and sorts results on <code>score</code> in descending order (<code>&amp;order=-score</code>).</p>\n\n<pre><code>$ curl -d 'where={\"score\":{\"$lt\":100}}&amp;order=-score' -X GET \"http://&lt;HOST&gt;/v1/statuses/query.json?key=&lt;KEY&gt;&amp;count=true&amp;pretty_json=true\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryStatuses\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\": \"53fe1c25759220e9f675419d\",\n        \"custom_fields\": {\n          \"score\" 99.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675419c\",\n        \"custom_fields\": {\n          \"score\" 98.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675419b\",\n        \"custom_fields\": {\n          \"score\" 97.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675419a\",\n        \"custom_fields\": {\n          \"score\" 96.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754199\",\n        \"custom_fields\": {\n          \"score\" 95.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754198\",\n        \"custom_fields\": {\n          \"score\" 94.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754197\",\n        \"custom_fields\": {\n          \"score\" 93.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754196\",\n        \"custom_fields\": {\n          \"score\" 92.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754195\",\n        \"custom_fields\": {\n          \"score\" 91.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754194\",\n        \"custom_fields\": {\n          \"score\" 90.0\n        }, ...\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h4 id='search_query-section-query-for-next-page-of-results-results-in-ascending-order'>Query for Next Page of Results, Results in Ascending Order</h4>\n\n<p>In this example, the next page of Statuses objects are queried whose <code>_id</code> field is less than <code>\"53fe1c25759220e9f6754194\"</code> and sorted in descending order on the custom <code>score</code> field.</p>\n\n<pre><code>$ curl -d 'where={\"score\":{\"$lt\":100},\"_id\":{\"$lt\":\"53fe1c25759220e9f6754194\"}}&amp;order=-score' -X GET \"http://&lt;HOST&gt;/v1/statuses/query.json?key=&lt;KEY&gt;&amp;count=true&amp;pretty_json=true\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryStatuses\",\n    \"count\": 90\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\": \"53fe1c25759220e9f6754193\",\n        \"custom_fields\": {\n          \"score\": 89.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754192\",\n        \"custom_fields\": {\n          \"score\": 88.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754191\",\n        \"custom_fields\": {\n          \"score\": 87.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f6754190\",\n        \"custom_fields\": {\n          \"score\": 86.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675418f\",\n        \"custom_fields\": {\n          \"score\": 85.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675418e\",\n        \"custom_fields\": {\n          \"score\": 84.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675418d\",\n        \"custom_fields\": {\n          \"score\": 83.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675418c\",\n        \"custom_fields\": {\n          \"score\": 82.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675418b\",\n        \"custom_fields\": {\n          \"score\": 81.0\n        }, ...\n      },\n      {\n        \"id\": \"53fe1c25759220e9f675418a\",\n        \"custom_fields\": {\n          \"score\": 80.0\n        }, ...\n      }\n    ]\n  }\n}    \n</code></pre>\n\n<h4 id='search_query-section-query-for-previous-page-of-results'>Query for Previous Page of Results</h4>\n\n<p>As explained previously, to get the second (or next) page of results in a query, you query\nfor objects whose <code>_id</code> field is less (older) than the <code>_id</code> of the last object returned by\nthe prior query. To get the previous (first) page of results again, you simply query for those objects\nwhose <code>_id</code> is greater (newer) than the first object returned in by the prior query.</p>\n\n<p>However, if you query for the third results page, and want to get the previous (second) results page, you\nneed to restrict the query to those objects whose <code>_id</code> is greater than the first object returned by the most recent query\n(third results page), and less than that of the last object returned in query before that (second results page); or,\nequivalently, less than or equal to the first object returned in the initial query (first results page).\nThe following demonstrates this.</p>\n\n<p><strong>First Page (Page 1)</strong></p>\n\n<p>The first query request doesn't specify a range.</p>\n\n<p>Request:</p>\n\n<pre><code>curl -X GET \"&lt;HOST&gt;/v1/users/query.json?key=&lt;KEY&gt;&amp;new_pagination=true&amp;pretty_json=true\"\n</code></pre>\n\n<p>Response (abbreviated):</p>\n\n<pre><code>{\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"5447f04580e61e081e0002c6\",\n        ...\n      },\n      ...\n      {\n        \"id\": \"5447eff680e61e08260002ed\",\n        ...\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Note that the ID of the last object returned in the response (\"5447eff680e61e08260002ed\").</p>\n\n<p><strong>Next Page (Page 2)</strong></p>\n\n<p>To get Page 2 results, a <code>where</code> clause is added\nthat limits results to those objects whose <code>_id</code> field is less than the\nlast object in Page 1 results (\"5447eff680e61e08260002ed\").</p>\n\n<p>Request:</p>\n\n<pre><code>curl -X GET -d 'where={\"_id\":{\"$lt\":\"5447eff680e61e08260002ed\"}}' \"&lt;HOST&gt;/v1/users/query.json?key=&lt;KEY&gt;&amp;new_pagination=true&amp;pretty_json=true\"\n</code></pre>\n\n<p>Response (abbreviated):</p>\n\n<pre><code>{\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"5447efed80e61e08260002ec\",\n        ...\n      },\n        ...\n      {\n        \"id\": \"5447ef9f80e61e081e0002c1\",\n        ...\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Note that the first and last IDs of objects returned on Page 2 are \"5447efed80e61e08260002ec\" and \"5447ef9f80e61e081e0002c1\",\nrespectively. To get the previous page of results (Page 1) at this point, you could simply query for\nobjects with IDs greater than the first object in the Page 2 results (\"5447efed80e61e08260002ec\").\nIn this case, however, the user requests the next page (Page 3) results, as shown below.</p>\n\n<p><strong>Next Page (Page 3)</strong></p>\n\n<p>To get Page 3 results, the <code>where</code> limits results to those objects\nwhose <code>_id</code> field is less the last object returned in Page 2 results (\"5447ef9f80e61e081e0002c1\").</p>\n\n<pre><code>$ curl -X GET -d 'where={\"_id\":{\"$lt\":\"5447ef9f80e61e081e0002c1\"}}' \"&lt;HOST&gt;/v1/users/query.json?key=&lt;KEY&gt;&amp;new_pagination=true&amp;pretty_json=true\"\n</code></pre>\n\n<p>Response (abbreviated):</p>\n\n<pre><code>{\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"5446d5d980e61e0826000093\",\n        ...\n      },\n      ...\n    ]\n  }\n}\n</code></pre>\n\n<p>Note that the first object returned has the ID \"5446d5d980e61e0826000093\".</p>\n\n<p><strong>Previous Page (Page 2)</strong></p>\n\n<p>At this point, if you query for objects with IDs greater than the first object returned in Page 3,\nyou would, logically, get Page 1 results, not Page 2. Instead, you need to further limit the range to those objects\nwith IDs less than or equal to that of the first object from the Page 2 results; or, equivalently,\nless than that of the last object id from Page 1 results.</p>\n\n<p>Continuing the example, the request and response (abbreviated) for these approaches are shown below:</p>\n\n<pre><code>$ curl -X GET -d 'where={\"_id\":{\"$gt\":\"5446d5d980e61e0826000093\", \"$lte\":\"5447efed80e61e08260002ec\"}}' \"&lt;HOST&gt;/v1/users/query.json?key=&lt;KEY&gt;&amp;new_pagination=true&amp;pretty_json=true\"\n{\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"5447efed80e61e08260002ec\",\n        ...\n      },\n      ...\n      {\n        \"id\": \"5447ef9f80e61e081e0002c1\",\n        ...\n    ]\n  }\n}\n\n$ curl -X GET -d 'where={\"_id\":{\"$gt\":\"5446d5d980e61e0826000093\", \"$lt\":\"5447eff680e61e08260002ed\"}}' \"&lt;HOST&gt;/v1/users/query.json?key=&lt;KEY&gt;&amp;new_pagination=true&amp;pretty_json=true\"\n{\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"5447efed80e61e08260002ec\",\n        ...\n      },\n      ...\n      {\n        \"id\": \"5447ef9f80e61e081e0002c1\",\n        ...\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h2 id='search_query-section-search-api-overview'>Search API Overview</h2>\n\n<p class=\"note\">The search API is deprecated since Release 1.3.0. Applications created before Arrow Cloud\nRelease 1.3.0 can continue to use the deprecated search API, but new applications will need to use\nthe query API with the <code>$text</code> query operator.</p>\n\n\n<p>Several ArrowDB objects provides a search API that performs a case-insensitive, full-text\nsearch of the given keywords on a list of predefined fields. Please refer to individual object's API\ndocumentation for a list of searchable fields. For instance, the <a href=\"#!/api/Places-method-search\" rel=\"Places-method-search\" class=\"docClass\">Places.search</a> method will search\nwithin <a href=\"#!/api/Places-property-name\" rel=\"Places-property-name\" class=\"docClass\">Places.name</a> and <a href=\"#!/api/Places-property-tags\" rel=\"Places-property-tags\" class=\"docClass\">Places.tags</a>.</p>\n\n<p>The Search API is fixed in terms of the searchable fields; use the <a href=\"#!/guide/search_query-section-query-api-overview\">query</a>\nAPI to perform more flexible searches.</p>\n\n<h3 id='search_query-section-search-api-parameters'>Search API Parameters</h3>\n\n<p>The following parameters are available for search operations:</p>\n\n<ul>\n<li><code>page</code></li>\n<li><code>per_page</code></li>\n<li><code>q</code></li>\n</ul>\n\n\n<h4 id='search_query-section-page'>page</h4>\n\n<p>Request page number starting from 1. Default is 1.</p>\n\n<h4 id='search_query-section-per_page'>per_page</h4>\n\n<p>Number of results per page. Default is 10.</p>\n\n<h4 id='search_query-section-q'>q</h4>\n\n<p>The keyword or phrase to search for.</p>\n\n<h3 id='search_query-section-search-api-availability'>Search API Availability</h3>\n\n<p>Search methods are available for the following pre-built ArrowDB objects, as well as for custom fields.</p>\n\n<ul>\n<li><a href=\"#!/api/Events-method-search\" rel=\"Events-method-search\" class=\"docClass\">Events</a></li>\n<li><a href=\"#!/api/Friends-method-search\" rel=\"Friends-method-search\" class=\"docClass\">Friends</a></li>\n<li><a href=\"#!/api/Places-method-search\" rel=\"Places-method-search\" class=\"docClass\">Places</a></li>\n<li><a href=\"#!/api/Users-method-search\" rel=\"Users-method-search\" class=\"docClass\">Users</a></li>\n</ul>\n\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/search_query/README.md"},{"name":"photosizes","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/photosizes","title":"Photo Uploading & Resizing","description":"How to upload and resize photos.","html":"<h1 id='photosizes-section-photo-uploading-amp-resizing'>Photo Uploading &amp; Resizing</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/photosizes-section-custom-photo-sizes'>Custom Photo Sizes</a><li><a href='#!/guide/photosizes-section-synchronous-photo-uploading'>Synchronous Photo Uploading</a><li><a href='#!/guide/photosizes-section-deprecated-behavior'>Deprecated Behavior</a></ul>\n</div>\n\n<p>ArrowDB provides a great amount of flexibility when creating photo objects, or adding photos to\nother objects.</p>\n\n<h2 id='photosizes-section-custom-photo-sizes'>Custom Photo Sizes</h2>\n\n<p>App developers can specify a custom set of photo sizes by specifying the <code>photo_sizes[&lt;name&gt;]=&lt;width&gt;x&lt;height&gt;</code> parameter up to\nfive times such as:</p>\n\n<pre><code>photo_sizes[preview]=100x100#\nphoto_sizes[android]=800x480\nphoto_sizes[iphone]=960x640\nphoto_sizes[ipad]=1024x768\n</code></pre>\n\n<p>To specify a size that results in a square image, give the same width and\nheight along with a <code>#</code> immediately after, as shown above.</p>\n\n<p>You may specify the <code>photo_sizes</code> parameter when creating or updating a Photos object or when adding\na photo with the Users or Places create or update method.</p>\n\n<p>The resized images are generated asynchronously, so the API or SDK call returns\nimmediately with a response showing photo metadata:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"photo=@photo.jpg\" -F \"photo_sizes[preview]=100x100#\" -F \"photo_sizes[android]=800x480\" -F \"photo_sizes[iphone]=960x640\" -F \"photo_sizes[ipad]=1024x768\" http://api.cloud.appcelerator.com/v1/photos/create.json?key=gKr9bfv4nOlfKkqyh4UoAxpPvDqBPrSE\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showPhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\": \"4edc8af33ae7406bf7000003\",\n        \"filename\": \"photo.jpg\",\n        \"size\": 584344,\n        \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\": \"2011-12-05T09:12:19+0000\",\n        \"updated_at\": \"2011-12-05T09:12:25+0000\",\n        \"processed\": false,\n        \"user\": {\n          \"id\": \"4ebb22bf3ae740077f000006\",\n          \"first_name\": \"Mike\",\n          \"last_name\": \"Goff\",\n          \"created_at\": \"2011-11-10T01:02:56+0000\",\n          \"updated_at\": \"2011-12-05T09:10:55+0000\",\n          \"email\": \"mike@appcelerator.com\"\n        }\n        \"content_type\": \"image/jpeg\"\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Note that in the above response <code>processed=false</code>. This indicates that the\nphoto is still processing in the background. Once the photo has been\nprocessed, the <code>processed</code> flag will be set to <code>true</code> and the URLs\nto access the photo are shown:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"http://api.cloud.appcelerator.com/v1/photos/show.json?key=aKgDjsrxM2wqL9fjhS1nnvgvnTlRDdJn&amp;photo_id=4edc8af33ae7406bf7000003\"  \n{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"showPhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\": \"4eab39f7d3e986d677000001\",\n        \"filename\": \"photo.jpg\",\n        \"size\": 584344,\n        \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\": \"2011-10-28T23:25:45+0000\",\n        \"updated_at\": \"2011-10-28T23:26:01+0000\",\n        \"processed\": true,\n        \"user\": {\n          \"id\": \"4ea9e22ad3e986ba69000002\",\n          \"first_name\": \"Mike\",\n          \"last_name\": \"Goff\",\n          \"created_at\": \"2011-10-27T22:58:52+0000\",\n          \"updated_at\": \"2011-10-27T23:15:36+0000\",\n          \"email\": \"mike@appcelerator.com\"\n        },\n        \"urls\": {\n          \"preview\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8af33ae7406bf7000004/photo_preview.jpg\",\n          \"android\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8af33ae7406bf7000004/photo_android.jpg\",\n          \"iphone\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8af33ae7406bf7000004/photo_iphone.jpg\",\n          \"ipad\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8af33ae7406bf7000004/photo_ipad.jpg\",\n          \"original\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8af33ae7406bf7000004/photo_original.jpg\"\n        },\n        \"content_type\": \"image/jpeg\",\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h2 id='photosizes-section-synchronous-photo-uploading'>Synchronous Photo Uploading</h2>\n\n<p>You can also specify photo sizes to be processed synchronously during the\ncreate or update calls for photos and other objects with attached photos. This\ncan be useful for immediately showing a thumbnail of the photo that was just\nuploaded. Specify <code>photo_sync_sizes[]=&lt;size name&gt;</code> one or more times in the\nrequest. The response will contain URLs for the original photo, plus the size\nor sizes which were processed synchronously. The property <code>processed</code> will be\n<code>false</code> until all processing has been completed. This feature may be used with\neither the default photo sizes or custom photo sizes.</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"photo=@photo.jpg\" -F \"photo_sizes[preview]=100x100#\" -F \"photo_sizes[android]=800x480\" -F \"photo_sizes[iphone]=960x640\" -F \"photo_sizes[ipad]=1024x768\" -F \"photo_sync_sizes[]=preview\" http://api.cloud.appcelerator.com/v1/photos/create.json?key=aKgDjsrxM2wqL9fjhS1nnvgvnTlRDdJn\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createPhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\": \"4edc8ff43ae7406bf7000008\",\n        \"filename\": \"photo.jpg\",\n        \"size\": 584344,\n        \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\": \"2011-12-05T09:33:41+0000\",\n        \"updated_at\": \"2011-12-05T09:33:41+0000\",\n        \"processed\": false,\n        \"user\": {\n          \"id\": \"4ebb22bf3ae740077f000006\",\n          \"first_name\": \"Mike\",\n          \"last_name\": \"Goff\",\n          \"created_at\": \"2011-11-10T01:02:56+0000\",\n          \"updated_at\": \"2011-12-05T09:10:55+0000\",\n          \"email\": \"mike@appcelerator.com\"\n        },\n        \"urls\": {\n          \"preview\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8ff53ae7406bf7000009/photo_preview.jpg\",\n          \"original\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8ff53ae7406bf7000009/photo_original.jpg\"\n        },\n        \"content_type\": \"image/jpeg\"\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>After processing, all photo sizes will be available and <code>processed=true</code> will\nbe set.</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"http://api.cloud.appcelerator.com/v1/photos/show.json?key=aKgDjsrxM2wqL9fjhS1nnvgvnTlRDdJn&amp;photo_id=4edc8ff43ae7406bf7000008\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showPhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\": \"4edc8ff43ae7406bf7000008\",\n        \"filename\": \"photo.jpg\",\n        \"size\": 584344,\n        \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\": \"2011-12-05T09:33:41+0000\",\n        \"updated_at\": \"2011-12-05T09:33:43+0000\",\n        \"processed\": true,\n        \"user\": {\n          \"id\": \"4ebb22bf3ae740077f000006\",\n          \"first_name\": \"Mike\",\n          \"last_name\": \"Goff\",\n          \"created_at\": \"2011-11-10T01:02:56+0000\",\n          \"updated_at\": \"2011-12-05T09:10:55+0000\",\n          \"email\": \"mike@appcelerator.com\"\n        },\n        \"urls\": {\n          \"preview\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8ff53ae7406bf7000009/photo_preview.jpg\",\n          \"android\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8ff53ae7406bf7000009/photo_android.jpg\",\n          \"iphone\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8ff53ae7406bf7000009/photo_iphone.jpg\",\n          \"ipad\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8ff53ae7406bf7000009/photo_ipad.jpg\",\n          \"original\": \"http://storage.appcelerator.com/6QoSiKlR7hUjhf4GEOVD1hyPlHxqsiGi/photos/c9/39/4edc8ff53ae7406bf7000009/photo_original.jpg\"\n        },\n        \"content_type\": \"image/jpeg\",\n        \"exif\": {\n          \"create_date\": \"2010-06-21T02:19:20+0000\",\n          \"width\": 1600,\n          \"height\": 1067,\n          \"shutter_speed\": \"1/60\",\n          \"make\": \"Canon\",\n          \"model\": \"Canon EOS 5D Mark II\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h2 id='photosizes-section-deprecated-behavior'>Deprecated Behavior</h2>\n\n<p>ACS applications used to create the following default photo sizes when a photo was created:</p>\n\n<table class=\"doc-table\">\n<tr>\n  <th>Size Name</th>\n  <th>Max Width</th>\n  <th>Max Height</th>\n  <th>Aspect Ratio</th>\n</tr>\n<tr>\n  <td>square_75</td>\n  <td>75</td>\n  <td>75</td>\n  <td>square</td>\n</tr>\n<tr>\n  <td>thumb_100</td>\n  <td>100</td>\n  <td>67</td>\n  <td>original</td>\n</tr>\n<tr>\n  <td>small_240</td>\n  <td>240</td>\n  <td>160</td>\n  <td>original</td>\n</tr>\n<tr>\n  <td>medium_500</td>\n  <td>500</td>\n  <td>333</td>\n  <td>original</td>\n</tr>\n<tr>\n  <td>medium_640</td>\n  <td>640</td>\n  <td>427</td>\n  <td>original</td>\n</tr>\n<tr>\n  <td>large_1024</td>\n  <td>1024</td>\n  <td>683</td>\n  <td>original</td>\n</tr>\n</table>\n\n\n\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/photosizes/README.md"},{"name":"geo","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/geo","title":"Geographic Coordinates","description":"How ArrowDB handles geographic coordinates.","html":"<h2 id='geo-section-geographic-coordinates'>Geographic Coordinates</h2>\n\n<p>ArrowDB let you assign and query one or more custom geographic\ncoordinates to predefined objects as well as custom objects. To assign custom\ngeographic coordinates, see <a href=\"#!/guide/customfields-section-geographic-coordinates-in-custom-fields\">Geographic Coordinates in Custom\nFields</a>.</p>\n\n<p>For information on querying geographic coordinates, see\nthe <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/geo/README.md"},{"name":"admin_access","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/admin_access","title":"Admin Access","description":"Describes admin-only API methods for batch-deleting objects and dropping custom object collections.","html":"<h1 id='admin_access-section-admin-access'>Admin Access</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/admin_access-section-create-an-admin-user'>Create an Admin User</a><ul><ul><li><a href='#!/guide/admin_access-section-create-a-new-admin-user'>Create a New Admin User</a><li><a href='#!/guide/admin_access-section-add-admin-access-to-an-existing-user'>Add Admin Access to an Existing User</a></ul></ul><li><a href='#!/guide/admin_access-section-perform-arrowdb-api-calls-on-behalf-of-another-user'>Perform ArrowDB API Calls on Behalf of Another User</a><li><a href='#!/guide/admin_access-section-batch-delete'>Batch Delete</a><li><a href='#!/guide/admin_access-section-admin-drop-custom-collection'>Admin Drop Custom Collection</a></ul>\n</div>\n\n<p>ArrowDB admin access allows application admin users to execute some batch\noperations and make ArrowDB API calls on behalf of another user.</p>\n\n<h2 id='admin_access-section-create-an-admin-user'>Create an Admin User</h2>\n\n<p>Before creating an admin user, log in to the Appcelerator Dashboard and select your application.</p>\n\n<ol>\n<li>Log in to <a href=\"https://platform.appcelerator.com\">https://platform.appcelerator.com</a>.</li>\n<li>Select an application from the <strong>Apps</strong> drop-down list.</li>\n</ol>\n\n\n<p>Then, either create a new admin user or add admin access to an existing user.</p>\n\n<h4 id='admin_access-section-create-a-new-admin-user'>Create a New Admin User</h4>\n\n<ol>\n<li>In the left navigation bar, click <strong>Manage Data</strong>.</li>\n<li>In the main pane, click <strong>Users</strong>.</li>\n<li>Click <strong>+ New User</strong>. A dialog appears.</li>\n<li>Under the <strong>Admin</strong> section, click the <strong>Yes</strong> radio button.</li>\n<li>At mininum, enter a username, password and confirm password.</li>\n<li>Click <strong>Save</strong>.</li>\n</ol>\n\n\n<p><p><img src=\"guides/admin_access/admin_appc1.png\" alt=\"\" width=\"559\" height=\"532\"></p></p>\n\n<p>ArrowDB creates a new user with admin access.</p>\n\n<h4 id='admin_access-section-add-admin-access-to-an-existing-user'>Add Admin Access to an Existing User</h4>\n\n<ol>\n<li>In the left navigation bar, click <strong>Manage Data</strong>.</li>\n<li>In the main pane, click <strong>Users</strong>.</li>\n<li>Locate the user you want to give admin access to and click the pencil icon in the same row to\n edit the user.</li>\n<li>Locate the <strong>Admin</strong> section and click the <strong>Yes</strong> radio button.</li>\n<li>Scroll down and click <strong>Save Changes</strong>.</li>\n</ol>\n\n\n<p>This user now has admin access.  To disable access, follow the same steps except click the <strong>No</strong>\nradio button.</p>\n\n<h2 id='admin_access-section-perform-arrowdb-api-calls-on-behalf-of-another-user'>Perform ArrowDB API Calls on Behalf of Another User</h2>\n\n<p>An admin user can perform ArrowDB API calls on behalf of another user.  For example, when you\nspecify the <code>su_id</code> parameter to an ID of another user as part of the create method,\nthe admin user creates an object on behalf of that user. The <code>user</code> parameter for the object\nwill be reported as the other user not the admin user.</p>\n\n<p>This admin operation is supported by any create, update and delete method, as well as the following methods:</p>\n\n<ul>\n<li><a href=\"#!/api/KeyValues-method-append\" rel=\"KeyValues-method-append\" class=\"docClass\">KeyValues.append</a></li>\n<li><a href=\"#!/api/KeyValues-method-incrby\" rel=\"KeyValues-method-incrby\" class=\"docClass\">KeyValues.incrby</a></li>\n<li><a href=\"#!/api/KeyValues-method-set\" rel=\"KeyValues-method-set\" class=\"docClass\">KeyValues.set</a></li>\n<li><a href=\"#!/api/PushNotifications-method-subscribe\" rel=\"PushNotifications-method-subscribe\" class=\"docClass\">PushNotifications.subscribe</a></li>\n</ul>\n\n\n<p>For example, the following curl command creates a new status for the specified user:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -F \"su_id=520289441e1ef70b1a0236d2\" -F \"message=Hola, Mundo\\!\" \"https://api.cloud.appcelerator.com/v1/statuses/create.json?key=APP_API_KEY\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createStatus\"\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\": \"5202c1ed87173a0afc024524\",\n        \"message\": \"Hola, Mundo\\\\!\",\n        \"created_at\": \"2013-08-07T21:53:49+0000\",\n        \"updated_at\": \"2013-08-07T21:53:49+0000\",\n        \"user\": {\n          \"id\": \"520289441e1ef70b1a0236d2\",\n          \"created_at\": \"2013-08-07T17:52:04+0000\",\n          \"updated_at\": \"2013-08-07T17:52:04+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2013-08-07T17:52:04+0000\",\n          \"username\": \"not_an_admin\",\n          \"admin\": \"false\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>To verify that the other user created this status and not the admin user, run the following curl\ncommand and compare the user IDs:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/statuses/show.json?key=APP_API_KEY&amp;status_id=5202c1ed87173a0afc024524\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showStatus\"\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\": \"5202c1ed87173a0afc024524\",\n        \"message\": \"Hola, Mundo\\\\!\",\n        \"created_at\": \"2013-08-07T21:53:49+0000\",\n        \"updated_at\": \"2013-08-07T21:53:49+0000\",\n        \"user\": {\n          \"id\": \"520289441e1ef70b1a0236d2\",\n          \"created_at\": \"2013-08-07T17:52:04+0000\",\n          \"updated_at\": \"2013-08-07T17:52:04+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2013-08-07T17:52:04+0000\",\n          \"username\": \"not_an_admin\",\n          \"admin\": \"false\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<h2 id='admin_access-section-batch-delete'>Batch Delete</h2>\n\n<p>ArrowDB provides an API end point named <code>batch_delete</code> that allows application\nadmins to delete multiple ArrowDB objects in one operation. The method takes a\n<code>where</code> parameter that constrains the selection of objects to delete. If <code>where</code>\nis omitted, all objects are deleted. For performance reasons, the number of\nobjects that can be deleted in a single batch delete operation is limited to\n100,000. Objects are deleted asynchronously in a separate process, not immediately\nupon method invocation.</p>\n\n<p>Certain ArrowDB objects can have dependencies on other objects. For example, when\nyou create a <code><a href=\"#!/api/Checkins-method-create\" rel=\"Checkins-method-create\" class=\"docClass\">Checkins</a></code> object you can specify a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> or <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object to associate with it. In this case, the\nCheckins object is a dependency of the Places or Events object. If you delete\nthe Places or Events object, the dependent Checkins object is <strong>not</strong> deleted.</p>\n\n<p>For example, the following deletes all Users objects whose <code>favorite_color</code> custom field is\n'blue'.</p>\n\n<pre><code> $curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/users/batch_delete.json?key&lt;API_KEY&gt;&amp;pretty_json=true     \n {\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"adminBatchDelete\"\n  }\n}     \n</code></pre>\n\n<p>Note that the method returns an HTTP 200 code (success) even if the query matched no objects.</p>\n\n<p>The following ArrowDB objects support batch delete operations:</p>\n\n<ul>\n<li><a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a></li>\n<li><a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a></li>\n<li><a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a></li>\n<li><a href=\"#!/api/Files\" rel=\"Files\" class=\"docClass\">Files</a></li>\n<li><a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a></li>\n<li><a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></li>\n<li><a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a></li>\n<li><a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a></li>\n<li><a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a></li>\n<li><a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a></li>\n<li><a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></li>\n</ul>\n\n\n<h2 id='admin_access-section-admin-drop-custom-collection'>Admin Drop Custom Collection</h2>\n\n<p>An application admin user can also drop a Custom Object collection using\n<code>admin_drop_collection</code> method. When calling the <code>admin_drop_collection</code> method,\nthe admin user must specify a class name to indicate which custom collection to drop.</p>\n\n<p>For example, the following drops the <code>car</code> collection:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/objects/car/admin_drop_collection.json?key=hPkMYgNozXR8xegNvWjqBVTcWK8P5fIX\"\n{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"dropCollection\"\n  }\n}\n</code></pre>\n\n<p>Only Custom Objects support the drop custom collection method.</p>\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/admin_access/README.md"},{"name":"atomic_increment","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/atomic_increment","title":"Atomic Increment Operator","description":"Using the MongoDB $inc operator.","html":"<h1 id='atomic_increment-section-atomic-increment-operator'>Atomic Increment Operator</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/atomic_increment-section--inc'>$inc</a><ul><li><a href='#!/guide/atomic_increment-section-examples'>Examples</a></ul>\n</div>\n\n<p>ArrowDB supports the Mongo <code>$inc</code> atomic increment operator.</p>\n\n<h2 id='atomic_increment-section--inc'>$inc</h2>\n\n<p>You can use <code>$inc</code> to increment (or decrement) a <a href=\"#!/guide/customfields\">custom field</a> by a specified value\nin a single update operation.</p>\n\n<ul>\n<li>The operator accepts positive and negative increment amounts</li>\n<li>It can only can be applied to a single field per method call.</li>\n</ul>\n\n\n<p><code>$inc</code> is specified with the following form, where <code>fieldName</code> is the name of the field to update and\n<code>value</code> is a positive (or negative) number to increment (or decrement) <code>fieldName</code> by:</p>\n\n<pre><code>\"fieldName\": { \"$inc:\" value} \n</code></pre>\n\n<p>The operator must be enclosed quotes, as shown above. The following methods support the <code>$inc</code> operator:</p>\n\n<ul>\n<li><a href=\"#!/api/Checkins-method-update\" rel=\"Checkins-method-update\" class=\"docClass\">Checkins.update</a></li>\n<li><a href=\"#!/api/CustomObjects-method-update\" rel=\"CustomObjects-method-update\" class=\"docClass\">CustomObjects.update</a></li>\n<li><a href=\"#!/api/Events-method-update\" rel=\"Events-method-update\" class=\"docClass\">Events.update</a></li>\n<li><a href=\"#!/api/Files-method-update\" rel=\"Files-method-update\" class=\"docClass\">Files.update</a></li>\n<li><a href=\"#!/api/PhotoCollections-method-update\" rel=\"PhotoCollections-method-update\" class=\"docClass\">PhotoCollections.update</a></li>\n<li><a href=\"#!/api/Photos-method-update\" rel=\"Photos-method-update\" class=\"docClass\">Photos.update</a></li>\n<li><a href=\"#!/api/Places-method-update\" rel=\"Places-method-update\" class=\"docClass\">Places.update</a></li>\n<li><a href=\"#!/api/Posts-method-update\" rel=\"Posts-method-update\" class=\"docClass\">Posts.update</a></li>\n<li><a href=\"#!/api/Reviews-method-update\" rel=\"Reviews-method-update\" class=\"docClass\">Reviews.update</a></li>\n<li><a href=\"#!/api/Users-method-update\" rel=\"Users-method-update\" class=\"docClass\">Users.update</a></li>\n<li><a href=\"#!/api/Statuses-method-update\" rel=\"Statuses-method-update\" class=\"docClass\">Statuses.update</a></li>\n</ul>\n\n\n<h3 id='atomic_increment-section-examples'>Examples</h3>\n\n<p>The following example increments the <code>score</code> custom field by 10 in a <a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a> update to a custom object called <code>family</code>:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -X PUT -F \"id=511117915554f74313000009\" -F \"fields={\"favorite\":\"play xbox 360\", \"pet\":\"shark\" ,\"score\":{'$inc':10}}\" \"https://api.cloud.appcelerator.com/v1/objects/family/update.json?key=TENIhpXtjFbkBbztvfZMwnciOjE9aHjd\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updateCustomObject\"\n  },\n  \"response\": {\n    \"family\": [\n      {\n        \"family_name\": \"ACS\",\n        \"score\": 10,\n        \"age\": 40,\n        \"cars\": 1,\n        \"favorite\": \"play xbox 360\",\n        \"pet\": \"shark\",\n        \"id\": \"511117915554f74313000009\",\n        \"created_at\": \"2013-02-05T14:30:41+0000\",\n        \"updated_at\": \"2013-02-05T14:30:41+0000\",\n        \"user\": {\n          \"id\": \"511117905554f74313000003\",\n          \"first_name\": \"Alice\",\n          \"last_name\": \"Gal\",\n          \"created_at\": \"2013-02-05T14:30:40+0000\",\n          \"updated_at\": \"2013-02-05T14:30:41+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2013-02-05T14:30:40+0000\",\n          \"username\": \"alice\",\n          \"email\": \"alice@gal.com\",\n          \"admin\": \"false\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>The following example decrements the <code>score</code> custom field by 20 in an <a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a> update:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -X PUT -F \"checkin_id=511111945554f742d300000b\" -F \"custom_fields={\"favorite\":\"play xbox 360\", \"pet\":\"shark\" ,\"score\":{'$inc':-20}}\" \"https://api.cloud.appcelerator.com/v1/checkins/update.json?key=TENIhpXtjFbkBbztvfZMwnciOjE9aHjd\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updateCheckin\"\n  },\n  \"response\": {\n    \"checkins\": [\n      {\n        \"id\": \"511111945554f742d300000b\",\n        \"created_at\": \"2013-02-05T14:05:08+0000\",\n        \"updated_at\": \"2013-02-05T14:05:08+0000\",\n        \"place\": {\n          \"id\": \"511111935554f742d3000009\",\n          \"name\": \"Maya Restaurant\",\n          \"created_at\": \"2013-02-05T14:05:07+0000\",\n          \"updated_at\": \"2013-02-05T14:05:07+0000\",\n          \"address\": \"303 2nd Street\",\n          \"city\": \"San Francisco\",\n          \"state\": \"CA\",\n          \"country\": \"United States\",\n          \"phone_number\": \"(415) 543-2928\",\n          \"latitude\": 37.784732,\n          \"longitude\": -122.395441,\n          \"google_cid\": \"7106049823222705125\",\n          \"user\": {\n            \"id\": \"511111925554f742d3000003\",\n            \"first_name\": \"Alice\",\n            \"last_name\": \"Gal\",\n            \"created_at\": \"2013-02-05T14:05:06+0000\",\n            \"updated_at\": \"2013-02-05T14:05:08+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"confirmed_at\": \"2013-02-05T14:05:06+0000\",\n            \"username\": \"alice\",\n            \"email\": \"alice@gal.com\",\n            \"admin\": \"false\"\n          }\n        },\n        \"user\": {\n          \"id\": \"511111925554f742d3000003\",\n          \"first_name\": \"Alice\",\n          \"last_name\": \"Gal\",\n          \"created_at\": \"2013-02-05T14:05:06+0000\",\n          \"updated_at\": \"2013-02-05T14:05:08+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2013-02-05T14:05:06+0000\",\n          \"username\": \"alice\",\n          \"email\": \"alice@gal.com\",\n          \"admin\": \"false\"\n        },\n        \"custom_fields\": {\n          \"family_name\": \"ACS\",\n          \"score\": 15,\n          \"age\": 40,\n          \"cars\": 1,\n          \"favorite\": \"play xbox 360\",\n          \"pet\": \"shark\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>If you apply $inc to multiple fields in one Update call, you will get error:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -X PUT -F \"checkin_id=511111945554f742d300000b\" -F \"custom_fields={\"favorite\":\"play xbox 360\", \"pet\":\"shark\" ,\"score\":{$inc:10}, \"age\":{$inc:10}}\" \"http://api.cloud.appcelerator.com/v1/checkins/update.json?key=HSejkGE9ghavAelMJv7bZYNM5HyMhqYq\"\n{\n  \"meta\": {\n    \"status\": \"fail\",\n    \"code\": 400,\n    \"message\": \"$inc operation only support to increase one field once.\",\n    \"method_name\": \"updateCheckin\"\n  }\n}\n</code></pre>\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/atomic_increment/README.md"},{"name":"troubleshooting","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/troubleshooting","title":"Troubleshooting","description":"Troubleshooting guide.","html":"<h1 id='troubleshooting-section-troubleshooting-guide'>Troubleshooting Guide</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/troubleshooting-section-titanium-sdk-and-studio'>Titanium SDK and Studio</a><ul><li><a href='#!/guide/troubleshooting-section-error-enabling-cloud-service-for-project'>Error enabling Cloud service for project</a></ul><li><a href='#!/guide/troubleshooting-section-push-notification-error-messages'>Push Notification Error Messages</a><ul><li><a href='#!/guide/troubleshooting-section-apple-push-notification-server-apns-errors'>Apple Push Notification Server (APNS) Errors</a><li><a href='#!/guide/troubleshooting-section-google-cloud-messaging-gcm-errors'>Google Cloud Messaging (GCM) Errors</a></ul>\n</div>\n\n<h2 id='troubleshooting-section-titanium-sdk-and-studio'>Titanium SDK and Studio</h2>\n\n<h3 id='troubleshooting-section-error-enabling-cloud-service-for-project'>Error enabling Cloud service for project</h3>\n\n<p>If you receive a message similar to \"Error enabling Cloud service for project\" in Studio when trying\nto enable Cloud services for your project, the ArrowDB server may be down or Studio is unable to connect\nto the ArrowDB server.  Try to enable Cloud services later.</p>\n\n<p>If you are still receiving this error when trying to enable Cloud services, check to see if your\napplication was created in <a href=\"https://platform.appcelerator.com/\">https://platform.appcelerator.com/</a>.</p>\n\n<p>If the application was created, check to see if ArrowDB keys were created for the application. To\nfind your ArrowDB keys, go to <a href=\"https://platform.appcelerator.com/\">https://platform.appcelerator.com/</a>,\nselect your application from the <strong>Apps</strong> drop-down list, then click <strong>Configuration</strong>.\nYou should see items for <strong>App Key</strong>, <strong>OAuth Consumer Key</strong> and <strong>OAuth Secret</strong>.\nClick the <strong>Show</strong> link to expand these items.  Note that you need both the\nDevelopment and Production version of these items.  You can switch between the two by clicking the\ndrop-down box in the top-right corner that displays either <strong>Development</strong> or <strong>Production</strong>.</p>\n\n<p>If you do <em>not</em> have ArrowDB keys, try to enable Cloud services again at a later time.</p>\n\n<p>If you do have ArrowDB keys, manually enter the ArrowDB key information in the <code>tiapp.xml</code> file.\nTo manually enter this information:</p>\n\n<ol>\n<li>Double-click your <code>tiapp.xml</code> file to open it in the <strong>Editor</strong>.</li>\n<li>Click the <strong>tiapp.xml</strong> tab in the lower-left corner of the <strong>Editor</strong>.</li>\n<li><p>Insert the following ArrowDB property keys as children of the <code>ti:app</code> parent tag and replace with the\n application's ArrowDB keys found earlier:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;ti:app xmlns:ti=\"http://ti.appcelerator.org\"&gt;\n    &lt;!-- Add these six tags and replace with your application's ArrowDB keys --&gt;\n    &lt;property name=\"acs-oauth-secret-development\" type=\"string\"&gt;OAUTH_CONSUMER_SECRET_DEV&lt;/property&gt;\n    &lt;property name=\"acs-oauth-key-development\" type=\"string\"&gt;OAUTH_CONSUMER_KEY_DEV&lt;/property&gt;\n    &lt;property name=\"acs-api-key-development\" type=\"string\"&gt;APP_KEY_DEV&lt;/property&gt;\n    &lt;property name=\"acs-oauth-secret-production\" type=\"string\"&gt;OAUTH_CONSUMER_SECRET_PROD&lt;/property&gt;\n    &lt;property name=\"acs-oauth-key-production\" type=\"string\"&gt;OAUTH_CONSUMER_KEY_PROD&lt;/property&gt;\n    &lt;property name=\"acs-api-key-production\" type=\"string\"&gt;APP_KEY_PROD&lt;/property&gt;\n    &lt;!-- Add these two tags if you are using Appcelerator Studio --&gt;\n    &lt;property name=\"acs-authbase-url\" type=\"string\"&gt;https://secure-identity.cloud.appcelerator.com&lt;/property&gt;\n    &lt;property name=\"acs-base-url\" type=\"string\"&gt;https://api.cloud.appcelerator.com&lt;/property&gt;\n    ...\n&lt;/ti:app&gt;\n</code></pre></li>\n<li><p>Save and close your <code>tiapp.xml</code> file.</p></li>\n<li>Reopen your <code>tiapp.xml</code> file.  In the <strong>Overview</strong> tab, it should show that Cloud services is enabled.</li>\n</ol>\n\n\n<h2 id='troubleshooting-section-push-notification-error-messages'>Push Notification Error Messages</h2>\n\n<p>The following table lists error messages reported by the ArrowDB push notification dispatcher, which is responsible for sending push notifications\nto the Apple Push Notification Service (APNS) and Google Cloud Messaging (GCM).</p>\n\n<h3 id='troubleshooting-section-apple-push-notification-server-apns-errors'>Apple Push Notification Server (APNS) Errors</h3>\n\n<table>\n<thead>\n<tr>\n<th>Code </th>\n<th> Message </th>\n<th> Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2001 </td>\n<td> There was a problem loading or reading the keystore. </td>\n<td> There was a problem loading the keystore (APNS certificate). Try <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_push_services-section-37551713_Configuringpushservices-ConfiguringpushservicesforiOSdevices\">re-creating</a> and uploading your keystore.</td>\n</tr>\n<tr>\n<td>2002 </td>\n<td> There was a network problem communicating with APNS, such as an SSL or socket error. </td>\n<td> Network communication between the ArrowDB push notification dispatcher and APNS was interrupted for some reason.</td>\n</tr>\n<tr>\n<td>2003 </td>\n<td> Certificate does not exist. </td>\n<td> The specified <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_push_services-section-37551713_Configuringpushservices-ConfiguringpushservicesforiOSdevices\">APNS push certificate</a> does not exist.</td>\n</tr>\n<tr>\n<td>2004 </td>\n<td> Certificate is disabled. </td>\n<td> The specified <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_push_services-section-37551713_Configuringpushservices-ConfiguringpushservicesforiOSdevices\">APNS push certificate</a> is disabled.</td>\n</tr>\n<tr>\n<td>2005 </td>\n<td> Payload is invalid. </td>\n<td> The <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Sending_and_Scheduling_Push_Notifications-section-37551726_SendingandSchedulingPushNotifications-CustomJSONpayloads\">JSON payload</a> is invalid.</td>\n</tr>\n<tr>\n<td>2006 </td>\n<td> Payload is longer than 2048 bytes. </td>\n<td> The JSON payload is longer than 2048 bytes. You need to make the payload smaller.</td>\n</tr>\n<tr>\n<td>2007 </td>\n<td> Certificate is revoked. </td>\n<td> The specified <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_push_services-section-37551713_Configuringpushservices-ConfiguringpushservicesforiOSdevices\">APNS push certificate</a> has been revoked. You need to generate a new certificate.</td>\n</tr>\n<tr>\n<td>2008 </td>\n<td> Certificate is expired. </td>\n<td> The specified <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_push_services-section-37551713_Configuringpushservices-ConfiguringpushservicesforiOSdevices\">APNS push certificate</a> has expired. You need to generate a new certificate.</td>\n</tr>\n<tr>\n<td>2008 </td>\n<td> Certificate is invalid. </td>\n<td> The specified <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_push_services-section-37551713_Configuringpushservices-ConfiguringpushservicesforiOSdevices\">APNS push certificate</a> is invalid. You need to generate a new certificate.</td>\n</tr>\n<tr>\n<td>2010 </td>\n<td> Socket is closed. </td>\n<td> The socket connection between the ArrowDB push dispatcher and APNS was closed.</td>\n</tr>\n</tbody>\n</table>\n\n\n<h3 id='troubleshooting-section-google-cloud-messaging-gcm-errors'>Google Cloud Messaging (GCM) Errors</h3>\n\n<p>Error codes in the 3000-3099 range are <a href=\"http://developer.android.com/reference/com/google/android/gcm/server/Constants.html\">GCM error codes</a>.\nError codes above 3100 are for custom ArrowDB push dispatcher errors.</p>\n\n<table>\n<thead>\n<tr>\n<th>Code </th>\n<th> Message </th>\n<th> Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3001 </td>\n<td> Too many messages were sent to a specific device. Retry sending after a while. </td>\n<td> GCM limits the number of push messages that can be sent to a particular device over a period. Increase the period between notifications for this device.</td>\n</tr>\n<tr>\n<td>3002 </td>\n<td> A particular message could not be sent because the GCM servers encountered an error. </td>\n<td> GCM servers encountered an error.</td>\n</tr>\n<tr>\n<td>3003 </td>\n<td> Bad registration_id. Sender should remove this registration_id. </td>\n<td> The GCM client sent a bad <a href=\"https://developer.android.com/google/gcm/client.html#sample-register\">registration ID</a> and should re-register with GCM to obtain a new ID. This error is uncommon if you are using the <a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.CloudPush\">Modules.CloudPush</a> module.</td>\n</tr>\n<tr>\n<td>3004 </td>\n<td> Time-to-live value provided is less than zero, or more than the allowed maximum. </td>\n<td> The message's <a href=\"http://developer.android.com/google/gcm/adv.html#ttl\">Time to Live</a> (expiration date) value is invalid. This error is uncommon if you are using the <a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.CloudPush\">Modules.CloudPush</a> module.</td>\n</tr>\n<tr>\n<td>3005 </td>\n<td> Payload is longer than maximum allowed size of 4096 bytes. </td>\n<td> GCM limits push notification payload size to 4096 bytes; try reducing the JSON message size and sending again.</td>\n</tr>\n<tr>\n<td>3006 </td>\n<td> The sender_id contained in the registration_id does not match the sender_id used to register with the GCM servers. </td>\n<td> The <a href=\"https://developer.android.com/google/gcm/client.html\">GCM client</a> did not use the proper sender_id. This error is uncommon if you are using the <a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.CloudPush\">Modules.CloudPush</a> module.</td>\n</tr>\n<tr>\n<td>3007 </td>\n<td> Collapse key is required. Include collapse key in the request. </td>\n<td> If you are using a custom GCM client you need to include a <a href=\"http://developer.android.com/google/gcm/adv.html\">collapse key</a> in the request. This error is uncommon if you are using the <a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.CloudPush\">Modules.CloudPush</a> module.</td>\n</tr>\n<tr>\n<td>3008 </td>\n<td> The request was missing a registration_id; registration_id is required with every request. </td>\n<td> The GCM client did not include a <a href=\"https://developer.android.com/google/gcm/client.html#sample-register\">registration ID</a> in its request. This error is uncommon if you are using the <a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.CloudPush\">Modules.CloudPush</a> module.</td>\n</tr>\n<tr>\n<td>3009 </td>\n<td> The user has un-installed the application or turned off notifications. Sender should stop sending messages to this device and delete the registration_id. The client needs to re-register with the GCM servers to receive notifications again. </td>\n<td></td>\n</tr>\n<tr>\n<td>3010 </td>\n<td> Too many messages sent by the sender. Retry after a while. </td>\n<td> GCM limits the number of push notifications that can be sent by particular sender over a given period. Increase the period between push notification send requests.</td>\n</tr>\n<tr>\n<td>3011 </td>\n<td> A particular message could not be sent because the GCM servers were not available. </td>\n<td> The GCM server were not available for an unknown reason. Try again later.</td>\n</tr>\n<tr>\n<td>3101 </td>\n<td> No result retrieved from GCM Server. </td>\n<td> The GCM server did not return a response from the push notification request.</td>\n</tr>\n<tr>\n<td>3102 </td>\n<td> gcm_apiKey is null. </td>\n<td> Make sure you've <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_push_services-section-37551713_Configuringpushservices-ConfiguringArrowapplicationforGCMservice\">configured ArrowDB push notifications</a> with your API key.</td>\n</tr>\n<tr>\n<td>3103 </td>\n<td> RegistrationId(s) is null or empty. </td>\n<td> The GCM client provided a null or empty <a href=\"https://developer.android.com/google/gcm/client.html#sample-register\">registration ID</a>. This error is uncommon if you are using the <a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.CloudPush\">Modules.CloudPush</a> module.</td>\n</tr>\n<tr>\n<td>3104 </td>\n<td> GCM internal error. </td>\n<td> An internal error occured with GCM. Check GCM status.</td>\n</tr>\n<tr>\n<td>3105 </td>\n<td> Message could not be sent, or there was a JSON parsing error. </td>\n<td> Make sure that the notification <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Sending_and_Scheduling_Push_Notifications-section-37551726_SendingandSchedulingPushNotifications-CustomJSONpayloads\">JSON payload</a> is properly formatted.</td>\n</tr>\n</tbody>\n</table>\n\n\n\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/troubleshooting/README.md"},{"name":"releasenotes","url":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/releasenotes","title":"ArrowDB Release Notes","description":"Changes in the latest releases.","html":"<h1 id='releasenotes-section-arrowdb-release-notes'>ArrowDB Release Notes</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href='#!/guide/releasenotes-section-arrowdb-1-5-2-release-29-june-2016'>ArrowDB 1.5.2 Release - 29 June 2016</a><li><a href='#!/guide/releasenotes-section-arrowdb-1-5-1-release-15-march-2016'>ArrowDB 1.5.1 Release - 15 March 2016</a><li><a href='#!/guide/releasenotes-section-arrowdb-1-5-0-release-14-february-2016'>ArrowDB 1.5.0 Release - 14 February 2016</a><li><a href='#!/guide/releasenotes-section-arrowdb-1-4-0-release-12-january-2016'>ArrowDB 1.4.0 Release - 12 January 2016</a><li><a href='#!/guide/releasenotes-section-arrowdb-release-1-3-0-17-september-2015'>ArrowDB Release 1.3.0 - 17 September 2015</a><li><a href='#!/guide/releasenotes-section-arrowdb-release-1-2-0-3-august-2015'>ArrowDB Release 1.2.0 - 3 August 2015</a><li><a href='#!/guide/releasenotes-section-arrowdb-release-1-1-13-11-june-2015'>ArrowDB Release 1.1.13 - 11 June 2015</a><li><a href='#!/guide/releasenotes-section-arrowdb-release-1-1-12-05-may-2015'>ArrowDB Release 1.1.12 - 05 May 2015</a><li><a href='#!/guide/releasenotes-section-arrowdb-release-1-1-11-21-april-2015'>ArrowDB Release 1.1.11 - 21 April 2015</a><li><a href='#!/guide/releasenotes-section-acs-release-1-1-10-22-march-2015'>ACS Release 1.1.10 - 22 March 2015</a><li><a href='#!/guide/releasenotes-section-acs-release-1-1-9-05-march-2015'>ACS Release 1.1.9 - 05 March 2015</a><li><a href='#!/guide/releasenotes-section-acs-release-1-1-8'>ACS Release 1.1.8</a><li><a href='#!/guide/releasenotes-section-acs-release-1-1-7-05-jan-2015'>ACS Release 1.1.7 - 05 Jan 2015</a><li><a href='#!/guide/releasenotes-section-acs-release-1-1-6-29-october-2014'>ACS Release 1.1.6 - 29 October 2014</a><li><a href='#!/guide/releasenotes-section-acs-release-1-1-5-15-september-2014'>ACS Release 1.1.5 - 15 September 2014</a><ul><li><a href='#!/guide/releasenotes-section-new-features-and-behavior-changes'>New Features and Behavior Changes</a><li><a href='#!/guide/releasenotes-section-bug-fixes'>Bug Fixes</a></ul><li><a href='#!/guide/releasenotes-section-acs-release-1-1-4-14-august-2014'>ACS Release 1.1.4 - 14 August 2014</a><ul><li><a href='#!/guide/releasenotes-section-new-features'>New Features</a><li><a href='#!/guide/releasenotes-section-bug-fixes'>Bug Fixes</a></ul><li><a href='#!/guide/releasenotes-section-acs-release-1-1-3-17-july-2014'>ACS Release 1.1.3 - 17 July 2014</a><ul><li><a href='#!/guide/releasenotes-section-new-features'>New features</a><li><a href='#!/guide/releasenotes-section-bug-fixes'>Bug fixes</a></ul><li><a href='#!/guide/releasenotes-section-acs-release-1-1-2'>ACS Release 1.1.2</a><li><a href='#!/guide/releasenotes-section-acs-release-1-1-1-16-may-2014'>ACS Release 1.1.1 - 16 May 2014</a><ul><li><a href='#!/guide/releasenotes-section-new-features'>New features</a><li><a href='#!/guide/releasenotes-section-bug-fixes'>Bug fixes</a></ul><li><a href='#!/guide/releasenotes-section-07-march-2014'>07 March 2014</a><li><a href='#!/guide/releasenotes-section-11-january-2013'>11 January 2013</a><li><a href='#!/guide/releasenotes-section-18-december-2013'>18 December 2013</a><li><a href='#!/guide/releasenotes-section-6-december-2013'>6 December 2013</a><li><a href='#!/guide/releasenotes-section-7-november-2013'>7 November 2013</a><li><a href='#!/guide/releasenotes-section-10-october-2013'>10 October 2013</a><li><a href='#!/guide/releasenotes-section-26-september-2013'>26 September 2013</a><li><a href='#!/guide/releasenotes-section-1-august-2013'>1 August 2013</a><ul><li><a href='#!/guide/releasenotes-section-google-cloud-messaging-for-android-push-notifications'>Google Cloud Messaging for Android Push Notifications</a></ul><li><a href='#!/guide/releasenotes-section-10-june-2013'>10 June 2013</a><ul><li><a href='#!/guide/releasenotes-section-fixed-issues-and-enhancements'>Fixed Issues and Enhancements</a><li><a href='#!/guide/releasenotes-section-future-behavior-changes'>Future Behavior Changes</a><ul><li><a href='#!/guide/releasenotes-section-application-user-session-expiration'>Application User Session Expiration</a><li><a href='#!/guide/releasenotes-section-geo-query'>Geo Query</a></ul></ul><li><a href='#!/guide/releasenotes-section-26-apr-2013'>26 Apr 2013</a><li><a href='#!/guide/releasenotes-section-19-apr-2013-session-expiration-policy-update'>19 Apr 2013 -- Session Expiration Policy Update</a><li><a href='#!/guide/releasenotes-section-11-apr-2013'>11 Apr 2013</a><li><a href='#!/guide/releasenotes-section-28-mar-2013'>28 Mar 2013</a><li><a href='#!/guide/releasenotes-section-14-mar-2013'>14 Mar 2013</a><li><a href='#!/guide/releasenotes-section-14-feb-2013'>14 Feb 2013</a><li><a href='#!/guide/releasenotes-section-31-jan-2013'>31 Jan 2013</a><li><a href='#!/guide/releasenotes-section-21-jan-2013'>21 Jan 2013</a></ul>\n</div>\n\n<h2 id='releasenotes-section-arrowdb-1-5-2-release-29-june-2016'>ArrowDB 1.5.2 Release - 29 June 2016</h2>\n\n<p>This release of ArrowDB 1.5.2 includes several internal improvements and bug fixes.</p>\n\n<h2 id='releasenotes-section-arrowdb-1-5-1-release-15-march-2016'>ArrowDB 1.5.1 Release - 15 March 2016</h2>\n\n<p>This release of ArrowDB 1.5.1 addresses a few internal improvements and bug fixes.</p>\n\n<h2 id='releasenotes-section-arrowdb-1-5-0-release-14-february-2016'>ArrowDB 1.5.0 Release - 14 February 2016</h2>\n\n<p>This release of ArrowDB 1.5.0 addresses a few internal improvements and bug fixes.</p>\n\n<h2 id='releasenotes-section-arrowdb-1-4-0-release-12-january-2016'>ArrowDB 1.4.0 Release - 12 January 2016</h2>\n\n<p>This release of ArrowDB includes version 1.1.0 of the CLI and 1.4.0 of the\nserver, and includes a new feature and improvement.</p>\n\n<p><strong>New Features and Improvements</strong></p>\n\n<ul>\n<li><em>Size and exclusive containers</em>: Arrow Cloud supports deploying app to an exclusive\nbase container and setting the size of the container in this case.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-arrowdb-release-1-3-0-17-september-2015'>ArrowDB Release 1.3.0 - 17 September 2015</h2>\n\n<p><strong>Behavior changes</strong></p>\n\n<ul>\n<li><strong>Search APIs</strong>: All search APIs are deprecated. For text searches, use a\n<a href=\"#!/guide/search_query\"><code>$text</code> query operator</a> with the query method.\nExisting datasources created before ArrowDB 1.3.0 can continue to use the search API.\nNew datasources created since ArrowDB 1.3.0 cannot use the search API.\nAffected APIs include <a href=\"#!/api/Events-method-search\" rel=\"Events-method-search\" class=\"docClass\">Events.search</a>, <a href=\"#!/api/Friends-method-search\" rel=\"Friends-method-search\" class=\"docClass\">Friends.search</a>,\n<a href=\"#!/api/Places-method-search\" rel=\"Places-method-search\" class=\"docClass\">Places.search</a> and <a href=\"#!/api/Users-method-search\" rel=\"Users-method-search\" class=\"docClass\">Users.search</a>.</li>\n</ul>\n\n\n<p><strong>New feautres</strong></p>\n\n<ul>\n<li><p><strong>Subscribe or Unsubscribe to Multiple Push Channels</strong>: Comma-separate a list of channel names to\nsubscribe or unsubscribe to multiple push channels with the <a href=\"#!/api/PushNotifications\" rel=\"PushNotifications\" class=\"docClass\">PushNotifications</a> APIs.</p></li>\n<li><p><strong>Text Query Operator</strong>: To perform a full-text search on ArrowDB objects,\nuse the <code>$text</code> query operator with the <code>where</code> parameter of query methods.\nFor details, see the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p></li>\n</ul>\n\n\n<h2 id='releasenotes-section-arrowdb-release-1-2-0-3-august-2015'>ArrowDB Release 1.2.0 - 3 August 2015</h2>\n\n<p><strong>Bug fixes</strong></p>\n\n<ul>\n<li>Fixed an issue where objects created before the batch delete job started were deleted.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-arrowdb-release-1-1-13-11-june-2015'>ArrowDB Release 1.1.13 - 11 June 2015</h2>\n\n<p><strong>New features</strong></p>\n\n<ul>\n<li>Add ability to batch create custom objects using the\n<a href=\"#!/api/CustomObjects-method-batch_create\" rel=\"CustomObjects-method-batch_create\" class=\"docClass\">objects/:classname/batch_create.json method</a>.</li>\n</ul>\n\n\n<p><strong>Bug fixes</strong></p>\n\n<ul>\n<li>Fixed an issue where relational fields were not expanded in responses from Message APIs.</li>\n<li>Fixed an issue where using the coordinates, order, skip and limit fields together did not\nreturn the correct results.</li>\n<li>Fixed an issue where a device could subscribe multiple times to push notifications with\nthe same device token.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-arrowdb-release-1-1-12-05-may-2015'>ArrowDB Release 1.1.12 - 05 May 2015</h2>\n\n<p><strong>New Features</strong></p>\n\n<ul>\n<li><p>Add ability to set private file permission on File objects using the <code>s3_acl</code> field. When creating\nor updating a File object, set the <code>s3_acl</code> field to <code>private</code> to only allow logged-in users to\naccess the file. The retrieved URL will be temporary and expire, by default, after five minutes.  You\ncan adjust the expiration time with the query or show method's <code>expires</code> field.\nPreviously, all files without an access control list were public.</p></li>\n<li><p>Add ability to update the owner of a Place object using the <code>user_id</code> field. When using the update\nmethod, set the <code>user_id</code> field to the ID of the new owner.</p></li>\n</ul>\n\n\n<p><strong>Bug fixes</strong></p>\n\n<ul>\n<li>Fixed an issue where email templates were failing to insert passed parameters.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-arrowdb-release-1-1-11-21-april-2015'>ArrowDB Release 1.1.11 - 21 April 2015</h2>\n\n<p><strong>Bug fixes</strong></p>\n\n<ul>\n<li>Fixed an issue where GeoFence objects were not exported during data exports.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-acs-release-1-1-10-22-march-2015'>ACS Release 1.1.10 - 22 March 2015</h2>\n\n<p><strong>Bug fixes</strong></p>\n\n<ul>\n<li>Fixed an issue where updating a custom object with invalid fields would return a 500 error code\ninstead of a 400 error code.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-acs-release-1-1-9-05-march-2015'>ACS Release 1.1.9 - 05 March 2015</h2>\n\n<p><strong>New Features, Improvements and Changes</strong></p>\n\n<ul>\n<li><p><strong>ACL queries</strong> &mdash;\nIn prior ACS releases, any user could query ACLs created by another user.  In applications created with\nACS 1.1.9 and later, a user can only query ACLs they create, while an application admin can query\nACLs for any arbitrary user by specifying the <code>user_id</code> field.</p></li>\n<li><p><strong>Send push notifications to multiple push channels</strong> &mdash;\nThe Push Notifications API now supports sending push notifications to multiple push channels.\nSimply comma-separate the list of channels you want to send the notification to.  Due to this\nchange, push channel names cannot contain a comma.</p></li>\n<li><p><strong><code>user_id</code> field renamed to <code>sudo_id</code> for admin operations</strong> &mdash;\nThe <code>user_id</code> field, which was used to indicate the user that an application administrator could\nperform an ACS API call on behalf of, was renamed to the <code>sudo_id</code> field. For details, see\n<a href=\"#!/guide/admin_access-section-perform-acs-api-calls-on-behalf-of-another-user\">Admin Access: Perform ACS API Calls on Behalf of Another User</a>.</p></li>\n</ul>\n\n\n<p><strong>Bug Fixes</strong></p>\n\n<ul>\n<li>Fixed an issue where a delayed job, such as exporting a large data set, would exit silently.</li>\n<li>Fixed pagination on push channel queries. Previously, push channel query results would not be\ncorrectly paginated.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-acs-release-1-1-8'>ACS Release 1.1.8</h2>\n\n<p>This version was skipped.</p>\n\n<h2 id='releasenotes-section-acs-release-1-1-7-05-jan-2015'>ACS Release 1.1.7 - 05 Jan 2015</h2>\n\n<p><strong>New Features, Improvements and Changes</strong></p>\n\n<ul>\n<li><p><strong>Photo resizing</strong> &mdash; By default, ACS no longer automatically resizes photo uploads.\nTo resize photos upon upload, include the <code>photo_sizes[&lt;size&gt;]</code> parameter in the request.\nSee <a href=\"http://docs.appcelerator.com/cloud/latest/#!/guide/photosizes\">Photo Uploading &amp; Resizing</a> for details.</p></li>\n<li><p><strong>Default JSON response depth</strong> &mdash; If not specified in the request, the default value for the <code>response_json_depth</code>\\\nparameter for ACS method calls is now <strong>1</strong>. For applications created prior to ACS 1.1.7,\nthe default value for <code>response_json_depth</code> is still <strong>3</strong>. Valid values are between 1-8.</p>\n\n<p>  A higher <code>response_json_depth</code> value can reduce the number of API calls\n  your application makes to retrieve related or dependent objects. It can also\n  increase the size of the JSON response payload and the server's response time.</p></li>\n<li><p><strong>Filtering of unauthorized results</strong> &mdash;\nIn prior ACS releases, if a query request matched objects whose ACL settings\ndid not allow access to the current user, the response would include \"placeholder\" records that\nindicates the permissions error. In applications created with ACS 1.1.7 and later, query objects the current user\nis not allowed to view are not included in the response at all.</p></li>\n</ul>\n\n\n<p><strong>Bug Fixes</strong></p>\n\n<p>Below is a selected list of bug fixes in this ACS release.</p>\n\n<ul>\n<li>Fixed internal server error when querying a user by their geographic coordinates.</li>\n<li>Fixed internal error when calling messages/show.json when providing a deleted message ID.</li>\n<li>Fixed internal server error when calling users/show with invalid or missing session ID.</li>\n<li>Fixed issue with updating/deleting ACS object with custom ACL permission.</li>\n<li>Fixed error when configuring SMTP settings for Office 365.</li>\n<li>Fixed error that occurred when updating the primary photo for an ACS object.</li>\n<li>Fixed issue that occurred after deleting application data in the web console that caused changes to the application settings to fail.</li>\n<li>Fixed issue with Cloud API logs not appearing in Dashboard.</li>\n<li>Fixed HTTP 500 error when calling keyvalues/append.json.</li>\n<li>Fixed issue uploading photos using the community web console.</li>\n<li>Attempting to access an ACS object whose ACL does allow access by the current user now returns an HTTP 401 error instead of 403.</li>\n<li>Fixed an issue with notification emails not being sent when an error with an iOS push certificate was encountered.</li>\n<li>Fixed 500 error in the community web console when browsing Place objects.</li>\n<li>Deleting a review of a object now properly updates the review count for that object.</li>\n<li>Querying objects with selectors on relational fields now works as expected.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-acs-release-1-1-6-29-october-2014'>ACS Release 1.1.6 - 29 October 2014</h2>\n\n<p>Appcelerator Cloud Services version 1.1.6 contains the following new features, bug fixes,\nand  improvements.</p>\n\n<p><strong>New Features</strong></p>\n\n<ul>\n<li><p>With respect to ACS query operations, starting with ACS 1.1.6, we have made the following changes:</p>\n\n<ul>\n<li>Skip is limited to 0-4999; as a result you can not skip beyond 5000 records.</li>\n<li>If the query includes <code>count=true</code>, the query response's <code>meta</code> object will contains a <code>count</code>\nfield whose value is the total number of objects that matched the query criteria.\nIf the query matches more than 5000 objects, the <code>count</code> field will contain the value \"5000+\".\nIf your query result set includes more than 5000 records,\nyou should perform range-based queries for pagination as discussed\nin <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</li>\n</ul>\n</li>\n<li><p>Increased size limit of iOS <a href=\"/cloud/latest/#!/api/PushPayload\">push notification payloads</a> to 2048KB.</p></li>\n<li>Added support for <code>category</code> field in push notifications to support\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/iOS_Interactive_Notifications\">interactive notifications</a>\non iOS 8 devices.</li>\n</ul>\n\n\n<p><strong>Bug Fixes and Improvements</strong></p>\n\n<ul>\n<li>Fixed errors that occurred in the <a href=\"https://my.appcelerator.com/apps\">Community web console</a> when\ncreating, editing, updating, or deleting application users.</li>\n<li>The total <a href=\"/cloud/latest/#!/api/Photos-method-count\">photo count</a> for an application now\nproperly updates when adding or removing an  object's primary photo, such as\n<a href=\"#!/api/Places-property-photo\" rel=\"Places-property-photo\" class=\"docClass\">Places.photo</a> or <a href=\"#!/api/Users-property-photo\" rel=\"Users-property-photo\" class=\"docClass\">Users.photo</a>.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-acs-release-1-1-5-15-september-2014'>ACS Release 1.1.5 - 15 September 2014</h2>\n\n<p>The 1.1.5 release of Appcelerator Cloud Services includes the following\nnew features and bug fixes.</p>\n\n<h3 id='releasenotes-section-new-features-and-behavior-changes'>New Features and Behavior Changes</h3>\n\n<ul>\n<li><p><strong>New Paging Restriction on Queries</strong> &mdash; Previously, if a query matched 1\nmillion records (for example) ACS performed a sort and limit on those records in memory, which\nwas highly inefficient. There is now a \"hard stop\" on queries at 5000 records.\nThis means that if a query matches 1 million records, ACS will only\nlook at the first 5000, in random order, and then sort on them.</p>\n\n<p>  To narrow down query results, developers should now use range-based queries\n  using a <code>where</code> clause. See the <a href=\"#!/guide/search_query-section-query-pagination\">documentation</a>\n  and <a href=\"#!/guide/search_query-section-range-based-query-pagination-examples\">examples</a> for\n  more information.</p></li>\n<li><p>A new parameter named <strong><code>count</code></strong> has been added to all query methods.\nWhen a query contains <code>count=true</code> as a parameter, the <code>meta</code> object in the response\ncontains a <code>count</code> field whose value is the total number of objects that matched the query.\nSee the <a href=\"#!/guide/search_query-section-range-based-query-pagination-examples\">examples</a> for more information.</p></li>\n<li><p>The <code>page</code> and <code>per_page</code> query parameters are no longer supported in ACS\n1.1.5, and responses do not contain <code>page</code>, <code>per_page</code>, <code>total_pages</code>, or <code>total_results</code> fields.\nApplications created with ACS 1.1.4 and earlier can continue to these these parameters,\nbut they will eventually be deprecated and removed. Developers are encouraged to migrate\ntheir applications to use the <a href=\"#!/guide/search_query-section-query-pagination\">range-based queries</a>\navailable in ACS 1.1.5.</p></li>\n<li><p><strong>Batch delete</strong> &mdash; <a href=\"#!/guide/admin_access-section-batch-delete\">Batch delete</a> of ACS\nobjects is now performed asynchronously in a separate process, rather than\nimmediately on method invocation.</p></li>\n<li><strong>Deleted Objects and Dependencies</strong> &mdash; When an object is deleted that has dependencies, the dependent objects are not deleted.\nFor instance, if you delete a Users object that had a <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a> object specified as the user's primary photo,\nthe corresponding Photos object is not deleted.</li>\n<li><p><strong>Wildcard regular expressions</strong> are now not allowed in <a href=\"#!/guide/search_query\">query operations</a>. For\nexample, the ACS query <code>where=\"color\": {\"$regex\" :\"^.*b\"}</code> will result in the following error:</p>\n\n<pre><code>  This regex query is not supported, regex expression should start with ^letter or ^digit.\n</code></pre></li>\n<li>When <a href=\"#!/api/ACLs\">creating an ACL</a> the <code>public_read</code> and <code>public_write</code> parameters must now be strings.</li>\n<li><p>The <strong><a href=\"#!/api/CustomObjects-method-count\" rel=\"CustomObjects-method-count\" class=\"docClass\">CustomObjects.count</a></strong> method has been modified to include the object\ntype in the request (<code>objects/&lt;object&gt;/count.json</code>, for example), and only\nreturns the count for the specified type. The <code>count</code> field is returned in the <code>meta</code> JSON response object,\nand not in the <code>response</code> object.</p>\n\n<pre><code>  $ curl -X GET \"http://${HOST}/v1/car/count.json?key=${KEY}&amp;pretty_json=true\"\n  {\n    \"meta\": {\n      \"code\": 200,\n      \"status\": \"ok\",\n      \"method_name\": \"objectsCount\",            \n      \"count\": 15\n  }\n</code></pre></li>\n<li><p>The response of <code>count</code> methods for all ACS objects now includes a <code>method_name</code> field, and\nthe <code>count</code> field is included in the <code>meta</code> object and not the <code>response</code> object.</p>\n\n<pre><code>  $ curl -X GET \"http://${HOST}/v1/checkins/count.json?key=${KEY}&amp;pretty_json=true\"\n  {\n    \"meta\": {\n      \"code\": 200,\n      \"status\": \"ok\",\n      \"method_name\": \"checkinsCount\",\n      \"count\": 15\n  }\n</code></pre></li>\n</ul>\n\n\n<h3 id='releasenotes-section-bug-fixes'>Bug Fixes</h3>\n\n<ul>\n<li>Fixed an issue where subscribing a device using the <code>subscribe_token</code> method\ndid not increment the application's push notifications count.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-acs-release-1-1-4-14-august-2014'>ACS Release 1.1.4 - 14 August 2014</h2>\n\n<p>The 1.1.4 release of Appcelerator Cloud Services includes the following updates and bug fixes:</p>\n\n<h3 id='releasenotes-section-new-features'>New Features</h3>\n\n<ul>\n<li>Added a new <code>count</code> API to that returns the total number of objects of the specified type. This API\nis available to the following ACS types: <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a>, <a href=\"#!/api/Chats\" rel=\"Chats\" class=\"docClass\">Chats</a>, <a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a>, <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a>,\n<a href=\"#!/api/Emails\" rel=\"Emails\" class=\"docClass\">Emails</a>, <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a>, <a href=\"#!/api/Files\" rel=\"Files\" class=\"docClass\">Files</a>, <a href=\"#!/api/GeoFences\" rel=\"GeoFences\" class=\"docClass\">GeoFences</a>, <a href=\"#!/api/KeyValues\" rel=\"KeyValues\" class=\"docClass\">KeyValues</a>, <a href=\"#!/api/Messages\" rel=\"Messages\" class=\"docClass\">Messages</a>,\n<a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a>, <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>, <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>, <a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a>, <a href=\"#!/api/PushNotifications\" rel=\"PushNotifications\" class=\"docClass\">PushNotifications</a>, <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>,\n<a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a>, and <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>.</li>\n</ul>\n\n\n<p>For example, the following shows an example <code>cURL</code> request and response for the number of Photos:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/photos/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n  },\n  \"response\": {\n    \"photos\": 10.0\n  }\n}\n</code></pre>\n\n<h3 id='releasenotes-section-bug-fixes'>Bug Fixes</h3>\n\n<ul>\n<li><a href=\"http://docs.appcelerator.com/cloud/latest/#!/api/Chats-method-get_chat_groups\"><code>get_chat_groups</code></a>\nnow only returns chat groups that the current user belongs to, as expected.</li>\n<li><a href=\"http://docs.appcelerator.com/cloud/latest/#!/api/PushNotifications-method-subscribe_token\"><code>subscribe_token</code></a>\nnow properly increases the subscribed device count, as displayed in Dashboard or My Apps.</li>\n<li>Queries now properly limit the number of results specified by the query\n<a href=\"http://docs.appcelerator.com/cloud/latest/#!/guide/search_query-section-skip-and-limit\"><code>limit</code></a> parameter.</li>\n<li>Fixed an issue where valid .p12 certificates were being disabled when ACS could not make a successful\nconnection to Apple Push Notification Service (APNS).</li>\n<li>Fixed an issue where calling <a href=\"http://docs.appcelerator.com/cloud/latest/#!/api/KeyValues-method-incrby\"><code>keyvalues.incrby</code></a>\nor <a href=\"http://docs.appcelerator.com/cloud/latest/#!/api/KeyValues-method-append\"><code>keyvalues.append</code></a>\nas an application admin on behalf of another user (by specifying the <code>user_id</code> parameter) would create a\nnew keyvalue belonging to the admin, rather than updating the one belonging to the specified user.</li>\n<li>Fixed an unexpected error (\"Export currently in progress\") when exporting application data from\nthe My Apps web console.</li>\n<li>An ACS user's <code>first_name</code> or <code>last_name</code> fields can now be set to an empty string, as expected,\nas long the <code>username</code> field is not empty.</li>\n<li>Fixed an issue when assigning binary data to a Keyvalue object.</li>\n<li>Fixed an issue with <a href=\"http://docs.appcelerator.com/cloud/latest/#!/api/PushNotifications-method-notify\"><code>push_notification/notify.json</code></a>\nwhere a non-admin user was able to send a geo-based notification without specifying\neither <code>to_ids</code> or <code>friends</code> fields.</li>\n<li>Fixed an issue where creating a new <a href=\"http://docs.appcelerator.com/cloud/latest/#!/api/Reviews-method-create\"><code>Review</code></a>\nfor a Photo object made the reviewed photo the primary photo for the new Review.</li>\n<li>The push notification logs in the <a href=\"https://my.appcelerator.com/apps\">My Apps</a> web console now shows the correct push count for Android and IOS\ndevices.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-acs-release-1-1-3-17-july-2014'>ACS Release 1.1.3 - 17 July 2014</h2>\n\n<p>The 1.1.3 release of Appcelerator Cloud Services includes the following fixes and features:</p>\n\n<h3 id='releasenotes-section-new-features'>New features</h3>\n\n<ul>\n<li><p>Add ability to query for all ACS objects a user liked. See the <a href=\"#!/api/Likes-method-query\">Likes.query</a> method.</p></li>\n<li><p>Add ability to create a Files object by using a URL to access the file to upload.  See the\n<a href=\"#!/api/Files-method-create\">Files.create</a> method.</p></li>\n<li><p>Add <code>pretty_json</code> field to all method requests to enable or disable prettifying JSON response\ndata.  JSON pretty print is disabled by default.</p></li>\n</ul>\n\n\n<h3 id='releasenotes-section-bug-fixes'>Bug fixes</h3>\n\n<ul>\n<li><p>Fixed an issue with sending ACS request from Titanium Mobile Web applications.</p></li>\n<li><p>Fixed an issue where tags were not being stored for Events objects.</p></li>\n<li><p>Fixed an issue where using the <code>expire_after_seconds</code> field with the PushNotifications\n<code>notify_token</code> method would return an error.</p></li>\n<li><p>Fixed an issue with the ACS web console where SMTP settings were not saved when switching Test mode off.</p></li>\n<li><p>Fixed an issue where updating a relation object for a Places object was not being updated.</p></li>\n<li><p>Fixed an issue where the application fails to unregister from push notifications when the application is uninstalled.</p></li>\n<li><p>Fixed an issue on the Cloud Dashboard where the Storage statistic was not being displayed.</p></li>\n<li><p>Fixed an issue on the Cloud Dashboard when editing a Statuses object. The Places object\nassociated with the Statuses object was not updated.</p></li>\n</ul>\n\n\n<h2 id='releasenotes-section-acs-release-1-1-2'>ACS Release 1.1.2</h2>\n\n<p>This version was skipped.</p>\n\n<h2 id='releasenotes-section-acs-release-1-1-1-16-may-2014'>ACS Release 1.1.1 - 16 May 2014</h2>\n\n<p>The 1.1.1 release of Appcelerator Cloud Services includes the following fixes and features:</p>\n\n<h3 id='releasenotes-section-new-features'>New features</h3>\n\n<ul>\n<li><p>When calling an ACS object's <code>query</code> or <code>show</code> methods you can include a new parameter called\n<code>show_user_like</code>. If the current user has liked the object being queried or shown, the JSON response\ncontains <code>\"current_user_liked\":true</code>. See the <a href=\"#!/api/Checkins-method-query\" rel=\"Checkins-method-query\" class=\"docClass\">Checkins.query</a>\nand <a href=\"#!/api/Checkins-method-show\" rel=\"Checkins-method-show\" class=\"docClass\">Checkins.show</a> REST API examples for examples.</p></li>\n<li><p>ACS now uses <code>yajl-ruby</code> to generate JSON responses. YAJL is faster than the previous <code>Hash.to_json</code>\nimplementation.</p></li>\n<li><p>ACS now supports SSL uploads for File and Photo objects.</p></li>\n</ul>\n\n\n<h3 id='releasenotes-section-bug-fixes'>Bug fixes</h3>\n\n<ul>\n<li><p>Fixed an Android issue with UTF-8 encoded characters not being displayed properly in push notifications.</p></li>\n<li><p>Fixed an issue where an application administrator was unable to check ACLs for a regular user.</p></li>\n</ul>\n\n\n<h2 id='releasenotes-section-07-march-2014'>07 March 2014</h2>\n\n<ul>\n<li>ACS now supports sending push notifications to devices located within a geographic region you specify.\nFor more information, see \"Location-Based Push Notifications\" in the <a href=\"/cloud/latest/#!/api/PushNotifications\">PushNotification</a>\nAPI reference.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-11-january-2013'>11 January 2013</h2>\n\n<ul>\n<li>The namespace used by the ACS SDKs for <a href=\"#!/guide/android\">Android</a> and <a href=\"#!/guide/ios\">iOS</a>\nhas changed from <code>Cocoafish</code> to <code>ACSClient</code>. The documentation and sample code has been updated to reflect this change.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-18-december-2013'>18 December 2013</h2>\n\n<ul>\n<li>Fixed a JSON parsing error with the Messages API.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-6-december-2013'>6 December 2013</h2>\n\n<p>This update includes the following bug fixes and enhancements:</p>\n\n<ul>\n<li><p>Add ability to increment or decrement the badge value when sending a push notification.  See the\n\"Badge\" section in <a href=\"#!/api/PushNotifications\">PushNotifications</a>.</p></li>\n<li><p>Add ability to use a query to send push notifications to specific users.  See the <code>where</code>\nparameter in <a href=\"#!/api/PushNotifications-method-notify\">push_notification/notify.json</a>.</p></li>\n<li><p>Add support for admin batch delete operations.  See the \"Admin Batch Delete\" section in\n<a href=\"#!/guide/admin_access\">Admin Access</a>.</p></li>\n<li><p>Change admin operation to send push notification to all users.  Set the <code>to_ids</code> parameter to\n<code>everyone</code> for the <code>push_notification/notify.json</code> method.  Only new applications need to\nuse this mechanism.  Old applications made prior to this release can continue not to specify\n<code>to_ids</code>.  You do not need to set this parameter in the web interface.</p></li>\n<li><p>Add support for application admin to send push notifications to all users with the\n<code>push_notification/notify_tokens.json</code> method. Set the <code>to_tokens</code> parameter to <code>everyone</code>.\nPreviously, you could not send push notifications to all users with this method.</p></li>\n</ul>\n\n\n<h2 id='releasenotes-section-7-november-2013'>7 November 2013</h2>\n\n<p>This update includes the following bug fixes and enhancements:</p>\n\n<ul>\n<li><p>Add ability to set an expiration date for push notificiations with the <code>expire_after_seconds</code>\nparameter. See the <code>options</code> parameter for <a href=\"#!/api/PushNotifications-method-notify\">push_notification/notify.json</a>\nand <a href=\"#!/api/PushNotifications-method-notify_tokens\">push_notification/notify_token.json</a>.</p></li>\n<li><p>Add ability to schedule push notifications to be sent at specific times and intervals.  This\nfeature is only available to Enterprise customers.  See <a href=\"#!/api/PushSchedules\">PushSchedules</a>.</p></li>\n<li><p>Changed PushNotification API to use <code>android</code> as the push notification type for either MQTT or GCM.\nAfter you have configured the ACS web console for either MQTT or GCM,\nthe ACS server automatically sends the push notification to the correct service.\nPreviously, you had to specify either <code>android</code> for MQTT or <code>gcm</code> for GCM.</p></li>\n<li><p>Fixed an issue where a currently logged in user could not create a new user.</p></li>\n</ul>\n\n\n<h2 id='releasenotes-section-10-october-2013'>10 October 2013</h2>\n\n<p>This update includes the following enhancements:</p>\n\n<ul>\n<li>New PushNotifications API to query existing push channels and the number of devices subscribed\nto a push channel. See <a href=\"#!/api/PushNotifications-method-channels_query\">push_notification/channels/query.json</a>\nand <a href=\"#!/api/PushNotifications-method-channels_show\">push_notification/channels/show.json</a>.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-26-september-2013'>26 September 2013</h2>\n\n<p>This update includes the following bug fixes and enhancements:</p>\n\n<ul>\n<li><p>The query methods support two new parameters: <code>sel</code> and <code>unsel</code>.  Use these parameters to\nspecify which fields to return or not to return.  You cannot use these parameters together.</p></li>\n<li><p>Website: Added new feature to unsubscribe devices from push noticifactions using\nthe ACS web console.</p></li>\n<li><p>Fixed an issue where the <code>$inc</code> operation was not autoincrementing a custom field.</p></li>\n</ul>\n\n\n<h2 id='releasenotes-section-1-august-2013'>1 August 2013</h2>\n\n<h3 id='releasenotes-section-google-cloud-messaging-for-android-push-notifications'>Google Cloud Messaging for Android Push Notifications</h3>\n\n<p>ACS now supports Google Cloud Messaging (GCM) for push notifications on Android devices.</p>\n\n<p>For instructions on setting up GCM, see the \"Configure Your App For Enabling Push Notifications\"\nsubsection under the \"Push Notifications\" section of the <a href=\"#!/guide/android\">Android SDK guide</a>.</p>\n\n<p>To send push notifications, refer to <a href=\"#!/api/PushNotifications\">PushNotifications</a>.</p>\n\n<h2 id='releasenotes-section-10-june-2013'>10 June 2013</h2>\n\n<h3 id='releasenotes-section-fixed-issues-and-enhancements'>Fixed Issues and Enhancements</h3>\n\n<p>This update includes the following bug fixes and enhancements:</p>\n\n<ul>\n<li><p>Removed dependency between push notifications, and device and user registrations.\nUsers are no longer required to have an ACS account to receive push notifications.</p></li>\n<li><p>Fixed an issue where using special characters cause the query to fail.</p></li>\n<li><p>Website: Fixed an issue viewing relational field objects.\nRelational field objects were being displayed as objects and not ID strings.</p></li>\n<li><p>Website: Fixed an issue viewing custom objects.\nSome custom objects could not be viewed in the web interface.</p></li>\n<li><p>Website: Fixed an issue with SMTP settings.\nIf a TLS value was specified, it was not properly checked.</p></li>\n</ul>\n\n\n<h3 id='releasenotes-section-future-behavior-changes'>Future Behavior Changes</h3>\n\n<p>In a future release, currently scheduled in a few months,\nthe following changes are being made to user sessions and geo query.</p>\n\n<h4 id='releasenotes-section-application-user-session-expiration'>Application User Session Expiration</h4>\n\n<p>An application user session never expires today.  We are introducing a policy of expiring and\nremoving sessions that have been inactive for six months.</p>\n\n<p>If your application logins a user and saves the <code>session_id</code>,\nnormally stored in a cookie, every time it makes a REST call to ACS using the same <code>session_id</code>, the\nexpiry clock is reset and the user gets another six months. As long as the ACS user is active using\nthe same <code>session_id</code> within six months, there is no impact on your application and currently logged in\nuser. If an application user is completely inactive for six months or more, this user session is\nremoved and any subsequent ACS call that requires user login such as <code>create.json</code>, <code>update.json</code> and\n<code>remove.json</code> will get a 404 error. We recommend your application to handle an invalid user session\nerror and prompt a login screen to the user to login again.</p>\n\n<h4 id='releasenotes-section-geo-query'>Geo Query</h4>\n\n<p>ACS currently supports MongoDB’s\n<a href=\"http://docs.mongodb.org/manual/reference/operator/nearSphere/\">$nearSphere</a> geo query.\nGeo query requires a field to be indexed with a geo index.\nThe ACS fields you can perform <code>$nearSphere</code> on are <code>lnglat</code> (pre-defined location\ndata and only available in <a href=\"http://docs.appcelerator.com/cloud/latest/#!/api/Places\">Places</a>\nand <a href=\"http://docs.appcelerator.com/cloud/latest/#!/api/Events\">Events</a>) and <code>coordinates</code>\n(list of custom defined location data and available in all objects).\nIt implies that Places and Events have two geo indexes in the same\ncollection and that prevents us from supporting the\n<a href=\"http://docs.mongodb.org/manual/reference/command/geoNear/\">$geoNear</a> operation that is more powerful than\n<code>$nearSphere</code>.  We will consolidate the <code>lnglat</code> value with the <code>coordinates</code> values and remove geo index on\nthe <code>lnglat</code> field.</p>\n\n<p>For Events and Places, even if you never explicitly copied\nthe <code>lnglat</code> value to <code>coordinates</code>, <code>lnglat</code> appears as the first element of <code>coordinates</code>.  Performing\n<code>$nearSphere</code> on the <code>coordinates</code> field returns a match if it matches the <code>lnglat</code> value.  <code>$nearSphere</code>\nquery on <code>lnglat</code> or <code>coordinates</code> continues to work as before.</p>\n\n<h2 id='releasenotes-section-26-apr-2013'>26 Apr 2013</h2>\n\n<p>This update includes bug fixes and performance improvements.</p>\n\n<h2 id='releasenotes-section-19-apr-2013-session-expiration-policy-update'>19 Apr 2013 -- Session Expiration Policy Update</h2>\n\n<p>On May 15th, Appcelerator will start enforcing a new expiration policy for user sessions.\nPreviously, user sessions were never removed from the database, no matter how long\nthey had been idle.</p>\n\n<p>Starting May 15th, user login sessions will expire after they have been unused for a period of time.\nBy default, the expiration period is six months. You can configure the user session\nexpiration period in the application management console.</p>\n\n<h2 id='releasenotes-section-11-apr-2013'>11 Apr 2013</h2>\n\n<p>This update included the following bug fixes:</p>\n\n<ul>\n<li><p>Fixed a regression causing user confirmation email requests to fail with an error (\"400 Bad Request - Invalid app key\").</p></li>\n<li><p>When querying ACS objects, regular expressions are limited to those expressions that can be processed efficiently. To be processed efficiently, the regex must be <em>anchored</em> at the beginning of the string with \"^\" followed by a letter or digit. The initial character must be case sensitive. For example, \"^[aA]\" and \".<em>Foo\" are not allowed, but \"^a.</em>Foo\" is allowed.</p></li>\n<li><p>Website: Fixed an issue with creating places. When creating an event from the website, the place ID was not added to the event, even though a place is selected.</p></li>\n<li><p>Website: Fixed an issue with photo collections. If an error was encountered when browsing a subcollection on the photo collection page, it caused an infinite redirect loop.</p></li>\n</ul>\n\n\n<h2 id='releasenotes-section-28-mar-2013'>28 Mar 2013</h2>\n\n<p>This update included a number of bug fixes and scalability improvements.\nNotable fixes include:</p>\n\n<ul>\n<li><p>Fixed an error that occurred when trying to create an event with the <code>recurring</code> field set.</p></li>\n<li><p>Fixed an issue that prevented editing of custom fields using the ACS web site.</p></li>\n<li><p>Fixed an issue that prevented tags from being deleted using the ACS web site.</p></li>\n</ul>\n\n\n<h2 id='releasenotes-section-14-mar-2013'>14 Mar 2013</h2>\n\n<p>Added support for iOS Newsstand <code>content-available</code> flag in push\nnotifications. Setting <code>content-available: 1</code> in the payload of a push\nnotification identifies it as a Newsstand push notification used to initiate\nbackground download. Note that this feature is only supported by Newsstand\napps. For more information, see the <a href=\"http://developer.apple.com/library/ios/#technotes/tn2280/_index.html\">Apple Newsstand\nFAQ</a> on\nthe iOS Developer Center.</p>\n\n<h2 id='releasenotes-section-14-feb-2013'>14 Feb 2013</h2>\n\n<p>Added new admin operation:</p>\n\n<ul>\n<li>Admin Drop Custom Collection allows admin users to drop a Custom Object collection.</li>\n</ul>\n\n\n<p>For details, see <a href=\"#!/guide/admin_access\">Admin Access</a>.</p>\n\n<p>Added support for atomic increment operator, $inc. For details see <a href=\"#!/guide/atomic_increment\">Atomic\nIncrement Operation</a>.</p>\n\n<p>Fixed ACS website issues:</p>\n\n<ul>\n<li>Places could not be added manually from the website.</li>\n<li>Longitude and latitude fields were limited to 4 characters.</li>\n<li>Custom field boolean could be interpreted as a string.</li>\n</ul>\n\n\n<h2 id='releasenotes-section-31-jan-2013'>31 Jan 2013</h2>\n\n<p>Fixed an unhandled exception when a file was passed as the payload of a push\nnotification. For example, a <code>curl</code> command like this would cause an\nexception:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -F \"channel=change_request\" -F \"to_ids=&lt;ids&gt;\" \n-F \"payload=@photo2.jpg\"\nhttps://api.cloud.appcelerator.com/v1/push_notification/notify.json?key=&lt;api_key&gt;\n</code></pre>\n\n<p>File payloads are not allowed. With the fix, ACS supplies an error message\ninstead of throwing an exception.</p>\n\n<h2 id='releasenotes-section-21-jan-2013'>21 Jan 2013</h2>\n\n<p>The ACS service was updated today with a number of bug fixes and improvements.\nHighlights include:</p>\n\n<ul>\n<li>Updated API usage reporting to report number of pushes.</li>\n<li>On the ACS website, added ability to add a record to an existing custom object without requiring the user to duplicate and recreate the object.</li>\n<li>Fixed an issue where HTML tags were stripped from custom object fields when editing the fields in the ACS website.</li>\n<li>When exporting data from the website, the mechanism for selecting date ranges is improved, and invalid date ranges are rejected.</li>\n<li>Fixed an issue that prevented users from unsubscribing from push notifications when multiple users subscribe to push notifications from the same device.</li>\n<li>A number of fixes to the ACS web administration console.</li>\n<li>An update was made to the ACS Android SDK. You can download the latest version from</li>\n<li><a href=\"https://github.com/cocoafish/cocoafish-android-sdk\">https://github.com/cocoafish/cocoafish-android-sdk</a>. For more information on the SDK, see <a href=\"#!/guide/android\">Getting Started: Using the Android SDK</a>.</li>\n</ul>\n\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/releasenotes/README.md"}],"html":"<h1 id='guides-section-arrowdb-guides-overview'>ArrowDB Guides Overview</h1>\n\n<div class=\"x-component thumb-list x-component-default\" id=\"guides-section-guides_thumblist\" tabindex=\"-1\">\n<dl class=\"\">\n\n    <a href=\"#!/guide/quickstart\">\n    <dd ext:url=\"#!/guide/quickstart\" id=\"guides-section-ext-gen1293\" class=\"\"><div class=\"thumb\"><img\nsrc=\"resources/images/icon-lg.png\"></div><div><h4>Getting Started with ArrowDB</h4><p>This introduction to ArrowDB explains how you can get started.</p></div></dd>     \n    </a>\n\n    <a href=\"#!/guide/rest\">\n    <dd ext:url=\"#!/guide/rest\" id=\"guides-section-ext-gen1347\" class=\"\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Using the REST API</h4><p>Basics of the ArrowDB REST API.</p></div></dd>\n    </a>\n\n    <a href=\"#!/guide/authentication\">\n    <dd ext:url=\"#!/guide/authentication\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Authentication</h4><p>Authenticating your application with ArrowDB.</p></div></dd>\n    </a>\n\n    <a href=\"#!/guide/sdks\">\n    <dd><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>SDKs</h4><p>Using ArrowDB in a Titanium, iOS, or Android application.</p></div></dd>\n    </a>\n\n    <a href=\"#!/guide/customfields\">\n    <dd ext:url=\"#!/guide/customfields\" id=\"guides-section-ext-gen1295\" class=\"\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Custom Objects and Fields</h4><p>Using custom fields and custom objects.</p></div></dd>\n    </a>\n\n    <a href=\"#!/guide/relationalfields\">\n    <dd ext:url=\"#!/guide/relationalfields\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Relational Fields</h4><p>Linking objects with relational fields.</p></div></dd>\n    </a>\n\n    <a href=\"#!/guide/search_query\">\n    <dd ext:url=\"#!/guide/search_query\" id=\"guides-section-ext-gen1296\" class=\"\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Search and Query Operations</h4><p>Searching for ArrowDB objects.</p></div></dd>\n    </a>\n\n    \n    <a href=\"#!/guide/photosizes\"><dd ext:url=\"#!/guide/photosizes\" id=\"guides-section-ext-gen1346\" class=\"\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Photo Uploading &amp; Resizing</h4><p>How to upload and resize photos.</p></div></dd></a>\n\n    \n    <a href=\"#!/guide/geo\"><dd ext:url=\"#!/guide/geo\" id=\"guides-section-ext-gen1345\" class=\"\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Geographic Coordinates</h4><p>How ArrowDB handles geographic coordinates.</p></div></dd></a>\n\n    <a href=\"#!/guide/admin_access\"><dd ext:url=\"#!/guide/admin_access\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Admin Access</h4><p>Describes admin-only API methods for batch-deleting objects and dropping custom object collections.</p></div></dd></a>\n\n    <a href=\"#!/guide/atomic_increment\"><dd ext:url=\"#!/guide/atomic_increment\" id=\"guides-section-ext-gen1344\" class=\"\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Atomic Increment Operator</h4><p>Using the MongoDB $inc operator.</p></div></dd></a>\n\n    <a href=\"#!/guide/troubleshooting\"><dd ext:url=\"#!/guide/troubleshooting\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>Troubleshooting</h4><p>Troubleshooting guide.</p></div></dd></a>\n\n    <a href=\"#!/guide/releasenotes\"><dd ext:url=\"#!/guide/releasenotes\" id=\"guides-section-ext-gen1349\" class=\"\"><div class=\"thumb\"><img src=\"resources/images/icon-lg.png\"></div><div><h4>ArrowDB Release Notes</h4><p>Changes in the latest releases.</p></div></dd></a>\n\n    <div style=\"clear:left\"></div>\n\n    </dl>\n\n</div>\n\n\n\n","filename":"/var/lib/jenkins/jobs/appc-docs/workspace/cloud_docs/guides/arrowdb/home/README.md"}],"videos":[],"examples":[],"search":[{"name":"Emails","fullName":"Emails","icon":"icon-class","url":"#!/api/Emails","meta":{},"sort":1},{"name":"email_from_template","fullName":"Emails.email_from_template","icon":"icon-method","url":"#!/api/Emails-method-email_from_template","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"Emails.count","icon":"icon-method","url":"#!/api/Emails-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"Statuses","fullName":"Statuses","icon":"icon-class","url":"#!/api/Statuses","meta":{},"sort":1},{"name":"query","fullName":"Statuses.query","icon":"icon-method","url":"#!/api/Statuses-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"Statuses.batch_delete","icon":"icon-method","url":"#!/api/Statuses-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"id","fullName":"Statuses.id","icon":"icon-property","url":"#!/api/Statuses-property-id","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"Statuses.user","icon":"icon-property","url":"#!/api/Statuses-property-user","meta":{"[:hide]":false},"sort":3},{"name":"message","fullName":"Statuses.message","icon":"icon-property","url":"#!/api/Statuses-property-message","meta":{"[:hide]":false},"sort":3},{"name":"place","fullName":"Statuses.place","icon":"icon-property","url":"#!/api/Statuses-property-place","meta":{"[:hide]":false},"sort":3},{"name":"event","fullName":"Statuses.event","icon":"icon-property","url":"#!/api/Statuses-property-event","meta":{"[:hide]":false},"sort":3},{"name":"photo","fullName":"Statuses.photo","icon":"icon-property","url":"#!/api/Statuses-property-photo","meta":{"[:hide]":false},"sort":3},{"name":"tags","fullName":"Statuses.tags","icon":"icon-property","url":"#!/api/Statuses-property-tags","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Statuses.created_at","icon":"icon-property","url":"#!/api/Statuses-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Statuses.updated_at","icon":"icon-property","url":"#!/api/Statuses-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"acls","fullName":"Statuses.acls","icon":"icon-property","url":"#!/api/Statuses-property-acls","meta":{"[:hide]":false},"sort":3},{"name":"show","fullName":"Statuses.show","icon":"icon-method","url":"#!/api/Statuses-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"Statuses.count","icon":"icon-method","url":"#!/api/Statuses-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"Statuses.create","icon":"icon-method","url":"#!/api/Statuses-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"Statuses.update","icon":"icon-method","url":"#!/api/Statuses-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"delete","fullName":"Statuses.delete","icon":"icon-method","url":"#!/api/Statuses-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"KeyValues","fullName":"KeyValues","icon":"icon-class","url":"#!/api/KeyValues","meta":{},"sort":1},{"name":"query","fullName":"KeyValues.query","icon":"icon-method","url":"#!/api/KeyValues-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"get","fullName":"KeyValues.get","icon":"icon-method","url":"#!/api/KeyValues-method-get","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"KeyValues.count","icon":"icon-method","url":"#!/api/KeyValues-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"append","fullName":"KeyValues.append","icon":"icon-method","url":"#!/api/KeyValues-method-append","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"incrby","fullName":"KeyValues.incrby","icon":"icon-method","url":"#!/api/KeyValues-method-incrby","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"id","fullName":"KeyValues.id","icon":"icon-property","url":"#!/api/KeyValues-property-id","meta":{"[:hide]":false},"sort":3},{"name":"name","fullName":"KeyValues.name","icon":"icon-property","url":"#!/api/KeyValues-property-name","meta":{"[:hide]":false},"sort":3},{"name":"type","fullName":"KeyValues.type","icon":"icon-property","url":"#!/api/KeyValues-property-type","meta":{"[:hide]":false},"sort":3},{"name":"value","fullName":"KeyValues.value","icon":"icon-property","url":"#!/api/KeyValues-property-value","meta":{"[:hide]":false},"sort":3},{"name":"set","fullName":"KeyValues.set","icon":"icon-method","url":"#!/api/KeyValues-method-set","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"delete","fullName":"KeyValues.delete","icon":"icon-method","url":"#!/api/KeyValues-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Clients","fullName":"Clients","icon":"icon-class","url":"#!/api/Clients","meta":{},"sort":1},{"name":"geolocate","fullName":"Clients.geolocate","icon":"icon-method","url":"#!/api/Clients-method-geolocate","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"Chats","fullName":"Chats","icon":"icon-class","url":"#!/api/Chats","meta":{},"sort":1},{"name":"id","fullName":"Chats.id","icon":"icon-property","url":"#!/api/Chats-property-id","meta":{"[:hide]":false},"sort":3},{"name":"message","fullName":"Chats.message","icon":"icon-property","url":"#!/api/Chats-property-message","meta":{"[:hide]":false},"sort":3},{"name":"photo","fullName":"Chats.photo","icon":"icon-property","url":"#!/api/Chats-property-photo","meta":{"[:hide]":false},"sort":3},{"name":"chatgroup","fullName":"Chats.chatgroup","icon":"icon-property","url":"#!/api/Chats-property-chatgroup","meta":{"[:hide]":false},"sort":3},{"name":"custom_fields","fullName":"Chats.custom_fields","icon":"icon-property","url":"#!/api/Chats-property-custom_fields","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Chats.created_at","icon":"icon-property","url":"#!/api/Chats-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Chats.updated_at","icon":"icon-property","url":"#!/api/Chats-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"query","fullName":"Chats.query","icon":"icon-method","url":"#!/api/Chats-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"Chats.count","icon":"icon-method","url":"#!/api/Chats-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"get_chat_groups","fullName":"Chats.get_chat_groups","icon":"icon-method","url":"#!/api/Chats-method-get_chat_groups","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"create","fullName":"Chats.create","icon":"icon-method","url":"#!/api/Chats-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"delete","fullName":"Chats.delete","icon":"icon-method","url":"#!/api/Chats-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"SocialIntegrations","fullName":"SocialIntegrations","icon":"icon-class","url":"#!/api/SocialIntegrations","meta":{},"sort":1},{"name":"external_account_login","fullName":"SocialIntegrations.external_account_login","icon":"icon-method","url":"#!/api/SocialIntegrations-method-external_account_login","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"facebook_search_friends","fullName":"SocialIntegrations.facebook_search_friends","icon":"icon-method","url":"#!/api/SocialIntegrations-method-facebook_search_friends","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"external_account_link","fullName":"SocialIntegrations.external_account_link","icon":"icon-method","url":"#!/api/SocialIntegrations-method-external_account_link","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"external_account_unlink","fullName":"SocialIntegrations.external_account_unlink","icon":"icon-method","url":"#!/api/SocialIntegrations-method-external_account_unlink","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"PushLogs","fullName":"PushLogs","icon":"icon-class","url":"#!/api/PushLogs","meta":{"pseudo":true},"sort":1},{"name":"_id","fullName":"PushLogs._id","icon":"icon-property","url":"#!/api/PushLogs-property-_id","meta":{"[:hide]":false},"sort":3},{"name":"payload","fullName":"PushLogs.payload","icon":"icon-property","url":"#!/api/PushLogs-property-payload","meta":{"[:hide]":false},"sort":3},{"name":"to_ids","fullName":"PushLogs.to_ids","icon":"icon-property","url":"#!/api/PushLogs-property-to_ids","meta":{"[:hide]":false},"sort":3},{"name":"channel","fullName":"PushLogs.channel","icon":"icon-property","url":"#!/api/PushLogs-property-channel","meta":{"[:hide]":false},"sort":3},{"name":"app_id","fullName":"PushLogs.app_id","icon":"icon-property","url":"#!/api/PushLogs-property-app_id","meta":{"[:hide]":false},"sort":3},{"name":"push_schedule_id","fullName":"PushLogs.push_schedule_id","icon":"icon-property","url":"#!/api/PushLogs-property-push_schedule_id","meta":{"[:hide]":false},"sort":3},{"name":"scheduled_at","fullName":"PushLogs.scheduled_at","icon":"icon-property","url":"#!/api/PushLogs-property-scheduled_at","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"PushLogs.created_at","icon":"icon-property","url":"#!/api/PushLogs-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"PushLogs.updated_at","icon":"icon-property","url":"#!/api/PushLogs-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"PushNotifications","fullName":"PushNotifications","icon":"icon-class","url":"#!/api/PushNotifications","meta":{},"sort":1},{"name":"query","fullName":"PushNotifications.query","icon":"icon-method","url":"#!/api/PushNotifications-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"channels_query","fullName":"PushNotifications.channels_query","icon":"icon-method","url":"#!/api/PushNotifications-method-channels_query","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"set_badge","fullName":"PushNotifications.set_badge","icon":"icon-method","url":"#!/api/PushNotifications-method-set_badge","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"notify_tokens","fullName":"PushNotifications.notify_tokens","icon":"icon-method","url":"#!/api/PushNotifications-method-notify_tokens","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"unsubscribe","fullName":"PushNotifications.unsubscribe","icon":"icon-method","url":"#!/api/PushNotifications-method-unsubscribe","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"subscribe_token","fullName":"PushNotifications.subscribe_token","icon":"icon-method","url":"#!/api/PushNotifications-method-subscribe_token","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"PushNotifications.count","icon":"icon-method","url":"#!/api/PushNotifications-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"reset_badge","fullName":"PushNotifications.reset_badge","icon":"icon-method","url":"#!/api/PushNotifications-method-reset_badge","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"unsubscribe_token","fullName":"PushNotifications.unsubscribe_token","icon":"icon-method","url":"#!/api/PushNotifications-method-unsubscribe_token","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"notify","fullName":"PushNotifications.notify","icon":"icon-method","url":"#!/api/PushNotifications-method-notify","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"subscribe","fullName":"PushNotifications.subscribe","icon":"icon-method","url":"#!/api/PushNotifications-method-subscribe","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"subscription_update","fullName":"PushNotifications.subscription_update","icon":"icon-method","url":"#!/api/PushNotifications-method-subscription_update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"channels_show","fullName":"PushNotifications.channels_show","icon":"icon-method","url":"#!/api/PushNotifications-method-channels_show","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"PushPayload","fullName":"PushPayload","icon":"icon-class","url":"#!/api/PushPayload","meta":{"pseudo":true},"sort":1},{"name":"alert","fullName":"PushPayload.alert","icon":"icon-property","url":"#!/api/PushPayload-property-alert","meta":{"[:hide]":false},"sort":3},{"name":"badge","fullName":"PushPayload.badge","icon":"icon-property","url":"#!/api/PushPayload-property-badge","meta":{"[:hide]":false},"sort":3},{"name":"category","fullName":"PushPayload.category","icon":"icon-property","url":"#!/api/PushPayload-property-category","meta":{"[:hide]":false},"sort":3},{"name":"content-available","fullName":"PushPayload.content-available","icon":"icon-property","url":"#!/api/PushPayload-property-content-available","meta":{"[:hide]":false},"sort":3},{"name":"icon","fullName":"PushPayload.icon","icon":"icon-property","url":"#!/api/PushPayload-property-icon","meta":{"[:hide]":false},"sort":3},{"name":"sound","fullName":"PushPayload.sound","icon":"icon-property","url":"#!/api/PushPayload-property-sound","meta":{"[:hide]":false},"sort":3},{"name":"title","fullName":"PushPayload.title","icon":"icon-property","url":"#!/api/PushPayload-property-title","meta":{"[:hide]":false},"sort":3},{"name":"vibrate","fullName":"PushPayload.vibrate","icon":"icon-property","url":"#!/api/PushPayload-property-vibrate","meta":{"[:hide]":false},"sort":3},{"name":"Friends","fullName":"Friends","icon":"icon-class","url":"#!/api/Friends","meta":{},"sort":1},{"name":"query","fullName":"Friends.query","icon":"icon-method","url":"#!/api/Friends-method-query","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"remove","fullName":"Friends.remove","icon":"icon-method","url":"#!/api/Friends-method-remove","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"requests","fullName":"Friends.requests","icon":"icon-method","url":"#!/api/Friends-method-requests","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"add","fullName":"Friends.add","icon":"icon-method","url":"#!/api/Friends-method-add","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"approve","fullName":"Friends.approve","icon":"icon-method","url":"#!/api/Friends-method-approve","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"search","fullName":"Friends.search","icon":"icon-method","url":"#!/api/Friends-method-search","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Reviewable","fullName":"Reviewable","icon":"icon-class","url":"#!/api/Reviewable","meta":{},"sort":1},{"name":"reviews","fullName":"Reviewable.reviews","icon":"icon-property","url":"#!/api/Reviewable-property-reviews","meta":{"[:hide]":false},"sort":3},{"name":"reviews_count","fullName":"Reviewable.reviews_count","icon":"icon-property","url":"#!/api/Reviewable-property-reviews_count","meta":{"[:hide]":false},"sort":3},{"name":"ratings_count","fullName":"Reviewable.ratings_count","icon":"icon-property","url":"#!/api/Reviewable-property-ratings_count","meta":{"[:hide]":false},"sort":3},{"name":"ratings_average","fullName":"Reviewable.ratings_average","icon":"icon-property","url":"#!/api/Reviewable-property-ratings_average","meta":{"[:hide]":false},"sort":3},{"name":"ratings_summary","fullName":"Reviewable.ratings_summary","icon":"icon-property","url":"#!/api/Reviewable-property-ratings_summary","meta":{"[:hide]":false},"sort":3},{"name":"PhotoCollections","fullName":"PhotoCollections","icon":"icon-class","url":"#!/api/PhotoCollections","meta":{},"sort":1},{"name":"show_photos","fullName":"PhotoCollections.show_photos","icon":"icon-method","url":"#!/api/PhotoCollections-method-show_photos","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"counts","fullName":"PhotoCollections.counts","icon":"icon-property","url":"#!/api/PhotoCollections-property-counts","meta":{"[:hide]":false},"sort":3},{"name":"cover_photo","fullName":"PhotoCollections.cover_photo","icon":"icon-property","url":"#!/api/PhotoCollections-property-cover_photo","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"PhotoCollections.created_at","icon":"icon-property","url":"#!/api/PhotoCollections-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"id","fullName":"PhotoCollections.id","icon":"icon-property","url":"#!/api/PhotoCollections-property-id","meta":{"[:hide]":false},"sort":3},{"name":"name","fullName":"PhotoCollections.name","icon":"icon-property","url":"#!/api/PhotoCollections-property-name","meta":{"[:hide]":false},"sort":3},{"name":"parent_collection","fullName":"PhotoCollections.parent_collection","icon":"icon-property","url":"#!/api/PhotoCollections-property-parent_collection","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"PhotoCollections.updated_at","icon":"icon-property","url":"#!/api/PhotoCollections-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"PhotoCollections.user","icon":"icon-property","url":"#!/api/PhotoCollections-property-user","meta":{"[:hide]":false},"sort":3},{"name":"batch_delete","fullName":"PhotoCollections.batch_delete","icon":"icon-method","url":"#!/api/PhotoCollections-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"show","fullName":"PhotoCollections.show","icon":"icon-method","url":"#!/api/PhotoCollections-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"PhotoCollections.count","icon":"icon-method","url":"#!/api/PhotoCollections-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"PhotoCollections.create","icon":"icon-method","url":"#!/api/PhotoCollections-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"PhotoCollections.update","icon":"icon-method","url":"#!/api/PhotoCollections-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"show_subcollections","fullName":"PhotoCollections.show_subcollections","icon":"icon-method","url":"#!/api/PhotoCollections-method-show_subcollections","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"search","fullName":"PhotoCollections.search","icon":"icon-method","url":"#!/api/PhotoCollections-method-search","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"delete","fullName":"PhotoCollections.delete","icon":"icon-method","url":"#!/api/PhotoCollections-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Reviews","fullName":"Reviews","icon":"icon-class","url":"#!/api/Reviews","meta":{},"sort":1},{"name":"query","fullName":"Reviews.query","icon":"icon-method","url":"#!/api/Reviews-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"Reviews.batch_delete","icon":"icon-method","url":"#!/api/Reviews-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"show","fullName":"Reviews.show","icon":"icon-method","url":"#!/api/Reviews-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"Reviews.count","icon":"icon-method","url":"#!/api/Reviews-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"Reviews.create","icon":"icon-method","url":"#!/api/Reviews-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"Reviews.update","icon":"icon-method","url":"#!/api/Reviews-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"content","fullName":"Reviews.content","icon":"icon-property","url":"#!/api/Reviews-property-content","meta":{"[:hide]":false},"sort":3},{"name":"rating","fullName":"Reviews.rating","icon":"icon-property","url":"#!/api/Reviews-property-rating","meta":{"[:hide]":false},"sort":3},{"name":"tags","fullName":"Reviews.tags","icon":"icon-property","url":"#!/api/Reviews-property-tags","meta":{"[:hide]":false},"sort":3},{"name":"custom_fields","fullName":"Reviews.custom_fields","icon":"icon-property","url":"#!/api/Reviews-property-custom_fields","meta":{"[:hide]":false},"sort":3},{"name":"event","fullName":"Reviews.event","icon":"icon-property","url":"#!/api/Reviews-property-event","meta":{"[:hide]":false},"sort":3},{"name":"checkin","fullName":"Reviews.checkin","icon":"icon-property","url":"#!/api/Reviews-property-checkin","meta":{"[:hide]":false},"sort":3},{"name":"photo","fullName":"Reviews.photo","icon":"icon-property","url":"#!/api/Reviews-property-photo","meta":{"[:hide]":false},"sort":3},{"name":"post","fullName":"Reviews.post","icon":"icon-property","url":"#!/api/Reviews-property-post","meta":{"[:hide]":false},"sort":3},{"name":"place","fullName":"Reviews.place","icon":"icon-property","url":"#!/api/Reviews-property-place","meta":{"[:hide]":false},"sort":3},{"name":"custom_object","fullName":"Reviews.custom_object","icon":"icon-property","url":"#!/api/Reviews-property-custom_object","meta":{"[:hide]":false},"sort":3},{"name":"status","fullName":"Reviews.status","icon":"icon-property","url":"#!/api/Reviews-property-status","meta":{"[:hide]":false},"sort":3},{"name":"reviewed_object","fullName":"Reviews.reviewed_object","icon":"icon-property","url":"#!/api/Reviews-property-reviewed_object","meta":{"[:hide]":false},"sort":3},{"name":"review","fullName":"Reviews.review","icon":"icon-property","url":"#!/api/Reviews-property-review","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Reviews.created_at","icon":"icon-property","url":"#!/api/Reviews-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Reviews.updated_at","icon":"icon-property","url":"#!/api/Reviews-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"Reviews.user","icon":"icon-property","url":"#!/api/Reviews-property-user","meta":{"[:hide]":false},"sort":3},{"name":"delete","fullName":"Reviews.delete","icon":"icon-method","url":"#!/api/Reviews-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Places","fullName":"Places","icon":"icon-class","url":"#!/api/Places","meta":{},"sort":1},{"name":"query","fullName":"Places.query","icon":"icon-method","url":"#!/api/Places-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"Places.batch_delete","icon":"icon-method","url":"#!/api/Places-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"show","fullName":"Places.show","icon":"icon-method","url":"#!/api/Places-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"Places.count","icon":"icon-method","url":"#!/api/Places-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"Places.create","icon":"icon-method","url":"#!/api/Places-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"Places.update","icon":"icon-method","url":"#!/api/Places-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"name","fullName":"Places.name","icon":"icon-property","url":"#!/api/Places-property-name","meta":{"[:hide]":false},"sort":3},{"name":"address","fullName":"Places.address","icon":"icon-property","url":"#!/api/Places-property-address","meta":{"[:hide]":false},"sort":3},{"name":"city","fullName":"Places.city","icon":"icon-property","url":"#!/api/Places-property-city","meta":{"[:hide]":false},"sort":3},{"name":"state","fullName":"Places.state","icon":"icon-property","url":"#!/api/Places-property-state","meta":{"[:hide]":false},"sort":3},{"name":"postal_code","fullName":"Places.postal_code","icon":"icon-property","url":"#!/api/Places-property-postal_code","meta":{"[:hide]":false},"sort":3},{"name":"country","fullName":"Places.country","icon":"icon-property","url":"#!/api/Places-property-country","meta":{"[:hide]":false},"sort":3},{"name":"latitude","fullName":"Places.latitude","icon":"icon-property","url":"#!/api/Places-property-latitude","meta":{"[:hide]":false},"sort":3},{"name":"longitude","fullName":"Places.longitude","icon":"icon-property","url":"#!/api/Places-property-longitude","meta":{"[:hide]":false},"sort":3},{"name":"website","fullName":"Places.website","icon":"icon-property","url":"#!/api/Places-property-website","meta":{"[:hide]":false},"sort":3},{"name":"twitter","fullName":"Places.twitter","icon":"icon-property","url":"#!/api/Places-property-twitter","meta":{"[:hide]":false},"sort":3},{"name":"phone_number","fullName":"Places.phone_number","icon":"icon-property","url":"#!/api/Places-property-phone_number","meta":{"[:hide]":false},"sort":3},{"name":"photo","fullName":"Places.photo","icon":"icon-property","url":"#!/api/Places-property-photo","meta":{"[:hide]":false},"sort":3},{"name":"tags","fullName":"Places.tags","icon":"icon-property","url":"#!/api/Places-property-tags","meta":{"[:hide]":false},"sort":3},{"name":"custom_fields","fullName":"Places.custom_fields","icon":"icon-property","url":"#!/api/Places-property-custom_fields","meta":{"[:hide]":false},"sort":3},{"name":"acls","fullName":"Places.acls","icon":"icon-property","url":"#!/api/Places-property-acls","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"Places.user","icon":"icon-property","url":"#!/api/Places-property-user","meta":{"[:hide]":false},"sort":3},{"name":"search","fullName":"Places.search","icon":"icon-method","url":"#!/api/Places-method-search","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"delete","fullName":"Places.delete","icon":"icon-method","url":"#!/api/Places-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"PushSchedules","fullName":"PushSchedules","icon":"icon-class","url":"#!/api/PushSchedules","meta":{},"sort":1},{"name":"query","fullName":"PushSchedules.query","icon":"icon-method","url":"#!/api/PushSchedules-method-query","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"id","fullName":"PushSchedules.id","icon":"icon-property","url":"#!/api/PushSchedules-property-id","meta":{"[:hide]":false},"sort":3},{"name":"start_time","fullName":"PushSchedules.start_time","icon":"icon-property","url":"#!/api/PushSchedules-property-start_time","meta":{"[:hide]":false},"sort":3},{"name":"name","fullName":"PushSchedules.name","icon":"icon-property","url":"#!/api/PushSchedules-property-name","meta":{"[:hide]":false},"sort":3},{"name":"push_notification","fullName":"PushSchedules.push_notification","icon":"icon-property","url":"#!/api/PushSchedules-property-push_notification","meta":{"[:hide]":false},"sort":3},{"name":"recurrence","fullName":"PushSchedules.recurrence","icon":"icon-property","url":"#!/api/PushSchedules-property-recurrence","meta":{"[:hide]":false},"sort":3},{"name":"create","fullName":"PushSchedules.create","icon":"icon-method","url":"#!/api/PushSchedules-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"update","fullName":"PushSchedules.update","icon":"icon-method","url":"#!/api/PushSchedules-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"delete","fullName":"PushSchedules.delete","icon":"icon-method","url":"#!/api/PushSchedules-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"PushSchedulePayload","fullName":"PushSchedulePayload","icon":"icon-class","url":"#!/api/PushSchedulePayload","meta":{"pseudo":true},"sort":1},{"name":"start_time","fullName":"PushSchedulePayload.start_time","icon":"icon-property","url":"#!/api/PushSchedulePayload-property-start_time","meta":{"[:hide]":false},"sort":3},{"name":"name","fullName":"PushSchedulePayload.name","icon":"icon-property","url":"#!/api/PushSchedulePayload-property-name","meta":{"[:hide]":false},"sort":3},{"name":"push_notification","fullName":"PushSchedulePayload.push_notification","icon":"icon-property","url":"#!/api/PushSchedulePayload-property-push_notification","meta":{"[:hide]":false},"sort":3},{"name":"recurrence","fullName":"PushSchedulePayload.recurrence","icon":"icon-property","url":"#!/api/PushSchedulePayload-property-recurrence","meta":{"[:hide]":false},"sort":3},{"name":"Files","fullName":"Files","icon":"icon-class","url":"#!/api/Files","meta":{},"sort":1},{"name":"id","fullName":"Files.id","icon":"icon-property","url":"#!/api/Files-property-id","meta":{"[:hide]":false},"sort":3},{"name":"name","fullName":"Files.name","icon":"icon-property","url":"#!/api/Files-property-name","meta":{"[:hide]":false},"sort":3},{"name":"processed","fullName":"Files.processed","icon":"icon-property","url":"#!/api/Files-property-processed","meta":{"[:hide]":false},"sort":3},{"name":"url","fullName":"Files.url","icon":"icon-property","url":"#!/api/Files-property-url","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Files.created_at","icon":"icon-property","url":"#!/api/Files-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Files.updated_at","icon":"icon-property","url":"#!/api/Files-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"Files.user","icon":"icon-property","url":"#!/api/Files-property-user","meta":{"[:hide]":false},"sort":3},{"name":"s3_acl","fullName":"Files.s3_acl","icon":"icon-property","url":"#!/api/Files-property-s3_acl","meta":{"[:hide]":false},"sort":3},{"name":"query","fullName":"Files.query","icon":"icon-method","url":"#!/api/Files-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"Files.batch_delete","icon":"icon-method","url":"#!/api/Files-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"show","fullName":"Files.show","icon":"icon-method","url":"#!/api/Files-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"Files.count","icon":"icon-method","url":"#!/api/Files-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"Files.create","icon":"icon-method","url":"#!/api/Files-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"Files.update","icon":"icon-method","url":"#!/api/Files-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"delete","fullName":"Files.delete","icon":"icon-method","url":"#!/api/Files-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"CustomObjects","fullName":"CustomObjects","icon":"icon-class","url":"#!/api/CustomObjects","meta":{},"sort":1},{"name":"query","fullName":"CustomObjects.query","icon":"icon-method","url":"#!/api/CustomObjects-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"CustomObjects.batch_delete","icon":"icon-method","url":"#!/api/CustomObjects-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"show","fullName":"CustomObjects.show","icon":"icon-method","url":"#!/api/CustomObjects-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"CustomObjects.count","icon":"icon-method","url":"#!/api/CustomObjects-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_create","fullName":"CustomObjects.batch_create","icon":"icon-method","url":"#!/api/CustomObjects-method-batch_create","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"create","fullName":"CustomObjects.create","icon":"icon-method","url":"#!/api/CustomObjects-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"CustomObjects.update","icon":"icon-method","url":"#!/api/CustomObjects-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"id","fullName":"CustomObjects.id","icon":"icon-property","url":"#!/api/CustomObjects-property-id","meta":{"[:hide]":false},"sort":3},{"name":"tags","fullName":"CustomObjects.tags","icon":"icon-property","url":"#!/api/CustomObjects-property-tags","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"CustomObjects.user","icon":"icon-property","url":"#!/api/CustomObjects-property-user","meta":{"[:hide]":false},"sort":3},{"name":"photo","fullName":"CustomObjects.photo","icon":"icon-property","url":"#!/api/CustomObjects-property-photo","meta":{"[:hide]":false},"sort":3},{"name":"acls","fullName":"CustomObjects.acls","icon":"icon-property","url":"#!/api/CustomObjects-property-acls","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"CustomObjects.created_at","icon":"icon-property","url":"#!/api/CustomObjects-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"CustomObjects.updated_at","icon":"icon-property","url":"#!/api/CustomObjects-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"admin_drop_collection","fullName":"CustomObjects.admin_drop_collection","icon":"icon-method","url":"#!/api/CustomObjects-method-admin_drop_collection","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"delete","fullName":"CustomObjects.delete","icon":"icon-method","url":"#!/api/CustomObjects-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Messages","fullName":"Messages","icon":"icon-class","url":"#!/api/Messages","meta":{},"sort":1},{"name":"query","fullName":"Messages.query","icon":"icon-method","url":"#!/api/Messages-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"show_threads","fullName":"Messages.show_threads","icon":"icon-method","url":"#!/api/Messages-method-show_threads","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"show","fullName":"Messages.show","icon":"icon-method","url":"#!/api/Messages-method-show","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"count","fullName":"Messages.count","icon":"icon-method","url":"#!/api/Messages-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"show_inbox","fullName":"Messages.show_inbox","icon":"icon-method","url":"#!/api/Messages-method-show_inbox","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"create","fullName":"Messages.create","icon":"icon-method","url":"#!/api/Messages-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"show_thread","fullName":"Messages.show_thread","icon":"icon-method","url":"#!/api/Messages-method-show_thread","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"reply","fullName":"Messages.reply","icon":"icon-method","url":"#!/api/Messages-method-reply","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"id","fullName":"Messages.id","icon":"icon-property","url":"#!/api/Messages-property-id","meta":{"[:hide]":false},"sort":3},{"name":"thread_id","fullName":"Messages.thread_id","icon":"icon-property","url":"#!/api/Messages-property-thread_id","meta":{"[:hide]":false},"sort":3},{"name":"status","fullName":"Messages.status","icon":"icon-property","url":"#!/api/Messages-property-status","meta":{"[:hide]":false},"sort":3},{"name":"subject","fullName":"Messages.subject","icon":"icon-property","url":"#!/api/Messages-property-subject","meta":{"[:hide]":false},"sort":3},{"name":"body","fullName":"Messages.body","icon":"icon-property","url":"#!/api/Messages-property-body","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Messages.created_at","icon":"icon-property","url":"#!/api/Messages-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Messages.updated_at","icon":"icon-property","url":"#!/api/Messages-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"to","fullName":"Messages.to","icon":"icon-property","url":"#!/api/Messages-property-to","meta":{"[:hide]":false},"sort":3},{"name":"from","fullName":"Messages.from","icon":"icon-property","url":"#!/api/Messages-property-from","meta":{"[:hide]":false},"sort":3},{"name":"delete","fullName":"Messages.delete","icon":"icon-method","url":"#!/api/Messages-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"delete_thread","fullName":"Messages.delete_thread","icon":"icon-method","url":"#!/api/Messages-method-delete_thread","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"show_sent","fullName":"Messages.show_sent","icon":"icon-method","url":"#!/api/Messages-method-show_sent","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Logs","fullName":"Logs","icon":"icon-class","url":"#!/api/Logs","meta":{},"sort":1},{"name":"querypushlogs","fullName":"Logs.querypushlogs","icon":"icon-method","url":"#!/api/Logs-method-querypushlogs","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"querypushlogdetails","fullName":"Logs.querypushlogdetails","icon":"icon-method","url":"#!/api/Logs-method-querypushlogdetails","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"Users","fullName":"Users","icon":"icon-class","url":"#!/api/Users","meta":{},"sort":1},{"name":"query","fullName":"Users.query","icon":"icon-method","url":"#!/api/Users-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"Users.batch_delete","icon":"icon-method","url":"#!/api/Users-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"logout","fullName":"Users.logout","icon":"icon-method","url":"#!/api/Users-method-logout","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"show","fullName":"Users.show","icon":"icon-method","url":"#!/api/Users-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"id","fullName":"Users.id","icon":"icon-property","url":"#!/api/Users-property-id","meta":{"[:hide]":false},"sort":3},{"name":"email","fullName":"Users.email","icon":"icon-property","url":"#!/api/Users-property-email","meta":{"[:hide]":false},"sort":3},{"name":"username","fullName":"Users.username","icon":"icon-property","url":"#!/api/Users-property-username","meta":{"[:hide]":false},"sort":3},{"name":"first_name","fullName":"Users.first_name","icon":"icon-property","url":"#!/api/Users-property-first_name","meta":{"[:hide]":false},"sort":3},{"name":"last_name","fullName":"Users.last_name","icon":"icon-property","url":"#!/api/Users-property-last_name","meta":{"[:hide]":false},"sort":3},{"name":"role","fullName":"Users.role","icon":"icon-property","url":"#!/api/Users-property-role","meta":{"[:hide]":false},"sort":3},{"name":"admin","fullName":"Users.admin","icon":"icon-property","url":"#!/api/Users-property-admin","meta":{"[:hide]":false},"sort":3},{"name":"external_accounts","fullName":"Users.external_accounts","icon":"icon-property","url":"#!/api/Users-property-external_accounts","meta":{"[:hide]":false},"sort":3},{"name":"photo","fullName":"Users.photo","icon":"icon-property","url":"#!/api/Users-property-photo","meta":{"[:hide]":false},"sort":3},{"name":"custom_fields","fullName":"Users.custom_fields","icon":"icon-property","url":"#!/api/Users-property-custom_fields","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Users.created_at","icon":"icon-property","url":"#!/api/Users-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Users.updated_at","icon":"icon-property","url":"#!/api/Users-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"friend_counts","fullName":"Users.friend_counts","icon":"icon-property","url":"#!/api/Users-property-friend_counts","meta":{"[:hide]":false},"sort":3},{"name":"count","fullName":"Users.count","icon":"icon-method","url":"#!/api/Users-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"login","fullName":"Users.login","icon":"icon-method","url":"#!/api/Users-method-login","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"Users.create","icon":"icon-method","url":"#!/api/Users-method-create","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"update","fullName":"Users.update","icon":"icon-method","url":"#!/api/Users-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"resend_confirmation","fullName":"Users.resend_confirmation","icon":"icon-method","url":"#!/api/Users-method-resend_confirmation","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"show_me","fullName":"Users.show_me","icon":"icon-method","url":"#!/api/Users-method-show_me","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"request_reset_password","fullName":"Users.request_reset_password","icon":"icon-method","url":"#!/api/Users-method-request_reset_password","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"search","fullName":"Users.search","icon":"icon-method","url":"#!/api/Users-method-search","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"delete","fullName":"Users.delete","icon":"icon-method","url":"#!/api/Users-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Posts","fullName":"Posts","icon":"icon-class","url":"#!/api/Posts","meta":{},"sort":1},{"name":"query","fullName":"Posts.query","icon":"icon-method","url":"#!/api/Posts-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"Posts.batch_delete","icon":"icon-method","url":"#!/api/Posts-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"show","fullName":"Posts.show","icon":"icon-method","url":"#!/api/Posts-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"Posts.count","icon":"icon-method","url":"#!/api/Posts-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"Posts.create","icon":"icon-method","url":"#!/api/Posts-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"Posts.update","icon":"icon-method","url":"#!/api/Posts-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"id","fullName":"Posts.id","icon":"icon-property","url":"#!/api/Posts-property-id","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Posts.created_at","icon":"icon-property","url":"#!/api/Posts-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Posts.updated_at","icon":"icon-property","url":"#!/api/Posts-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"content","fullName":"Posts.content","icon":"icon-property","url":"#!/api/Posts-property-content","meta":{"[:hide]":false},"sort":3},{"name":"title","fullName":"Posts.title","icon":"icon-property","url":"#!/api/Posts-property-title","meta":{"[:hide]":false},"sort":3},{"name":"event","fullName":"Posts.event","icon":"icon-property","url":"#!/api/Posts-property-event","meta":{"[:hide]":false},"sort":3},{"name":"photo","fullName":"Posts.photo","icon":"icon-property","url":"#!/api/Posts-property-photo","meta":{"[:hide]":false},"sort":3},{"name":"tags","fullName":"Posts.tags","icon":"icon-property","url":"#!/api/Posts-property-tags","meta":{"[:hide]":false},"sort":3},{"name":"custom_fields","fullName":"Posts.custom_fields","icon":"icon-property","url":"#!/api/Posts-property-custom_fields","meta":{"[:hide]":false},"sort":3},{"name":"acls","fullName":"Posts.acls","icon":"icon-property","url":"#!/api/Posts-property-acls","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"Posts.user","icon":"icon-property","url":"#!/api/Posts-property-user","meta":{"[:hide]":false},"sort":3},{"name":"delete","fullName":"Posts.delete","icon":"icon-method","url":"#!/api/Posts-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"ACLs","fullName":"ACLs","icon":"icon-class","url":"#!/api/ACLs","meta":{},"sort":1},{"name":"query","fullName":"ACLs.query","icon":"icon-method","url":"#!/api/ACLs-method-query","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"show","fullName":"ACLs.show","icon":"icon-method","url":"#!/api/ACLs-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"check","fullName":"ACLs.check","icon":"icon-method","url":"#!/api/ACLs-method-check","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"count","fullName":"ACLs.count","icon":"icon-method","url":"#!/api/ACLs-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"remove","fullName":"ACLs.remove","icon":"icon-method","url":"#!/api/ACLs-method-remove","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"create","fullName":"ACLs.create","icon":"icon-method","url":"#!/api/ACLs-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"name","fullName":"ACLs.name","icon":"icon-property","url":"#!/api/ACLs-property-name","meta":{"[:hide]":false},"sort":3},{"name":"id","fullName":"ACLs.id","icon":"icon-property","url":"#!/api/ACLs-property-id","meta":{"[:hide]":false},"sort":3},{"name":"readers","fullName":"ACLs.readers","icon":"icon-property","url":"#!/api/ACLs-property-readers","meta":{"[:hide]":false},"sort":3},{"name":"writers","fullName":"ACLs.writers","icon":"icon-property","url":"#!/api/ACLs-property-writers","meta":{"[:hide]":false},"sort":3},{"name":"public_read","fullName":"ACLs.public_read","icon":"icon-property","url":"#!/api/ACLs-property-public_read","meta":{"[:hide]":false},"sort":3},{"name":"public_write","fullName":"ACLs.public_write","icon":"icon-property","url":"#!/api/ACLs-property-public_write","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"ACLs.user","icon":"icon-property","url":"#!/api/ACLs-property-user","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"ACLs.created_at","icon":"icon-property","url":"#!/api/ACLs-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"ACLs.updated_at","icon":"icon-property","url":"#!/api/ACLs-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"pretty_json","fullName":"ACLs.pretty_json","icon":"icon-property","url":"#!/api/ACLs-property-pretty_json","meta":{"[:hide]":false},"sort":3},{"name":"update","fullName":"ACLs.update","icon":"icon-method","url":"#!/api/ACLs-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"add","fullName":"ACLs.add","icon":"icon-method","url":"#!/api/ACLs-method-add","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"delete","fullName":"ACLs.delete","icon":"icon-method","url":"#!/api/ACLs-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Likes","fullName":"Likes","icon":"icon-class","url":"#!/api/Likes","meta":{},"sort":1},{"name":"query","fullName":"Likes.query","icon":"icon-method","url":"#!/api/Likes-method-query","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"create","fullName":"Likes.create","icon":"icon-method","url":"#!/api/Likes-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"id","fullName":"Likes.id","icon":"icon-property","url":"#!/api/Likes-property-id","meta":{"[:hide]":false},"sort":3},{"name":"likeable_type","fullName":"Likes.likeable_type","icon":"icon-property","url":"#!/api/Likes-property-likeable_type","meta":{"[:hide]":false},"sort":3},{"name":"likeable_id","fullName":"Likes.likeable_id","icon":"icon-property","url":"#!/api/Likes-property-likeable_id","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Likes.created_at","icon":"icon-property","url":"#!/api/Likes-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Likes.updated_at","icon":"icon-property","url":"#!/api/Likes-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"Likes.user","icon":"icon-property","url":"#!/api/Likes-property-user","meta":{"[:hide]":false},"sort":3},{"name":"delete","fullName":"Likes.delete","icon":"icon-method","url":"#!/api/Likes-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Events","fullName":"Events","icon":"icon-class","url":"#!/api/Events","meta":{},"sort":1},{"name":"query","fullName":"Events.query","icon":"icon-method","url":"#!/api/Events-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"Events.batch_delete","icon":"icon-method","url":"#!/api/Events-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"show","fullName":"Events.show","icon":"icon-method","url":"#!/api/Events-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"Events.count","icon":"icon-method","url":"#!/api/Events-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"Events.create","icon":"icon-method","url":"#!/api/Events-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"Events.update","icon":"icon-method","url":"#!/api/Events-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"query_occurrences","fullName":"Events.query_occurrences","icon":"icon-method","url":"#!/api/Events-method-query_occurrences","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"show_occurrences","fullName":"Events.show_occurrences","icon":"icon-method","url":"#!/api/Events-method-show_occurrences","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"search_occurrences","fullName":"Events.search_occurrences","icon":"icon-method","url":"#!/api/Events-method-search_occurrences","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"id","fullName":"Events.id","icon":"icon-property","url":"#!/api/Events-property-id","meta":{"[:hide]":false},"sort":3},{"name":"name","fullName":"Events.name","icon":"icon-property","url":"#!/api/Events-property-name","meta":{"[:hide]":false},"sort":3},{"name":"start_time","fullName":"Events.start_time","icon":"icon-property","url":"#!/api/Events-property-start_time","meta":{"[:hide]":false},"sort":3},{"name":"duration","fullName":"Events.duration","icon":"icon-property","url":"#!/api/Events-property-duration","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Events.created_at","icon":"icon-property","url":"#!/api/Events-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Events.updated_at","icon":"icon-property","url":"#!/api/Events-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"ical","fullName":"Events.ical","icon":"icon-property","url":"#!/api/Events-property-ical","meta":{"[:hide]":false},"sort":3},{"name":"recurring","fullName":"Events.recurring","icon":"icon-property","url":"#!/api/Events-property-recurring","meta":{"[:hide]":false},"sort":3},{"name":"recurring_count","fullName":"Events.recurring_count","icon":"icon-property","url":"#!/api/Events-property-recurring_count","meta":{"[:hide]":false},"sort":3},{"name":"recurring_until","fullName":"Events.recurring_until","icon":"icon-property","url":"#!/api/Events-property-recurring_until","meta":{"[:hide]":false},"sort":3},{"name":"details","fullName":"Events.details","icon":"icon-property","url":"#!/api/Events-property-details","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"Events.user","icon":"icon-property","url":"#!/api/Events-property-user","meta":{"[:hide]":false},"sort":3},{"name":"place","fullName":"Events.place","icon":"icon-property","url":"#!/api/Events-property-place","meta":{"[:hide]":false},"sort":3},{"name":"photo","fullName":"Events.photo","icon":"icon-property","url":"#!/api/Events-property-photo","meta":{"[:hide]":false},"sort":3},{"name":"tags","fullName":"Events.tags","icon":"icon-property","url":"#!/api/Events-property-tags","meta":{"[:hide]":false},"sort":3},{"name":"custom_fields","fullName":"Events.custom_fields","icon":"icon-property","url":"#!/api/Events-property-custom_fields","meta":{"[:hide]":false},"sort":3},{"name":"acls","fullName":"Events.acls","icon":"icon-property","url":"#!/api/Events-property-acls","meta":{"[:hide]":false},"sort":3},{"name":"search","fullName":"Events.search","icon":"icon-method","url":"#!/api/Events-method-search","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"delete","fullName":"Events.delete","icon":"icon-method","url":"#!/api/Events-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Checkins","fullName":"Checkins","icon":"icon-class","url":"#!/api/Checkins","meta":{},"sort":1},{"name":"query","fullName":"Checkins.query","icon":"icon-method","url":"#!/api/Checkins-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"Checkins.batch_delete","icon":"icon-method","url":"#!/api/Checkins-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"show","fullName":"Checkins.show","icon":"icon-method","url":"#!/api/Checkins-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"id","fullName":"Checkins.id","icon":"icon-property","url":"#!/api/Checkins-property-id","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"Checkins.user","icon":"icon-property","url":"#!/api/Checkins-property-user","meta":{"[:hide]":false},"sort":3},{"name":"message","fullName":"Checkins.message","icon":"icon-property","url":"#!/api/Checkins-property-message","meta":{"[:hide]":false},"sort":3},{"name":"place","fullName":"Checkins.place","icon":"icon-property","url":"#!/api/Checkins-property-place","meta":{"[:hide]":false},"sort":3},{"name":"event","fullName":"Checkins.event","icon":"icon-property","url":"#!/api/Checkins-property-event","meta":{"[:hide]":false},"sort":3},{"name":"photo","fullName":"Checkins.photo","icon":"icon-property","url":"#!/api/Checkins-property-photo","meta":{"[:hide]":false},"sort":3},{"name":"tags","fullName":"Checkins.tags","icon":"icon-property","url":"#!/api/Checkins-property-tags","meta":{"[:hide]":false},"sort":3},{"name":"custom_fields","fullName":"Checkins.custom_fields","icon":"icon-property","url":"#!/api/Checkins-property-custom_fields","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Checkins.created_at","icon":"icon-property","url":"#!/api/Checkins-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Checkins.updated_at","icon":"icon-property","url":"#!/api/Checkins-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"count","fullName":"Checkins.count","icon":"icon-method","url":"#!/api/Checkins-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"Checkins.create","icon":"icon-method","url":"#!/api/Checkins-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"Checkins.update","icon":"icon-method","url":"#!/api/Checkins-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"delete","fullName":"Checkins.delete","icon":"icon-method","url":"#!/api/Checkins-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"Photos","fullName":"Photos","icon":"icon-class","url":"#!/api/Photos","meta":{},"sort":1},{"name":"query","fullName":"Photos.query","icon":"icon-method","url":"#!/api/Photos-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"batch_delete","fullName":"Photos.batch_delete","icon":"icon-method","url":"#!/api/Photos-method-batch_delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"id","fullName":"Photos.id","icon":"icon-property","url":"#!/api/Photos-property-id","meta":{"[:hide]":false},"sort":3},{"name":"filename","fullName":"Photos.filename","icon":"icon-property","url":"#!/api/Photos-property-filename","meta":{"[:hide]":false},"sort":3},{"name":"title","fullName":"Photos.title","icon":"icon-property","url":"#!/api/Photos-property-title","meta":{"[:hide]":false},"sort":3},{"name":"size","fullName":"Photos.size","icon":"icon-property","url":"#!/api/Photos-property-size","meta":{"[:hide]":false},"sort":3},{"name":"collections","fullName":"Photos.collections","icon":"icon-property","url":"#!/api/Photos-property-collections","meta":{"[:hide]":false},"sort":3},{"name":"md5","fullName":"Photos.md5","icon":"icon-property","url":"#!/api/Photos-property-md5","meta":{"[:hide]":false},"sort":3},{"name":"processed","fullName":"Photos.processed","icon":"icon-property","url":"#!/api/Photos-property-processed","meta":{"[:hide]":false},"sort":3},{"name":"content_type","fullName":"Photos.content_type","icon":"icon-property","url":"#!/api/Photos-property-content_type","meta":{"[:hide]":false},"sort":3},{"name":"urls","fullName":"Photos.urls","icon":"icon-property","url":"#!/api/Photos-property-urls","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"Photos.created_at","icon":"icon-property","url":"#!/api/Photos-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"Photos.updated_at","icon":"icon-property","url":"#!/api/Photos-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"tags","fullName":"Photos.tags","icon":"icon-property","url":"#!/api/Photos-property-tags","meta":{"[:hide]":false},"sort":3},{"name":"custom_fields","fullName":"Photos.custom_fields","icon":"icon-property","url":"#!/api/Photos-property-custom_fields","meta":{"[:hide]":false},"sort":3},{"name":"acls","fullName":"Photos.acls","icon":"icon-property","url":"#!/api/Photos-property-acls","meta":{"[:hide]":false},"sort":3},{"name":"user","fullName":"Photos.user","icon":"icon-property","url":"#!/api/Photos-property-user","meta":{"[:hide]":false},"sort":3},{"name":"show","fullName":"Photos.show","icon":"icon-method","url":"#!/api/Photos-method-show","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"Photos.count","icon":"icon-method","url":"#!/api/Photos-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"Photos.create","icon":"icon-method","url":"#!/api/Photos-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"update","fullName":"Photos.update","icon":"icon-method","url":"#!/api/Photos-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"search","fullName":"Photos.search","icon":"icon-method","url":"#!/api/Photos-method-search","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"delete","fullName":"Photos.delete","icon":"icon-method","url":"#!/api/Photos-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":false},"sort":3},{"name":"PushLogDetails","fullName":"PushLogDetails","icon":"icon-class","url":"#!/api/PushLogDetails","meta":{"pseudo":true},"sort":1},{"name":"id","fullName":"PushLogDetails.id","icon":"icon-property","url":"#!/api/PushLogDetails-property-id","meta":{"[:hide]":false},"sort":3},{"name":"android_types","fullName":"PushLogDetails.android_types","icon":"icon-property","url":"#!/api/PushLogDetails-property-android_types","meta":{"[:hide]":false},"sort":3},{"name":"app_id","fullName":"PushLogDetails.app_id","icon":"icon-property","url":"#!/api/PushLogDetails-property-app_id","meta":{"[:hide]":false},"sort":3},{"name":"channel","fullName":"PushLogDetails.channel","icon":"icon-property","url":"#!/api/PushLogDetails-property-channel","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"PushLogDetails.created_at","icon":"icon-property","url":"#!/api/PushLogDetails-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"device_count","fullName":"PushLogDetails.device_count","icon":"icon-property","url":"#!/api/PushLogDetails-property-device_count","meta":{"[:hide]":false},"sort":3},{"name":"error_message","fullName":"PushLogDetails.error_message","icon":"icon-property","url":"#!/api/PushLogDetails-property-error_message","meta":{"[:hide]":false},"sort":3},{"name":"locked_at","fullName":"PushLogDetails.locked_at","icon":"icon-property","url":"#!/api/PushLogDetails-property-locked_at","meta":{"[:hide]":false},"sort":3},{"name":"pem_sent_at","fullName":"PushLogDetails.pem_sent_at","icon":"icon-property","url":"#!/api/PushLogDetails-property-pem_sent_at","meta":{"[:hide]":false},"sort":3},{"name":"push_id","fullName":"PushLogDetails.push_id","icon":"icon-property","url":"#!/api/PushLogDetails-property-push_id","meta":{"[:hide]":false},"sort":3},{"name":"send_status","fullName":"PushLogDetails.send_status","icon":"icon-property","url":"#!/api/PushLogDetails-property-send_status","meta":{"[:hide]":false},"sort":3},{"name":"types","fullName":"PushLogDetails.types","icon":"icon-property","url":"#!/api/PushLogDetails-property-types","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"PushLogDetails.updated_at","icon":"icon-property","url":"#!/api/PushLogDetails-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"GeoFences","fullName":"GeoFences","icon":"icon-class","url":"#!/api/GeoFences","meta":{},"sort":1},{"name":"query","fullName":"GeoFences.query","icon":"icon-method","url":"#!/api/GeoFences-method-query","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"count","fullName":"GeoFences.count","icon":"icon-method","url":"#!/api/GeoFences-method-count","meta":{"hide":false,"loginRequired":false,"adminRequired":false},"sort":3},{"name":"create","fullName":"GeoFences.create","icon":"icon-method","url":"#!/api/GeoFences-method-create","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"update","fullName":"GeoFences.update","icon":"icon-method","url":"#!/api/GeoFences-method-update","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"id","fullName":"GeoFences.id","icon":"icon-property","url":"#!/api/GeoFences-property-id","meta":{"[:hide]":false},"sort":3},{"name":"start_time","fullName":"GeoFences.start_time","icon":"icon-property","url":"#!/api/GeoFences-property-start_time","meta":{"[:hide]":false},"sort":3},{"name":"end_time","fullName":"GeoFences.end_time","icon":"icon-property","url":"#!/api/GeoFences-property-end_time","meta":{"[:hide]":false},"sort":3},{"name":"loc","fullName":"GeoFences.loc","icon":"icon-property","url":"#!/api/GeoFences-property-loc","meta":{"[:hide]":false},"sort":3},{"name":"payload","fullName":"GeoFences.payload","icon":"icon-property","url":"#!/api/GeoFences-property-payload","meta":{"[:hide]":false},"sort":3},{"name":"created_at","fullName":"GeoFences.created_at","icon":"icon-property","url":"#!/api/GeoFences-property-created_at","meta":{"[:hide]":false},"sort":3},{"name":"updated_at","fullName":"GeoFences.updated_at","icon":"icon-property","url":"#!/api/GeoFences-property-updated_at","meta":{"[:hide]":false},"sort":3},{"name":"delete","fullName":"GeoFences.delete","icon":"icon-method","url":"#!/api/GeoFences-method-delete","meta":{"hide":false,"loginRequired":true,"adminRequired":true},"sort":3},{"name":"ArrowDB and Arrow Push Guides","fullName":"guide: ArrowDB and Arrow Push Guides","icon":"icon-guide","url":"#!/guide/guides","meta":{},"sort":4},{"name":"Getting Started with ArrowDB","fullName":"guide: Getting Started with ArrowDB","icon":"icon-guide","url":"#!/guide/quickstart","meta":{},"sort":4},{"name":"Using the REST API","fullName":"guide: Using the REST API","icon":"icon-guide","url":"#!/guide/rest","meta":{},"sort":4},{"name":"Authentication","fullName":"guide: Authentication","icon":"icon-guide","url":"#!/guide/authentication","meta":{},"sort":4},{"name":"SDKs","fullName":"guide: SDKs","icon":"icon-guide","url":"#!/guide/sdks","meta":{},"sort":4},{"name":"Titanium SDK","fullName":"guide: Titanium SDK","icon":"icon-guide","url":"#!/guide/titanium","meta":{},"sort":4},{"name":"Android SDK","fullName":"guide: Android SDK","icon":"icon-guide","url":"#!/guide/android","meta":{},"sort":4},{"name":"iOS SDK","fullName":"guide: iOS SDK","icon":"icon-guide","url":"#!/guide/ios","meta":{},"sort":4},{"name":"Node SDK","fullName":"guide: Node SDK","icon":"icon-guide","url":"#!/guide/nodejs","meta":{},"sort":4},{"name":"Custom Objects and Fields","fullName":"guide: Custom Objects and Fields","icon":"icon-guide","url":"#!/guide/customfields","meta":{},"sort":4},{"name":"Relational Fields","fullName":"guide: Relational Fields","icon":"icon-guide","url":"#!/guide/relationalfields","meta":{},"sort":4},{"name":"Search and Query Operations","fullName":"guide: Search and Query Operations","icon":"icon-guide","url":"#!/guide/search_query","meta":{},"sort":4},{"name":"Photo Uploading & Resizing","fullName":"guide: Photo Uploading & Resizing","icon":"icon-guide","url":"#!/guide/photosizes","meta":{},"sort":4},{"name":"Geographic Coordinates","fullName":"guide: Geographic Coordinates","icon":"icon-guide","url":"#!/guide/geo","meta":{},"sort":4},{"name":"Admin Access","fullName":"guide: Admin Access","icon":"icon-guide","url":"#!/guide/admin_access","meta":{},"sort":4},{"name":"Atomic Increment Operator","fullName":"guide: Atomic Increment Operator","icon":"icon-guide","url":"#!/guide/atomic_increment","meta":{},"sort":4},{"name":"Troubleshooting","fullName":"guide: Troubleshooting","icon":"icon-guide","url":"#!/guide/troubleshooting","meta":{},"sort":4},{"name":"ArrowDB Release Notes","fullName":"guide: ArrowDB Release Notes","icon":"icon-guide","url":"#!/guide/releasenotes","meta":{},"sort":4}],"guideSearch":{},"tests":false,"signatures":[{"long":"abstract","short":"ABS","key":"abstract"},{"long":"chainable","short":"&gt;","key":"chainable"},{"long":"deprecated","short":"DEP","key":"deprecated"},{"long":"&#9733;","short":"&#9733;","key":"new"},{"long":"preventable","short":"PREV","key":"preventable"},{"long":"private","short":"PRI","key":"private"},{"long":"protected","short":"PRO","key":"protected"},{"long":"readonly","short":"R O","key":"readonly"},{"long":"removed","short":"REM","key":"removed"},{"long":"required","short":"REQ","key":"required"},{"long":"static","short":"STA","key":"static"},{"long":"template","short":"TMP","key":"template"},{"long":"writeonly","short":"W O","key":"writeonly"},{"long":"Creation-Only","short":"CO","key":"creationOnly"},{"long":"Non-Creation","short":"NC","key":"nonCreation"}],"localStorageDb":"docs","showPrintButton":false,"touchExamplesUi":false,"source":false,"commentsUrl":null,"commentsDomain":null,"message":""}};
